{"name": "live_giveaways_by_type", "description": "Retrieve live giveaways from the GamerPower API based on the specified type.", "parameters": {"type": {"description": "The type of giveaways to retrieve (e.g., game, loot, beta).", "type": "str", "default": "game"}}}
{"name": "peers", "description": "Retrieves a list of company peers given a stock symbol.", "parameters": {"symbol": {"description": "The stock symbol for the company.", "type": "str", "default": ""}}}
{"name": "web_chain_details", "description": "python", "parameters": {"chain_slug": {"description": "The slug identifier for the blockchain (e.g., 'ethereum' for Ethereum mainnet).", "type": "str", "default": "ethereum"}}}
{"name": "t3ma", "description": "Fetches the Triple Exponential Moving Average (T3MA) for a given financial instrument.", "parameters": {"symbol": {"description": "Instrument symbol, which can be any equity, index, ETF, forex, or cryptocurrency (e.g., 'AAPL', 'EUR/USD', 'ETH/BTC').", "type": "str", "default": "AAPL"}, "interval": {"description": "Interval between two consecutive points in the time series. Supported intervals include '1min', '5min', '15min', '30min', '45min', '1h', '2h', '4h', '1day', '1week', and '1month'.", "type": "str", "default": "1min"}, "format": {"description": "Format of the response data, either 'CSV' or 'JSON'. Default is 'json'.", "type": "str, optional", "default": "json"}, "v_factor": {"description": "Volume factor used in the calculation of the T3MA.", "type": "int, optional", "default": 0.7}, "series_type": {"description": "Type of series to use in the calculation. Supported values are 'open', 'high', 'low', and 'close'. Default is 'close'.", "type": "str, optional", "default": "close"}, "outputsize": {"description": "Number of data points to return. Default is 30.", "type": "int, optional", "default": 30}, "time_period": {"description": "Number of periods over which to calculate the T3MA. Default is 9.", "type": "int, optional", "default": 9}}}
{"name": "stock_v2_get_profile", "description": "Retrieves the company profile information for a given performance ID using the RapidAPI Morning Star service.", "parameters": {"performanceid": {"description": "The performance ID of the stock, obtained from endpoints such as /auto-complete, /get-summary, or /get-movers.", "type": "str", "default": "0P0000OQN8"}}}
{"name": "get_animes", "description": "Retrieves a list of animes based on specified search criteria and filters from the RapidAPI Anime API.", "parameters": {"year_greater": {"description": "Find animes released after the specified year.", "type": "int, optional", "default": ""}, "media_type": {"description": "Filter by media type (e.g., music, tv, ona, ova, movie, special).", "type": "str, optional", "default": ""}, "studio": {"description": "Filter by studio name.", "type": "str, optional", "default": ""}, "year_less": {"description": "Find animes released before the specified year.", "type": "int, optional", "default": ""}, "nsfw": {"description": "Include NSFW content if set.", "type": "str, optional", "default": ""}, "status": {"description": "Filter by anime status (e.g., currently_airing, finished_airing, not_yet_aired).", "type": "str, optional", "default": ""}, "limit": {"description": "Limit the number of results.", "type": "int, optional", "default": ""}, "q": {"description": "Search for animes by title in English or Japanese.", "type": "str, optional", "default": ""}, "genre": {"description": "Filter by genre.", "type": "str, optional", "default": ""}, "sort": {"description": "Specify sort order, True for ascending and False for descending.", "type": "bool, optional", "default": ""}, "offset": {"description": "Number of results to skip.", "type": "int, optional", "default": ""}, "season": {"description": "Filter by season.", "type": "str, optional", "default": ""}, "fields": {"description": "Specify the fields to return (e.g., id, title, main_picture, etc.).", "type": "str, optional", "default": ""}, "year_equal": {"description": "Filter by animes released in the specified year.", "type": "int, optional", "default": ""}, "source": {"description": "Filter by source material (e.g., manga, visual_novel, novel, etc.).", "type": "str, optional", "default": ""}, "order": {"description": "Order results by a specific field.", "type": "str, optional", "default": ""}}}
{"name": "list_titles", "description": "Fetches a listing of titles that match specified parameters from the Watchmode API.", "parameters": {"genres": {"description": "Filter results to only include certain genre(s). Pass in a single genre ID or multiple comma-separated IDs. Default is '4,9'.", "type": "str", "default": "4,9"}, "limit": {"description": "Set how many titles to return per page. Default and maximum is 250.", "type": "int", "default": "250"}, "source_ids": {"description": "Filter the results to titles available on specific sources by passing individual IDs or multiple comma-separated IDs. Default is '23,206'. Note: Only a single region can be set if this is populated.", "type": "str", "default": "23,206"}, "source_types": {"description": "Filter results to only include titles available on specific types of sources (e.g., subscription, free). Default is 'sub,free'. Note: Only a single region can be set if this is populated.", "type": "str", "default": "sub,free"}, "types": {"description": "Filter results to only include titles available on specific types of sources (e.g., subscription, free). Default is 'sub,free'. Note: Only a single region can be set if this is populated.", "type": "str", "default": "movie,tv_series"}, "regions": {"description": "Filter results to only include sources active in specific regions. Currently supported regions: US, GB, CA, AU. Default is 'US'. Note: Only a single region can be set if source_ids or source_types are populated.", "type": "str", "default": "US"}, "sort_by": {"description": "Sort order of results. Possible values include: relevance_desc, relevance_asc, popularity_desc, popularity_asc, release_date_desc, release_date_asc, title_desc, title_asc. Default is 'relevance_desc'.", "type": "str", "default": "relevance_desc"}, "page": {"description": "Set the page of results to return. Default is 1.", "type": "int", "default": "1"}, "network_ids": {"description": "Filter results to titles that originally aired on specific TV networks by passing individual IDs or multiple comma-separated IDs. Default is '1,8,12'.", "type": "str", "default": "1,8,12"}, "release_date_start": {"description": "Filter results to only include titles released on or after a specific date. Format: YYYYMMDD. Default is 20010101.", "type": "int", "default": "20010101"}, "release_date_end": {"description": "Filter results to only include titles released on or before a specific date. Format: YYYYMMDD. Default is 20201211.", "type": "int", "default": "20201211"}}}
{"name": "stagecompetitorstandings", "description": "Retrieve the competitor standings for a specific Motorsport stage using the given stage ID.", "parameters": {"is_id": {"description": "The ID of the stage for which to retrieve competitor's standings.", "type": "int", "default": 203968}}}
{"name": "get_product", "description": "Fetches product details from a RapidAPI endpoint using the provided product ID and RapidAPI key.", "parameters": {"is_id": {"description": "The ID of the product to retrieve information about.", "type": "int", "default": ""}}}
{"name": "product_id", "description": "Fetches product details from the AliExpress API using the provided product ID and optional parameters.", "parameters": {"is_id": {"description": "The ID of the product to fetch details for.", "type": "int", "default": "4000886597329"}, "locale": {"description": "The locale to be used for the request (e.g., 'en_US').", "type": "str, optional", "default": ""}, "currency": {"description": "The currency for price conversion (e.g., 'USD').", "type": "str, optional", "default": ""}, "country": {"description": "The country for regional adjustments (e.g., 'US').", "type": "str, optional", "default": ""}}}
{"name": "get_id", "description": "Fetches the ID of a movie based on the given search query from the RapidAPI similar movies service.", "parameters": {"q": {"description": "The search string for the movie title.", "type": "str", "default": "titanic"}}}
{"name": "search_torrents", "description": "Search for torrents based on given keywords using the RapidAPI service.", "parameters": {"keywords": {"description": "Keywords to search for torrents.", "type": "str", "default": "Meg 2 The Trench"}, "quantity": {"description": "Number of torrent results to return. Maximum value is 40.", "type": "int", "default": "40"}, "page": {"description": "Page number for paginated results. Defaults to 1.", "type": "int, optional", "default": "1"}}}
{"name": "basic_info", "description": "Fetches detailed information about a cast member such as name, profession, birth and death year, bio, poster, and best titles.", "parameters": {"peopleid": {"description": "The ID of the cast member whose details are to be fetched.", "type": "str", "default": "nm0000375"}}}
{"name": "time_zone_api", "description": "Retrieves the current local time and UTC offset hour and minute for a specified location.", "parameters": {"q": {"description": "Location query such as city name, coordinates, or IP address.", "type": "str", "default": "53,-0.13"}, "format": {"description": "Desired response format, default is None.", "type": "str, optional", "default": ""}}}
{"name": "find_peak_element", "description": "Finds a peak element in a list of integers.", "parameters": {"nums": {"description": "The list of integers.", "type": "List[int]"}}}
{"name": "light_travel_time", "description": "Calculate the time taken for light to travel from one celestial body to another.", "parameters": {"distance_in_light_years": {"description": "The distance between the two celestial bodies in light years.", "type": "int", "default": 299792458}, "speed_of_light": {"description": "The speed of light in vacuum, in m/s. Default value is 299792458 m/s.", "type": "int", "default": 299792458}}}
{"name": "availability", "description": "Checks if a given URL is archived and currently accessible in the Wayback Machine.", "parameters": {"url": {"description": "The URL to check for availability in the Wayback Machine.", "type": "str", "default": "http://mashape.com"}, "timestamp": {"description": "The timestamp to look up in Wayback. If not specified, the most recent available capture is returned. The format of the timestamp is 1-14 digits (YYYYMMDDhhmmss). Defaults to '20090101'.", "type": "str, optional", "default": "20090101"}, "callback": {"description": "An optional callback to produce a JSONP response. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "poor_backlinks", "description": "Fetch poor quality backlinks for a given domain using the Best Backlink Checker API.", "parameters": {"domain": {"description": "The domain for which to fetch the poor quality backlinks.", "type": "str", "default": "getecz.com"}}}
{"name": "get_random_user", "description": "Fetch a random user profile based on specified criteria using the ai-random-user-generator API.", "parameters": {"results": {"description": "Number of user profiles to fetch. Default is '7'.", "type": "str", "default": "7"}, "nation": {"description": "Nationality of the users. Default is 'en_US'.", "type": "str", "default": "en_US"}, "gender": {"description": "Gender of the users. Default is 'female'.", "type": "str", "default": "female"}}}
{"name": "company_search", "description": "Search for companies by name using the Indeed API.", "parameters": {"company_name": {"description": "The name of the company to search for.", "type": "str", "default": "Microsoft"}, "locality": {"description": "Select the Indeed's country subdomain to search within. The default value is 'us'.", "type": "str, optional", "default": ""}}}
{"name": "album_tracks", "description": "Fetches the tracks of a specified album from the Spotify API using RapidAPI.", "parameters": {"is_id": {"description": "The unique identifier for the album.", "type": "str", "default": "3IBcauSj5M2A6lTeffJzdv"}, "offset": {"description": "The starting point for the track list. Defaults to 0.", "type": "int, optional", "default": "0"}, "limit": {"description": "The maximum number of tracks to return. Defaults to 300.", "type": "int, optional", "default": "300"}}}
{"name": "qrcode", "description": "Generates a QR code from the provided text using the QR Code API.", "parameters": {"text": {"description": "The input text to be converted into a QR code.", "type": "str", "default": "https://google.com"}}}
{"name": "auto_complete_deprecating", "description": "Fetch auto-complete suggestions for a given query from the specified API.", "parameters": {"query": {"description": "The term or phrase for which to get suggestions.", "type": "str", "default": "bikini tops"}}}
{"name": "auto_complete", "description": "Fetch autocomplete suggestions for a given term using the Shazam API.", "parameters": {"term": {"description": "The word or phrase to get suggestions for (e.g., song title, artist name).", "type": "str", "default": "kiss the"}, "locale": {"description": "The language code for the locale. Defaults to 'en-US'.", "type": "str, optional", "default": "en-US"}}}
{"name": "matchschedules", "description": "Fetches the cricket match schedules for a given date, including match timings, teams, and other relevant information.", "parameters": {"year": {"description": "The year for which to retrieve the cricket match schedules (e.g., 2022).", "type": "int", "default": 2022}, "day": {"description": "The day of the month for which to retrieve the cricket match schedules (1-31).", "type": "int", "default": 14}, "month": {"description": "The month for which to retrieve the cricket match schedules (1-12).", "type": "int", "default": 8}}}
{"name": "get_ip_location", "description": "Retrieves the latitude and longitude coordinates of a given IP address using the ip-api.com API.", "parameters": {"ip": {"description": "The IP address to locate.", "type": "str"}}}
{"name": "structural_analysis", "description": "Performs structural analysis on a building based on its ID, floor numbers, and analysis mode.", "parameters": {"building_id": {"description": "The unique identifier of the building.", "type": "str", "default": "static"}, "floor_numbers": {"description": "The list of floor numbers to be analyzed.", "type": "List[int]", "default": "static"}, "analysis_mode": {"description": "The mode of analysis, either \"static\" or \"dynamic\". Defaults to \"static\".", "type": "str, optional"}}}
{"name": "reserve_hotel_room", "description": "Reserves a hotel room with the specified details.", "parameters": {"room_type": {"description": "The type of room to reserve.", "type": "str"}, "nightly_rate": {"description": "The nightly rate for the room.", "type": "float"}, "checkin_date": {"description": "The check-in date in the format 'YYYY-MM-DD'.", "type": "str"}, "checkout_date": {"description": "The check-out date in the format 'YYYY-MM-DD'.", "type": "str"}, "guest_id": {"description": "The unique identifier for the guest.", "type": "str"}, "promo_code": {"description": "A promotional code for a discount. Defaults to None.", "type": "str, optional"}}}
{"name": "simulate_query_database", "description": "Simulates querying a database based on certain conditions.", "parameters": {"table": {"description": "Name of the table to query.", "type": "str"}, "conditions": {"description": "Conditions for the query, each condition is a dictionary.", "type": "list"}}}
{"name": "place_safeway_order", "description": "Order specified items from a Safeway location.", "parameters": {"location": {"description": "The location of the Safeway store, e.g., 'Palo Alto, CA'.", "type": "str"}, "items": {"description": "List of items to order.", "type": "list"}, "quantity": {"description": "Quantity of each item in the order list.", "type": "list"}}}
{"name": "get_search_user", "description": "Fetches the search result for a specific username from the TikTok User API.", "parameters": {"is_id": {"description": "The username or ID to search for.", "type": "str", "default": "therock"}}}
{"name": "get_post", "description": "Fetches the details of a TikTok post using the given `aweme_id` via the RapidAPI service.", "parameters": {"aweme_id": {"description": "The unique identifier of the TikTok post to be fetched.", "type": "str", "default": ""}}}
{"name": "hashtag_feed_video_posts_v2", "description": "Fetches video posts related to a specific hashtag from a social media platform, providing metadata such as direct URLs, statistics, and more.", "parameters": {"name": {"description": "Hashtag name to filter videos. Defaults to 'summer'.", "type": "str, optional", "default": "summer"}, "limit": {"description": "Maximum number of records to return. Defaults to 20; the maximum is 20.", "type": "int, optional", "default": ""}, "max_cursor": {"description": "Pagination cursor to fetch more videos. Use the value received from the previous request for continued pagination.", "type": "str, optional", "default": ""}}}
{"name": "get_meta_data", "description": "Fetches meta data from the cryptocurrency markets API using provided locale information and optional parameters.", "parameters": {"locale_info": {"description": "The language code.", "type": "str", "default": "en_US"}, "lang_id": {"description": "The language ID, default is 1.", "type": "int, optional", "default": "1"}, "time_utc_offset": {"description": "The UTC offset in seconds, default is 28800 (UTC+8).", "type": "int, optional", "default": "28800"}}}
{"name": "get_highlight_item", "description": "Fetch the highlight item from Instagram using the toolbench RapidAPI.", "parameters": {"is_id": {"description": "The Instagram ID for which to fetch the highlight items.", "type": "str", "default": "17934390836227915"}}}
{"name": "channel_shorts", "description": "Fetch the latest shorts published by a YouTube channel using the provided `channel_id` and RapidAPI key.", "parameters": {"channel_id": {"description": "The ID of the YouTube channel.", "type": "str", "default": "UCVhQ2NnY5Rskt6UjCUkJ_DA"}}}
{"name": "calculate_standard_deviation", "description": "Calculates the standard deviation of a list of numbers.", "parameters": {"numbers": {"description": "The list of numbers.", "type": "List[Union[int, float]]"}}}
{"name": "future_investment_value", "description": "Calculates the future value of an investment based on the present value, annual interest rate, and number of years.", "parameters": {"present_value": {"description": "The present value of the investment.", "type": "float"}, "annual_interest_rate": {"description": "The annual interest rate as a decimal (e.g., 0.05 for 5%).", "type": "float"}, "years": {"description": "The number of years the investment will grow.", "type": "int"}}}
{"name": "get_all_bodies_positions", "description": "Fetches the positions of celestial bodies for a given location and date range using the Astronomy API.", "parameters": {"latitude": {"description": "The latitude of the location for which to get the positions.", "type": "int", "default": "33.775867"}, "longitude": {"description": "The longitude of the location for which to get the positions.", "type": "int", "default": "-84.39733"}, "from_date": {"description": "The start date for the observation period in the format 'YYYY-MM-DD'.", "type": "str", "default": "2017-12-20"}, "to_date": {"description": "The end date for the observation period in the format 'YYYY-MM-DD'.", "type": "str", "default": "2017-12-21"}, "elevation": {"description": "The elevation of the location in meters. Defaults to 166.", "type": "int, optional", "default": "166"}, "time": {"description": "The specific time of day for the observation in the format 'HH:MM:SS'. Defaults to '12:00:00'.", "type": "str, optional", "default": "12:00:00"}}}
{"name": "binary_addition", "description": "Adds two binary numbers and returns the result as a binary string.", "parameters": {"a": {"description": "The first binary number.", "type": "str"}, "b": {"description": "The second binary number.", "type": "str"}}}
{"name": "create_histogram", "description": "Create a histogram based on provided data.", "parameters": {"data": {"description": "The data for which histogram needs to be plotted.", "type": "list", "default": 10}, "bins": {"description": "The number of equal-width bins in the range. Default is 10.", "type": "int", "default": 10}}}
{"name": "facebook_ad_copy", "description": "Generates a Facebook ad copy using AI based on the provided description and name.", "parameters": {"description": {"description": "The description to be used for generating the ad copy.", "type": "str", "default": "Apple designs, manufactures and markets smartphones, personal computers, tablets, wearables and accessories, and sells a variety of related services."}, "name": {"description": "The name to be used for generating the ad copy.", "type": "str", "default": "Apple"}}}
{"name": "recommend", "description": "Fetches a recommendation for a given experiment ID using the Toolbench RapidAPI service.", "parameters": {"experiment_id": {"description": "The ID of the experiment for which to fetch recommendations.", "type": "int", "default": "12234"}}}
{"name": "location", "description": "Retrieves location data utilizing the Location API provided by RapidAPI, which supports Google search locations.", "parameters": {"location_name": {"description": "The name of the location to search for.", "type": "str", "default": "London"}, "country_code": {"description": "The country code for the search location, default is 'GB'.", "type": "str, optional", "default": "GB"}}}
{"name": "uniquestageimage", "description": "Retrieves the image for a specific Motorsport unique stage using the provided stage ID.", "parameters": {"is_id": {"description": "The unique stage ID for which to retrieve the image.", "type": "int", "default": 40}}}
{"name": "pitstopdataforarace", "description": "Retrieves pit stop data for a specific Formula 1 race using the provided year and round.", "parameters": {"year": {"description": "The season year of the Formula 1 race.", "type": "str", "default": "year"}, "round": {"description": "The round number of the Formula 1 race.", "type": "str", "default": "round"}}}
{"name": "search_team", "description": "Searches for a team using the provided team name and returns the response from the API.", "parameters": {"name": {"description": "The name of the team to search for.", "type": "str", "default": "New York Yankees"}}}
{"name": "choice_endpoint", "description": "Sends a GET request to the Rock-Paper-Scissors API with the user's choice and returns the API's response.", "parameters": {"choice": {"description": "The user's selection, either \"rock\", \"paper\", or \"scissors\".", "type": "str", "default": "rock"}}}
{"name": "video_comments", "description": "Fetches comments for a given TikTok video.", "parameters": {"video_url": {"description": "The URL of the TikTok video for which comments are to be retrieved.", "type": "str", "default": "https://www.tiktok.com/@tiktok/video/6974862859000073478"}, "count": {"description": "The number of comments to retrieve. If not provided, all available comments will be retrieved.", "type": "int, optional", "default": ""}, "cursor": {"description": "Pagination cursor for fetching comments. Defaults to None, indicating the start of the comments.", "type": "int, optional", "default": ""}}}
{"name": "estimated_salary", "description": "Fetch the estimated salary for a given job title within a specified radius around a particular location.", "parameters": {"location": {"description": "The geographic location to search within for the salary estimation.", "type": "str", "default": "New-York, NY, USA"}, "job_title": {"description": "The job title for which the salary estimation is to be fetched.", "type": "str", "default": "NodeJS Developer"}, "radius": {"description": "The radius in kilometers within which to search from the provided location. Default is 100 km.", "type": "int, optional", "default": "100"}}}
{"name": "getrandommovie", "description": "Returns a list of random movies from a database by calling an external API.", "parameters": {"count": {"description": "The number of random movies to return. Defaults to 2.", "type": "int, optional", "default": "2"}}}
{"name": "stock_insider_holders_stock", "description": "Fetches insider holders' information for a given stock symbol using the mboum-finance API.", "parameters": {"symbol": {"description": "The stock symbol for which to fetch insider holders' information.", "type": "str", "default": "AAPL"}}}
{"name": "market_trends", "description": "Fetch the latest market trends and relevant news based on the specified trend type.", "parameters": {"trend_type": {"description": "The type of trend to retrieve. Supported trend types include:", "type": "str", "default": ""}, "country": {"description": "The country for which to fetch trends, specified as a 2-letter country code (ISO 3166). Default is 'us'.", "type": "str, optional", "default": "us"}, "language": {"description": "The language to use for the results, specified as a 2-letter language code (ISO 639-1). Default is 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "stock_v2_get_trading_information", "description": "Fetch trading information for a specific stock using its performance ID.", "parameters": {"performanceid": {"description": "The performance ID of the stock, which can be obtained from the auto-complete, get-summary, or get-movers endpoints.", "type": "str", "default": "0P0000OQN8"}}}
{"name": "coin", "description": "Fetches the value of a specified cryptocurrency.", "parameters": {"coin": {"description": "The cryptocurrency symbol (e.g., 'btc', 'eth') for which the value will be fetched. Default is 'btc'.", "type": "str", "default": "btc"}}}
{"name": "actors_list_most_popular_celebs", "description": "Fetch the list of most popular celebrities from the online movie database API.", "parameters": {"currentcountry": {"description": "The current country of the user. Accepts one of the following values: AR, AU, CA, CL, ES, DE, IT, MX, NZ, PT, ES, GB, US. Defaults to 'US'.", "type": "str", "default": "US"}, "purchasecountry": {"description": "The country where the user typically makes purchases. Accepts one of the following values: US, GB, DE, IN, IT, FR, JP, CA, ES. Defaults to 'US'.", "type": "str", "default": "US"}, "homecountry": {"description": "The home country of the user. Accepts one of the following values: US, GB, DE, IN, IT, FR, JP, CA, ES. Defaults to 'US'.", "type": "str", "default": "US"}}}
{"name": "get_news", "description": "Fetches a list of news articles based on the specified category and region.", "parameters": {"category": {"description": "The category of news to fetch.", "type": "str", "default": ""}, "region": {"description": "The region code for which to fetch news. Examples include 'us' for the United States and 'gb' for the United Kingdom.", "type": "str", "default": ""}}}
{"name": "vimeo", "description": "Checks if a given Vimeo username is available using the Toolbench RapidAPI service.", "parameters": {"username": {"description": "The Vimeo username to check for availability.", "type": "str", "default": "username"}}}
{"name": "get_user_pins", "description": "Retrieves the Pinterest pins of a specified user.", "parameters": {"username": {"description": "The Pinterest username whose pins are to be fetched.", "type": "str", "default": "0869178429hau"}}}
{"name": "is_leap_year", "description": "Checks if a year is a leap year.", "parameters": {"year": {"description": "The year to check.", "type": "int"}}}
{"name": "game_matrix_gamepk", "description": "Fetch detailed game information for a specific baseball game using its game ID (gamepk).", "parameters": {"gamepk": {"description": "The unique identifier for a specific baseball game.", "type": "str", "default": "633282"}}}
{"name": "ligue_1_standings", "description": "Fetches the Ligue 1 standings for a given season using the RapidAPI service.", "parameters": {"season": {"description": "The season for which to fetch the standings (e.g., '2022'). Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "leaguehometeamevents", "description": "Retrieve home team events for a specified handball tournament and season.", "parameters": {"tournamentid": {"description": "The unique ID of the handball tournament.", "type": "int", "default": 149}, "seasonid": {"description": "The ID of the season within the specified tournament.", "type": "int", "default": 42967}}}
{"name": "prematch_event", "description": "Fetches pre-match event data from a sports betting API.", "parameters": {"lang": {"description": "The language code for the API response.", "type": "str", "default": "en"}, "evt": {"description": "The event ID to fetch information for.", "type": "int", "default": ""}}}
{"name": "competitions_id", "description": "Retrieves information about a specific competition using its ID.", "parameters": {"is_id": {"description": "The ID of the competition to be retrieved.", "type": "str", "default": "LAL"}}}
{"name": "get_dna_sequence", "description": "Retrieves the DNA sequence for a given sequence ID from the NCBI Nucleotide database.", "parameters": {"sequence_id": {"description": "The unique identifier for the DNA sequence.", "type": "str", "default": "fasta"}, "file_format": {"description": "The format of the returned sequence. Allowed values: \"fasta\" (default) or \"gb\".", "type": "str, optional"}, "upstream_bases": {"description": "The number of bases upstream of the sequence to include. Defaults to 0.", "type": "int, optional", "default": "fasta"}}}
{"name": "predict_forest_area", "description": "Predicts the change in forest area over a specified number of years.", "parameters": {"location": {"description": "The geographic location for the prediction.", "type": "str"}, "num_years": {"description": "The number of years into the future to make the prediction.", "type": "int"}, "include_humans": {"description": "Whether to include the impact of human activities in the prediction. Defaults to False.", "type": "bool, optional"}}}
{"name": "project_investment_growth", "description": "Projects the growth of an investment over a specified number of years.", "parameters": {"principal": {"description": "The initial investment amount.", "type": "float", "default": true}, "annual_addition": {"description": "The amount added to the investment annually.", "type": "float", "default": true}, "years": {"description": "The number of years to project the investment growth.", "type": "int"}, "return_rate": {"description": "The annual return rate as a decimal (e.g., 0.07 for 7%).", "type": "float"}, "inflation": {"description": "A list of annual inflation rates as decimals.", "type": "List[float]"}, "inflation_adjusted": {"description": "Whether to adjust the final value for inflation. Defaults to True.", "type": "bool, optional"}}}
{"name": "get_ip_zipcode", "description": "Retrieves the ZIP code of a given IP address using the ip-api.com API.", "parameters": {"ip": {"description": "The IP address to locate.", "type": "str"}}}
{"name": "project_population", "description": "Projects the population size after a specified number of years.", "parameters": {"current_pop": {"description": "The current population size.", "type": "int", "default": 1.2}, "num_years": {"description": "The number of years into the future to make the projection.", "type": "int", "default": 1.2}, "annual_growth": {"description": "The annual population growth rate as a percentage. Defaults to 1.2.", "type": "float, optional"}}}
{"name": "assess_diabetes_risk", "description": "Assesses the risk of developing type 2 diabetes based on body mass index (BMI) and physical activity level.", "parameters": {"weight_lbs": {"description": "Body weight in pounds.", "type": "int"}, "height_inches": {"description": "Height in inches.", "type": "int"}, "activity": {"description": "Physical activity level. Allowed values: \"sedentary\", \"lightly active\", \"moderately active\", or \"very active\".", "type": "str"}}}
{"name": "filter_and_query_naics_description", "description": "This function queries an endpoint to search by freeform text or NAICS code and retrieves a list of NAICS codes, hashes, and descriptions.", "parameters": {"naics": {"description": "A 6-digit NAICS code to filter the search. If this parameter is provided, the `q` parameter is optional.", "type": "int, optional", "default": "721110"}, "q": {"description": "A freeform text to search for industries. This must be at least 3 characters long. If this parameter is provided, the `naics` parameter is optional.", "type": "str, optional", "default": "Hotel"}}}
{"name": "search_results", "description": "Fetches the top 22 YouTube search results based on a provided query.", "parameters": {"query": {"description": "The search query string to use for retrieving YouTube search results.", "type": "str", "default": "interview preparation"}}}
{"name": "v1_cars", "description": "Fetches car details from the API Ninjas Cars API endpoint based on given search criteria.", "parameters": {"model": {"description": "Model of the vehicle. Default is 'corolla'.", "type": "str, optional", "default": "corolla"}, "max_city_mpg": {"description": "Maximum city fuel efficiency in miles per gallon.", "type": "int, optional", "default": ""}, "min_comb_mpg": {"description": "Minimum combined (city + highway) fuel efficiency in miles per gallon.", "type": "int, optional", "default": ""}, "max_hwy_mpg": {"description": "Maximum highway fuel efficiency in miles per gallon.", "type": "int, optional", "default": ""}, "fuel_type": {"description": "Type of fuel used. Possible values include 'gas', 'diesel', 'electricity'.", "type": "str, optional", "default": ""}, "limit": {"description": "Number of results to return. Must be between 1 and 30. Default value is None.", "type": "str, optional", "default": ""}, "drive": {"description": "Drive transmission. Possible values include 'fwd' (front-wheel drive), 'rwd' (rear-wheel drive), 'awd' (all-wheel drive), '4wd' (four-wheel drive).", "type": "str, optional", "default": ""}, "max_comb_mpg": {"description": "Maximum combined (city + highway) fuel efficiency in miles per gallon.", "type": "int, optional", "default": ""}, "make": {"description": "Vehicle manufacturer.", "type": "str, optional", "default": ""}, "transmission": {"description": "Type of transmission. Possible values include 'manual', 'automatic'.", "type": "str, optional", "default": ""}, "year": {"description": "Vehicle model year.", "type": "str, optional", "default": ""}, "min_hwy_mpg": {"description": "Minimum highway fuel efficiency in miles per gallon.", "type": "int, optional", "default": ""}, "min_city_mpg": {"description": "Minimum city fuel efficiency in miles per gallon.", "type": "int, optional", "default": ""}, "cylinders": {"description": "Number of cylinders. Possible values include 2, 3, 4, 5, 6, 8, 10, 12, 16.", "type": "int, optional", "default": ""}}}
{"name": "get_profile_series", "description": "Fetches time series snapshots of a profile from the OutSystems Community API.", "parameters": {"profile_id": {"description": "The unique identifier of the profile for which the time series snapshots are to be fetched.", "type": "str", "default": "yjjslxnjng"}}}
{"name": "get_data_entity_uid", "description": "Fetches an entity record from the OFAC service using a unique identifier (UID).", "parameters": {"uid": {"description": "The unique identifier of the entity to retrieve.", "type": "int", "default": "7178"}}}
{"name": "check_1_param", "description": "This function checks the validity of a given VAT number using the RapidAPI service.", "parameters": {"vat": {"description": "The VAT number to be checked, including the country code.", "type": "str", "default": "SK2121316722"}}}
{"name": "getorderbyid", "description": "Fetches order details from the pet store API based on the provided order ID.", "parameters": {"orderid": {"description": "The ID of the order to be fetched. Should be an integer value between 1 and 10.", "type": "int", "default": ""}}}
{"name": "predict_evolution_rate", "description": "Predict the evolutionary rate for a specific species for a given timeframe.", "parameters": {"species": {"description": "The species that the evolution rate will be predicted for.", "type": "str", "default": "Darwin"}, "years": {"description": "Number of years for the prediction.", "type": "int", "default": "Darwin"}, "model": {"description": "The model used to make the prediction, options: 'Darwin', 'Lamarck', default is 'Darwin'.", "type": "str"}}}
{"name": "teams_affiliates_teamids", "description": "Query baseball team affiliates by team ID using the RapidAPI service.", "parameters": {"teamids": {"description": "A comma-separated string of team IDs to query. Default is '145'.", "type": "str", "default": "145"}}}
{"name": "games_esports", "description": "Fetches information about esports games for a given event ID using the SofaSport API.", "parameters": {"event_id": {"description": "The ID of the event to retrieve esports games for.", "type": "int", "default": "10289011"}}}
{"name": "constructorstandingsafterarace", "description": "Fetches the constructor standings after a specific race in a given Formula 1 season.", "parameters": {"year": {"description": "The year of the Formula 1 season.", "type": "str", "default": "year"}, "round": {"description": "The specific race round in the season.", "type": "str", "default": "round"}}}
{"name": "players_photo", "description": "Retrieves the photo of a soccer player given the player's ID using the Soccerway API.", "parameters": {"player_id": {"description": "The unique identifier of the soccer player.", "type": "int", "default": "177208"}}}
{"name": "fighter", "description": "Fetches the details of a single fighter given their ID using the Spectation Sports Events API.", "parameters": {"is_id": {"description": "The unique identifier for the fighter to fetch.", "type": "int", "default": "1182"}}}
{"name": "consumers_detail", "description": "Get detailed information of a consumer using the RapidAPI TrustPilot endpoint.", "parameters": {"is_id": {"description": "The ID of the consumer, as returned from the `/business-units/get-reviews` endpoint.", "type": "str", "default": "5f9c424654404f0019fb19fc"}}}
{"name": "get_3_month_historical_daily_prices", "description": "Fetches 3 months of historical daily stock prices for the given ticker.", "parameters": {"ticker": {"description": "The stock ticker symbol to fetch historical prices for.", "type": "str", "default": "AAPL"}}}
{"name": "getlistbysecuritiescode", "description": "Fetches the securities report data for a specified company using its securities code.", "parameters": {"securities_code": {"description": "The securities code of the company whose report data is to be fetched.", "type": "int", "default": "7203"}}}
{"name": "categories_list", "description": "Retrieves a list of categories from the ASOS API.", "parameters": {"lang": {"description": "The language code, defaults to 'en-US'.", "type": "str, optional", "default": "en-US"}, "country": {"description": "The two-letter country code, defaults to 'US'.", "type": "str, optional", "default": "US"}}}
{"name": "users", "description": "Fetches user data from the Reqres API with optional content type and API key specifications.", "parameters": {"content_type": {"description": "The content type for the request header. Defaults to 'application/json'.", "type": "str", "default": "application/json"}}}
{"name": "qnas_list", "description": "Fetches a list of questions and answers related to a specific product from the RapidAPI Kohls service.", "parameters": {"productid": {"description": "The identifier of the product for which to list questions and answers.", "type": "str", "default": "4201989"}, "sort": {"description": "The sorting order of the results. Default is 'SubmissionTime:desc'. Options include 'LastApprovedAnswerSubmissionTime:desc', 'LastApprovedAnswerSubmissionTime:asc', 'SubmissionTime:desc', and 'SubmissionTime:asc'.", "type": "str, optional", "default": "SubmissionTime:desc"}, "offset": {"description": "The offset for paging through the results. Default is 0.", "type": "int, optional", "default": "0"}, "limit": {"description": "The maximum number of results to return. Default is 6.", "type": "int, optional", "default": "6"}}}
{"name": "royal_matches", "description": "Fetch recent royal matches from the Trackmania API.", "parameters": {"page": {"description": "The page number of the results to fetch, where each page contains a defined number of results. The default is `0`.", "type": "int", "default": "0"}, "limit": {"description": "The maximum number of results to return. The default is `50`.", "type": "int", "default": "50"}}}
{"name": "v1_trivia", "description": "Fetches trivia questions from the API Ninjas Trivia API endpoint.", "parameters": {"limit": {"description": "The number of trivia questions to return. Must be between 1 and 30. Default is 1.", "type": "int, optional", "default": ""}, "category": {"description": "The category of trivia questions to filter by. Possible values are:", "type": "str, optional", "default": ""}}}
{"name": "getgamelist", "description": "Fetches a list of games from the EvoSiss Game Database API, returning their IDs and series names in JSON format.", "parameters": {"page": {"description": "The page number to retrieve from the game list.", "type": "int", "default": "0"}}}
{"name": "matchmaking_matches", "description": "Fetch recent matchmaking matches with optional pagination and result limit.", "parameters": {"limit": {"description": "The maximum number of match results to return. Default is 50.", "type": "int", "default": "50"}, "page": {"description": "The page number for pagination, each containing 50 results. Default is 0.", "type": "int", "default": "0"}}}
{"name": "search", "description": "Performs a search on YouTube using the specified parameters and returns the search results.", "parameters": {"cursor": {"description": "The cursor for pagination to continue fetching results. Defaults to None.", "type": "str, optional", "default": ""}, "hl": {"description": "The language code for the response (e.g., 'en' for English). Defaults to 'en'.", "type": "str, optional", "default": "en"}, "q": {"description": "The search query term. Defaults to 'movie'.", "type": "str, optional", "default": "movie"}, "gl": {"description": "The country code for the response (e.g., 'US' for the United States). Defaults to 'US'.", "type": "str, optional", "default": "US"}}}
{"name": "states_search", "description": "Searches for specific states by name and returns a list of states matching the search query. The search can be limited by country and sorted by specified criteria.", "parameters": {"q": {"description": "The search query string representing the name of the state to search for.", "type": "str", "default": "ut"}, "limit": {"description": "The maximum number of state results to return. Defaults to '50'.", "type": "str, optional", "default": "50"}, "sortorder": {"description": "The order in which to sort results (e.g., 'asc' or 'desc'). Defaults to None.", "type": "str, optional", "default": ""}, "sortby": {"description": "The field by which to sort results. Defaults to None.", "type": "str, optional", "default": ""}, "country_id": {"description": "The ID of the country to filter results by. Defaults to None.", "type": "str, optional", "default": ""}, "country_code": {"description": "The code of the country to filter results by. Defaults to None.", "type": "str, optional", "default": ""}, "country_name": {"description": "The name of the country to filter results by. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "autosuggest", "description": "Fetches suggestions for a search term near a specified geographic point, filtered by various parameters.", "parameters": {"name": {"description": "The query term on which to search.", "type": "str", "default": "don"}, "lon": {"description": "Longitude of the selected point.", "type": "int", "default": "-70.65"}, "radius": {"description": "Maximum distance from the selected point in meters.", "type": "int", "default": "5000"}, "lang": {"description": "Language code (2 characters, ISO639-1). Available values include 'en' for English and 'ru' for Russian.", "type": "str", "default": ""}, "lat": {"description": "Latitude of the selected point.", "type": "int", "default": "-33.437"}, "kinds": {"description": "Object category. Multiple comma-separated categories may be stated with OR logic. Defaults to 'foods'.", "type": "str, optional", "default": "foods"}, "rate": {"description": "Minimum rating of the object popularity. Available values include 1, 2, 3 for basic ratings, and 1h, 2h, 3h for cultural heritage ratings. Defaults to None.", "type": "str, optional", "default": ""}, "src_attr": {"description": "The source of the object attributes. Multiple sources separated by commas are allowed. Defaults to None. Available sources include osm, wikidata, snow, cultura.ru, rosnedra, user.", "type": "str, optional", "default": ""}, "format": {"description": "The output format. Defaults to None, which uses GeoJSON. Available values include 'json' and 'geojson'.", "type": "str, optional", "default": ""}, "limit": {"description": "Maximum number of returned objects. Defaults to 10.", "type": "int, optional", "default": "10"}, "src_geom": {"description": "The source of the object geometry. Defaults to None. Available sources include osm, wikidata, snow, cultura.ru, rosnedra.", "type": "str, optional", "default": ""}}}
{"name": "vin_decoder_lite", "description": "This function decodes a given Vehicle Identification Number (VIN) using the RapidAPI VIN Decoder Lite service and returns the decoded information.", "parameters": {"vin": {"description": "The Vehicle Identification Number (VIN) to be decoded. It must be 17 characters long.", "type": "str", "default": "5YJ3E1EA6PF384836"}}}
{"name": "following_by_username", "description": "Retrieve the list of users that the specified Instagram user is following, up to 1000 records.", "parameters": {"username": {"description": "The Instagram username for which to retrieve the following list.", "type": "str", "default": "therock"}, "corsenabled": {"description": "Whether CORS is enabled. Defaults to None.", "type": "str, optional", "default": ""}, "nextmaxid": {"description": "The next maximum ID for pagination. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "motivation_quote", "description": "Fetches a motivational quote from the Olato Quotes API.", "parameters": {"quotes": {"description": "Type of quotes to fetch. Default is 'random quotes'.", "type": "str", "default": "random quotes"}}}
{"name": "rental_settings", "description": "python", "parameters": {"location": {"description": "The location for which the rental settings are to be fetched.", "type": "str", "default": "santa monica"}, "currency": {"description": "The currency in which the rental settings should be returned. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "get_breed_information", "description": "Retrieve information for a specific dog breed from the RapidAPI service.", "parameters": {"breed": {"description": "The name of the dog breed to get information about.", "type": "str", "default": "Cretan Hound"}}}
{"name": "language_list", "description": "Fetches the list of valid languages for the given country using the Real Time News Data API.", "parameters": {"country": {"description": "The country code (ISO 3166-1 alpha-2) of the country to get languages for.", "type": "str", "default": "US"}}}
{"name": "find_minimum_rotated_sorted_array", "description": "Finds the minimum element in a rotated sorted array.", "parameters": {"nums": {"description": "The rotated sorted array.", "type": "List[int]"}}}
{"name": "find_n_largest_numbers", "description": "Finds the n largest numbers in a list.", "parameters": {"nums": {"description": "The list of numbers.", "type": "List[int]"}, "n": {"description": "The number of largest numbers to find.", "type": "int"}}}
{"name": "calculate_age", "description": "Calculates the age based on the birthdate.", "parameters": {"birthdate": {"description": "The birthdate in the format 'YYYY-MM-DD'.", "type": "str"}}}
{"name": "find_first_non_repeating_char", "description": "Finds the first non-repeating character in a string.", "parameters": {"s": {"description": "The input string.", "type": "str"}}}
{"name": "longest_common_prefix", "description": "Finds the longest common prefix among a list of strings.", "parameters": {"strs": {"description": "The list of strings.", "type": "List[str]"}}}
{"name": "is_palindrome", "description": "Checks if a string is a palindrome.", "parameters": {"text": {"description": "The input string.", "type": "str"}}}
{"name": "getlistings", "description": "Retrieve a list of condominiums and townhouses in specified cities of Southwest Florida and the East Coast.", "parameters": {"sort": {"description": "Defines how the listings should be sorted. Supported values are 'RELEVANCE' (best match), 'NEWEST' (newest first), 'PRICE_LOW' (cheapest first), and 'PRICE_HIGH' (most expensive first). Default is 'RELEVANCE'.", "type": "str", "default": "RELEVANCE"}, "offset": {"description": "For pagination. Specifies the starting point in the collection of listings. For example, to get the first set of items, set offset to 0. Default is 0.", "type": "int", "default": "0"}, "price_max": {"description": "The maximum price in US dollars for the condos and townhouses. Default is 250,000.", "type": "int", "default": "250000"}, "city": {"description": "The name of the city to search within. Supported cities include Cape Coral, Fort Myers, West Palm Beach, Lake Worth, Lantana, Boynton Beach, Delray Beach, Boca Raton, Pompano Beach, Fort Lauderdale, Naples, Tampa, and Saint Petersburg. Default is 'Cape Coral'.", "type": "str", "default": "Cape Coral"}, "limit": {"description": "The maximum number of items to return. Default is 50.", "type": "int", "default": "50"}}}
{"name": "autocomplete_search", "description": "Search for titles and/or people by name or partial name, useful for building an autocomplete feature. The results include a `result_type` field indicating whether the result is a title or a person, along with an `image_url` for movie posters or headshots.", "parameters": {"search_value": {"description": "The phrase to search for, which can be a full title or person name, or a partial phrase. For example, searching for \"The sha\" will find the movie \"The Shawshank Redemption\".", "type": "str", "default": "Breaking Bad"}, "search_type": {"description": "Determines the type of search results. 1 includes titles and people (default), 2 includes titles only, 3 includes movies only, 4 includes TV shows only, and 5 includes people only.", "type": "int, optional", "default": "1"}}}
{"name": "get_random_challange", "description": "Fetch a random challenge from the specified API, with an option to specify the type of challenge.", "parameters": {"type": {"description": "The type of challenge to fetch. Options are 'funny', 'dirty', 'sport'. Defaults to 'funny'.", "type": "str, optional", "default": "funny"}}}
{"name": "channel_videos", "description": "Fetches videos from a specified YouTube channel using RapidAPI.", "parameters": {"is_id": {"description": "YouTube channel ID, default is 'UC-lHJZR3Gqxm24_Vd_AJ5Yw'.", "type": "str", "default": "UC-lHJZR3Gqxm24_Vd_AJ5Yw"}, "hl": {"description": "Language parameter for the results, default is 'en'.", "type": "str", "default": "en"}, "filter": {"description": "Filter key to determine the type of videos returned. Can be 'videos_latest', 'streams_latest', 'shorts_latest', or 'live_now'. Default is None.", "type": "str, optional", "default": ""}, "cursor": {"description": "Cursor for pagination, default is None.", "type": "str, optional", "default": ""}, "gl": {"description": "Geolocation parameter, default is 'US'.", "type": "str", "default": "US"}}}
{"name": "get_post_comments", "description": "Fetch comments for a given Twitter post using its post ID.", "parameters": {"pid": {"description": "The post ID for which to retrieve comments.", "type": "str", "default": "1552735248026411010"}, "count": {"description": "The number of comments to retrieve.", "type": "str", "default": "40"}, "cursor": {"description": "Cursor for pagination to retrieve the next set of comments. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "user_by_rest_id", "description": "Fetches user information from Twitter using a REST API by user ID.", "parameters": {"is_id": {"description": "The user ID to fetch information for.", "type": "str", "default": "44196397"}}}
{"name": "followers", "description": "Retrieves the list of followers for a given Instagram user.", "parameters": {"user_id": {"description": "The ID of the Instagram user whose followers are to be retrieved.", "type": "str", "default": "25025320"}, "batch_size": {"description": "The number of followers to retrieve in one batch. Default is 20.", "type": "int, optional", "default": "20"}, "next_cursor": {"description": "A cursor for pagination to fetch the next set of followers. Default is None.", "type": "str, optional", "default": ""}}}
{"name": "music_posts", "description": "Fetches posts related to a specific music ID from the TikTok API.", "parameters": {"music_id": {"description": "The ID of the music for which to fetch posts.", "type": "str", "default": ""}, "count": {"description": "Number of posts to fetch. Defaults to 10.", "type": "int, optional", "default": "10"}, "offset": {"description": "Number of posts to skip before starting to collect the posts. Defaults to 0.", "type": "int, optional", "default": "0"}, "proxy": {"description": "Proxy server to use for the request. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "tweet_retweets", "description": "Fetches the retweets for a given tweet.", "parameters": {"tweetid": {"description": "The ID of the tweet for which to retrieve retweets.", "type": "str", "default": "1668868113725550592"}, "count": {"description": "The number of retweets to retrieve. Defaults to '20'.", "type": "str, optional", "default": "20"}, "cursor": {"description": "Cursor for pagination to fetch the next set of retweets.", "type": "str, optional", "default": ""}}}
{"name": "user_info", "description": "Retrieve TikTok user information by username using the Toolbench RapidAPI.", "parameters": {"username": {"description": "The TikTok username of the user whose information is to be retrieved.", "type": "str", "default": "therock"}}}
{"name": "tweet_detail_conversation", "description": "Retrieves the detail and conversation about a specified tweet using the RapidAPI Twitter API.", "parameters": {"tweet_id": {"description": "The ID of the tweet to retrieve details and conversation for.", "type": "str", "default": "1299530165463199747"}, "cursor": {"description": "A parameter for pagination to fetch additional results in the conversation thread. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "user_search", "description": "Fetches Instagram users based on a given keyword.", "parameters": {"keyword": {"description": "The keyword to search for Instagram users.", "type": "str", "default": "insta"}}}
{"name": "get_user_tweets", "description": "Fetches tweets for a specified user using the provided RapidAPI key.", "parameters": {"count": {"description": "The number of tweets to retrieve.", "type": "str", "default": "20"}, "user": {"description": "The ID of the user whose tweets are to be fetched.", "type": "str", "default": "2455740283"}, "cursor": {"description": "The cursor for pagination. Default is None.", "type": "str, optional", "default": ""}}}
{"name": "avatar", "description": "Generates an avatar with the initials derived from the given name and various customization options.", "parameters": {"name": {"description": "The name from which to derive the initials. Default is 'john doe'.", "type": "str, optional", "default": "john doe"}, "rounded": {"description": "If True, the avatar will be rounded. Default is None.", "type": "bool, optional", "default": true}, "uppercase": {"description": "If True, the initials will be in uppercase. Default is None.", "type": "bool, optional", "default": true}, "font_size": {"description": "The font size of the initials, ranging from 0 to 1. Default is 0.", "type": "int, optional", "default": "0.5"}, "length": {"description": "The number of initials to display. Default is 2.", "type": "int, optional", "default": "2"}, "size": {"description": "The font size of the initials, ranging from 0 to 1. Default is 0.", "type": "int, optional", "default": "128"}, "background": {"description": "The background color of the avatar in RRGGBB hex format. Default is '000000'.", "type": "str, optional", "default": "000000"}, "color": {"description": "The color of the initials in RRGGBB hex format. Default is 'ffffff'.", "type": "str, optional", "default": "ffffff"}}}
{"name": "get_user_feed", "description": "Fetch the feed of an Instagram user using the provided user ID via the RapidAPI service.", "parameters": {"is_id": {"description": "The user ID of the Instagram account to fetch the feed for.", "type": "int", "default": "25025320"}, "max_id": {"description": "The maximum ID for pagination in the feed. Defaults to '2796754904080592191_25025320'.", "type": "str, optional", "default": "2796754904080592191_25025320"}}}
{"name": "get_user_profile", "description": "Fetches the user profile from the Pinterest API using the provided username.", "parameters": {"username": {"description": "The Pinterest username for which to retrieve the profile information.", "type": "str", "default": "0869178429hau"}}}
{"name": "draw_cards", "description": "Shuffles a standard deck of 52 cards and draws a specified number of cards from the top.", "parameters": {"num_draw": {"description": "The number of cards to be drawn. Defaults to 1.", "type": "int, optional", "default": 1}}}
{"name": "min_meeting_rooms", "description": "Finds the minimum number of meeting rooms required to accommodate all meetings.", "parameters": {"intervals": {"description": "A list of meeting time intervals, where each interval is represented as [start_time, end_time].", "type": "List[List[int]]"}}}
{"name": "is_valid_sudoku", "description": "Checks if a 9x9 Sudoku board is valid.", "parameters": {"board": {"description": "The Sudoku board represented as a 2D list of strings.", "type": "List[List[str]]"}}}
{"name": "calculate_electric_field", "description": "Calculate the electric field produced by a charge at a certain distance.", "parameters": {"charge": {"description": "Charge in coulombs producing the electric field.", "type": "int", "default": 8.854e-12}, "distance": {"description": "Distance from the charge in meters where the field is being measured.", "type": "int", "default": 8.854e-12}, "permitivity": {"description": "Permitivity of the space where field is being calculated, default is 8.854e-12.", "type": "float"}}}
{"name": "net", "description": "Checks if a .net domain name is registered using the RapidAPI 'check-username' service.", "parameters": {"name": {"description": "The .net domain name to check for registration.", "type": "str", "default": "testdomain"}}}
{"name": "get_user_following_list", "description": "Retrieves the list of users that a specific TikTok user is following.", "parameters": {"user_id": {"description": "The ID of the TikTok user whose following list is to be retrieved.", "type": "str", "default": "107955"}, "count": {"description": "The number of following users to retrieve, with a maximum value of 200. Defaults to '50'.", "type": "str, optional", "default": "50"}, "time": {"description": "The time parameter for loading the next page if there are more followers to retrieve. Defaults to '0'.", "type": "str, optional", "default": "0"}}}
{"name": "get_hashtag", "description": "Fetches detailed information about a specific Instagram hashtag using the provided API key.", "parameters": {"tag": {"description": "The name of the hashtag to search for.", "type": "str", "default": "love"}}}
{"name": "get_user_follow_list", "description": "Fetches the follow list (followers or followings) of a TikTok user based on the given parameters.", "parameters": {"sec_uid": {"description": "The unique ID of the TikTok user.", "type": "str", "default": "MS4wLjABAAAAv7iSuuXDJGDvJkmH_vz1qkDZYo1apxgzaxdBSeIuPiM"}, "type": {"description": "The type of follow list to fetch (\"followers\" or \"following\").", "type": "str", "default": ""}, "maxcursor": {"description": "The maximum cursor for pagination. Defaults to 0.", "type": "int, optional", "default": "0"}, "count": {"description": "The number of results to fetch. Defaults to 50.", "type": "int, optional", "default": "50"}, "mincursor": {"description": "The minimum cursor for pagination. Defaults to 0.", "type": "int, optional", "default": "0"}}}
{"name": "getprojects", "description": "Fetches artificial intelligence projects from the specified page using the provided RapidAPI key.", "parameters": {"page": {"description": "The page number of the projects to retrieve.", "type": "int", "default": "1"}}}
{"name": "tirto_search", "description": "Searches Tirto news data using the RapidAPI interface.", "parameters": {"limit": {"description": "The maximum number of search results to return.", "type": "str", "default": "10"}, "q": {"description": "The query string to search for in Tirto news articles.", "type": "str", "default": "banjir"}, "page": {"description": "The page number for paginated results.", "type": "str", "default": "1"}}}
{"name": "get_individual_news_from_source", "description": "Fetch LGBTQ+ related news from a specific newspaper using the newspaper's ID.", "parameters": {"newspaperid": {"description": "The unique identifier of the newspaper from which to retrieve news.", "type": "str", "default": "gaytimes"}}}
{"name": "canvas_genres_list", "description": "Fetches a list of genres in the canvas category from the Webtoon API.", "parameters": {"language": {"description": "The language in which to return the genres. Acceptable values are 'en', 'zh-hant', 'de', 'fr', 'es', 'th', and 'id'. Default is 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "products_get_reviews", "description": "Fetches brief reviews of a product from the Shein API.", "parameters": {"goods_spu": {"description": "The value of 'productRelationID' returned in the /products/list or /products/search endpoints. Defaults to 'm22022854841'.", "type": "str, optional", "default": "m22022854841"}, "cat_id": {"description": "The value of 'cat_id' returned in the /products/list or /products/search endpoints. Defaults to '1727'.", "type": "str, optional", "default": "1727"}, "sku": {"description": "The value of 'goods_sn' returned in the /products/list or /products/search endpoints. Defaults to 'rm2202285484176751'.", "type": "str, optional", "default": "rm2202285484176751"}, "currency": {"description": "The 3-letter currency code. Defaults to 'USD'.", "type": "str, optional", "default": "USD"}, "goods_id": {"description": "The value of 'goods_id' field returned in the /products/list or /products/search endpoints. Defaults to '10196865'.", "type": "str, optional", "default": "10196865"}, "language": {"description": "The 2-letter language code. Defaults to 'en'.", "type": "str, optional", "default": "en"}, "country": {"description": "The 2-letter country code. Defaults to 'US'.", "type": "str, optional", "default": "US"}}}
{"name": "get_likecounts_by_itemids_styleids", "description": "Retrieves like counts for specified item IDs and style IDs from the Zappos API.", "parameters": {"siteid": {"description": "The ID representing the site.", "type": "int", "default": "1"}, "itemids": {"description": "The IDs representing the items/styles.", "type": "int", "default": "15651"}}}
{"name": "products_v2_list_recommended", "description": "This function retrieves a list of recommended products from the Target API based on a given store ID and TCINs.", "parameters": {"store_id": {"description": "The ID of the store for which to get recommendations. This value should match the location ID returned from a previous call to the stores/list endpoint.", "type": "int", "default": "911"}, "tcins": {"description": "The TCINs (Target.com Item Numbers) for which to get product recommendations. This value should come from a previous call to the products/list endpoint.", "type": "int", "default": "54191097"}}}
{"name": "products_search", "description": "Search for products by a specified keyword and optional filters, with support for pagination and sorting.", "parameters": {"keyword": {"description": "The term or phrase to search for related products.", "type": "str", "default": "light shaded room"}, "filters": {"description": "Filters to apply to the product search results. Multiple filters can be specified using the format `key~value`. For example, 'colorList~White&masterClID~180'.", "type": "str, optional", "default": ""}, "curpage": {"description": "The current page number for paginated results. Default is 1.", "type": "int, optional", "default": "1"}, "itemsperpage": {"description": "The number of items to display per page. Default is 48.", "type": "int, optional", "default": "48"}, "sortby": {"description": "The field by which to sort the results. Default is 0.", "type": "int, optional", "default": "0"}}}
{"name": "fish_api_fish_name", "description": "Fetch information for a specific fish from the Fish API.", "parameters": {"name": {"description": "Name of the fish to be found.", "type": "str", "default": "Tarpon"}}}
{"name": "getsamples", "description": "Fetches Power BI samples for a given page number using RapidAPI.", "parameters": {"page": {"description": "The page number of the samples to fetch.", "type": "int", "default": "1"}}}
{"name": "polygon_area_shoelace", "description": "Calculates the area of a polygon using the shoelace formula.", "parameters": {"vertices": {"description": "A list of polygon vertices represented as tuples (x, y).", "type": "List[Tuple[float, float]]"}}}
{"name": "california_alimony", "description": "Calculates the total alimony one spouse would have to pay to the other in California over a given duration.", "parameters": {"payor_monthly_income": {"description": "The monthly gross income of the payor spouse.", "type": "int"}, "recipient_monthly_income": {"description": "The monthly gross income of the recipient spouse.", "type": "int"}, "duration_years": {"description": "The duration of the alimony in years.", "type": "int"}}}
{"name": "greatest_common_divisor", "description": "Computes the greatest common divisor (GCD) of two non-negative integers.", "parameters": {"a": {"description": "The first non-negative integer.", "type": "int"}, "b": {"description": "The second non-negative integer.", "type": "int"}}}
{"name": "country_region_cities", "description": "Fetches a list of cities within a specified region of a given country from the GeoDB API.", "parameters": {"countryid": {"description": "An ISO-3166 country code or WikiData ID.", "type": "str", "default": "US"}, "regioncode": {"description": "An ISO-3166 or FIPS region code.", "type": "str", "default": "CA"}, "limit": {"description": "The maximum number of results to retrieve. Defaults to None.", "type": "int, optional", "default": ""}, "hateoasmode": {"description": "Include HATEOAS-style links in results. Defaults to None.", "type": "bool, optional", "default": ""}, "asciimode": {"description": "Display results using ASCII characters. Defaults to None.", "type": "bool, optional", "default": ""}, "nameprefixdefaultlangresults": {"description": "Match on names in the default language if a non-default language is requested when prefix-matching. Defaults to None.", "type": "bool, optional", "default": ""}, "timezoneids": {"description": "Only include cities in these time zones. Comma-separated values. Defaults to None.", "type": "str, optional", "default": ""}, "nameprefix": {"description": "Only include cities whose names start with this prefix. If languagecode is set, the prefix will be matched on the name as it appears in that language. Defaults to None.", "type": "str, optional", "default": ""}, "types": {"description": "Only include cities of these types (comma-separated): CITY, ADM2. Defaults to None.", "type": "str, optional", "default": ""}, "minpopulation": {"description": "Only include cities with at least this population. Defaults to None.", "type": "int, optional", "default": ""}, "languagecode": {"description": "Display results in this language. Defaults to None.", "type": "str, optional", "default": ""}, "offset": {"description": "The zero-based offset into the results. Defaults to None.", "type": "int, optional", "default": ""}, "maxpopulation": {"description": "Only include cities with no more than this population. Defaults to None.", "type": "int, optional", "default": ""}, "includedeleted": {"description": "Whether to include any cities marked deleted. Options are: ALL, SINCE_YESTERDAY, SINCE_LAST_WEEK, NONE. Defaults to None.", "type": "str, optional", "default": ""}, "sort": {"description": "How to sort the results. Format: ±SORT_FIELD,±SORT_FIELD where SORT_FIELD = elevation, name, population. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "image_search", "description": "Search for images using a given URL and retrieve visual matches, knowledge graph information, products and prices, and text and object detections.", "parameters": {"url": {"description": "URL of an image to perform Google Lens search.", "type": "str", "default": "https://i.imgur.com/HBrB8p0.png"}, "country": {"description": "The country code for the search. Defaults to 'us'.", "type": "str, optional", "default": "us"}, "language": {"description": "The language code for the results. Defaults to 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "google_maps_reviews", "description": "Fetches and returns JSON data of Google Maps reviews based on the specified parameters.", "parameters": {"data_id": {"description": "Unique identifier representing the location or place on Google Maps for which reviews are fetched.", "type": "str", "default": "0x89c25090129c363d:0x40c6a5770d25022b"}, "next_page_token": {"description": "Token to fetch the next page of results, if applicable. Default is None.", "type": "str, optional", "default": ""}, "sort_by": {"description": "Criteria to sort the reviews by. Could be relevance, newest, etc. Default is None.", "type": "str, optional", "default": ""}, "topic_id": {"description": "Identifier for a specific topic to filter reviews by. Default is None.", "type": "str, optional", "default": ""}, "hl": {"description": "Language code to return the reviews in, formatted as language_country (e.g., 'en_us'). Default is 'en_us'.", "type": "str, optional", "default": "en_us"}}}
{"name": "get_a_specific_picture", "description": "Fetches a specific motivational picture using the provided picture ID.", "parameters": {"is_id": {"description": "The ID of the motivational picture to fetch.", "type": "str", "default": "2710271472860038475"}}}
{"name": "get_video_urls", "description": "Retrieves video or shorts URLs from YouTube using a provided video ID.", "parameters": {"is_id": {"description": "The YouTube video ID for which the URLs are to be fetched.", "type": "str", "default": "ppCIVJE3my4"}}}
{"name": "playlist", "description": "Fetch the details of a YouTube playlist using the provided API key.", "parameters": {"is_id": {"description": "The ID of the YouTube playlist.", "type": "str", "default": "PLV3BLrRejJR_8XjiMrbev1_7RjIZTg1qb"}}}
{"name": "catalog_albums", "description": "Fetch catalog album data from the Billboard API for a specified week.", "parameters": {"week": {"description": "The week for which to fetch the catalog albums chart in the format 'YYYY-MM-DD'. Defaults to '2022-10-08'.", "type": "str", "default": "2022-10-08"}}}
{"name": "get_radio_playlist", "description": "Fetches a radio playlist for a given artist or song using the Spotify API.", "parameters": {"uri": {"description": "The URI of the artist or song for which to generate the radio playlist.", "type": "str", "default": "spotify:artist:2w9zwq3AktTeYYMuhMjju8"}}}
{"name": "gettotalsolved", "description": "Fetches the total number of questions solved by the given LeetCode user.", "parameters": {"username": {"description": "The LeetCode username of the user whose solved questions are to be retrieved.", "type": "str", "default": "mujtabah258"}}}
{"name": "get_all_posts", "description": "Retrieves a paginated list of all posts from the API.", "parameters": {"per_page": {"description": "The number of posts to retrieve per page. Defaults to 10.", "type": "int, optional", "default": "10"}, "page": {"description": "The number of posts to retrieve per page. Defaults to 10.", "type": "int, optional", "default": "1"}}}
{"name": "difficulty", "description": "Fetches weed strain information based on the difficulty of growing (easy, medium, or difficult).", "parameters": {"difficulty": {"description": "The difficulty level of growing the strain. Acceptable values are 'easy', 'medium', or 'difficult'.", "type": "str", "default": "medium"}}}
{"name": "obd2_code", "description": "Retrieve the human-readable version of a requested OBD2 code using the Toolbench RapidAPI.", "parameters": {"code": {"description": "The OBD2 code to be translated into human-readable format.", "type": "str", "default": "P0001"}}}
{"name": "analyze_social_group_dynamics", "description": "Analyzes the social dynamics within a group based on the personality traits and group size.", "parameters": {"total": {"description": "The total group size.", "type": "int"}, "extroverts": {"description": "The number of extroverted members in the group.", "type": "int"}, "introverts": {"description": "The number of introverted members in the group.", "type": "int"}}}
{"name": "is_valid_ip_address", "description": "Checks if a string is a valid IP address (IPv4).", "parameters": {"ip": {"description": "The string to check.", "type": "str"}}}
{"name": "music_search", "description": "Searches for music or audio names and retrieves artists' cover images and sound URLs.", "parameters": {"query": {"description": "The search term for the music or audio, typically including the artist or movie name.", "type": "str", "default": "Titanic My Heart Will Go On"}}}
{"name": "getmediumquestion", "description": "Fetches the number of medium-level questions solved by the given user from the LeetCode API.", "parameters": {"username": {"description": "The username of the LeetCode user whose medium-level questions solved count is to be fetched.", "type": "str", "default": "mujtabah258"}}}
{"name": "top_paid_ios_apps", "description": "Fetches a list of the top paid iOS apps from the App Store.", "parameters": {"lang": {"description": "Language code for the results. Defaults to 'en'.", "type": "str", "default": "en"}, "category": {"description": "Category ID to filter results by. Defaults to '6016'.", "type": "str", "default": "6016"}, "country": {"description": "Country code for the App Store to search in. Defaults to 'us'.", "type": "str", "default": "us"}, "num": {"description": "Number of results to return. Defaults to 100. Maximum is 200.", "type": "int", "default": "100"}}}
{"name": "get_vehicle_models", "description": "Fetches all supported vehicle models for a specified vehicle make using the Toolbench RapidAPI.", "parameters": {"make": {"description": "The brand of the vehicle for which to fetch the models.", "type": "str", "default": "Bugatti"}}}
{"name": "get_definitions", "description": "Fetch the definitions of a specified word using the Dicolink API.", "parameters": {"mot": {"description": "The word for which to fetch the definitions.", "type": "str", "default": "cheval"}}}
{"name": "random_company", "description": "Generates a list of fake companies using the specified RapidAPI endpoint.", "parameters": {"size": {"description": "The number of fake companies to generate. Defaults to 5.", "type": "int, optional", "default": "5"}}}
{"name": "get_event_detail", "description": "Fetches detailed information about a specific event or match from the League of Legends Esports API using the provided match ID.", "parameters": {"matchid": {"description": "The ID of the match or event for which details are to be fetched.", "type": "str", "default": "107458367241084543"}}}
{"name": "regular_dice_rolls", "description": "This function simulates rolling a specified number of dice for a specified number of times using the Dice Roll Simulator API.", "parameters": {"rolls": {"description": "The number of times to roll the dice. Default is 2.", "type": "int, optional", "default": "2"}, "dice": {"description": "The number of dice to roll each time. Default is 3.", "type": "int, optional", "default": "3"}}}
{"name": "get_pokemon_data_by_name", "description": "Fetches data for a specified Pokemon using its name from the Pokemon Unite API.", "parameters": {"name": {"description": "The name of the Pokemon for which data is to be fetched.", "type": "str", "default": "Azumarill"}}}
{"name": "get_item_by_id", "description": "Fetches an RPG item by its ID using the Toolbench RapidAPI service.", "parameters": {"is_id": {"description": "The ID of the RPG item to retrieve.", "type": "str", "default": "6383989636a233ea35d1e566"}}}
{"name": "regular_dice", "description": "Roll a specified number of regular dice using the RapidAPI Dice Roll Simulator.", "parameters": {"dice": {"description": "Number of dice to roll. Defaults to 3.", "type": "int, optional", "default": "3"}}}
{"name": "csw21", "description": "Search for words using the Collins Scrabble Words 2021 lexicon via the Word Tree API.", "parameters": {"input": {"description": "A series of at least 4 letters (a-z, case-insensitive). No other characters should be included or no meaningful results will be returned.", "type": "str", "default": "ANAGRAMS"}}}
{"name": "merge_dictionaries", "description": "Merges two dictionaries into a single dictionary.", "parameters": {"dict1": {"description": "The first dictionary.", "type": "Dict"}, "dict2": {"description": "The second dictionary.", "type": "Dict"}}}
{"name": "find_longest_word", "description": "Finds the longest word in a list of words.", "parameters": {"words": {"description": "A list of words.", "type": "List[str]"}}}
{"name": "reverse_string", "description": "Reverses the characters in a string.", "parameters": {"text": {"description": "The input string.", "type": "str"}}}
{"name": "split_list", "description": "Splits a list into chunks of a specified size.", "parameters": {"lst": {"description": "The input list.", "type": "List"}, "chunk_size": {"description": "The size of each chunk.", "type": "int"}}}
{"name": "remove_duplicates", "description": "Removes duplicate elements from a list while preserving the order.", "parameters": {"lst": {"description": "The input list.", "type": "List"}}}
{"name": "get_beverage_by_there_id", "description": "Retrieves beverage details by the given beverage ID from the RapidAPI Beverages and Desserts API.", "parameters": {"is_id": {"description": "The ID of the beverage to retrieve.", "type": "str", "default": ""}}}
{"name": "get_status_cat_image", "description": "Fetches an image of a cat corresponding to the provided HTTP status code.", "parameters": {"status": {"description": "The HTTP status code for which to fetch the cat image. Common codes are 200, 404, 500, etc.", "type": "str", "default": "200"}}}
{"name": "downloadminecraftjarchecksum", "description": "Fetches the SHA-1 checksum of a specified Minecraft version JAR file from the Nitroxenon Minecraft Forge API.", "parameters": {"minecraftversion": {"description": "The version of Minecraft to fetch the JAR checksum for.", "type": "str", "default": ""}}}
{"name": "downloadoptimize", "description": "Downloads the specified OptiFine version using the provided RapidAPI key.", "parameters": {"optifineversion": {"description": "The version of OptiFine to be downloaded.", "type": "str", "default": ""}}}
{"name": "getqrcode", "description": "Generates a QR code URL based on the specified type and value.", "parameters": {"type": {"description": "The format of the QR code to generate. Valid options are 'url', 'text', 'telno', 'mailto', or 'smsto'.", "type": "str", "default": "url"}, "value": {"description": "The content to encode within the QR code. Example values are 'https://www.google.com' for 'url', 'Some text' for 'text', '9142545474' for 'telno', and '8542487542' for 'smsto'.", "type": "str", "default": "https://www.google.com"}}}
{"name": "getforecastweather", "description": "Fetches weather forecast data for a specified city using the OpenWeatherMap API.", "parameters": {"q": {"description": "The city name for which the weather forecast is requested.", "type": "str", "default": ""}, "cnt": {"description": "The number of timestamps to return in the response. Defaults to None.", "type": "int, optional", "default": ""}, "units": {"description": "Units of measurement. Options are 'imperial' for Fahrenheit, 'metric' for Celsius, and 'standard' for Kelvin. Defaults to 'standard'.", "type": "str, optional", "default": "standard"}, "lang": {"description": "Language for the output. Translation applies to city name and description fields. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "location_search", "description": "Search for locations by name using the Foreca Weather API.", "parameters": {"query": {"description": "The name of the location to search for.", "type": "str", "default": "mumbai"}, "lang": {"description": "The language for the results. Defaults to 'en'.", "type": "str, optional", "default": "en"}, "country": {"description": "The country code to filter the search results. Defaults to 'in'.", "type": "str, optional", "default": "in"}}}
{"name": "get_weather_updates", "description": "Fetches weather updates for a given city using the RapidAPI Weather API.", "parameters": {"city": {"description": "The name of the city for which to retrieve weather information.", "type": "str", "default": "London"}}}
{"name": "dashboard", "description": "Fetches the deployment and response dashboard for a specified survey using provided credentials and API keys.", "parameters": {"login_id": {"description": "The login identifier for accessing the survey methods API.", "type": "str", "default": ""}, "api_key": {"description": "The API key associated with the user account.", "type": "str", "default": ""}, "survey_code": {"description": "The code identifying the specific survey whose dashboard is being fetched.", "type": "str", "default": ""}}}
{"name": "summary", "description": "Fetches a summary of SEO metrics for a given URL using the Toolbench RapidAPI service.", "parameters": {"url": {"description": "The URL of the website for which the SEO summary is to be fetched.", "type": "str", "default": "https://google.com"}}}
{"name": "tanggal", "description": "Converts a given Gregorian date to its Hijri equivalent using the Masehi-ke-Hijriyah API.", "parameters": {"tanggal": {"description": "The Gregorian date to be converted to Hijri.", "type": "str", "default": ""}}}
{"name": "infobox", "description": "Fetches and returns a JSON object representation of the infobox for a given Wikipedia entry.", "parameters": {"wikiurl": {"description": "The URL of the Wikipedia entry.", "type": "str", "default": "https://en.wikipedia.org/wiki/James_Bond"}, "withname": {"description": "Whether to include the name in the infobox. Defaults to None.", "type": "bool, optional", "default": "false"}}}
{"name": "probability_of_consecutive_rolls", "description": "Calculates the probability of rolling a specific value on a die consecutively for a given number of rolls.", "parameters": {"target_value": {"description": "The desired value to be rolled.", "type": "int", "default": 6}, "num_rolls": {"description": "The number of consecutive rolls.", "type": "int", "default": 6}, "num_sides": {"description": "The number of sides on the die. Defaults to 6.", "type": "int, optional"}}}
{"name": "average", "description": "Calculates the arithmetic mean of a list of numbers.", "parameters": {"numbers": {"description": "The list of numbers.", "type": "List[float]"}}}
{"name": "is_power_of_two", "description": "Checks if a number is a power of two.", "parameters": {"num": {"description": "The number to check.", "type": "int"}}}
{"name": "calculate_distance", "description": "Calculates the Euclidean distance between two points in n-dimensional space.", "parameters": {"point1": {"description": "The coordinates of the first point.", "type": "List[float]"}, "point2": {"description": "The coordinates of the second point.", "type": "List[float]"}}}
{"name": "integrate", "description": "Calculate the area under a curve for a specified function between two x values.", "parameters": {"function": {"description": "The function to integrate, represented as a string. For example, 'x^3'", "type": "str", "default": "trapezoid"}, "start_x": {"description": "The starting x-value to integrate over.", "type": "int", "default": "trapezoid"}, "end_x": {"description": "The ending x-value to integrate over.", "type": "int"}, "method": {"description": "The method of numerical integration to use. Choices are 'trapezoid' or 'simpson'.", "type": "str"}}}
{"name": "monthly_mortgage_payment", "description": "Calculates the monthly mortgage payment based on the loan amount, annual interest rate, and loan term.", "parameters": {"loan_amount": {"description": "The total amount of the loan.", "type": "float"}, "annual_interest_rate": {"description": "The annual interest rate as a decimal (e.g., 0.05 for 5%).", "type": "float"}, "loan_term_years": {"description": "The loan term in years.", "type": "int"}}}
{"name": "latest", "description": "Fetches the latest showerthoughts from the showerthoughts subReddit using the RapidAPI service.", "parameters": {"num": {"description": "The number of showerthoughts to fetch. Defaults to 10. Must be between 1 and 500.", "type": "int, optional", "default": "10"}}}
{"name": "top_headlines", "description": "Fetches top headline news articles based on specified parameters.", "parameters": {"language": {"description": "Language code to filter news articles. Default is 'en'. Options include:", "type": "str", "default": "en"}, "category": {"description": "Category of news articles to filter by. Default is 'sports'. Options include:", "type": "str", "default": "sports"}, "country": {"description": "Country code to filter news articles. Default is 'us'. Options include:", "type": "str", "default": "us"}, "sortby": {"description": "Criterion to sort news articles by. Default is 'published_date'.", "type": "str", "default": ""}, "pagesize": {"description": "Number of news articles to return per page. Default is 10.", "type": "int", "default": "10"}}}
{"name": "news_source", "description": "Fetch the latest news stories for a given news source in chronological order.", "parameters": {"source_id": {"description": "The identifier of the news source for which to retrieve the latest news stories.", "type": "str", "default": "bbc"}}}
{"name": "overview", "description": "Fetches summary statistics from the Papercliff API regarding the number of keywords found, and the number of articles and agencies reviewed.", "parameters": {"is_from": {"description": "Narrows down the results to articles published after the provided date-time. The format should be `yyyy-MM-dd'T'HH:mm`. Example value: `2022-09-18T13:45`. Date-times older than a week do not affect the result.", "type": "str, optional", "default": ""}, "to": {"description": "Narrows down the results to articles published before the provided date-time. The format should be `yyyy-MM-dd'T'HH:mm`. Example value: `2022-09-18T15:30`. Date-times in the future do not affect the result.", "type": "str, optional", "default": ""}, "terms": {"description": "Narrows down the results to articles that contain all the provided keywords. The terms should consist of one to three words separated by a dash. Example value: `election-campaign`.", "type": "str, optional", "default": ""}}}
{"name": "nft_news", "description": "Fetches up-to-date NFT news from the specified API.", "parameters": {"nftnews": {"description": "A specific filter to narrow down NFT news. Default is None, meaning no specific filter.", "type": "str, optional", "default": ""}}}
{"name": "geocode_city", "description": "Retrieves the latitude and longitude coordinates of a given city using the Maps.co Geocoding API.", "parameters": {"city": {"description": "The name of the city.", "type": "str"}}}
{"name": "get_pokemon_move_info", "description": "Retrieves information about a Pokémon's move using the PokéAPI.", "parameters": {"pokemon_name": {"description": "The name of the Pokémon.", "type": "str", "default": "run"}, "move_name": {"description": "The name of the move to check. Defaults to \"run\".", "type": "str, optional", "default": "run"}}}
{"name": "get_holidays_by_year", "description": "Retrieves the list of public holidays for a given year and country using the Nager.Date API.", "parameters": {"year": {"description": "The year for which to retrieve the holidays.", "type": "int"}, "country_code": {"description": "The two-letter ISO 3166-1 alpha-2 country code.", "type": "str"}}}
{"name": "facilities_lookup", "description": "Fetch a list of facilities in Cameroon based on provided query parameters.", "parameters": {"type": {"description": "The type of facility to search for (e.g., hospital, bank, college). Refer to the OpenStreetMap Map features for more options.", "type": "str", "default": "hospital"}, "region": {"description": "The region where the facility is located.", "type": "str", "default": "littoral"}, "city": {"description": "The city where the facility is located. Default is 'douala'.", "type": "str, optional", "default": "douala"}, "limit": {"description": "The maximum number of facilities to return. Default is 10.", "type": "int, optional", "default": "10"}}}
{"name": "api_v1_addresses", "description": "Fetches address information using the provided postcode and house number from the RapidAPI Address Validation API.", "parameters": {"postcode": {"description": "The postcode of the address.", "type": "str", "default": "3021GS"}, "housenumber": {"description": "The house number of the address.", "type": "int", "default": "288"}, "housenumbersuffix": {"description": "The suffix of the house number. Defaults to 'B'.", "type": "str, optional", "default": "B"}}}
{"name": "get_geocoding", "description": "Fetch complete, readable place information in the preferred language based on provided latitude and longitude.", "parameters": {"version": {"description": "Version of the geocoding API to use.", "type": "str", "default": "v1"}, "lat": {"description": "Latitude in decimal degrees (WGS84).", "type": "int", "default": "37.422213"}, "lng": {"description": "Longitude in decimal degrees (WGS84).", "type": "int", "default": "-122.084058"}, "lang": {"description": "Preferred language of the content. Defaults to 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "flatten_list", "description": "Flattens a nested list into a single-level list.", "parameters": {"nested_list": {"description": "The nested list to be flattened.", "type": "List"}}}
{"name": "calculate_factorial", "description": "Calculates the factorial of a non-negative integer.", "parameters": {"n": {"description": "The non-negative integer.", "type": "int"}}}
{"name": "indexes_intraday", "description": "Fetches intraday time series data (Date, Open, High, Low, Close, Volume) for a specified index symbol within a given time interval.", "parameters": {"interval": {"description": "Time interval in minutes, e.g., `1` for 1-minute intervals, `5` for 5-minute intervals.", "type": "int", "default": "1"}, "is_from": {"description": "The start date and time for the query. Supported formats include **YYYY-mm-dd HH:MM** and **YYYY-mm-dd**, e.g., '2020-04-21 10:00' or '2020-04-21'.", "type": "str", "default": "2020-04-21 10:00"}, "to": {"description": "The end date and time for the query. Supported formats include **YYYY-mm-dd HH:MM** and **YYYY-mm-dd**, e.g., '2020-04-21 10:30' or '2020-04-22'.", "type": "str", "default": "2020-04-21 10:30"}, "symbol": {"description": "The symbol of the index to query. Examples include `^GSPC` (S&P 500 index) or `SPX:INDEX` (S&P 500 index). Valid suffixes are:", "type": "str", "default": "^GSPC"}, "adjust": {"description": "Whether the price should be adjusted. Defaults to None.", "type": "bool, optional", "default": "false"}}}
{"name": "dice_roll_probability", "description": "Calculates the probability of rolling a specific sum with a given number of dice, each having a certain number of faces.", "parameters": {"target_sum": {"description": "The target sum to calculate the probability for.", "type": "int", "default": 6}, "num_dice": {"description": "The number of dice being rolled.", "type": "int", "default": 6}, "num_faces": {"description": "The number of faces on each die. Defaults to 6.", "type": "int, optional"}}}
{"name": "get_all_kfc_locations", "description": "Fetches a list of KFC locations from the KFC Locations API for a given page number.", "parameters": {"page": {"description": "The page number of results to retrieve, with each page typically containing 10 results.", "type": "int", "default": "0"}}}
{"name": "artist_100", "description": "Fetches the Artist 100 chart from the Billboard API for a specified date and range.", "parameters": {"date": {"description": "The date for which to fetch the chart, in YYYY-MM-DD format.", "type": "str", "default": "2021-07-07"}, "range": {"description": "The range of results to return. Defaults to '1-10'. Returns all results if not specified.", "type": "str, optional", "default": "1-10"}}}
{"name": "getallquotes", "description": "Fetch all quotes from the Radio World API with optional pagination and API key.", "parameters": {"limit": {"description": "The number of quotes to fetch per page. Defaults to 10.", "type": "int, optional", "default": "10"}, "page": {"description": "The page number to fetch. Defaults to 1.", "type": "int, optional", "default": "1"}}}
{"name": "greatest_of_all_time_hot_100_songs", "description": "Retrieves the Greatest of All Time Hot 100 Songs chart from the Billboard API.", "parameters": {"range": {"description": "A string specifying the range of results to return, formatted as 'start-end'. Defaults to '1-10'.", "type": "str", "default": "1-10"}}}
{"name": "get_supported_coins_handler", "description": "Fetches supported cryptocurrency coins from the RapidAPI Fan Crypto Coins endpoint.", "parameters": {"cursor": {"description": "Pagination string for fetching the next set of coins. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "get_scores_for_given_date", "description": "Fetches the list of football match scores for a given date using the specified API.", "parameters": {"date": {"description": "The date for which to fetch the football scores, in the format %Y-%m-%d (e.g., '2022-12-01').", "type": "str", "default": "2022-12-04"}}}
{"name": "performance_stats_for_past_predictions", "description": "Returns the accuracy statistics of past predictions over various time frames and allows optional filtering by federation and market.", "parameters": {"federation": {"description": "Filter statistics by a specific federation. Defaults to None.", "type": "str, optional", "default": ""}, "market": {"description": "Filter statistics based on the prediction market. Defaults to 'classic'.", "type": "str, optional", "default": "classic"}}}
{"name": "stock_earnings", "description": "Retrieve earnings information for a particular stock symbol using the Yahoo Finance API.", "parameters": {"symbol": {"description": "The stock symbol for which to retrieve earnings information.", "type": "str", "default": "AAPL"}}}
{"name": "now", "description": "Fetches the current time for a specified time zone using the RapidAPI date calculator service.", "parameters": {"tzname": {"description": "The name of the time zone for which to fetch the current time. Defaults to 'UTC'.", "type": "str", "default": "UTC"}}}
{"name": "company_balance_sheet", "description": "Retrieves the balance sheet of a public company for a specified period.", "parameters": {"period": {"description": "Period for which to get the company's balance sheet. Can be 'QUARTERLY' or 'ANNUAL'.", "type": "str", "default": ""}, "symbol": {"description": "Stock symbol (ticker) of the company, e.g., 'MSFT' or 'AAPL'.", "type": "str", "default": "AAPL:NASDAQ"}, "language": {"description": "The language to use for the results, specified as a 2-letter language code according to ISO 639-1. Default is 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "v1_convertcurrency", "description": "Converts an amount of currency from one type to another using the API Ninjas Convert Currency API endpoint.", "parameters": {"amount": {"description": "The amount of currency to convert.", "type": "int", "default": "5000"}, "have": {"description": "The currency you currently hold. Must be a 3-character currency code (e.g., 'USD').", "type": "str", "default": "USD"}, "want": {"description": "The currency to which you want to convert. Must be a 3-character currency code (e.g., 'EUR').", "type": "str", "default": "EUR"}}}
{"name": "top_artists", "description": "Fetch the YEAR-END Top Artists chart information from the Billboard API for a specified year.", "parameters": {"year": {"description": "The year for which to retrieve the Top Artists chart information in YYYY format. Defaults to '2022'.", "type": "str", "default": "2022"}}}
{"name": "get_1688_product_detail", "description": "Fetches detail of a product from 1688 using the provided product ID and RapidAPI key.", "parameters": {"is_id": {"description": "The ID of the product to fetch details for from 1688.", "type": "int", "default": 601513403951}}}
{"name": "product_reviews", "description": "Fetches and paginates through product reviews on Amazon for a given product.", "parameters": {"asin": {"description": "Product ASIN for which to get reviews.", "type": "str", "default": "B07ZPKN6YR"}, "query": {"description": "Search query to filter reviews.", "type": "str, optional", "default": ""}, "sort_by": {"description": "Sort order for reviews. Default is `TOP_REVIEWS`. Allowed values are `TOP_REVIEWS`, `MOST_RECENT`.", "type": "str, optional", "default": ""}, "verified_purchases_only": {"description": "Only return reviews by reviewers who made a verified purchase.", "type": "bool, optional", "default": "false"}, "page_size": {"description": "Number of reviews to return per page. Allowed values range from `1` to `20`. Default is `10`.", "type": "int, optional", "default": "10"}, "page": {"description": "Page number of results to return. Default is `1`.", "type": "int, optional", "default": "1"}, "star_rating": {"description": "Filter reviews by star rating. Default is `ALL`. Allowed values are `ALL`, `5_STARS`, `4_STARS`, `3_STARS`, `2_STARS`, `1_STARS`, `POSITIVE`, `CRITICAL`.", "type": "str, optional", "default": ""}, "images_or_videos_only": {"description": "Only return reviews containing images and/or videos.", "type": "bool, optional", "default": "false"}, "country": {"description": "Marketplace country, language, and currency. Default is `US`. Allowed values are `US`, `AU`, `BR`, `CA`, `CN`, `FR`, `DE`, `IN`, `IT`, `MX`, `NL`, `SG`, `ES`, `TR`, `AE`, `GB`, `JP`.", "type": "str, optional", "default": "US"}}}
{"name": "stores", "description": "Fetches a list of all IKEA stores in a specified country.", "parameters": {"countrycode": {"description": "The two-letter country code representing the country for which to fetch the list of stores.", "type": "str", "default": "us"}}}
{"name": "stores_list", "description": "Returns a list of stores near the provided geographic location.", "parameters": {"longitude": {"description": "The longitude of the geographic location.", "type": "int", "default": "-118.2487"}, "latitude": {"description": "The latitude of the geographic location.", "type": "int", "default": "33.9733"}, "radius": {"description": "The radius in miles to search for stores around the geographic location. Defaults to 25.", "type": "int, optional", "default": "25"}}}
{"name": "activities", "description": "Fetches MET (Metabolic Equivalent of Task) values for various activities based on the given intensity level.", "parameters": {"intensitylevel": {"description": "Level of intensity for the activity.", "type": "int", "default": "1"}}}
{"name": "fixtures", "description": "Fetches and returns tournament fixtures for a given tour ID and season ID using the provided RapidAPI key.", "parameters": {"tour_id": {"description": "Identifier for the tour.", "type": "int", "default": "2"}, "season_id": {"description": "Identifier for the season.", "type": "int", "default": "2021"}}}
{"name": "constructors", "description": "Fetches the list of constructors for a given Formula 1 season using the specified API key.", "parameters": {"season_id": {"description": "The ID of the season for which to list constructors.", "type": "int", "default": "2020"}}}
{"name": "fixtures_by_team_by_season", "description": "Retrieves fixtures and results for a given team within a specified season across all competitions they play in.", "parameters": {"season_id": {"description": "The ID of the season to retrieve fixtures and results for.", "type": "int", "default": "2023"}, "team_id": {"description": "The ID of the team to retrieve fixtures and results for.", "type": "int", "default": "6167"}}}
{"name": "quotes_get_mashup", "description": "Fetch additional information for a specific market quote.", "parameters": {"symbol": {"description": "The market quote symbol for which the information is to be fetched. Only one symbol is allowed.", "type": "str", "default": "IBIO"}}}
{"name": "symbols_press_releases", "description": "Fetches a list of press releases for a given stock symbol from Seeking Alpha's API.", "parameters": {"ticker_slug": {"description": "The slug representing the stock ticker symbol.", "type": "str", "default": "NVDA"}, "page_number": {"description": "The page number of the press releases to fetch.", "type": "int", "default": "1"}}}
{"name": "stock_key_statistics_stock", "description": "Fetches key statistics data for a given stock symbol from the MBOUM Finance API.", "parameters": {"symbol": {"description": "The stock symbol for which to retrieve key statistics data.", "type": "str", "default": "AAPL"}}}
{"name": "is_valid_palindrome", "description": "Checks if a string is a valid palindrome, considering only alphanumeric characters and ignoring case.", "parameters": {"s": {"description": "The input string.", "type": "str"}}}
{"name": "wire_resistance", "description": "Calculates the resistance of a wire based on its length, cross-sectional area, and material resistivity.", "parameters": {"length_m": {"description": "The length of the wire in meters.", "type": "int", "default": "copper"}, "area_sq_m": {"description": "The cross-sectional area of the wire in square meters.", "type": "float", "default": "copper"}, "material": {"description": "The material of the wire. Allowed values: \"copper\" (default) or \"aluminum\".", "type": "str, optional"}}}
{"name": "cosine_similarity", "description": "Calculates the cosine similarity between two vectors.", "parameters": {"vector_a": {"description": "The first vector.", "type": "List[float]"}, "vector_b": {"description": "The second vector.", "type": "List[float]"}}}
{"name": "convert", "description": "Converts an image from a given URL to the WebP format using the RapidAPI WebP Image Converter.", "parameters": {"image_url": {"description": "The URL of the image to be converted.", "type": "str", "default": "https://static.vecteezy.com/packs/media/components/global/search-explore-nav/img/vectors/term-bg-1-666de2d941529c25aa511dc18d727160.jpg"}}}
{"name": "converter", "description": "Performs currency conversion between multiple currencies using the given parameters.", "parameters": {"target": {"description": "The currency code to convert to. This should be a valid three-letter currency code. Multiple target currencies can be specified, separated by a comma.", "type": "str", "default": "EUR,INR,JPY"}, "source": {"description": "The currency code to convert from. This should be a valid three-letter currency code, e.g., USD or EUR.", "type": "str", "default": "USD"}, "amount": {"description": "The amount to convert from the source currency to the target currency. Defaults to 1 if not provided.", "type": "int, optional", "default": "1"}}}
{"name": "free_games", "description": "Returns all free games currently on offer and upcoming free games from the Epic Games Store.", "parameters": {"country": {"description": "Country code for local offers (e.g., 'US', 'DE', 'ES'). Defaults to 'US'.", "type": "str, optional", "default": "US"}}}
{"name": "get_player_info", "description": "Fetches and returns information about a Valorant esports player using the RapidAPI service.", "parameters": {"playerid": {"description": "The unique identifier of the player.", "type": "str", "default": "93"}}}
{"name": "season_wins_leaderboard_mw_2", "description": "Fetches season wins information for a specified number of players on the MW 2 leaderboard.", "parameters": {"limit": {"description": "Number of players to fetch the leaderboard information for, ranging from 1 to 2000.", "type": "int", "default": "2000"}, "season": {"description": "The season for which to fetch the wins information. Defaults to 's1'.", "type": "str, optional", "default": "s1"}}}
{"name": "upcoming", "description": "Fetches upcoming CS:GO matches data from the specified API endpoint.", "parameters": {"content_type": {"description": "The content type for the request, default is 'application/json'.", "type": "str", "default": "application/json"}, "page": {"description": "The page number to retrieve, default is 1.", "type": "int", "default": "1"}, "limit": {"description": "The number of matches to retrieve per page, default is 10.", "type": "int", "default": "10"}}}
{"name": "max_points_on_line", "description": "Finds the maximum number of points that lie on the same straight line.", "parameters": {"points": {"description": "A list of points represented as tuples (x, y).", "type": "List[Tuple[int, int]]"}}}
{"name": "cell_density", "description": "Calculates the cell density based on the optical density (OD) and dilution factor.", "parameters": {"od": {"description": "The optical density of the sample.", "type": "float", "default": 1000000000.0}, "dilution": {"description": "The dilution factor applied to the sample.", "type": "int", "default": 1000000000.0}, "factor": {"description": "The calibration factor for converting OD to cell density. Defaults to 1e9.", "type": "float, optional"}}}
{"name": "find_next_greater_element", "description": "Finds the next greater element for each element in a list.", "parameters": {"nums": {"description": "The list of numbers.", "type": "List[int]"}}}
{"name": "market_capitalization", "description": "Fetches the market capitalization of a cryptocurrency in US Dollars.", "parameters": {"symbol": {"description": "The ticker symbol of the cryptocurrency.", "type": "str", "default": "BTC"}}}
{"name": "profile", "description": "Fetches company profile data such as sector, industry, location, and executives using the given stock symbol.", "parameters": {"symbol": {"description": "The stock symbol for which to fetch company profile data.", "type": "str", "default": "AAPL"}}}
{"name": "batting_average", "description": "Calculates the batting average of a baseball player based on the number of hits and at-bats.", "parameters": {"num_hits": {"description": "The number of hits.", "type": "int", "default": 3}, "num_at_bats": {"description": "The number of at-bats.", "type": "int", "default": 3}, "precision": {"description": "The number of decimal places to round the batting average. Defaults to 3.", "type": "int, optional"}}}
{"name": "triangle_area", "description": "Computes the area of a triangle given its base and height.", "parameters": {"base": {"description": "The length of the base of the triangle.", "type": "float"}, "height": {"description": "The height of the triangle.", "type": "float"}}}
{"name": "find_pairs_with_sum", "description": "Finds all pairs of integers in a list that sum up to a target value.", "parameters": {"nums": {"description": "The list of integers.", "type": "List[int]"}, "target": {"description": "The target sum value.", "type": "int"}}}
{"name": "get_movies_by_cast_name", "description": "Fetches movies associated with a given cast member's name from the IMDB API.", "parameters": {"cast_name": {"description": "Name of the cast member to search for. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "actors_random", "description": "Fetches a random list of actors from the Movies Database RapidAPI.", "parameters": {"limit": {"description": "The number of random actors to retrieve. Defaults to None, and the API will use its default value if not specified.", "type": "int, optional", "default": ""}}}
{"name": "product_by_id", "description": "Fetches detailed information about a specific product from the AliExpress API using the provided product ID.", "parameters": {"product_id": {"description": "The unique identifier for the product on AliExpress.", "type": "int", "default": "32841070485"}}}
{"name": "emailvalidation", "description": "Validates whether the given email address is disposable or not by using the Toolbench RapidAPI service.", "parameters": {"email": {"description": "The email address to be validated.", "type": "str", "default": "info@peekdomain.com"}}}
{"name": "web_candles", "description": "Fetches candlestick data for a specific trading pair within a specified time range.", "parameters": {"time_bucket": {"description": "The time bucket to use for the candle size, e.g., '1m', '5m', '1h'.", "type": "str", "default": "1h"}, "pair_id": {"description": "The primary key for the trading pair. For tests and demos, use id `1` which corresponds to the ETH/USDC pair on Uniswap v2.", "type": "int", "default": 1}, "start": {"description": "The start of the candle fetch period as an ISO 8601 formatted string. Defaults to '2020-05-18 00:00'.", "type": "str, optional", "default": "2020-05-18 00:00"}, "end": {"description": "The end of the candle fetch period as an ISO 8601 formatted string. Defaults to '2020-05-19 00:00'.", "type": "str, optional", "default": "2020-05-19 00:00"}}}
{"name": "calculate_calorie_intake", "description": "Calculates the recommended daily calorie intake and macronutrient distribution based on personal characteristics and goals.", "parameters": {"weight_kg": {"description": "Body weight in kilograms.", "type": "float"}, "height_cm": {"description": "Height in centimeters.", "type": "float"}, "age": {"description": "Age in years.", "type": "int"}, "sex": {"description": "Biological sex, either 'male' or 'female'.", "type": "str"}, "activity_level": {"description": "Activity level on a scale of 1 to 5 (1 = sedentary, 5 = extremely active).", "type": "int"}, "goal": {"description": "Fitness goal, either 'lose', 'maintain', or 'gain'.", "type": "str"}}}
{"name": "is_hotel_available", "description": "Checks the availability of a hotel for a given date range.", "parameters": {"hotel": {"description": "The name of the hotel.", "type": "str"}, "city": {"description": "The city where the hotel is located.", "type": "str"}, "checkin": {"description": "The check-in date in the format \"YYYY-MM-DD\".", "type": "str"}, "checkout": {"description": "The check-out date in the format \"YYYY-MM-DD\".", "type": "str"}}}
{"name": "is_anagram", "description": "Checks if two words are anagrams of each other.", "parameters": {"word1": {"description": "The first word.", "type": "str"}, "word2": {"description": "The second word.", "type": "str"}}}
{"name": "count_vowels", "description": "Counts the number of vowels in a given text.", "parameters": {"text": {"description": "The input text.", "type": "str"}}}
{"name": "calculate_grade", "description": "Calculates the weighted average grade based on scores and their corresponding weights.", "parameters": {"scores": {"description": "A list of scores.", "type": "List[float]"}, "weights": {"description": "A list of weights corresponding to each score.", "type": "List[float]"}}}
{"name": "binary_search", "description": "Performs binary search on a sorted list to find the index of a target value.", "parameters": {"arr": {"description": "The sorted list of integers.", "type": "List[int]"}, "target": {"description": "The target value to search for.", "type": "int"}}}
{"name": "is_valid_parentheses", "description": "Checks if a string contains valid parentheses.", "parameters": {"s": {"description": "The input string.", "type": "str"}}}
{"name": "leaguetotalteamevents", "description": "Retrieves the total team events for a specific cricket league and season.", "parameters": {"tournamentid": {"description": "The unique tournament ID for which the total team events are to be retrieved.", "type": "int", "default": 11184}, "seasonid": {"description": "The season ID for which the total team events are to be retrieved.", "type": "int", "default": 16828}}}
{"name": "properties_get_hotel_photos_deprecated", "description": "This function fetches all available photos for a given hotel property using the specified RapidAPI key. ", "parameters": {"is_id": {"description": "The ID of the property for which to retrieve photos.", "type": "int", "default": "1178275040"}}}
{"name": "bus_detours", "description": "Fetches the bus detours from the SEPTA API based on the specified route number.", "parameters": {"req1": {"description": "The route number for which to retrieve detour information. Defaults to 2.", "type": "int, optional", "default": "2"}}}
{"name": "marks_men_points", "description": "Fetches the men's marks corresponding to a given points value using the Scoring Tables API.", "parameters": {"points": {"description": "A point value between 1 and 1400 to retrieve men's marks.", "type": "int", "default": "1400"}}}
{"name": "title_get_technical", "description": "Fetches technical information for a movie or TV show using its tconst identifier and RapidAPI key.", "parameters": {"tconst": {"description": "The unique identifier for a title, typically starting with 'tt', obtained from endpoints like /title/auto-complete or /title/find.", "type": "str", "default": "tt0944947"}}}
{"name": "by_source_new", "description": "Fetch the most recent 50 news items from a specific source using the Moka News API.", "parameters": {"source": {"description": "The news source from which to retrieve the news items, taken from the available sources list.", "type": "str", "default": "cnn"}}}
{"name": "search_news", "description": "Search for news articles using a specified keyword and language.", "parameters": {"keyword": {"description": "The keyword to search for in news articles.", "type": "str", "default": "Joe Biden"}, "language": {"description": "The language of the news articles. Supported languages include:", "type": "str", "default": ""}}}
{"name": "directions_between_2_locations", "description": "Retrieve route information between two locations in terms of distance, duration, and steps.", "parameters": {"start_lat": {"description": "Latitude of the starting point.", "type": "int", "default": "31.1991806"}, "end_lon": {"description": "Longitude of the ending point.", "type": "int", "default": "31.23788289124186"}, "start_lon": {"description": "Longitude of the starting point.", "type": "int", "default": "29.8951716"}, "end_lat": {"description": "Latitude of the ending point.", "type": "int", "default": "30.02313795"}, "distance_unit": {"description": "Unit of distance measurement. Valid options are 'km' (default) and 'mi'.", "type": "str, optional", "default": "km"}}}
{"name": "income_by_zipcode", "description": "Fetches income data for a given zipcode using the Toolbench RapidAPI.", "parameters": {"zip": {"description": "Zipcode for which the income data is to be retrieved.", "type": "str", "default": "2818"}}}
{"name": "find_by_address", "description": "Fetch addresses from the \"Find By Address\" API using the provided search term.", "parameters": {"query": {"description": "The search term used to find addresses. Defaults to 'Farringdon Road'.", "type": "str", "default": "Farringdon Road"}}}
{"name": "bacterial_growth", "description": "Calculates the bacterial population after a given time based on the initial population and growth rate.", "parameters": {"initial_population": {"description": "The initial bacterial population.", "type": "int", "default": 20}, "growth_rate": {"description": "The growth rate per unit time.", "type": "float", "default": 20}, "time": {"description": "The time elapsed.", "type": "float"}, "doubling_time": {"description": "The doubling time of the bacteria in minutes. Defaults to 20.", "type": "float, optional"}}}
{"name": "search_country", "description": "Search for a country to see if they have an active pageant contest.", "parameters": {"search": {"description": "The search string to query for active pageant contests in a country.", "type": "str", "default": "philippines"}}}
{"name": "get_all_kfc_locations_by_state_and_city", "description": "Retrieve KFC locations for a given state and city with pagination support.", "parameters": {"state": {"description": "The state where KFC locations are being queried.", "type": "str", "default": "CA"}, "city": {"description": "The city where KFC locations are being queried.", "type": "str", "default": "San Jose"}, "page": {"description": "The page number for the results, with each page containing 10 results.", "type": "int", "default": "0"}}}
{"name": "get_sample_userprofile", "description": "Generates fake user profile sample data using an external API.", "parameters": {"count": {"description": "The number of profiles to generate. Defaults to 2. Maximum value is 1000.", "type": "int, optional", "default": "2"}, "locale": {"description": "The locale to use for generating user profiles. Defaults to 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "single_contest", "description": "Fetch details of a single pageant contest by its ID from the PageantDB API.", "parameters": {"is_id": {"description": "The ID of the pageant contest to fetch details for.", "type": "int", "default": "35"}}}
{"name": "hoscoscope", "description": "Retrieves the horoscope for a specific sign and date using the Horostory API.", "parameters": {"date": {"description": "The date for which to retrieve the horoscope, formatted as 'YYYY-MM-DD'.", "type": "str", "default": ""}, "sign": {"description": "The astrological sign for which to retrieve the horoscope.", "type": "str", "default": ""}}}
{"name": "bodyfat_imperial", "description": "Calculates the body fat percentage based on the provided height, gender, weight, and age using imperial units.", "parameters": {"height": {"description": "The height of the person in inches.", "type": "int", "default": "77"}, "gender": {"description": "The gender of the person. Must be either 'male' or 'female'.", "type": "str", "default": "male"}, "weight": {"description": "The weight of the person in pounds.", "type": "int", "default": "180"}, "age": {"description": "The age of the person in years.", "type": "int", "default": "26"}}}
{"name": "factorial", "description": "Computes the factorial of a non-negative integer.", "parameters": {"n": {"description": "The non-negative integer to compute the factorial of.", "type": "int"}}}
{"name": "search_countries_by_continent", "description": "Search for countries by their continent using the specified query parameters.", "parameters": {"continent": {"description": "The continent of the countries to search for. This search is case insensitive and requires an exact match.", "type": "str", "default": "North America"}, "offset": {"description": "The zero-indexed page number from which the search should continue. Defaults to 0.", "type": "int, optional", "default": 0}, "fields": {"description": "A comma-separated list of fields to filter the response. Defaults to None.", "type": "str, optional", "default": ""}, "limit": {"description": "The maximum number of records to return per page. Defaults to 10.", "type": "int, optional", "default": 10}}}
{"name": "get_a_specific_employee_by_employee_id", "description": "Fetches details of a specific employee by their unique employee ID.", "parameters": {"is_id": {"description": "The unique ID of the employee whose details are to be fetched.", "type": "int", "default": "715505"}}}
{"name": "find_duplicate_number", "description": "Finds the duplicate number in a list of integers.", "parameters": {"nums": {"description": "The list of integers.", "type": "List[int]"}}}
{"name": "find_max_subarray_sum", "description": "Finds the maximum sum of a contiguous subarray within a list of integers.", "parameters": {"nums": {"description": "The input list of integers.", "type": "List[int]"}}}
{"name": "get_range", "description": "Helper function to format the range string.", "parameters": {"start": {"description": "The start of the range.", "type": "int"}, "end": {"description": "The end of the range.", "type": "int"}}}
{"name": "count_occurrences", "description": "Counts the occurrences of each element in a list and returns a dictionary with the counts.", "parameters": {"lst": {"description": "The input list.", "type": "List"}}}
{"name": "is_power", "description": "Checks if a number is a power of a given base.", "parameters": {"num": {"description": "The number to check.", "type": "int"}, "base": {"description": "The base to check against.", "type": "int"}}}
{"name": "density", "description": "Calculates the density of an object given its mass and volume.", "parameters": {"mass": {"description": "The mass of the object.", "type": "float"}, "volume": {"description": "The volume of the object.", "type": "float"}}}
{"name": "new_arrivals", "description": "Fetch the latest arrivals from different platforms for a specified region.", "parameters": {"region": {"description": "The region code to fetch the latest arrivals from. Use 'IN' for India and 'US' for the USA. Currently, only these two regions are supported.", "type": "str", "default": "US"}, "page": {"description": "The page number for paginated results. Defaults to 1.", "type": "int, optional", "default": "1"}}}
{"name": "search_by_name", "description": "Searches for a movie by its title using the provided query string.", "parameters": {"query": {"description": "The movie title or keyword to search for.", "type": "str", "default": "kong"}, "page": {"description": "The page number of results to retrieve. Defaults to 1.", "type": "int, optional", "default": "1"}}}
{"name": "title_seasons", "description": "Returns all seasons for a specified TV show or mini-series using the Watchmode API.", "parameters": {"is_id": {"description": "The ID of the title. This can be a Watchmode ID, an IMDB ID, or a TMDB type and ID combination (e.g., 'movie-278' for The Shawshank Redemption, 'tv-1396' for Breaking Bad).", "type": "str", "default": "3173903"}}}
{"name": "ott_providers", "description": "Fetch information on OTT platforms supported in a given region.", "parameters": {"region": {"description": "The region to get OTT platform information for. Use 'US' for USA and 'IN' for India.", "type": "str", "default": "IN"}}}
{"name": "titles_random", "description": "Fetches a random list of movie titles from the Movies Database API based on the provided query parameters.", "parameters": {"startyear": {"description": "The starting year range filter (e.g., 2020).", "type": "int, optional", "default": ""}, "genre": {"description": "The genre filter (e.g., 'Drama').", "type": "str, optional", "default": ""}, "titletype": {"description": "The type of title to filter by (e.g., 'movie').", "type": "str, optional", "default": ""}, "sort": {"description": "Sorting order (e.g., 'year.incr' or 'year.decr').", "type": "str, optional", "default": ""}, "limit": {"description": "The number of titles per page (default is 10, maximum is 10).", "type": "int, optional", "default": ""}, "info": {"description": "Type of information to include (default is 'mini-info'; options include 'base_info', 'mini_info', 'image', etc.).", "type": "str, optional", "default": ""}, "endyear": {"description": "The ending year range filter (e.g., 2020).", "type": "int, optional", "default": ""}, "year": {"description": "The starting year range filter (e.g., 2020).", "type": "int, optional", "default": ""}, "list": {"description": "The selected list type (e.g., 'most_pop_movies', 'most_pop_series', 'top_rated_series_250', etc.).", "type": "str, optional", "default": ""}}}
{"name": "nationalize", "description": "Fetches the nationality of the provided name using the Genderize-Nationalize API.", "parameters": {"name": {"description": "The name for which to determine the nationality.", "type": "str", "default": "jad"}}}
{"name": "get_railway_period_for_utc_date", "description": "Fetch the railway period for a given UTC date provided in milliseconds.", "parameters": {"millis": {"description": "The UTC date in milliseconds since the Unix epoch.", "type": "int", "default": "1654470000000"}}}
{"name": "rental_amenities", "description": "Fetches rental amenities information for a given location using the AirDNA API.", "parameters": {"location": {"description": "The location for which to fetch rental amenities information.", "type": "str", "default": "santa monica"}, "currency": {"description": "The currency code for the rental pricing. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "sources", "description": "Fetches a listing of streaming sources supported by Watchmode, optionally filtered by region and type of source.", "parameters": {"regions": {"description": "Comma-delimited string specifying regions to filter the sources, such as 'US,CA'. Supported regions are US, GB, CA, AU. Default is 'US,CA'.", "type": "str", "default": "US,CA"}, "types": {"description": "Comma-delimited string specifying types of streaming sources to filter. Options include 'sub' (subscription service), 'free', 'purchase', 'tve' (TV channel app). Default is 'sub,free'.", "type": "str", "default": "sub,free"}}}
{"name": "sentence", "description": "This function creates lorem ipsum text by specifying the number of sentences to generate. It makes a request to the RapidAPI lorem ipsum service.", "parameters": {"amount": {"description": "Number of sentences to generate. Defaults to 2.", "type": "int", "default": "2"}}}
{"name": "getpeople", "description": "Fetches a list of Azure influencers from the specified page using the RapidAPI service.", "parameters": {"page": {"description": "The page number of the Azure influencers to fetch.", "type": "int", "default": "1"}}}
{"name": "word_frequency", "description": "Calculates the frequency of each word in a text.", "parameters": {"text": {"description": "The input text.", "type": "str"}}}
{"name": "is_subset", "description": "Checks if one set is a subset of another set.", "parameters": {"set1": {"description": "The first set.", "type": "set"}, "set2": {"description": "The second set.", "type": "set"}}}
{"name": "channel_playlists", "description": "Fetches playlists from a specified YouTube channel using the YouTube Data API and various filters.", "parameters": {"hl": {"description": "Language parameter, specified as a BCP-47 language code. Defaults to 'en'.", "type": "str, optional", "default": "en"}, "filter": {"description": "Filter key or token to specify the type of playlists to return. Defaults to None. Available options:", "type": "str, optional", "default": ""}, "cursor": {"description": "Continuation token for pagination. Defaults to None.", "type": "str, optional", "default": ""}, "is_id": {"description": "The YouTube channel ID to fetch playlists for. Defaults to 'UC-lHJZR3Gqxm24_Vd_AJ5Yw'.", "type": "str, optional", "default": "UC-lHJZR3Gqxm24_Vd_AJ5Yw"}, "gl": {"description": "Geolocation parameter to filter results by region. Defaults to 'US'.", "type": "str, optional", "default": "US"}}}
{"name": "getpercentage", "description": "Calculate the percentage of match between two texts using the Text Similarity Calculator API.", "parameters": {"ftext": {"description": "The first text to compare.", "type": "str", "default": "This is text numer one."}, "stext": {"description": "The second text to compare.", "type": "str", "default": "This is text number two."}}}
{"name": "sort_numbers", "description": "Sorts a list of numbers in ascending or descending order.", "parameters": {"numbers": {"description": "The list of numbers to be sorted.", "type": "List[float]"}, "descending": {"description": "If True, sorts the numbers in descending order. Defaults to False.", "type": "bool, optional"}}}
{"name": "get_all_predictions", "description": "Fetches all betting tips from the API with configurable parameters for connection, content type, sorting, and API key.", "parameters": {"connection": {"description": "Specifies the connection type for the API request. Default is 'keep-alive'.", "type": "str", "default": "keep-alive"}, "content_type": {"description": "Sets the content type for the API request. Default is 'application/json'.", "type": "str", "default": "application/json"}, "sort": {"description": "Criterion for sorting the betting tips. Default is '-id' for descending order.", "type": "str", "default": "-id"}}}
{"name": "get_team_schedule", "description": "Fetches the schedule for an NBA team.", "parameters": {"season": {"description": "The season year in YYYY format. Defaults to '2023'. Only '2022' and '2023' are valid.", "type": "str", "default": "2023"}, "teamid": {"description": "The unique identifier for the team. Accepts values from 1 to 30.", "type": "str, optional", "default": ""}, "teamabv": {"description": "The team's abbreviation, such as 'CHI' for the Chicago Bulls, 'BOS' for the Boston Celtics, or 'ATL' for the Atlanta Hawks. Defaults to 'GS'.", "type": "str", "default": "GS"}}}
{"name": "get_litecoin_block_by_hash_or_height", "description": "Fetches detailed information about a Litecoin block by its hash or height.", "parameters": {"hash": {"description": "The hash or height of the Litecoin block you want to retrieve details for.", "type": "str", "default": "1234314"}}}
{"name": "match_scorecard", "description": "Fetches the full scorecard (updated live) for a given match ID using the RapidAPI service.", "parameters": {"match_id": {"description": "The ID of the cricket match for which to retrieve the live scorecard.", "type": "int", "default": "2432999"}}}
{"name": "player_latest_media", "description": "Fetch the latest media for a given player using their player ID.", "parameters": {"player_id": {"description": "The unique identifier of the player for whom the latest media is to be fetched.", "type": "int", "default": "12994"}}}
{"name": "balance_sheet_statement", "description": "Fetches the balance sheet statement of a specified company by its ticker symbol.", "parameters": {"ticker": {"description": "The ticker symbol of the company whose balance sheet statement is to be retrieved.", "type": "str", "default": "AAPL"}}}
{"name": "generate_password", "description": "Generates a random password of specified length and character types.", "parameters": {"length": {"description": "The length of the password. Defaults to 12.", "type": "int, optional", "default": 12}, "include_special": {"description": "Whether to include special characters in the password. Defaults to True.", "type": "bool, optional", "default": true}}}
{"name": "google_videos", "description": "Fetches the JSON data of video results from the Google Search API based on the given search parameters.", "parameters": {"query": {"description": "The search query string.", "type": "str", "default": "football"}, "uule": {"description": "Encoded location parameter.", "type": "str, optional", "default": ""}, "duration": {"description": "Video duration filter.", "type": "str, optional", "default": ""}, "safe": {"description": "Safe search setting.", "type": "str, optional", "default": ""}, "hl": {"description": "Language of the search results (default is 'en_us').", "type": "str, optional", "default": "en_us"}, "num": {"description": "Number of results to return (default is '10').", "type": "str, optional", "default": "10"}, "lr": {"description": "Language restriction for the search.", "type": "str, optional", "default": ""}, "device": {"description": "Device type (default is 'desktop').", "type": "str, optional", "default": "desktop"}, "tbs": {"description": "Restrict results based on time.", "type": "str, optional", "default": ""}, "nfpr": {"description": "Enables or disables personal results (default is '0').", "type": "str, optional", "default": "0"}, "gl": {"description": "Country restrict for the search (default is 'us').", "type": "str, optional", "default": "us"}, "page": {"description": "Page number for the search results (default is '0').", "type": "str, optional", "default": "0"}}}
{"name": "historical", "description": "Fetches the Fear and Greed Index for a given date from the RapidAPI service.", "parameters": {"date": {"description": "The date for which to retrieve the index, in the format 'YYYY-MM-DD'.", "type": "str", "default": "2022-06-01"}}}
{"name": "rental_ratings", "description": "Fetches rental ratings for a specified location using the AirDNA API.", "parameters": {"location": {"description": "The location for which rental ratings are to be fetched.", "type": "str", "default": "santa monica"}, "currency": {"description": "The currency code for the rental ratings. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "get_cities", "description": "Fetches a list of cities based on the provided criteria using the RapidAPI service.", "parameters": {"country_id": {"description": "The ID of the country to filter cities by. Default is None.", "type": "int, optional", "default": ""}, "keyword": {"description": "Keyword to filter cities, default is 'Jakarta'.", "type": "str, optional", "default": "Jakarta"}}}
{"name": "properties_get_broadband", "description": "Fetch broadband information for a given property listing.", "parameters": {"listing_id": {"description": "The ID of the property listing for which broadband information is to be retrieved. This value is typically obtained from the `/properties/list` endpoint.", "type": "int", "default": "56354192"}}}
{"name": "qr_code_image", "description": "Generates a QR Code image of a specified size for a given URL.", "parameters": {"size": {"description": "The size of the QR code image. Default is 5.", "type": "int, optional", "default": "5"}, "url": {"description": "The URL to be encoded in the QR code. Default is 'www.google.com'.", "type": "str, optional", "default": "www.google.com"}}}
{"name": "qr_code_image_generator", "description": "Generates a QR code image for a given URL using the RapidAPI QR code generation service.", "parameters": {"url": {"description": "The URL to be encoded in the QR code. Defaults to 'www.google.com'.", "type": "str", "default": "www.google.com"}}}
{"name": "scrape_links", "description": "Scrapes a specified number of links from the provided URL using the Scrapey Link Scraper API.", "parameters": {"url": {"description": "The target URL from which to scrape links.", "type": "str", "default": "amazon.com"}, "maxlinks": {"description": "The maximum number of links to scrape. Defaults to 10.", "type": "int, optional", "default": "10"}, "includequery": {"description": "Whether to include query parameters in the links. Defaults to None.", "type": "bool, optional", "default": "true"}}}
{"name": "ec", "description": "Analyzes a given password based on a variety of parameters and returns the analysis.", "parameters": {"password": {"description": "The password to be analyzed. It must be between 4 and 128 characters long.", "type": "str", "default": ""}, "penalty": {"description": "The penalty applied to each character that is part of a word, number sequence, alphabet sequence, etc. The penalty is a float number in the range [0, 1], with a default value of 0.25.", "type": "int, optional", "default": ""}, "outputformat": {"description": "The format of the returned analysis. Allowed values are 'json', 'xml', and 'yaml'. The default value is 'xml'.", "type": "str, optional", "default": ""}, "reqid": {"description": "An identifier for this request. This string must match the regular expression `^(?i)[a-z0-9]{8,16}$`. If not provided, a randomly generated identifier will be assigned.", "type": "str, optional", "default": ""}}}
{"name": "whole_foods_order", "description": "Places an order at Whole Foods.", "parameters": {"store_location": {"description": "The location of the Whole Foods store.", "type": "str"}, "item_list": {"description": "A list of items to order.", "type": "list"}, "order_size": {"description": "The size of the order. Allowed values: \"small\", \"medium\", or \"large\".", "type": "str"}}}
{"name": "get_a_specific_item_by_id", "description": "Fetches a specific item from an API using its id.", "parameters": {"is_id": {"description": "The unique identifier of the item to fetch.", "type": "str", "default": "99020"}}}
{"name": "get_all_servers", "description": "Fetches a list of Minecraft servers with an optional limit on the number of servers returned.", "parameters": {"limit": {"description": "A string representing the maximum number of servers to return.", "type": "str", "default": "2000"}}}
{"name": "gamebans", "description": "Fetches game bans for a specified E-Sports game using the provided game ID.", "parameters": {"is_id": {"description": "The ID of the E-Sports game for which you want to retrieve the ban details.", "type": "int", "default": 359554}}}
{"name": "find_longest_palindromic_substring", "description": "Finds the longest palindromic substring in a string.", "parameters": {"s": {"description": "The input string.", "type": "str"}}}
{"name": "stock_time_series", "description": "Fetches stock time series data and key news events for a specified period and symbol.", "parameters": {"period": {"description": "The period for which to return time series and key events. Supported values are:", "type": "str", "default": ""}, "symbol": {"description": "The stock symbol (ticker) to query. Examples include:", "type": "str", "default": "AAPL:NASDAQ"}, "language": {"description": "The language code for the results (default is 'en'). Refer to ISO 639-1 for available 2-letter language codes.", "type": "str, optional", "default": "en"}}}
{"name": "short_ticker", "description": "Fetches the latest and daily average prices for the specified cryptocurrency in the given market and against the provided fiat currencies.", "parameters": {"market": {"description": "The market type, possible values include 'global' and 'local'.", "type": "str", "default": "global"}, "crypto": {"description": "The cryptocurrency to get ticker information for, default is 'ETH'.", "type": "str, optional", "default": "ETH"}, "fiats": {"description": "A comma-separated string of fiat currencies to return values for, default is 'USD,EUR'.", "type": "str, optional", "default": "USD,EUR"}}}
{"name": "getteamstats", "description": "Retrieves the statistics of a specific NHL team using the given team ID.", "parameters": {"is_id": {"description": "The ID of the team.", "type": "int", "default": 28}}}
{"name": "home_team_last_10_matches", "description": "Fetches the statistics and list of the last 10 matches played by the home team for a given team ID.", "parameters": {"is_id": {"description": "The ID of the home team for which to fetch the last 10 matches.", "type": "int", "default": "81930"}}}
{"name": "prediction_details", "description": "Fetches and returns detailed prediction information for a given football match.", "parameters": {"match_id": {"description": "The unique identifier for the football match.", "type": "str", "default": "62fb54c82c9a2e8d643c7965"}}}
{"name": "daily_match_list_all", "description": "Fetches the daily match list including scheduled, live, and finished matches for a given date.", "parameters": {"date": {"description": "The date of the match in the format {dd/MM/yyyy}.", "type": "str", "default": "06/10/2020"}}}
{"name": "measure_distance", "description": "Calculates the distance between two geographic locations specified by their latitude and longitude coordinates, with an optional unit of measurement.", "parameters": {"lon2": {"description": "Longitude of the second location.", "type": "int", "default": "10.103167361330975"}, "lat2": {"description": "Latitude of the second location.", "type": "int", "default": "36.81395975"}, "lon1": {"description": "Longitude of the first location.", "type": "int", "default": "10.7603483"}, "lat1": {"description": "Latitude of the first location.", "type": "int", "default": "34.797783"}, "unit": {"description": "Unit of distance measurement. Valid options are \"km\" (default), \"mi\", \"ft\", and \"yd\".", "type": "str, optional", "default": "km"}}}
{"name": "postcodes_postcode", "description": "Fetches addresses for a given UK postcode using the RapidAPI UK Postcode API.", "parameters": {"postcode": {"description": "The UK postcode to look up addresses for.", "type": "str", "default": "PL11DN"}}}
{"name": "search_restaurants_by_town", "description": "Search for restaurants within a specified town or city using the Wyre Data API.", "parameters": {"town": {"description": "The name of the town or city to search for restaurants.", "type": "str", "default": "hambleton"}}}
{"name": "get_place_by_id", "description": "Returns a single Place identified by an ID.", "parameters": {"is_id": {"description": "ID of the Place.", "type": "str", "default": "US"}, "language": {"description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, the \"localizedName\" property will be null. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "get_hourly_forecast", "description": "Retrieves the hourly weather forecast for a specified city using the RapidAPI Cloud Cast service.", "parameters": {"city": {"description": "The name of the city for which to retrieve the hourly weather forecast.", "type": "str", "default": "New York"}}}
{"name": "weather_report", "description": "Fetches the weather report of a specified city using the Toolbench RapidAPI.", "parameters": {"cityname": {"description": "Name of the city for which the weather report is to be fetched.", "type": "str", "default": "mumbai"}}}
{"name": "actors_get_all_images", "description": "Returns all images of a specific actor or actress based on their unique identifier (nconst).", "parameters": {"nconst": {"description": "The unique identifier of the actor/actress. It typically starts with 'nm' followed by a series of numbers (e.g., 'nm0001667').", "type": "str", "default": "nm0001667"}}}
{"name": "keyword", "description": "Retrieves “Monthly Data” and “Search count” for a given keyword from the Targeted Keyword Trend API.", "parameters": {"keyword": {"description": "The keyword to search data for.", "type": "str", "default": "digital marketing"}}}
{"name": "politician_goverlytics_id", "description": "Retrieves information about a politician by their 'goverlytics_id' from the Goverlytics API.", "parameters": {"goverlytics_id": {"description": "The unique identifier for a politician in the Goverlytics system.", "type": "str", "default": "437c7e15-c66a-4b46-af9b-07e9b1317190"}}}
{"name": "get_news_from_one_news_source", "description": "Fetches news articles from a specified news source and page number using the Sri Lanka News API.", "parameters": {"page": {"description": "The page number to retrieve news articles from. Different news sources may have varying numbers of articles per page.", "type": "int", "default": 1}, "source": {"description": "The news source to retrieve articles from. Possible values include 'Lankadeepa.lk', 'Deshaya.lk', 'Ada.lk', 'BBCSinhala.com', 'Mawbima.lk'.", "type": "str", "default": "Ada.lk"}}}
{"name": "theaters_list", "description": "List theaters around a specified postal code or GEO location using the Flixster API.", "parameters": {"longitude": {"description": "The GEO longitude to search for theaters.", "type": "int, optional", "default": ""}, "zipcode": {"description": "The postal code to search for theaters. Default is '90002'.", "type": "str, optional", "default": "90002"}, "latitude": {"description": "The GEO latitude to search for theaters.", "type": "int, optional", "default": ""}, "radius": {"description": "The radius (in miles) around the specified location to search for theaters. Default is 50.", "type": "int, optional", "default": "50"}}}
{"name": "science", "description": "Fetches science news from Google News using the provided language region and RapidAPI key.", "parameters": {"lr": {"description": "The language region code (e.g., 'en-US') to filter the news articles.", "type": "str", "default": "en-US"}}}
{"name": "calculate_quarterly_dividend", "description": "Calculates the quarterly dividend per share based on the total dividend payout and the number of outstanding shares.", "parameters": {"total_dividend": {"description": "The total dividend payout in USD.", "type": "int"}, "num_shares": {"description": "The number of outstanding shares.", "type": "int"}}}
{"name": "stock_company_overview", "description": "Retrieve the overview details of a public company or stock, supporting multiple stock types such as stock, index, mutual fund, and futures.", "parameters": {"symbol": {"description": "The stock symbol (ticker) for which to obtain the overview. Examples include 'MSFT:NASDAQ', 'MSFT', '^DJI', 'VTSAX'.", "type": "str", "default": "AAPL:NASDAQ"}, "language": {"description": "The 2-letter language code indicating the language for the results, as per ISO 639-1. Defaults to 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "get_latest_current_block", "description": "Retrieve the latest (current) block being mined on a specified blockchain.", "parameters": {"chain": {"description": "The blockchain to get the latest block from. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "bolivia_songs", "description": "Fetches the Bolivia Songs chart information for a given range and date.", "parameters": {"range": {"description": "The range of the chart to fetch.", "type": "str", "default": "1-10"}, "date": {"description": "The date for which the chart information is required, in the format YYYY-MM-DD.", "type": "str", "default": "2022-05-07"}}}
{"name": "billboard_global_200_year_end", "description": "Fetch the YEAR-END Billboard Global 200 chart information for a given year.", "parameters": {"year": {"description": "The year for which to fetch the chart data, in the format 'YYYY'. Defaults to '2022'.", "type": "str", "default": "2022"}}}
{"name": "is_sum_of_cubes", "description": "Checks if a number is the sum of the cubes of its digits.", "parameters": {"num": {"description": "The number to check.", "type": "int"}}}
{"name": "keyword_search_with_ranking", "description": "Perform a keyword search at a specific coordinate (latitude/longitude) to find businesses and rank a specific business at that location. The ranking data can be determined by the business place ID or business name.", "parameters": {"query": {"description": "The Google Place ID of the business or the business name to match in results. Use the `match_type` parameter to specify the choice.", "type": "str", "default": "web design"}, "lng": {"description": "The longitude value of the grid center coordinate point.", "type": "int", "default": "-121.938314"}, "match_value": {"description": "The keyword or search query.", "type": "str", "default": "ChIJoejvAr3Mj4ARtHrbKxtAHXI"}, "lat": {"description": "The latitude value of the grid center coordinate point.", "type": "int", "default": "37.341759"}, "zoom": {"description": "The Google Maps zoom level to use for the search on each grid point. Allowed values are 0-18. Default is 13.", "type": "int, optional", "default": "13"}, "match_type": {"description": "The type of match to perform for ranking. Allowed values are 'place_id' or 'name'. Default is 'place_id'.", "type": "str, optional", "default": "place_id"}}}
{"name": "ip_reputation", "description": "Fetch detailed information about a specified IPv4 or IPv6 address, including geolocation, ISP or hosting provider, and history of abuse or malicious activity.", "parameters": {"ip": {"description": "The IP address to query for reputation information.", "type": "str", "default": "185.65.135.230"}}}
{"name": "estimate_market_value", "description": "Estimates the market value of a car given its VIN and optionally its mileage using the Toolbench RapidAPI service.", "parameters": {"vin": {"description": "The Vehicle Identification Number of the car.", "type": "str", "default": "5N3AA08D68N901917"}, "mileage": {"description": "The current mileage of the car. Defaults to 50,000 if not specified.", "type": "int, optional", "default": "50000"}}}
{"name": "get_list_of_top_level_domains", "description": "Retrieve an exhaustive list of generic and country code top-level domains (TLDs).", "parameters": {"tlds": {"description": "A comma-separated string of specific TLDs to query. If not provided, all TLDs are retrieved.", "type": "str, optional", "default": ""}}}
{"name": "user_timeline", "description": "Fetches the tweet timeline for a specified user ID.", "parameters": {"user_id": {"description": "The unique identifier of the Twitter user whose timeline is to be fetched.", "type": "int", "default": "44196397"}, "cursor": {"description": "Cursor for pagination to fetch the next set of results. Defaults to 'HBaEgNKVxpvYtS0AAA=='.", "type": "str, optional", "default": "HBaEgNKVxpvYtS0AAA=="}, "count": {"description": "Number of tweets to retrieve. Defaults to 10.", "type": "int, optional", "default": "10"}}}
{"name": "search_for_any_category_or_star", "description": "Search for images using a category keyword or pornstar name via the RapidAPI service.", "parameters": {"search": {"description": "The category keyword or pornstar name to search for.", "type": "str", "default": "Natasha Nice"}}}
{"name": "user_follower_list", "description": "Fetches the follower list of a specified TikTok user.", "parameters": {"user_id": {"description": "The ID of the TikTok user whose followers are to be fetched.", "type": "str", "default": "107955"}, "time": {"description": "The start time for fetching followers. Default is '0'.", "type": "str, optional", "default": "0"}, "count": {"description": "The number of followers to fetch. Maximum is 200. Default is '50'.", "type": "str, optional", "default": "50"}}}
{"name": "get_all_details", "description": "Fetches all details of a YouTube video, stream, or shorts including captions, audio-only files, video-only files, and stream URL if available.", "parameters": {"is_id": {"description": "The unique ID of the YouTube video/stream/shorts.", "type": "str", "default": "ppCIVJE3my4"}}}
{"name": "video", "description": "Searches for a particular video on YouTube through the Simple YouTube Search API and returns the results.", "parameters": {"search": {"description": "The search query string to find the video.", "type": "str", "default": "https://www.youtube.com/watch?v=fBNz5xF-Kx4"}}}
{"name": "search_suggestions", "description": "Fetches search suggestions for a given query using the Cheap YouTube API through RapidAPI.", "parameters": {"q": {"description": "The search query for which to fetch suggestions.", "type": "str", "default": "crypto"}}}
{"name": "get_a_random_color", "description": "Fetches a random color or a specified number of random colors from the sRGB color space using the Toolbench RapidAPI.", "parameters": {"quantity": {"description": "The number of colors to return. The maximum is 50. Defaults to 2. Values greater than 50 will default to 50, and values less than 1 will result in an empty array.", "type": "int, optional", "default": "2"}}}
{"name": "gethistoricalscoresbyyear", "description": "Fetches historical Environmental, Social, Governance and Overall scores for companies based on the given year.", "parameters": {"year": {"description": "The year for which to fetch the historical scores (must be less than or equal to 2020).", "type": "str", "default": "2020"}, "content_type": {"description": "The type of content to return. Default is None.", "type": "str, optional", "default": ""}, "sedol": {"description": "The SEDOL identifier of the company. Default is None.", "type": "str, optional", "default": ""}, "isin": {"description": "The ISIN identifier of the company. Default is None.", "type": "str, optional", "default": ""}, "companyname": {"description": "The name of the company. Default is 'Apple Inc.'.", "type": "str, optional", "default": "Apple Inc."}}}
{"name": "coins_search", "description": "Search for available cryptocurrencies that match a given string.", "parameters": {"string": {"description": "A word or name to search for relevant cryptocurrencies.", "type": "str", "default": "bit"}, "time_utc_offset": {"description": "UTC offset value in seconds (default is 28800, representing UTC+8).", "type": "int, optional", "default": "28800"}, "lang_id": {"description": "Language ID value, with a default of 1, corresponding to the all_langs/lang_ID returned from the get-meta-data endpoint.", "type": "int, optional", "default": "1"}}}
{"name": "continents", "description": "Fetches and returns a list of continents of the world localized to the requested language, with various filtering options.", "parameters": {"fields": {"description": "Specifies the fields to return for each continent. Options include 'iso_a2', 'iso_a3', 'continent_code', 'dial_code', 'currency_code', 'currency_num_code', 'currency'.", "type": "str, optional", "default": ""}, "continent_code": {"description": "Filters the results based on the 2-letter continent code.", "type": "str, optional", "default": ""}, "lang": {"description": "Two-letter ISO 639-2 language code to localize the continent names.", "type": "str, optional", "default": ""}, "name": {"description": "Filter results to contain the given continent name in the chosen language.", "type": "str, optional", "default": ""}}}
{"name": "reverse_geocoding", "description": "Translates location coordinates into human-readable addresses using the Reverse Geocoding API.", "parameters": {"query": {"description": "The location coordinates to be translated into a readable address.", "type": "str", "default": "40.7624284 -73.973794"}}}
{"name": "countries", "description": "Fetches a list of countries, filtered by the provided optional criteria. If no criteria are set, all known countries are returned.", "parameters": {"asciimode": {"description": "Display results using ASCII characters.", "type": "bool, optional", "default": ""}, "limit": {"description": "The maximum number of results to retrieve.", "type": "int, optional", "default": ""}, "hateoasmode": {"description": "Include HATEOAS-style links in results.", "type": "bool, optional", "default": ""}, "offset": {"description": "The zero-based offset index into the results.", "type": "int, optional", "default": ""}, "currencycode": {"description": "Only countries supporting this currency.", "type": "str, optional", "default": ""}, "languagecode": {"description": "Display results in this language.", "type": "str, optional", "default": ""}, "sort": {"description": "How to sort the results. Format: ±SORT_FIELD where SORT_FIELD = code | name.", "type": "str, optional", "default": ""}, "nameprefixdefaultlangresults": {"description": "When name-prefix matching, whether to match on names in the default language if a non-default language is requested.", "type": "bool, optional", "default": ""}, "nameprefix": {"description": "Only countries whose names start with this prefix. If languagecode is set, the prefix will be matched on the name as it appears in that language.", "type": "str, optional", "default": ""}}}
{"name": "loginuser", "description": "Logs in a user using the provided username and password, utilizing the Toolbench RapidAPI key for authorization.", "parameters": {"username": {"description": "The username for login.", "type": "str", "default": ""}, "password": {"description": "The password for login in plain text.", "type": "str", "default": ""}}}
{"name": "get_awesome_product_details", "description": "Fetches detailed information about a product using a given product ID from the Amazon Data Scraper API.", "parameters": {"productid": {"description": "The unique identifier for the product to retrieve details for.", "type": "str", "default": "B00K3OM3PS"}}}
{"name": "playstationdeals", "description": "Fetches PlayStation deals based on the specified count, using the provided RapidAPI key.", "parameters": {"count": {"description": "The number of games to fetch from the deals list. The minimum value is 0, and the maximum value depends on the total number of games available.", "type": "int", "default": "0"}}}
{"name": "find_by_postcode", "description": "Fetch addresses for a given UK postcode using the \"Find By PostCode\" API.", "parameters": {"postcode": {"description": "The UK postcode for which to retrieve addresses.", "type": "str", "default": "PL11DN"}}}
{"name": "geocode", "description": "Fetch geocoordinates for a given address using the TrueWay Geocoding API.", "parameters": {"address": {"description": "The address that you want to geocode.", "type": "str", "default": "505 Howard St, San Francisco"}, "language": {"description": "The language in which to return results. Default is 'en'.", "type": "str, optional", "default": "en"}, "country": {"description": "The country code to narrow the search results.", "type": "str, optional", "default": ""}, "bounds": {"description": "The bounding box to narrow the search results.", "type": "str, optional", "default": ""}}}
{"name": "search_restaurants_by_local_authority", "description": "Fetches all restaurants within a specified local authority using the Wyre Data API.", "parameters": {"localauthority": {"description": "The name of the local authority to search for restaurants in.", "type": "str", "default": "wyre"}}}
{"name": "get_a_list_of_states", "description": "Retrieves a list of 3-letter state abbreviations for a given Australian postcode using the RapidAPI service.", "parameters": {"postcode": {"description": "A valid Australian postcode to retrieve state information for.", "type": "int", "default": "2000"}}}
{"name": "get_ip_data", "description": "Fetch location-related data for a given IP address using the APIIP.net service.", "parameters": {"callback": {"description": "JSONP callback function name as per the APIIP.net documentation. Default is 'FUNCTION_NAME'.", "type": "str", "default": "FUNCTION_NAME"}, "ip": {"description": "IPv4 or IPv6 address, or a comma-separated list of such addresses (limit: 50). Default is '67.250.186.196'.", "type": "str", "default": "67.250.186.196"}, "language": {"description": "2-letter language code to customize the response language. Default is 'es'.", "type": "str", "default": "es"}, "fields": {"description": "Comma-separated list of response fields to retrieve specific data according to the APIIP.net documentation. Default is 'city,capital'.", "type": "str", "default": "city,capital"}, "output": {"description": "Format of the API response, either 'json' or 'xml'. Default is 'xml'.", "type": "str", "default": "xml"}}}
{"name": "get_champions", "description": "Fetches a list of all champions from the League of Legends API, optionally in a specified language.", "parameters": {"lang": {"description": "The language in which to retrieve the champion information. Defaults to None, which retrieves information in English.", "type": "str, optional", "default": ""}}}
{"name": "company_income_statement", "description": "Fetch the income statement of a public company for a given period and in a specified language.", "parameters": {"symbol": {"description": "The stock symbol (ticker) of the company for which to fetch the income statement. Examples: 'MSFT:NASDAQ', 'MSFT', 'AAPL'.", "type": "str", "default": "AAPL:NASDAQ"}, "period": {"description": "The period for which to retrieve the income statement. Options are 'QUARTERLY' or 'ANNUAL'.", "type": "str", "default": ""}, "language": {"description": "The language to use for the results, specified as a two-letter language code as per ISO 639-1. Default is 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "final_velocity", "description": "Calculates the final velocity of an object given its initial velocity, acceleration, and time.", "parameters": {"initial_velocity": {"description": "The initial velocity of the object.", "type": "float"}, "acceleration": {"description": "The acceleration of the object.", "type": "float"}, "time": {"description": "The time elapsed.", "type": "float"}}}
{"name": "get_raids_by_level", "description": "Fetches all guardian raids for a specified level.", "parameters": {"level": {"description": "The level of the guardian raids to retrieve information for.", "type": "str", "default": "1"}}}
{"name": "get_charades_word", "description": "Fetch a random charades word with the specified difficulty level using the Toolbench RapidAPI.", "parameters": {"difficulty": {"description": "The difficulty level of the charades word (e.g., 'easy', 'medium', 'hard'). If not provided, a random difficulty level will be used.", "type": "str, optional", "default": ""}}}
{"name": "zipcode_by_city", "description": "Retrieves the zip code(s) of a given city using the GeoSource API.", "parameters": {"city": {"description": "The name of the city for which to retrieve zip code(s). The city must be in the supported countries list (44 countries).", "type": "str", "default": "Brussels"}}}
{"name": "v1_iplookup", "description": "Performs an IP address lookup using the API Ninjas IP Lookup API.", "parameters": {"address": {"description": "The IP address to query. Must be in the format A.B.C.D (e.g., 73.9.149.180).", "type": "str", "default": "24.48.0.3"}}}
{"name": "languages", "description": "Fetches a list of ISO 639 languages, optionally filtered by a name substring.", "parameters": {"namefilter": {"description": "A substring to filter the languages by their names. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "measure_distance_reverse", "description": "Calculates the distance between two addresses in Cameroon using the specified unit of measurement.", "parameters": {"stop_address": {"description": "The destination address for which the distance needs to be calculated.", "type": "str", "default": "Bonamoussadi, Douala"}, "start_address": {"description": "The starting address for which the distance needs to be calculated.", "type": "str", "default": "Molyko, Buea"}, "unit": {"description": "The unit of distance measurement. Valid options are 'km' (default), 'mi', 'ft', and 'yd'.", "type": "str", "default": "km"}}}
{"name": "email_id", "description": "Validates an email address using the Toolbench API and returns the validation result.", "parameters": {"email": {"description": "The email address to validate.", "type": "str", "default": "test@gmail.com"}}}
{"name": "get_company_by_domain", "description": "Fetches company data using a given web domain.", "parameters": {"domain": {"description": "The web domain of the company to look up.", "type": "str", "default": "apple.com"}}}
{"name": "getnews", "description": "Retrieves Power BI news articles for a specified page using the Smartable API.", "parameters": {"page": {"description": "The page number of news articles to retrieve.", "type": "int", "default": "1"}}}
{"name": "get_chapter_by_bookname", "description": "Retrieves a specific chapter from a book in the Bible using the specified book name and chapter ID.", "parameters": {"bookname": {"description": "The name of the book in the Bible.", "type": "str", "default": "John"}, "chapterid": {"description": "The chapter number to retrieve from the specified book.", "type": "int", "default": "3"}}}
{"name": "titles_id_main_actors", "description": "Fetches the main actors of a title given its IMDb ID.", "parameters": {"is_id": {"description": "IMDb ID of the title (e.g., 'tt0000002').", "type": "str", "default": ""}}}
{"name": "neuronal_activity_rate", "description": "Calculates the neuronal activity rate based on the synaptic input rate, synaptic weight, and decay constant.", "parameters": {"synaptic_input_rate": {"description": "The rate of synaptic inputs per second.", "type": "int", "default": 1.0}, "synaptic_weight": {"description": "The weight of the synaptic input, denoting its influence. Defaults to 1.0.", "type": "float, optional", "default": 0.1}, "decay_constant": {"description": "The rate at which the neuron's potential decays. Defaults to 0.1.", "type": "float, optional", "default": 1.0}}}
{"name": "cagr", "description": "Calculates the Compound Annual Growth Rate (CAGR) of an investment.", "parameters": {"start_value": {"description": "The initial value of the investment.", "type": "float"}, "end_value": {"description": "The final value of the investment.", "type": "float"}, "years": {"description": "The number of years between the initial and final values.", "type": "int"}}}
{"name": "calculate_angle", "description": "Calculates the angle between the hour and minute hands of a clock.", "parameters": {"hour": {"description": "The hour value (1-12).", "type": "int"}, "minute": {"description": "The minute value (0-59).", "type": "int"}}}
{"name": "tokenize", "description": "Tokenizes a given value by making a request to the Tokenizer API endpoint. The value must adhere to specific character restrictions and size limits.", "parameters": {"value": {"description": "The text to be tokenized. The value must be 1KB or smaller and must not include any of the following characters: forward slash (/), backslash (\\), number sign (#), question mark (?), or control characters ranging from U+0000 to U+001F (including horizontal tab, linefeed, and carriage return), and from U+007F to U+009F.", "type": "str", "default": "TextIWantToTokenize"}}}
{"name": "iso", "description": "Retrieves the ISO codes for a given country using the Metropolis API.", "parameters": {"country": {"description": "The name of the country for which to get the ISO codes.", "type": "str", "default": "Canada"}}}
{"name": "search_patent", "description": "Searches for patents using a keyword and data source, and returns a list of patents.", "parameters": {"q": {"description": "Keyword used for searching patents.", "type": "str", "default": "kettle"}, "ds": {"description": "Data source to search for patents.", "type": "str", "default": "all"}}}
{"name": "getlatestbysecuritiescode", "description": "Fetches the latest securities report data for a given company based on its securities code.", "parameters": {"securities_code": {"description": "The securities code representing the company.", "type": "int", "default": "7203"}}}
{"name": "stock_cashflow_statement", "description": "Fetches the cash flow statement for a given stock symbol from Yahoo Finance using RapidAPI.", "parameters": {"symbol": {"description": "The stock symbol for which to fetch the cash flow statement.", "type": "str", "default": "AAPL"}}}
{"name": "metadata", "description": "Fetches the metadata information for cryptocurrency markets from the specified API.", "parameters": {"asset_type": {"description": "The type of the asset, e.g., 'spot' or 'futures'. Default is 'spot'.", "type": "str", "default": "spot"}, "market_venue": {"description": "The trading venue where the asset is listed, e.g., 'BINANCE'. Default is 'BINANCE'.", "type": "str", "default": "BINANCE"}, "symbol": {"description": "The symbol of the cryptocurrency, e.g., 'BTC'. Default is 'BTC'.", "type": "str", "default": "BTC"}, "base": {"description": "The base currency for trading, e.g., 'USDT'. Default is 'USDT'.", "type": "str", "default": "USDT"}, "data_type": {"description": "The type of data to fetch, e.g., 'metrics'. Default is 'metrics'.", "type": "str", "default": "metrics"}}}
{"name": "stock_index_trend", "description": "Fetch the index trend earnings history information for a specific stock symbol from the Yahoo Finance API.", "parameters": {"symbol": {"description": "The stock symbol to fetch the index trend data for.", "type": "str", "default": "AAPL"}}}
{"name": "whois", "description": "Fetches WhoIS lookup data for a given domain using the RapidAPI service.", "parameters": {"domain": {"description": "The domain name for which WhoIS information is to be retrieved.", "type": "str", "default": "peekdomain.com"}}}
{"name": "camelizer_get_prices", "description": "Retrieves the latest prices, and the historical highest and lowest prices of a product from Amazon using its ASIN code.", "parameters": {"asin": {"description": "The ASIN number of a product from Amazon, formatted as a string (e.g., 'B08QB93S6R').", "type": "str", "default": ""}, "locale": {"description": "The locale code to specify the Amazon region. Defaults to 'us'. Options include 'au', 'ca', 'fr', 'de', 'it', 'es', 'uk', 'us'.", "type": "str, optional", "default": "us"}}}
{"name": "get_advisories_by_vendor", "description": "Fetch advisories from CISA.gov for a specified vendor and provide information on current security issues, vulnerabilities, and exploits.", "parameters": {"vendorid": {"description": "The vendor ID for which to fetch advisories.", "type": "str", "default": "Siemens"}, "limit": {"description": "The maximum number of advisories to retrieve. Defaults to 2.", "type": "int, optional", "default": "2"}, "info": {"description": "Additional information flag. If set, includes more details in the response.", "type": "bool, optional", "default": "true"}}}
{"name": "strain_type", "description": "Fetches a list of results based on the specified strain type from the Weed Strain API.", "parameters": {"straintype": {"description": "The type of strain to search for (e.g., Indica, Sativa, Hybrid).", "type": "str", "default": "Hybrid"}}}
{"name": "get_models", "description": "Fetches all models from a given manufacturer using the Toolbench RapidAPI service.", "parameters": {"manufacturer": {"description": "The name of the manufacturer for which to retrieve models.", "type": "str", "default": "Audi"}}}
{"name": "airplanes_by_brand", "description": "Fetches all airplanes by a specified brand from the airplanes database.", "parameters": {"brand": {"description": "The brand of airplanes to fetch information for.", "type": "str", "default": "Airbus"}}}
{"name": "data_breach_checker_endpoint", "description": "Checks if the given email has been compromised in any known data breaches using the Data Breach Checker API.", "parameters": {"email": {"description": "The email address to be checked for data breaches.", "type": "str", "default": "example@xyz.com"}}}
{"name": "players_at_position", "description": "Fetches all players at a specified position from the National Football Players API.", "parameters": {"position": {"description": "The abbreviated position name to query players for (e.g., QB, RB, WR).", "type": "str", "default": "QB"}}}
{"name": "teamnearmatches", "description": "Fetches the list of near matches for a specific American Football team using its team ID.", "parameters": {"is_id": {"description": "The ID of the American Football team for which to fetch the list of near matches.", "type": "int", "default": 4413}}}
{"name": "ufc_fight_night_kara_france_vs_albazi_june_03_2023", "description": "Fetch details of UFC Fight Night: Kara-France vs. Albazi on June 03, 2023.", "parameters": {"offset": {"description": "The starting point of records to return. Defaults to None.", "type": "int, optional", "default": ""}, "limit": {"description": "The number of records to return. Defaults to None.", "type": "int, optional", "default": ""}}}
{"name": "text_sentiment_analysis", "description": "Analyzes the sentiment of the provided text using the Text Sentiment Analysis API.", "parameters": {"text": {"description": "The text to be analyzed for sentiment.", "type": "str", "default": "have a good day"}}}
{"name": "generate_random_string", "description": "Generates a random string of specified length and character types.", "parameters": {"length": {"description": "The length of the random string.", "type": "int", "default": true}, "uppercase": {"description": "Include uppercase letters. Defaults to True.", "type": "bool, optional", "default": true}, "lowercase": {"description": "Include lowercase letters. Defaults to True.", "type": "bool, optional", "default": true}, "digits": {"description": "Include digits. Defaults to True.", "type": "bool, optional"}, "special_chars": {"description": "Include special characters. Defaults to False.", "type": "bool, optional", "default": true}}}
{"name": "find_missing_ranges", "description": "Finds the missing ranges between lower and upper in a sorted list of integers.", "parameters": {"nums": {"description": "The sorted list of integers.", "type": "List[int]"}, "lower": {"description": "The lower bound.", "type": "int"}, "upper": {"description": "The upper bound.", "type": "int"}}}
{"name": "getcompanies", "description": "Fetches AI companies from a given page through the RapidAPI service.", "parameters": {"page": {"description": "The page number to retrieve companies from.", "type": "int", "default": "1"}}}
{"name": "get_articles", "description": "Fetches articles from the climate news feed with given parameters for limit, excluded source, and specific source.", "parameters": {"limit": {"description": "Number of articles to fetch. Default is 50.", "type": "int, optional", "default": "50"}, "exclude": {"description": "Source to exclude from the results. Default is 'The Guardian'.", "type": "str, optional", "default": "The Guardian"}, "source": {"description": "Source to fetch articles from. Default is 'Nasa Climate'.", "type": "str, optional", "default": "Nasa Climate"}}}
{"name": "getstats", "description": "Fetches the latest and historical coronavirus statistics data, including confirmed cases, deaths, and recovered cases, for a specified location.", "parameters": {"location": {"description": "ISO 3166-2 location code (e.g., \"FR\" for France, \"US\" for the United States, \"US-CA\" for California state, or \"global\" for worldwide statistics).", "type": "str", "default": "US"}}}
{"name": "health", "description": "Fetches health-related news from Google News using the provided language region and API key.", "parameters": {"lr": {"description": "Language region for the news, e.g., 'en-US'.", "type": "str", "default": "en-US"}}}
{"name": "my_images_by_id", "description": "Fetches generated images' information filtered by a unique ID.", "parameters": {"uniqueid": {"description": "The unique ID used to filter the generated images.", "type": "str", "default": ""}}}
{"name": "get_products_in_category", "description": "Fetches products from a specified category using the Toolbench RapidAPI.", "parameters": {"limit": {"description": "The maximum number of products to retrieve.", "type": "int", "default": ""}, "skip": {"description": "The number of products to skip before starting to collect the result set.", "type": "int", "default": ""}, "category": {"description": "The category of products to fetch.", "type": "str", "default": ""}}}
{"name": "getdownloadurl", "description": "Generates an mp3 download URL using a Text-to-Speech (TTS) engine for the provided text and voice.", "parameters": {"text": {"description": "The text to be converted to speech.", "type": "str", "default": "Are you alright?"}, "voice_name": {"description": "The voice and language for the speech synthesis. Default is 'en-US-AriaNeural'.", "type": "str, optional", "default": "en-US-AriaNeural"}}}
{"name": "gamesdata", "description": "Fetches data for a specific game using its APP_ID from the Steam Games Data API.", "parameters": {"app_id": {"description": "The unique identifier for the game whose data is to be fetched.", "type": "int", "default": "1581770"}}}
{"name": "get_funding_rate_history", "description": "Retrieve the funding rate history for a specific derivative product category over a given time interval.", "parameters": {"interval": {"description": "Kline interval. Possible values are: 1, 3, 5, 15, 30, 60, 120, 240, 360, 720, \"D\" (day), \"M\" (month), \"W\" (week).", "type": "str", "default": "D"}, "start": {"description": "Start timestamp point for the result, in milliseconds.", "type": "int", "default": "1652112000000"}, "category": {"description": "Derivatives products category. Possible values are \"linear\" and \"inverse\".", "type": "str", "default": "linear"}, "end": {"description": "End timestamp point for the result, in milliseconds.", "type": "int", "default": "1652544000000"}, "symbol": {"description": "Symbol of the derivative product.", "type": "str", "default": "BTCUSDT"}, "limit": {"description": "Limit for data size per page, max size is 200. Defaults to showing 200 pieces of data per page.", "type": "int, optional", "default": ""}}}
{"name": "conversion", "description": "Performs cryptocurrency conversion from a given cryptocurrency symbol to another and retrieves conversion data.", "parameters": {"tsym": {"description": "The target cryptocurrency symbol to convert to.", "type": "str", "default": "USDT"}, "fsyms": {"description": "The source cryptocurrency symbol to convert from.", "type": "str", "default": "ETH"}}}
{"name": "market_aggressive_small_caps", "description": "Fetch data for aggressive small cap stocks with earnings growth rates greater than 25% using the mboum-finance API.", "parameters": {"start": {"description": "The starting index for fetching the data. Defaults to 0.", "type": "int, optional", "default": "0"}}}
{"name": "type_parent_get_highest_rated_investments", "description": "Retrieve the highest rated investments as displayed in the Parent tab.", "parameters": {"type": {"description": "The type of investment, one of the following values: 'etf' or 'fund'.", "type": "str", "default": "etf"}, "securityid": {"description": "The security ID for which to retrieve the highest rated investments.", "type": "str", "default": "F00000O2CG"}}}
{"name": "albums_get_related_artist", "description": "Fetches related artist information for a given album using the Shazam API.", "parameters": {"is_id": {"description": "The value of the 'albums->id', 'id', or 'albumadamid' field returned from various Shazam API endpoints.", "type": "str", "default": "850569437"}, "l": {"description": "The language code to return results in. Defaults to 'en-US'.", "type": "str, optional", "default": "en-US"}}}
{"name": "get_tracks", "description": "Fetches track information from the Spotify API for the given track IDs.", "parameters": {"ids": {"description": "A string of comma-separated track IDs to fetch information for.", "type": "str", "default": "4WNcduiCmDNfmTEz7JvmLv"}}}
{"name": "listpornstars", "description": "Fetch a list of pornstars based on various filtering criteria.", "parameters": {"max_rank": {"description": "Maximum rank of the pornstar.", "type": "str, optional", "default": ""}, "min_rank": {"description": "Minimum rank of the pornstar.", "type": "str, optional", "default": ""}, "max_waist": {"description": "Maximum waist measurement of the pornstar.", "type": "str, optional", "default": ""}, "max_cup_size": {"description": "Maximum cup size of the pornstar.", "type": "str, optional", "default": ""}, "min_cup_size": {"description": "Minimum cup size of the pornstar.", "type": "str, optional", "default": ""}, "min_weight": {"description": "Minimum weight of the pornstar.", "type": "str, optional", "default": ""}, "max_weight": {"description": "Maximum weight of the pornstar.", "type": "str, optional", "default": ""}, "max_age": {"description": "Maximum age of the pornstar.", "type": "str, optional", "default": ""}, "ethnicity": {"description": "Ethnicity of the pornstar.", "type": "str, optional", "default": ""}, "min_age": {"description": "Minimum age of the pornstar.", "type": "str, optional", "default": ""}, "nationality": {"description": "Nationality of the pornstar.", "type": "str, optional", "default": ""}, "tattoos": {"description": "Tattoo status of the pornstar.", "type": "str, optional", "default": ""}, "eyes": {"description": "Eye color of the pornstar.", "type": "str, optional", "default": ""}, "hair": {"description": "Hair color of the pornstar.", "type": "str, optional", "default": ""}, "page": {"description": "Page number for paginated results.", "type": "int, optional", "default": ""}, "min_waist": {"description": "Minimum waist measurement of the pornstar.", "type": "str, optional", "default": ""}, "name": {"description": "Name of the pornstar.", "type": "str, optional", "default": ""}, "date_of_birth": {"description": "Date of birth of the pornstar.", "type": "str, optional", "default": ""}}}
{"name": "mean_confidence_interval", "description": "Calculates the confidence interval for a sample mean.", "parameters": {"std_dev": {"description": "The standard deviation of the sample.", "type": "float", "default": 0.95}, "sample_size": {"description": "The size of the sample.", "type": "int", "default": 0.95}, "mean": {"description": "The mean of the sample.", "type": "float"}, "confidence": {"description": "The desired confidence level. Default is 0.95.", "type": "float, optional"}}}
{"name": "stock_get_five_yr_avg_div_yield", "description": "Fetches the five-year average dividend yield for a given stock symbol and region.", "parameters": {"symbol": {"description": "The stock ticker symbol (e.g., 'AAPL' for Apple Inc.).", "type": "str", "default": "AAPL"}, "region": {"description": "The region of the stock market. Allowed values are 'US', 'BR', 'AU', 'CA', 'FR', 'DE', 'HK', 'IN', 'IT', 'ES', 'GB', 'S'. Default is 'US'.", "type": "str, optional", "default": "US"}}}
{"name": "ultosc", "description": "Fetches the Ultimate Oscillator (ULTOSC) data for a given financial instrument using the Twelve Data API. The Ultimate Oscillator takes into account three different time periods to enhance the quality of overbought and oversold signals.", "parameters": {"symbol": {"description": "Instrument symbol, can be any equity, index, ETF, forex, or cryptocurrency (e.g., 'AAPL', 'EUR/USD', 'ETH/BTC').", "type": "str", "default": "AAPL"}, "interval": {"description": "Interval between two consecutive points in the time series. Supported values are '1min', '5min', '15min', '30min', '45min', '1h', '2h', '4h', '1day', '1week', and '1month'.", "type": "str", "default": "1min"}, "time_period_1": {"description": "First time period for the oscillator calculation. Defaults to 7.", "type": "int, optional", "default": 7}, "time_period_2": {"description": "Second time period for the oscillator calculation. Defaults to 14.", "type": "int, optional", "default": 14}, "format": {"description": "Output format, either 'CSV' or 'JSON'. Defaults to 'json'.", "type": "str, optional", "default": "json"}, "time_period_3": {"description": "Third time period for the oscillator calculation. Defaults to 28.", "type": "int, optional", "default": 28}, "outputsize": {"description": "Number of data points to return. Defaults to 30.", "type": "int, optional", "default": 30}}}
{"name": "order_by_descending", "description": "Fetches a list of resources from the Cat Breed Database API sorted in descending order based on the provided ordering parameter.", "parameters": {"ordering": {"description": "The criterion by which to sort the list in descending order.", "type": "str", "default": "-breedName"}}}
{"name": "stock_get_annual_avg_div_rate", "description": "Fetches the annual average dividend rate for a given stock symbol.", "parameters": {"symbol": {"description": "The stock ticker symbol (e.g., \"AAPL\" for Apple Inc.).", "type": "str", "default": "AAPL"}, "region": {"description": "The market region for the stock. Defaults to 'US'.", "type": "str, optional", "default": "US"}}}
{"name": "options", "description": "Fetch stock and options data for a given stock ticker symbol.", "parameters": {"ticker": {"description": "The stock ticker symbol for which to fetch data.", "type": "str", "default": "aapl"}}}
{"name": "vin_decoder", "description": "Decodes a given VIN (Vehicle Identification Number) for a vehicle manufactured in Europe to retrieve information such as car model, maker, year, engine, and other relevant details.", "parameters": {"vin": {"description": "The VIN number to be decoded.", "type": "str", "default": "VF3CA5FU8DW062146"}}}
{"name": "get_single_user", "description": "Retrieves individual user data for a provided user ID from the RapidAPI service.", "parameters": {"is_id": {"description": "The ID of the user for which to retrieve data.", "type": "str", "default": ""}}}
{"name": "postcodes", "description": "This function fetches information about a given Japanese postcode using the PostcodeJP API.", "parameters": {"postcode": {"description": "The postcode for which information is to be fetched.", "type": "str", "default": "1000001"}}}
{"name": "search_place_id_api", "description": "Fetches details for a given place from the Complete Study Bible API using the provided Place Unique ID.", "parameters": {"place_unique_id": {"description": "The unique identifier for the place to be searched in the API.", "type": "str", "default": "2"}}}
{"name": "get_quote_by_year", "description": "Fetches quotes from movies or TV shows for a given year.", "parameters": {"year": {"description": "The year for which to retrieve quotes.", "type": "int", "default": "1939"}}}
{"name": "searchinventory", "description": "Searches for available inventory in the system based on the provided search parameters.", "parameters": {"searchstring": {"description": "An optional search string to look up inventory items. Defaults to 'string'.", "type": "str", "default": "string"}, "limit": {"description": "The maximum number of records to return. Defaults to 0, which means no limit.", "type": "int", "default": 0}, "skip": {"description": "The number of records to skip for pagination. Defaults to 0.", "type": "int", "default": 0}}}
{"name": "alerts_active_zone_zoneid", "description": "Fetches a list of active weather alerts for a specified zone ID using the National Weather Service API.", "parameters": {"zoneid": {"description": "A valid zone ID for which to fetch the active alerts. Example: 'ILZ081'.", "type": "str", "default": ""}}}
{"name": "daily_forecast_5_days", "description": "Fetch a 5-day daily weather forecast for the specified geographic coordinates.", "parameters": {"longitude": {"description": "The longitude of the location for which the forecast is to be retrieved.", "type": "str", "default": "103.86"}, "latitude": {"description": "The latitude of the location for which the forecast is to be retrieved.", "type": "str", "default": "1.28"}}}
{"name": "earnings_trend", "description": "Retrieves the earnings trend for a given stock ticker using the Toolbench RapidAPI.", "parameters": {"ticker": {"description": "The stock ticker symbol for which the earnings trend is to be retrieved.", "type": "str", "default": "AAPL"}}}
{"name": "stays_properties_detail_photos", "description": "Fetch detailed photos of a specific property from the stays/properties/detail/photos endpoint using the Booking.com RapidAPI.", "parameters": {"language_code": {"description": "The language code to use for the response. Default is 'en-us'.", "type": "str", "default": "en-us"}, "id_detail": {"description": "The ID of the property to fetch detail photos for. Default is 'cr/la-buena-vida-cabinas'.", "type": "str", "default": "cr/la-buena-vida-cabinas"}}}
{"name": "list_of_hotel_chains", "description": "Fetches a list of hotel chains from the Booking.com API.", "parameters": {"name": {"description": "Hotel chain name to filter results by.", "type": "str, optional", "default": ""}, "chain_id": {"description": "Chain ID to filter results by.", "type": "str, optional", "default": ""}}}
{"name": "get_stations", "description": "Retrieve the nearest electric vehicle charging stations within a specified distance.", "parameters": {"distance": {"description": "The radius in miles to search for charging stations. Defaults to '100'.", "type": "str, optional", "default": "100"}, "longitude": {"description": "The longitude coordinate for the search location. Defaults to '2.4379392'.", "type": "str, optional", "default": "2.4379392"}, "latitude": {"description": "The latitude coordinate for the search location. Defaults to '44.351488'.", "type": "str, optional", "default": "44.351488"}}}
{"name": "hotel_photos", "description": "Fetches a list of photos for given hotels based on their IDs from the RapidAPI Priceline provider.", "parameters": {"hotel_ids": {"description": "Comma-separated string of PPN hotel IDs (Semi Opaque Only).", "type": "str", "default": "700000000,700000001,700000002,700000003"}, "image_size": {"description": "The size of the images to be returned. Valid options are 'small' (60px), 'medium' (300 to 312px), or 'large' (500 to 800px). Defaults to 'medium'.", "type": "str, optional", "default": "medium"}}}
{"name": "get_fonts", "description": "Fetch fonts for vector tiles using a specified range and font stack from the Mapilion API.", "parameters": {"range": {"description": "The range of font unicode characters to fetch.", "type": "str", "default": "0-255"}, "fontstack": {"description": "The font stack to be used for the tiles.", "type": "str", "default": "Roboto Regular"}}}
{"name": "fetch_by_region", "description": "Fetches records by region from the Magical Taske API.", "parameters": {"region": {"description": "The region for which to fetch records.", "type": "str", "default": "Central"}, "limit": {"description": "The maximum number of records to return.", "type": "int", "default": "5"}}}
{"name": "getcity", "description": "Retrieves a list of cities for a given ISO code using the RapidAPI service.", "parameters": {"iso": {"description": "The ISO code representing the country.", "type": "str", "default": "iq"}}}
{"name": "options_prices", "description": "Fetch current options data given the input parameters.", "parameters": {"type": {"description": "The type of option contract ('Call' or 'Put').", "type": "str", "default": "Call"}, "symbol": {"description": "The symbol of the asset to look for, e.g., 'AAPL' (Apple Inc), 'MSFT' (Microsoft).", "type": "str", "default": "AAPL"}, "min_strike": {"description": "A lower bound for the strike price. Default is 50. If provided, the strike range [min_strike, max_strike] takes priority over the strike parameter.", "type": "int, optional", "default": "50"}, "min_expiry": {"description": "A lower bound for the expiration date in the format 'YYYY-MM-DD'. Default is '2021-05-21'. If provided, the expiry range [min_expiry, max_expiry] takes priority over the expiration parameter.", "type": "str, optional", "default": "2021-05-21"}, "max_expiry": {"description": "An upper bound for the expiration date in the format 'YYYY-MM-DD'. Default is '2023-12-14'. If provided, the expiry range [min_expiry, max_expiry] takes priority over the expiration parameter.", "type": "str, optional", "default": "2023-12-14"}, "max_strike": {"description": "An upper bound for the strike price. Default is 90. If provided, the strike range [min_strike, max_strike] takes priority over the strike parameter.", "type": "int, optional", "default": "90"}, "strike": {"description": "A lower bound for the strike price. Default is 50. If provided, the strike range [min_strike, max_strike] takes priority over the strike parameter.", "type": "int, optional", "default": "122.00"}, "expiration": {"description": "The expiration date of the option in the format 'YYYY-MM-DD'. Default is '2023-12-14'.", "type": "str, optional", "default": "2023-12-14"}}}
{"name": "provider1_live_match_id", "description": "Fetch the live match data for the given match ID from provider1 using the RapidAPI endpoint.", "parameters": {"is_id": {"description": "The match ID to fetch data for.", "type": "str", "default": ""}}}
{"name": "game_odds_by_site_schedule", "description": "Fetches the game schedule from a specified sports betting site using the provided API key.", "parameters": {"site": {"description": "The name of the sports betting site to fetch the schedule from. Case-insensitive. Valid options include:", "type": "str", "default": "draftkings"}}}
{"name": "is_valid_email", "description": "Checks if an email address is valid.", "parameters": {"email": {"description": "The email address to validate.", "type": "str"}}}
{"name": "fibonacci", "description": "Calculates the nth Fibonacci number.", "parameters": {"n": {"description": "The position of the Fibonacci number.", "type": "int"}}}
{"name": "reverse_words", "description": "Reverses the order of words in a sentence.", "parameters": {"sentence": {"description": "The input sentence.", "type": "str"}}}
{"name": "get_by_tmdb_id", "description": "Fetches movie or TV show information based on a given TMDb ID.", "parameters": {"tm": {"description": "A valid TMDb ID for the movie or TV show.", "type": "int", "default": "578"}, "m": {"description": "A valid TMDb ID for the movie or TV show.", "type": "int", "default": ""}}}
{"name": "get_countries", "description": "Fetches a list of countries from the 50k Radio Stations API, optionally filtering by a keyword.", "parameters": {"keyword": {"description": "Optional parameter to filter countries by a specific keyword. Default is 'Indonesia'.", "type": "str", "default": "Indonesia"}}}
{"name": "community_post_details", "description": "Fetches details of a community post from YouTube using RapidAPI.", "parameters": {"is_id": {"description": "Community post ID. Default is 'UgkxCWeKPiIOLsnh_5a0MPHWCmYgbhifgwIZ'.", "type": "str", "default": "UgkxCWeKPiIOLsnh_5a0MPHWCmYgbhifgwIZ"}}}
{"name": "titles_with_changed_episodes", "description": "Retrieve a listing of titles that have changes to their episodes (new episodes, episode details changed, etc.) within a specified date range.", "parameters": {"end_date": {"description": "The end date for the date range to include changes, in the format YYYYMMDD or YYYYMMDDHHMMSS. Hours are in 24-hour format and in Eastern Standard Time. Leading zeros must be used for single-digit values.", "type": "str, optional", "default": ""}, "start_date": {"description": "The start date for the date range to include changes, in the format YYYYMMDD or YYYYMMDDHHMMSS. Hours are in 24-hour format and in Eastern Standard Time. Leading zeros must be used for single-digit values.", "type": "str, optional", "default": ""}, "page": {"description": "The page of results to return. Defaults to 1.", "type": "int, optional", "default": "1"}, "limit": {"description": "The maximum number of results to return per page. Defaults to 50.", "type": "int, optional", "default": "50"}}}
{"name": "schedule", "description": "Fetches the schedule information for a given station using the flixbus API.", "parameters": {"station_id": {"description": "The ID of the station for which to retrieve the schedule.", "type": "int", "default": "66"}}}
{"name": "emailfinder", "description": "Finds the most likely email address based on the provided domain name, first name, and last name using the Tomba RapidAPI.", "parameters": {"domain": {"description": "The domain name to search for the email address (e.g., \"stripe.com\").", "type": "str", "default": "stripe.com"}, "first_name": {"description": "The first name of the person.", "type": "str", "default": "Moskoz"}, "last_name": {"description": "The last name of the person.", "type": "str", "default": "Dustin"}}}
{"name": "getlearningresourcesbytopic", "description": "Fetch Azure learning resources by topic and page number.", "parameters": {"page": {"description": "The page number to retrieve learning resources from.", "type": "int", "default": "1"}, "topic": {"description": "The specific topic to search for learning resources.", "type": "str", "default": "compute"}}}
{"name": "getfutureevents", "description": "Fetches future Azure events from a specified API endpoint.", "parameters": {"page": {"description": "The page number of the events to be retrieved.", "type": "int", "default": "1"}}}
{"name": "check_email_server", "description": "Checks the status of an email server for a given domain using the Toolbench RapidAPI.", "parameters": {"domain": {"description": "The domain of the email server to check.", "type": "str", "default": "microsoft.com"}}}
{"name": "check", "description": "Checks the details of a bank card BIN (Bank Identification Number) using the provided BIN number and RapidAPI key.", "parameters": {"binnum": {"description": "The bank card BIN number to check.", "type": "int", "default": 535177}}}
{"name": "get_daily_domains", "description": "Fetches the daily list of domains containing the specified keyword that were registered in the past day.", "parameters": {"keyword": {"description": "The keyword used to search for newly registered domains. The keyword should not contain any domain name.", "type": "str", "default": "Google"}}}
{"name": "searchdomain", "description": "Fetches webpage data from the \"pages-hosted-on-domain\" API based on the provided filters and parameters.", "parameters": {"matchtype": {"description": "The type of match to be used. Default is 'prefix'.", "type": "str", "default": "prefix"}, "collapse": {"description": "The field to be collapsed. Default is 'urlkey'.", "type": "str", "default": "urlkey"}, "url": {"description": "The URL to search for. Default is 'httpsimage.com'.", "type": "str", "default": "httpsimage.com"}, "fl": {"description": "The fields to include in the response. Default is 'timestamp:4,original,urlkey'.", "type": "str", "default": "timestamp:4,original,urlkey"}, "limit": {"description": "The maximum number of results to return. Default is 100000.", "type": "int", "default": "100000"}, "filter": {"description": "The filter to apply to the results. Default is 'statuscode:200'.", "type": "str", "default": "statuscode:200"}}}
{"name": "get_all_advisories", "description": "Fetches all advisories providing timely information about current security issues, vulnerabilities, and exploits from CISA.gov.", "parameters": {"info": {"description": "Flag to include additional information in the advisories. Defaults to None.", "type": "bool, optional", "default": "true"}, "limit": {"description": "The number of advisories to return. Defaults to 2.", "type": "int, optional", "default": "2"}}}
{"name": "take_screenshot", "description": "Take a screenshot of a webpage with various customizable options and return the URL of the saved image.", "parameters": {"targeturl": {"description": "The URL of the webpage to capture.", "type": "str", "default": "https://www.mio-ip.it/"}, "islandscape": {"description": "Specifies if the viewport should be in landscape mode. Default is None.", "type": "str, optional", "default": ""}, "proxycountry": {"description": "The proxy country to route the request through. Default is None.", "type": "str, optional", "default": ""}, "isfullyloaded": {"description": "Specifies whether to consider navigation finished based on no more than 0 network connections for at least 500 ms. Default is None.", "type": "str, optional", "default": ""}, "clickcount": {"description": "Number of times to click on the selector. Default is 1.", "type": "int, optional", "default": "1"}, "fullpage": {"description": "Indicates if the screenshot should cover the entire page from header to footer. Default is None.", "type": "str, optional", "default": ""}, "clickselector": {"description": "CSS selector for the element to click. The element will be scrolled into view before clicking. Default is None.", "type": "str, optional", "default": ""}, "hastouch": {"description": "Specifies if the viewport supports touch events. Default is None.", "type": "str, optional", "default": ""}, "clickdelay": {"description": "Delay (in milliseconds) before each click action. Default is 500.", "type": "int, optional", "default": "500"}, "clickbutton": {"description": "Specifies the mouse button to use for the click action (e.g., 'left' or 'right'). Default is None.", "type": "str, optional", "default": ""}, "devicescalefactor": {"description": "Device scaling factor to use. Default is 1.", "type": "int, optional", "default": "1"}, "ismobile": {"description": "Whether the meta viewport tag should be taken into account. Default is None.", "type": "str, optional", "default": ""}, "pagewidth": {"description": "Width of the browser page in pixels. Default is 1024.", "type": "int, optional", "default": "1024"}, "pageheight": {"description": "Height of the browser page in pixels. Default is 1024.", "type": "int, optional", "default": "1024"}, "removables": {"description": "CSS selectors for HTML elements to be removed before taking the screenshot. Default is None.", "type": "str, optional", "default": ""}}}
{"name": "get_current_count", "description": "This function retrieves the current count from a specified API without increasing it. It allows customization through various parameters including `clabel`, `color`, and `idv`. The function makes a GET request to the API and returns the response in JSON format if possible, otherwise, it returns the response text.", "parameters": {"clabel": {"description": "A label used to specify a category. Defaults to 'blue'.", "type": "str", "default": "blue"}, "color": {"description": "A color value for the request. Defaults to 'red'.", "type": "str", "default": "red"}, "idv": {"description": "An identifier for the request. Defaults to 'sample'.", "type": "str", "default": "sample"}}}
{"name": "countpages", "description": "Counts the number of website pages indexed by Google for a given URL using the specified RapidAPI service.", "parameters": {"url": {"description": "The URL of the website to check the number of indexed pages.", "type": "str", "default": ""}}}
{"name": "io", "description": "Check if an .io domain with the given name is registered using the RapidAPI toolbench API.", "parameters": {"name": {"description": "The domain name to check.", "type": "str", "default": "testdomain"}}}
{"name": "wikipedia", "description": "This function checks if a given username exists on Wikipedia using the Toolbench RapidAPI service.", "parameters": {"username": {"description": "The username to check on Wikipedia.", "type": "str", "default": "username"}}}
{"name": "mass_messages", "description": "Retrieves the last 100 mass messages from the OnlyFans API.", "parameters": {"timezone": {"description": "The timezone to use for the messages.", "type": "str", "default": "America/Los_Angeles"}, "useragent": {"description": "The user agent string identifying the client's browser.", "type": "str", "default": ""}, "auth_id": {"description": "Authentication ID used for accessing the API.", "type": "str", "default": "729369"}, "signstart": {"description": "Start time for the signed request.", "type": "str", "default": ""}, "signend": {"description": "End time for the signed request.", "type": "str", "default": ""}, "sess": {"description": "Session identifier.", "type": "str", "default": ""}, "xbc": {"description": "Another session-related identifier.", "type": "str", "default": ""}, "apptoken": {"description": "Application token for API access.", "type": "str", "default": ""}}}
{"name": "top_posts_by_subreddit", "description": "Fetches the top posts from a specific subreddit within a given time frame using the Reddit API.", "parameters": {"time": {"description": "The time frame for fetching top posts. Options include `hour`, `day`, `week`, `month`, `year`, and `all`.", "type": "str", "default": "year"}, "subreddit": {"description": "The subreddit name from which to fetch top posts, e.g., `memes`.", "type": "str", "default": "memes"}, "cursor": {"description": "A cursor for pagination to fetch additional posts. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "generate_recipe", "description": "This function generates a recipe using an ingredient and a provided RapidAPI key.", "parameters": {"ingredient": {"description": "The main ingredient to be used in the recipe. Default is 'chicken'.", "type": "str", "default": "chicken"}}}
{"name": "get_recipe_by_id", "description": "Fetches a specific recipe by its ID from the Ghana Food Recipe API.", "parameters": {"is_id": {"description": "The ID of the recipe to fetch.", "type": "str", "default": "63c2e83b09852be5facb894a"}}}
{"name": "webcams_list_continent_continent_continent", "description": "Fetches a list of webcams for a specified continent.", "parameters": {"continent": {"description": "Continent code for which to fetch webcams. Possible values are:", "type": "str", "default": ""}, "lang": {"description": "Language code to localize the results, if available. Default is 'en'.", "type": "str, optional", "default": "en"}, "show": {"description": "Content to be listed in the response. Possible values are:", "type": "str, optional", "default": "webcams:image,location"}}}
{"name": "webcams_list_limit_limit_offset", "description": "Fetches a list of webcams with optional parameters for result slicing and localization.", "parameters": {"limit": {"description": "Maximum number of webcams in the result list. The maximum allowable value is 50.", "type": "int", "default": ""}, "offset": {"description": "Offset for the first item in the result list. Defaults to 0.", "type": "int, optional", "default": "0"}, "lang": {"description": "Language to localize the results. Defaults to 'en'.", "type": "str, optional", "default": "en"}, "show": {"description": "Content fields to be listed in the response. Defaults to 'webcams:image,location'.", "type": "str, optional", "default": "webcams:image,location"}}}
{"name": "get_recipes_details", "description": "Fetches the details of a recipe by its slug using the Toolbench RapidAPI.", "parameters": {"slug": {"description": "The unique identifier for the recipe.", "type": "str", "default": "articulo-13-jugos-verdes-para-adelgazar-y-quemar-grasa-71482.html"}}}
{"name": "v1_recipe", "description": "Fetch a list of recipes for a given search query using the Recipe by API Ninjas service.", "parameters": {"query": {"description": "The search query text to find matching recipes.", "type": "str", "default": "italian wedding soup"}, "offset": {"description": "The number of results to offset in order to paginate through the results. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "get_beers_by_single_country", "description": "Fetches the details of a beer from a specified country using the given beer identifier.", "parameters": {"beerid": {"description": "The identifier of the beer to fetch details for.", "type": "str", "default": "italy"}}}
{"name": "asoy", "description": "Fetches JSON results for All States, One Year (ASOY) for the specified US Presidential Election year.", "parameters": {"year": {"description": "The election year to retrieve results for (e.g., 2008).", "type": "int", "default": "2000"}}}
{"name": "is_armstrong_number", "description": "Checks if a number is an Armstrong number.", "parameters": {"num": {"description": "The number to check.", "type": "int"}}}
{"name": "newlyregistereddomains", "description": "Fetch a list of newly registered domains from the WhoIs Lookup API, applying optional filters to the search.", "parameters": {"exclude": {"description": "Keywords to exclude from the domain search. Defaults to None.", "type": "str, optional", "default": ""}, "date": {"description": "The registration date of the domains to be searched in 'YYYY-MM-DD' format. Defaults to '2023-06-12'.", "type": "str, optional", "default": "2023-06-12"}, "page": {"description": "The page number of the search results to retrieve. Defaults to 1.", "type": "int, optional", "default": 1}, "keywords": {"description": "Keywords that the searched domains must contain. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "prime_factorization", "description": "Computes the prime factorization of a positive integer.", "parameters": {"number": {"description": "The positive integer to factorize.", "type": "int"}}}
{"name": "circle_area", "description": "Computes the area of a circle given its radius.", "parameters": {"radius": {"description": "The radius of the circle.", "type": "float"}}}
{"name": "news_list_by_ticker", "description": "Retrieves a list of news articles for a specified ticker ID from the Webull API.", "parameters": {"tickerid": {"description": "The unique identifier for the ticker.", "type": "int", "default": "913256135"}, "pagesize": {"description": "The number of news articles to retrieve per page. Default is 20, maximum is 20.", "type": "int, optional", "default": "20"}, "currentnewsid": {"description": "The ID of the last news article returned in the previous request. Pass 0 for the first query. Default is 0.", "type": "int, optional", "default": "0"}}}
{"name": "industries_list_best_performing", "description": "Retrieves a list of the best performing industries for a given region.", "parameters": {"regionid": {"description": "The ID of the region for which to list best performing industries.", "type": "int", "default": "6"}, "industrytype": {"description": "The time period for evaluating industry performance. One of 'today', '5d', '1m', or '3m'. Default is 'today'.", "type": "str, optional", "default": "today"}, "pagesize": {"description": "The number of results per page. Maximum is 20. Default is 20.", "type": "int, optional", "default": "20"}, "pageindex": {"description": "The index of the page to retrieve. Default is 1.", "type": "int, optional", "default": "1"}, "direction": {"description": "The order direction of the results. Use -1 for descending and 1 for ascending. Default is -1.", "type": "int, optional", "default": "-1"}}}
{"name": "get_equity_latest_data", "description": "Fetches the latest equity data for a given equity slug.", "parameters": {"slug": {"description": "The unique identifier for the equity, retrieved from screener results.", "type": "str", "default": "saudi-aramco"}, "lang": {"description": "Language code for the data. Defaults to 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "time_series", "description": "Fetch the daily historical rates for a given base and target currency or metal between specified start and end dates from the TimeSeries API. The function is limited to a maximum range of 365 days and can query only one symbol per request.", "parameters": {"base": {"description": "The three-letter currency code or metal code of the base currency.", "type": "str", "default": "USD"}, "symbols": {"description": "The three-letter currency code or metal code of the target currency.", "type": "str", "default": "XAU"}, "end_date": {"description": "The end date of the timeframe in 'YYYY-MM-DD' format.", "type": "str", "default": "2023-01-10"}, "start_date": {"description": "The start date of the timeframe in 'YYYY-MM-DD' format.", "type": "str", "default": "2022-12-20"}}}
{"name": "get_realtime_rates", "description": "Gets the real-time price of a specified cryptocurrency coin using RapidAPI.", "parameters": {"symbol": {"description": "The symbol of the cryptocurrency coin (e.g., 'BTC' for Bitcoin).", "type": "str", "default": "BTC"}}}
{"name": "getproductbycategory", "description": "Retrieves products from a given category using the Toolbench RapidAPI.", "parameters": {"category": {"description": "The category of the product to search for.", "type": "str", "default": "Phones"}}}
{"name": "price_by_symbol", "description": "Fetches the live price of a stock by its symbol.", "parameters": {"input": {"description": "The stock symbol to query.", "type": "str", "default": "AAPL"}}}
{"name": "billboard_global_excl_us", "description": "Fetches the Billboard Global Excl. US chart for a specified date using the RapidAPI service.", "parameters": {"date": {"description": "The date for which to retrieve the Billboard Global Excl. US chart, formatted as 'YYYY-MM-DD'. Available data starts from September 19, 2020.", "type": "str", "default": "2020-09-19"}}}
{"name": "getteamroster", "description": "Retrieves the roster of a hockey team for a given season using the RapidAPI NHL Stats and Live Data API.", "parameters": {"is_id": {"description": "The ID of the team for which to retrieve the roster.", "type": "int", "default": 28}, "season": {"description": "The season for which to retrieve the roster. Defaults to 20172018.", "type": "int, optional", "default": 20172018}}}
{"name": "eventstatistics", "description": "Fetch statistics for a specific MMA event using the given event ID.", "parameters": {"is_id": {"description": "The ID of the MMA event for which to fetch statistics.", "type": "int", "default": 11243946}}}
{"name": "prematch", "description": "Fetches the prematch list from the Sports Betting API.", "parameters": {"sp": {"description": "The sport ID.", "type": "int", "default": ""}, "lang": {"description": "The language code.", "type": "str", "default": "en"}, "lid": {"description": "The league ID.", "type": "int", "default": ""}}}
{"name": "matches_v2_list_live", "description": "Fetches a list of available live matches for a given sports category.", "parameters": {"category": {"description": "The sports category to retrieve live matches for. Options include 'soccer', 'cricket', 'basketball', 'tennis', 'hockey'.", "type": "str", "default": "soccer"}, "timezone": {"description": "The timezone offset to be applied to match timings. Range includes -11 to 14 in 0.25 increments. Default is -7.", "type": "int, optional", "default": "-7"}}}
{"name": "matchodds", "description": "Retrieves the odds for a specific cricket match using the given match ID.", "parameters": {"is_id": {"description": "The ID of the cricket match for which to retrieve odds.", "type": "int", "default": 11067865}}}
{"name": "basketball_match_statistics", "description": "Fetches statistics for a given basketball match using the RapidAPI sports live scores service.", "parameters": {"match_id": {"description": "The identifier for the basketball match. Match IDs can be retrieved from the Basketball Live Matches endpoint.", "type": "str", "default": "10314704"}}}
{"name": "kompas_detail", "description": "Fetches detailed information from the Kompas news API using a specified GUID.", "parameters": {"guid": {"description": "The unique identifier for the news article to fetch details for.", "type": "str", "default": ".xml.2023.06.20.114935178"}}}
{"name": "get_products", "description": "Fetches products from the store's catalog with optional pagination.", "parameters": {"skip": {"description": "The number of products to skip. Defaults to None.", "type": "int, optional", "default": ""}, "limit": {"description": "The maximum number of products to retrieve. Defaults to None.", "type": "int, optional", "default": ""}}}
{"name": "isbehindcdn", "description": "Checks if a domain is fronted by a CDN provider using the RapidAPI service.", "parameters": {"domainname": {"description": "The domain name to be checked.", "type": "str", "default": "example.com"}}}
{"name": "check_a_url", "description": "Check if the provided URL is a known phishing or scam attempt using the FraudFreeze API.", "parameters": {"url": {"description": "The URL to be checked for phishing or scam activities.", "type": "str", "default": "google.com"}}}
{"name": "convert_hsl", "description": "Converts an HSL color code to other color codes such as Hex, RGB, and CMYK using the Convexity API.", "parameters": {"s": {"description": "The saturation component of the HSL color code.", "type": "int", "default": "78"}, "h": {"description": "The hue component of the HSL color code.", "type": "int", "default": "250"}, "l": {"description": "The lightness component of the HSL color code.", "type": "int", "default": "45"}}}
{"name": "getuserbyname", "description": "Retrieves user information from the RapidAPI service based on the provided username.", "parameters": {"username": {"description": "The name of the user to fetch. Use 'user1' for testing.", "type": "str", "default": "string"}}}
{"name": "get_all_companies_paginated", "description": "Fetches a paginated list of all companies from the CAC database using the provided API key.", "parameters": {"page": {"description": "The page number to fetch.", "type": "int", "default": "1"}, "limit": {"description": "The number of companies to retrieve per page.", "type": "int", "default": "10"}}}
{"name": "tag_news", "description": "Fetch the latest news stories for a given tag using the BizToc RapidAPI.", "parameters": {"tag": {"description": "The tag for which to fetch the latest news stories.", "type": "str", "default": "apple"}}}
{"name": "latest_news", "description": "Fetches the latest news and stories from different sources.", "parameters": {"limit": {"description": "The maximum number of news items to be returned. Default is 5.", "type": "int, optional", "default": "5"}}}
{"name": "by_category", "description": "Fetches the recent 50 news articles by category using the specified RapidAPI key.", "parameters": {"cat": {"description": "The category of the news to fetch, e.g., 'Sport', 'World', etc.", "type": "str", "default": "Sport"}}}
{"name": "std_deviation", "description": "Calculates the standard deviation of a list of numbers.", "parameters": {"numbers": {"description": "The list of numbers.", "type": "List[float]"}}}
{"name": "count_bits", "description": "Counts the number of set bits (1's) in the binary representation of a number.", "parameters": {"num": {"description": "The input number.", "type": "int"}}}
{"name": "least_common_multiple", "description": "Computes the least common multiple (LCM) of two positive integers.", "parameters": {"a": {"description": "The first positive integer.", "type": "int"}, "b": {"description": "The second positive integer.", "type": "int"}}}
{"name": "fibonacci_numbers", "description": "Generates the first n Fibonacci numbers.", "parameters": {"n": {"description": "The number of Fibonacci numbers to generate.", "type": "int"}}}
{"name": "get_analytics", "description": "Retrieve detailed statistics for your account using the specified parameters through the API.", "parameters": {"p": {"description": "The API Key to authenticate the API request.", "type": "str", "default": ""}, "start": {"description": "The start date for the statistics in the format YYYY-MM-DD. Defaults to 30 days ago if not specified.", "type": "str, optional", "default": ""}, "label": {"description": "Filter data by a specific label. Allowed values: 'all' (default) or a specific label.", "type": "str, optional", "default": "all"}, "end": {"description": "The end date for the statistics in the format YYYY-MM-DD. Defaults to the current date if not specified.", "type": "str, optional", "default": ""}, "subaccounts": {"description": "Specifies which account data to retrieve. Allowed values: 'only_main' (default), 'all', or a specific subaccount ID.", "type": "str, optional", "default": "only_main"}, "group_by": {"description": "Specifies the grouping of the data.", "type": "str, optional", "default": ""}}}
{"name": "get_webhooks", "description": "Retrieves all existing webhooks using the provided API key and optional RapidAPI key.", "parameters": {"p": {"description": "API key from Sms77.io.", "type": "str", "default": ""}}}
{"name": "transactions", "description": "python", "parameters": {"zipcode": {"description": "The zipcode for which the transaction data is to be retrieved.", "type": "str", "default": "10019"}, "page": {"description": "The page number for pagination. Defaults to '1'.", "type": "str, optional", "default": "1"}}}
{"name": "key_statistics", "description": "Fetches key statistics for a given stock ticker using the Toolbench RapidAPI service.", "parameters": {"ticker": {"description": "The stock ticker symbol to retrieve key statistics for.", "type": "str", "default": "AAPL"}}}
{"name": "find_majority_element", "description": "Finds the majority element in a list, which appears more than ⌊n / 2⌋ times.", "parameters": {"nums": {"description": "The input list of integers.", "type": "List[int]"}}}
{"name": "find_missing_number", "description": "Finds the missing number in a list of integers from 0 to n.", "parameters": {"nums": {"description": "The list of integers.", "type": "List[int]"}}}
{"name": "email_checker", "description": "Checks whether the provided email is valid or disposable using the RapidAPI service.", "parameters": {"email": {"description": "The email address to be verified.", "type": "str", "default": "rahul@gmail.com"}}}
{"name": "get_emails", "description": "Retrieve emails from a given URL using the Toolbench RapidAPI service.", "parameters": {"url": {"description": "The URL from which to extract email addresses.", "type": "str", "default": "https://google.com"}}}
{"name": "get_all_data_on_an_establishment_by_restaurant", "description": "Fetches all data on an establishment by restaurant name using the Wyre Data API.", "parameters": {"restaurant": {"description": "The name or identifier of the restaurant.", "type": "str", "default": "Shovels Inn"}}}
{"name": "code_postal_par_code", "description": "Fetches information associated with a given postal code in New Caledonia using the RapidAPI service.", "parameters": {"code": {"description": "The postal code for which to retrieve information.", "type": "str", "default": "98827"}}}
{"name": "reverse_geocode", "description": "This function takes longitude and latitude coordinates and returns the corresponding address by making a reverse geocoding API request.", "parameters": {"lng": {"description": "The longitude coordinate.", "type": "int", "default": "-123.0470199"}, "lat": {"description": "The latitude coordinate.", "type": "int", "default": "49.2813458"}}}
{"name": "v1_worldtime", "description": "Fetches the current date and time from the API Ninjas World Time API for a specified location.", "parameters": {"timezone": {"description": "Timezone of the desired location (e.g., 'Europe/London').", "type": "str, optional", "default": ""}, "lon": {"description": "Longitude of the desired location.", "type": "str, optional", "default": ""}, "lat": {"description": "Latitude of the desired location.", "type": "str, optional", "default": ""}, "state": {"description": "US state name or 2-letter abbreviation (for United States cities only).", "type": "str, optional", "default": ""}, "country": {"description": "Country name or 2-letter country code.", "type": "str, optional", "default": ""}, "city": {"description": "City name.", "type": "str, optional, default 'London'", "default": "London"}}}
{"name": "t2g_kurs_check", "description": "Checks the exchange rate of IDR to another currency on a given date.", "parameters": {"date": {"description": "The date for which to check the exchange rate, in the format 'YYYY-MM-DD'.", "type": "str", "default": ""}, "valuta": {"description": "The currency to which IDR exchange rate is checked.", "type": "str", "default": ""}}}
{"name": "all_keto_recipes_by_category", "description": "Fetches all keto recipes by category ID from the Keto Diet API.", "parameters": {"category": {"description": "The ID of the recipe category to fetch.", "type": "int", "default": "2"}}}
{"name": "get_genres", "description": "Fetch a list of radio station genres using the provided keyword and RapidAPI key.", "parameters": {"keyword": {"description": "The keyword to filter genres. Defaults to 'music'.", "type": "str", "default": "music"}}}
{"name": "list_album_tracks", "description": "Fetches a list of tracks for a given album from the Spotify API, with optional pagination support.", "parameters": {"albumid": {"description": "The unique identifier for the album.", "type": "str", "default": "5Otajf16kZ0zkVZWhu7LtO"}, "limit": {"description": "The maximum number of tracks to return per request. Defaults to None.", "type": "int, optional", "default": ""}, "offset": {"description": "The number of tracks to skip before starting to collect the result set. Defaults to None.", "type": "int, optional", "default": ""}}}
{"name": "playlist_extraction", "description": "Retrieves information about songs in a playlist from YouTube, Spotify, or SoundCloud using the RapidAPI service.", "parameters": {"search": {"description": "The search query for the playlist.", "type": "str", "default": "https://www.youtube.com/playlist?list=PLXFwTY00FRUUZzL_Vjhy-bE8WIao3eyOi"}}}
{"name": "artist_albums", "description": "Fetches the albums of an artist from the Spotify API using RapidAPI.", "parameters": {"is_id": {"description": "The unique identifier for the artist.", "type": "str", "default": "2w9zwq3AktTeYYMuhMjju8"}, "offset": {"description": "The index of the first album to return. Defaults to 0.", "type": "int, optional", "default": "0"}, "limit": {"description": "The maximum number of albums to return. Defaults to 100.", "type": "int, optional", "default": "100"}}}
{"name": "generate", "description": "Generate payment card numbers based on the specified quantity and scheme.", "parameters": {"quantity": {"description": "The number of payment card numbers to generate. Defaults to 5.", "type": "int, optional", "default": "5"}, "scheme": {"description": "The scheme of the payment card numbers (e.g., 'visa', 'mastercard'). If not specified, defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "get_a_conversation_turn", "description": "Fetch a specific conversation turn by its ID and return its details.", "parameters": {"is_id": {"description": "The ID of the conversation turn to fetch.", "type": "int", "default": ""}}}
{"name": "exchange_range", "description": "Retrieves the minimum and maximum payment amounts required to make an exchange for a specified pair of assets.", "parameters": {"from_to": {"description": "Underscore separated pair of asset tickers (e.g., 'btc_usd').", "type": "str", "default": "btc_eth"}, "api_key": {"description": "Your specific API key for the service. Defaults to 'your_api_key'.", "type": "str, optional", "default": "your_api_key"}}}
{"name": "symbols_faq", "description": "Fetch answers to common questions for a given ticker symbol.", "parameters": {"ticker_slug": {"description": "The ticker symbol for which to fetch FAQ answers (e.g., 'NVDA').", "type": "str", "default": "NVDA"}}}
{"name": "getproductsku", "description": "Fetches price information for a product identified by its SKU from the RapidAPI price tracker service.", "parameters": {"product_sku": {"description": "The SKU (Stock Keeping Unit) of the product to retrieve price information for.", "type": "str", "default": "PLID12183283"}}}
{"name": "main_endpoint", "description": "Fetches product information from the Amazon Pricing and Product Info API using the given ASIN and domain.", "parameters": {"asin": {"description": "The Amazon Standard Identification Number of the product.", "type": "str", "default": "B07GR5MSKD"}, "domain": {"description": "The domain from which to fetch the product information (e.g., 'com', 'co.uk').", "type": "str", "default": "de"}}}
{"name": "v1_whois", "description": "Fetches the WHOIS information for a given domain using the API Ninjas Whois API.", "parameters": {"domain": {"description": "The domain to retrieve WHOIS information for.", "type": "str", "default": "example.com"}}}
{"name": "getpagespeed", "description": "Fetch the page or website loading speed for a given URL using the RapidAPI service.", "parameters": {"url": {"description": "The URL of the page or website to check the loading speed.", "type": "str", "default": ""}}}
{"name": "companies_id_events", "description": "Fetch the latest events for a specific company identified by `is_id`.", "parameters": {"is_id": {"description": "The unique identifier of the company.", "type": "str", "default": "DEVFCLQFW054"}, "category": {"description": "The category of events to filter by (default is 'MANAGEMENT_AND_TEAM,FINANCES_AND_CAPITAL,NEWS_AND_EVENTS').", "type": "str, optional", "default": "MANAGEMENT_AND_TEAM,FINANCES_AND_CAPITAL,NEWS_AND_EVENTS"}, "since": {"description": "The start date for fetching events in YYYY-MM-DD format (default is '2017-01-01').", "type": "str, optional", "default": "2017-01-01"}, "size": {"description": "The number of events to retrieve (default is 100).", "type": "int, optional", "default": "100"}}}
{"name": "get_article_by_sid", "description": "Retrieve the content of a news article based on the given article ID (`sid`).", "parameters": {"sid": {"description": "The article ID for the news article to be retrieved.", "type": "int", "default": "565154"}}}
{"name": "binomial_probability", "description": "Calculates the probability of getting exactly k successes in n independent trials,", "parameters": {"n": {"description": "The total number of trials.", "type": "int"}, "k": {"description": "The number of successes.", "type": "int"}, "p": {"description": "The probability of success in each trial.", "type": "float"}}}
{"name": "currency_news", "description": "Fetch the latest news related to a specific currency, forex, or cryptocurrency pair.", "parameters": {"from_symbol": {"description": "A 3-letter currency code or symbol (ISO 4217) representing the base currency (e.g., 'USD').", "type": "str", "default": "USD"}, "to_symbol": {"description": "A 3-letter currency code or symbol (ISO 4217) representing the target currency (e.g., 'EUR').", "type": "str", "default": "EUR"}, "language": {"description": "The language of the news results, specified as a 2-letter language code (ISO 639-1). Default is 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "serie_a_standings", "description": "Fetches the Serie A football standings for a given season using the provided RapidAPI key.", "parameters": {"season": {"description": "The season year for which the standings are to be fetched (e.g., '2022'). Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "title_v2_get_business", "description": "Retrieves box office information for a given movie title from the online movie database using the provided API key.", "parameters": {"tconst": {"description": "The identifier for the movie title, starting with 'tt'. This value can be obtained from the `/title/auto-complete` or `/title/find` endpoints.", "type": "str", "default": "tt0796366"}}}
{"name": "tags_trending", "description": "Retrieve a list of trending tags for a given `page_id`, sorted by popularity.", "parameters": {"page_id": {"description": "The ID of the page for which to retrieve trending tags.", "type": "str", "default": "main"}}}
{"name": "getimage", "description": "Fetches an image using a given file ID from the mikuapi service.", "parameters": {"fileid": {"description": "The ID of the image file to be retrieved.", "type": "str", "default": ""}}}
{"name": "software_assets", "description": "Fetch details of SaaS/Software tools based on specified feature tags or software name.", "parameters": {"q": {"description": "Query string representing the list of feature tags or the name of the software for which details are to be fetched.", "type": "str", "default": "email-marketing, landing-pages"}}}
{"name": "read_user", "description": "Fetch user details from the IronWifi API using the provided user ID.", "parameters": {"user_id": {"description": "The ID of the user to be fetched.", "type": "str", "default": ""}}}
{"name": "get_case_by_id", "description": "Fetch the case payload from the Yardillo API using the given case ID.", "parameters": {"is_id": {"description": "The ID of the case to fetch.", "type": "str", "default": "611c0765e9308692195b8538"}}}
{"name": "cpf", "description": "Fetches information of a partner or administrator based on their CPF (Cadastro de Pessoas Físicas).", "parameters": {"cpf": {"description": "The CPF number of the partner or administrator.", "type": "str", "default": "09336443291"}, "nome": {"description": "The name of the partner or administrator. Providing the name can improve the chances of finding the data.", "type": "str, optional", "default": ""}}}
{"name": "theme_detail", "description": "Fetches the details of a theme using its ID from the specified API.", "parameters": {"dtid": {"description": "The ID of the theme to be fetched.", "type": "int", "default": ""}}}
{"name": "agents_get_profile", "description": "Fetches the profile information for a real estate agent using their NRDS ID and advertiser ID.", "parameters": {"nrds_id": {"description": "The NRDS ID of the agent, typically returned from the /agents/list endpoint.", "type": "str", "default": "150577018"}, "advertiser_id": {"description": "The advertiser ID of the agent, typically returned from the /agents/list endpoint.", "type": "int", "default": "1633379"}}}
{"name": "properties_detail", "description": "Retrieves detailed information about a property using the Idealista API.", "parameters": {"propertycode": {"description": "The unique code of the property to retrieve details for, as obtained from the properties list endpoint.", "type": "int", "default": "19899037"}, "country": {"description": "The country code to use for the API request. One of the following: 'it', 'es', 'pt'. Defaults to 'it'.", "type": "str, optional", "default": "it"}, "language": {"description": "The language code to use for the API response. One of the following: 'en', 'es', 'it', 'pt', 'de', 'fr', 'ro', 'ru', 'pl', 'sv', 'fi', 'nb', 'nl'. Defaults to 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "permutation_count", "description": "Calculates the number of permutations of k elements from a set of n elements.", "parameters": {"n": {"description": "The total number of elements in the set.", "type": "int"}, "k": {"description": "The number of elements to choose for the permutation.", "type": "int"}}}
{"name": "getdivision", "description": "Divides two numbers by making an API call to a division service.", "parameters": {"divisor": {"description": "The divisor in the division operation.", "type": "int", "default": ""}, "dividend": {"description": "The dividend in the division operation.", "type": "int", "default": ""}}}
{"name": "historical_exchange_rates", "description": "Fetch historical exchange rate data for a specific date using the RapidAPI service.", "parameters": {"date": {"description": "The date for which to retrieve exchange rate data, formatted as 'YYYY-MM-DD'.", "type": "str", "default": ""}}}
{"name": "hull_moving_average", "description": "Calculates the Hull Moving Average (HMA) indicator for a given cryptocurrency market symbol using the Qvantana API.", "parameters": {"exchange": {"description": "Name of the cryptocurrency exchange (e.g., 'binance').", "type": "str", "default": "binance"}, "market": {"description": "Type of the market (e.g., 'spot', 'usdt-perpetual').", "type": "str", "default": "spot"}, "symbol": {"description": "Trading symbol of the cryptocurrency (e.g., 'BTCUSD').", "type": "str", "default": "btcusdt"}, "interval": {"description": "Time interval for the HMA calculation (e.g., '1d', '1h').", "type": "str", "default": "1m"}, "is_from": {"description": "Start time for fetching data in UNIX timestamp format, default is '1683895800'.", "type": "str, optional", "default": "1683895800"}, "backtracks": {"description": "Number of periods to look back, default is 1.", "type": "int, optional", "default": "1"}, "length": {"description": "Length of the HMA, default is 9.", "type": "int, optional", "default": "9"}}}
{"name": "calculate_investment_return", "description": "Calculates the return on investment based on the initial deposit amount, annual interest rate, and investment period.", "parameters": {"initial_amount": {"description": "The initial deposit amount.", "type": "int"}, "interest_rate": {"description": "The annual interest rate provided by the bank.", "type": "float"}, "num_years": {"description": "The number of years the money is invested.", "type": "int"}}}
{"name": "solve_quadratic", "description": "Computes the roots of a quadratic equation given its coefficients.", "parameters": {"a": {"description": "The coefficient of the quadratic term (x^2).", "type": "float"}, "b": {"description": "The coefficient of the linear term (x).", "type": "float"}, "c": {"description": "The constant term.", "type": "float"}}}
{"name": "is_prime", "description": "Checks if a number is prime.", "parameters": {"num": {"description": "The number to be checked.", "type": "int"}}}
{"name": "format_date", "description": "Converts a date string from one format to another.", "parameters": {"date": {"description": "The date string to convert.", "type": "str"}, "input_format": {"description": "The format of the input date string.", "type": "str"}, "output_format": {"description": "The desired format of the output date string.", "type": "str"}}}
{"name": "memre_api_v1_study", "description": "Retrieves learning items that a specific user should study using the Memre API.", "parameters": {"user_id": {"description": "The ID of the user for whom to retrieve learning items.", "type": "str", "default": ""}}}
{"name": "search_by_centre_zip_and_radius", "description": "Performs a radius search to find locations within a specified radius of a given ZIP code using the RapidAPI service.", "parameters": {"zip": {"description": "The ZIP code around which to search for locations.", "type": "str", "default": "90210"}, "radius": {"description": "The radius (in miles) within which to search for locations around the given ZIP code.", "type": "int", "default": "10"}}}
{"name": "movie_details_json", "description": "Fetches detailed information about a specific movie from the YTS API.", "parameters": {"movie_id": {"description": "The ID of the movie.", "type": "int", "default": ""}, "with_cast": {"description": "If True, includes information about the cast. Defaults to None.", "type": "bool, optional", "default": ""}, "with_images": {"description": "If True, includes image URLs. Defaults to None.", "type": "bool, optional", "default": ""}}}
{"name": "get_random_named_color", "description": "Fetches a specified number of random named colors from the Colorful API.", "parameters": {"quantity": {"description": "The number of colors to return. Defaults to 2. Maximum is 50. Values below 1 will return an empty list. If not specified, returns 2 colors.", "type": "int, optional", "default": "2"}}}
{"name": "get_followers_by_username", "description": "Retrieves the information of 12 followers for a given Instagram username using the RapidAPI service.", "parameters": {"username": {"description": "The Instagram username for which to fetch followers information.", "type": "str", "default": "therock"}}}
{"name": "iplookup", "description": "Perform an IP lookup using the RapidAPI IP Lookup service.", "parameters": {"ip": {"description": "The IP address to lookup.", "type": "str", "default": "161.97.149.190"}}}
{"name": "statessearchinradius", "description": "Fetch the boundaries of U.S. states within a given radius from a specified central point (latitude and longitude) in GeoJSON format.", "parameters": {"latitude": {"description": "Latitude of the central point around which to search for state boundaries.", "type": "int", "default": ""}, "radius": {"description": "Radius in miles around the central point within which to search. Minimum value is 1 mile, and maximum value is 50 miles.", "type": "int", "default": ""}, "longitude": {"description": "Longitude of the central point around which to search for state boundaries.", "type": "int", "default": ""}}}
{"name": "address_autocomplete", "description": "Fetches address autocomplete predictions based on a given keyword and optional parameters such as geodetic system, coordinate unit, and API key.", "parameters": {"word": {"description": "Address string for which the autocomplete predictions are sought. It must be between 2 to 50 characters.", "type": "str", "default": "とうk"}, "datum": {"description": "Geodetic system of latitude and longitude. Default is 'wgs84'. Other option is 'tokyo' for Old Japan Geodetic System.", "type": "str, optional", "default": "wgs84"}, "coord_unit": {"description": "The unit of latitude and longitude included in the output data. Default is 'degree'. Other option is 'millisec' for milliseconds.", "type": "str, optional", "default": "degree"}}}
{"name": "timezone", "description": "Retrieve the timezone information for a specified city using the RapidAPI service.", "parameters": {"city": {"description": "The name of the city for which to retrieve timezone information.", "type": "str", "default": ""}}}
{"name": "get_geocoding_with_videos", "description": "Fetches detailed place information and related YouTube videos based on the provided geographic coordinates.", "parameters": {"lat": {"description": "Latitude in decimal degrees (WGS84).", "type": "int", "default": "37.422213"}, "lng": {"description": "Longitude in decimal degrees (WGS84).", "type": "int", "default": "-122.084058"}, "version": {"description": "API version to be used for the request.", "type": "str", "default": "v1"}, "lang": {"description": "Preferred language of the content. Defaults to 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "flights_list_by_airline", "description": "Retrieve a list of flights operated by a specified airline using the RapidAPI Flight Radar service.", "parameters": {"airline": {"description": "The ICAO code of the airline whose flights are to be listed. This value can be obtained from the 'icao' field returned by the /airlines/list or /flights/detail endpoints, or the 'operator' field from the /flights/search endpoint.", "type": "str", "default": "AXM"}}}
{"name": "trim_view", "description": "Fetches and returns all data associated with a specific vehicle trim using the RapidAPI service.", "parameters": {"is_id": {"description": "The ID of the vehicle trim to retrieve.", "type": "int", "default": ""}}}
{"name": "v1_aircraft", "description": "Queries the API Ninjas Aircraft API to return a list of aircraft that match the given parameters.", "parameters": {"min_height": {"description": "Minimum height of the aircraft in feet.", "type": "int, optional", "default": ""}, "min_wingspan": {"description": "Minimum wingspan of the aircraft in feet.", "type": "int, optional", "default": ""}, "limit": {"description": "How many results to return. Must be between 1 and 30.", "type": "int, optional", "default": ""}, "max_height": {"description": "Maximum height of the aircraft in feet.", "type": "int, optional", "default": ""}, "max_length": {"description": "Maximum length of the aircraft in feet.", "type": "int, optional", "default": ""}, "min_length": {"description": "Minimum length of the aircraft in feet.", "type": "int, optional", "default": ""}, "max_range": {"description": "Maximum range of the aircraft in nautical miles.", "type": "int, optional", "default": ""}, "min_range": {"description": "Minimum range of the aircraft in nautical miles.", "type": "int, optional", "default": ""}, "max_speed": {"description": "Maximum air speed in knots.", "type": "int, optional", "default": ""}, "max_wingspan": {"description": "Maximum wingspan of the aircraft in feet.", "type": "int, optional", "default": ""}, "engine_type": {"description": "Type of engine. Must be one of: piston, propjet, jet.", "type": "str, optional", "default": ""}, "min_speed": {"description": "Minimum air speed in knots.", "type": "int, optional", "default": ""}, "model": {"description": "Aircraft model name. Defaults to 'G550'.", "type": "str, optional", "default": "G550"}, "manufacturer": {"description": "Company that designed and built the aircraft. Defaults to 'Gulfstream'.", "type": "str, optional", "default": "Gulfstream"}}}
{"name": "potential_energy", "description": "Calculates the electrostatic potential energy given the charge and voltage.", "parameters": {"charge": {"description": "The electric charge.", "type": "float"}, "voltage": {"description": "The electric potential difference (voltage).", "type": "float"}}}
{"name": "en_map_v1_z_x_y_png", "description": "Download an English map tile as a PNG image from the RapidAPI offline-maptiles service.", "parameters": {"z": {"description": "Zoom factor, between 0 and 19.", "type": "int", "default": "3"}, "y": {"description": "Y tile number.", "type": "int", "default": "3"}, "x": {"description": "X tile number.", "type": "int", "default": "6"}}}
{"name": "geocoding", "description": "Performs geocoding to convert an address into a standardized, normalized address and rooftop latitude/longitude coordinates using the RapidAPI service.", "parameters": {"address": {"description": "The physical address to be geocoded.", "type": "str", "default": "1600 pennsylvania ave washington dc"}}}
{"name": "forward_geocode", "description": "Fetches latitude and longitude coordinates from a given address using the RapidAPI forward geocoding service.", "parameters": {"address": {"description": "The address to be geocoded.", "type": "str", "default": "2795 Hastings St, Vancouver, BC V5K 1Z8"}}}
{"name": "calculate_order_total", "description": "Calculates the total cost of an order based on the items, quantities, and prices.", "parameters": {"items": {"description": "A list of item names.", "type": "List[str]"}, "quantities": {"description": "A list of corresponding quantities for each item.", "type": "List[int]"}, "prices": {"description": "A list of corresponding prices for each item.", "type": "List[float]"}}}
{"name": "models_by_make_id_year_category", "description": "Retrieves motorcycle models based on year, category, and make ID.", "parameters": {"year": {"description": "The year of the motorcycle models to retrieve.", "type": "int", "default": "2015"}, "category": {"description": "The category of the motorcycle models to retrieve.", "type": "str", "default": "Sport"}, "make": {"description": "The make ID of the motorcycle models to retrieve.", "type": "int", "default": "100"}}}
{"name": "get_stores", "description": "Fetches a list of stores from the \"Get Promo Codes\" API.", "parameters": {"page": {"description": "The page number for pagination. Defaults to 1.", "type": "int, optional", "default": "1"}}}
{"name": "aliexpress_item_description", "description": "Fetches the detailed description of an AliExpress item using its item ID.", "parameters": {"itemid": {"description": "The ID of the AliExpress item.", "type": "int", "default": "3256804591426248"}, "locale": {"description": "The locale for displaying titles and content in the selected language. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "products_search_by_barcode", "description": "Search for a product in the Kohl's database using its UPC barcode.", "parameters": {"upc": {"description": "The Universal Product Code of the product to be searched.", "type": "str", "default": "194574942221"}}}
{"name": "details", "description": "Fetch product details from the price comparison API using various geographical and identification parameters.", "parameters": {"is_id": {"description": "The identifier for the product. This can be a UPC, EAN, ISBN, GTIN, or Amazon ASIN.", "type": "str", "default": "611247373064"}, "country": {"description": "The country code for the query. Default is 'US'.", "type": "str, optional", "default": "US"}, "longitude": {"description": "The longitude for geographical querying. Default is '-122.49493'.", "type": "str, optional", "default": "-122.49493"}, "latitude": {"description": "The latitude for geographical querying. Default is '37.777805'.", "type": "str, optional", "default": "37.777805"}}}
{"name": "validate_email", "description": "Validate an email address using the \"Validate Email\" API.", "parameters": {"email": {"description": "The email address to be validated.", "type": "str", "default": "hello@apitier.com"}}}
{"name": "role_account", "description": "Check if a given domain has a role-based email account using the Fast Email Verifier API.", "parameters": {"domain": {"description": "The domain name to check for role-based email accounts.", "type": "str", "default": "domain.org"}}}
{"name": "companies_id_financials", "description": "Retrieves the financial key figures (balance sheet total, revenue, profit, number of employees) for a company with the given identifier.", "parameters": {"is_id": {"description": "The identifier of the company for which financial data is to be retrieved.", "type": "str", "default": "DEVFCLQFW054"}}}
{"name": "free_ofac_api", "description": "This function performs an OFAC (Office of Foreign Assets Control) scan request using the Free OFAC Scan API and returns a response indicating whether a target is found.", "parameters": {"street_address": {"description": "Street address of the individual or business entity. Defaults to '79 ul. Sadovnicheskaya'.", "type": "str", "default": "79 ul. Sadovnicheskaya"}, "business_name": {"description": "Name of the business entity. Defaults to 'SME Bank'.", "type": "str", "default": "SME Bank"}, "first_name": {"description": "First name(s) of the individual. Defaults to 'Gener'.", "type": "str", "default": "Gener"}, "last_name": {"description": "Last name(s) of the individual. Defaults to 'Garcia Molina'.", "type": "str", "default": "Garcia Molina"}}}
{"name": "gstin", "description": "Retrieve details about a GSTIN (GST number), including the latest return filing list, GST compliance classification, and HSN/SAC details.", "parameters": {"gstin": {"description": "The GSTIN (GST number) to retrieve details for.", "type": "str", "default": "27AAJCM9929L1ZM"}, "content_type": {"description": "The content type for the request. Defaults to 'application/json'.", "type": "str, optional", "default": "application/json"}}}
{"name": "get_artist_overview", "description": "Fetches full details of an artist from the Spotify Scraper API.", "parameters": {"artistid": {"description": "The unique identifier for the artist.", "type": "str", "default": "6eUKZXaKkcviH0Ku9w2n3V"}}}
{"name": "retrieve_file", "description": "Retrieves a file from the server using the provided file path and API key.", "parameters": {"path": {"description": "The path of the file to be retrieved. This path is typically obtained by replacing the /p/ path in the /merge and /edit endpoint responses with /f/ or /d/.", "type": "str", "default": "ABCDEF"}}}
{"name": "events", "description": "Fetches economic events with optional filtering by date range and country codes.", "parameters": {"to": {"description": "End date for filtering events, in the format 'YYYY-MM-DD'. Defaults to None.", "type": "str, optional", "default": ""}, "is_from": {"description": "Start date for filtering events, in the format 'YYYY-MM-DD'. Defaults to None.", "type": "str, optional", "default": ""}, "countries": {"description": "Comma-separated list of country codes to filter the events. Defaults to 'US,GB'.", "type": "str, optional", "default": "US,GB"}}}
{"name": "mini_chart", "description": "Generates a TradingView mini chart image based on the specified parameters and returns the image data or error message.", "parameters": {"width": {"description": "Width of the chart image. Must be within the valid range. Minimum: 320. Default is 800.", "type": "int, optional", "default": "800"}, "format": {"description": "Format of the chart image. Supported formats are 'png' and 'jpeg'. Default is 'png'.", "type": "str, optional", "default": "png"}, "symbol": {"description": "TradingView symbol for the chart. Examples include 'BINANCE:BTCUSDT' and 'BINANCE:BTCUSDTPERP'. Default is 'BINANCE:BTCUSDT'.", "type": "str, optional", "default": "BINANCE:BTCUSDT"}, "interval": {"description": "Time interval for the chart. Supported intervals are '1d', '1M', '3M', '1Y', '5Y', and 'all'. Default is '1M'.", "type": "str, optional", "default": "1M"}, "theme": {"description": "Color theme of the chart. Supported themes are 'light' and 'dark'. Default is 'dark'.", "type": "str, optional", "default": "dark"}, "height": {"description": "Height of the chart image. Must be within the valid range. Minimum: 220. Default is 400.", "type": "int, optional", "default": "400"}}}
{"name": "nhl_box_score", "description": "Retrieve NHL game box score data for a specific game using the given game ID.", "parameters": {"is_id": {"description": "The ID of the NHL game for which the box score data is to be retrieved.", "type": "str", "default": "401458986"}}}
{"name": "goal_analysis_goal_minutes_in_between", "description": "Retrieves goal statistics of the teams in specified minute intervals for a given soccer match.", "parameters": {"matchid": {"description": "The ID of the soccer match for which goal statistics are requested.", "type": "int", "default": "1452254"}}}
{"name": "competitions_standings", "description": "Fetch the current standings for a specified competition using the Zeus API.", "parameters": {"is_id": {"description": "The unique identifier for the competition.", "type": "str", "default": "PRL"}, "year": {"description": "The year for which standings are to be retrieved. Defaults to '2020'.", "type": "str, optional", "default": "2020"}}}
{"name": "get_team_roster", "description": "Fetches the current or historical roster of an NBA team.", "parameters": {"teamid": {"description": "The ID of the team, ranging from 1 to 30.", "type": "str, optional", "default": ""}, "statstoget": {"description": "Specifies whether to fetch 'totals' or 'averages'. Defaults to 'averages'.", "type": "str, optional", "default": "averages"}, "archivedate": {"description": "A specific date in the format YYYYMMDD to fetch historical data. Historical data is available from 20230505 onwards.", "type": "str, optional", "default": ""}, "teamabv": {"description": "The abbreviation of the team, e.g., CHI, BOS, ATL. Defaults to 'SAC'.", "type": "str, optional", "default": "SAC"}}}
{"name": "innings_cricket", "description": "Fetch innings data for a cricket event given the event ID.", "parameters": {"event_id": {"description": "The unique identifier of the cricket event.", "type": "int", "default": "10188874"}}}
{"name": "find_files", "description": "Finds all files with a specific extension in a directory and its subdirectories.", "parameters": {"directory": {"description": "The directory to search in.", "type": "str"}, "extension": {"description": "The file extension to search for.", "type": "str"}}}
{"name": "is_anagram_phrase", "description": "Checks if two phrases are anagrams of each other, ignoring whitespace and punctuation.", "parameters": {"phrase1": {"description": "The first phrase.", "type": "str"}, "phrase2": {"description": "The second phrase.", "type": "str"}}}
{"name": "compound_interest", "description": "Calculates the compound interest of an investment.", "parameters": {"principal": {"description": "The initial investment amount.", "type": "float", "default": 1}, "rate": {"description": "The annual interest rate expressed as a decimal.", "type": "float", "default": 1}, "time": {"description": "The time in years for which the investment is held.", "type": "float"}, "n": {"description": "The number of times interest is compounded per year. Defaults to 1.", "type": "int, optional"}}}
{"name": "numerical_derivative", "description": "Estimates the derivative of a function at a given point using the central difference formula.", "parameters": {"function": {"description": "The function to calculate the derivative of.", "type": "Callable[[float], float]"}, "x": {"description": "The point at which to estimate the derivative.", "type": "float"}}}
{"name": "matrix_multiply", "description": "Multiplies two matrices.", "parameters": {"matrix_a": {"description": "The first matrix.", "type": "List[List[float]]"}, "matrix_b": {"description": "The second matrix.", "type": "List[List[float]]"}}}
{"name": "order_by_ascending", "description": "Fetches a list of all cats sorted in ascending order by a specified attribute.", "parameters": {"ordering": {"description": "The attribute by which to order the list of cats, e.g., 'name'.", "type": "str", "default": "breedName"}}}
{"name": "product_categorization", "description": "Categorizes a product based on its title and optional price using the Toolbench RapidAPI service.", "parameters": {"title": {"description": "The title of the product to be categorized.", "type": "str", "default": "Abstract Egghead Plus Size Female Mannequin - Matte White Item "}, "price": {"description": "The price of the product. Default is 200.", "type": "int, optional", "default": "200"}}}
{"name": "stores_get_details", "description": "Fetch detailed information for a specific store location.", "parameters": {"location_id": {"description": "The identifier for the store location, often obtained from the stores list endpoint.", "type": "int", "default": "911"}}}
{"name": "eredivisie_standings", "description": "Fetches Eredivisie standings for a given season using the RapidAPI service.", "parameters": {"season": {"description": "The season for which to fetch the standings, e.g., '2022'. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "stagedetails", "description": "Fetch the details of a specific Motorsport stage using the provided stage ID.", "parameters": {"stageid": {"description": "The ID of the Motorsport stage for which to retrieve the details.", "type": "int", "default": 203648}}}
{"name": "daily_match_list_scheduled", "description": "Fetches the list of scheduled daily matches for a given date.", "parameters": {"date": {"description": "The date of the matches in `dd/MM/yyyy` format. The retrieval period is limited to ±7 days from the current date.", "type": "str", "default": "29/01/2021"}}}
{"name": "get_php", "description": "Fetch terminology extraction from a given text in a specified language using RapidAPI.", "parameters": {"text": {"description": "The text from which to extract terminology.", "type": "str", "default": ""}, "lang": {"description": "The language code for the text. Currently supported languages: en, fr, it.", "type": "str", "default": ""}}}
{"name": "main", "description": "Makes a GET request to the NeuroNet NLP API with the given text and returns the observation.", "parameters": {"text": {"description": "The input text to be processed by the NeuroNet NLP API.", "type": "str", "default": ""}}}
{"name": "questionnaire_sentino", "description": "Fetches a questionnaire from the Sentino API based on the NEO-90 inventory.", "parameters": {"content_type": {"description": "The MIME type of the content being requested. Default is 'application/json'.", "type": "str", "default": "application/json"}}}
{"name": "v2_auto_complete", "description": "Fetches auto-complete suggestions for a given text or phrase from the Trading View API.", "parameters": {"text": {"description": "The term or phrase for which to get suggestions.", "type": "str", "default": "tesla"}, "start": {"description": "The offset of records to ignore for pagination purposes. Default is '0'.", "type": "str, optional", "default": "0"}, "search_type": {"description": "The type of search to perform. Options include 'stock', 'futures', 'forex', 'index', 'bond', 'economic', 'bitcoin', and 'crypto'. Multiple options can be separated by commas.", "type": "str, optional", "default": ""}, "lang": {"description": "The language code for the results. Default is 'en'.", "type": "str, optional", "default": "en"}, "exchange": {"description": "The exchange value from the `/exchanges/list` endpoint value field.", "type": "str, optional", "default": ""}}}
{"name": "navigations_get_tabs", "description": "Fetches navigation tabs for a given language, country, and currency using the unofficial SHEIN API.", "parameters": {"language": {"description": "The 2-letter language code. Defaults to 'en'.", "type": "str", "default": "en"}, "country": {"description": "The 2-letter country code. Defaults to 'US'.", "type": "str", "default": "US"}, "currency": {"description": "The 3-letter currency code. Defaults to 'USD'.", "type": "str", "default": "USD"}}}
{"name": "originals_episodes_get_likes", "description": "Retrieves the number of likes for a specific episode of an original series from Webtoon.", "parameters": {"titleno": {"description": "The title number of the original series, obtained from the Webtoon titles list or titles-by-rank endpoints.", "type": "int", "default": "2113"}, "episodeno": {"description": "The episode number of the specific episode, obtained from the Webtoon episodes list endpoint.", "type": "int", "default": "1"}, "language": {"description": "The language code for the response. One of the following: 'en', 'zh-hant', 'de', 'fr', 'es', 'th', 'id'. Defaults to 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "search_books_by_name", "description": "Search for books by name using the provided RapidAPI key.", "parameters": {"book_name": {"description": "The name of the book to search for, with spaces replaced by '+'.", "type": "str", "default": "the+walking+dead"}}}
{"name": "get_random_question", "description": "Fetches a random question from the API, with an optional parameter to specify the type of the challenge.", "parameters": {"type": {"description": "The type of question to fetch. Options include 'funny' and 'dirty'. Defaults to 'dirty'.", "type": "str", "default": "dirty"}}}
{"name": "us_az", "description": "Fetches current or historical gas price data for Arizona.", "parameters": {"date": {"description": "The date for historical gas price data in the format 'YYYY-MM-DD'. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "get_directions", "description": "Fetch driving directions from an origin to a destination.", "parameters": {"origin": {"description": "The starting point specified as a free-text location query or latitude, longitude pair.", "type": "str", "default": "Church St & 29th St, San-Francisco, CA, USA"}, "destination": {"description": "The destination specified as a free-text location query or latitude, longitude pair.", "type": "str", "default": "Sunnyvale, CA, USA"}, "avoid_routes": {"description": "Route types to avoid, specified as a comma-delimited list (e.g., 'tolls,ferries').", "type": "str, optional", "default": "tolls,ferries"}, "country": {"description": "The country or region to use for the query, specified as a 2-letter country code.", "type": "str, optional", "default": "us"}, "arrival_time": {"description": "Arrival time specified as a Unix-Timestamp in destination local time", "type": "int, optional", "default": ""}, "language": {"description": "The language to use for the query, specified as a 2-letter language code.", "type": "str, optional", "default": "en"}, "departure_time": {"description": "Departure time specified as a Unix-Timestamp in origin local time", "type": "int, optional", "default": ""}, "distance_units": {"description": "The distance units in the response ('auto', 'km', 'mi'). Default is `None`, which", "type": "str, optional", "default": ""}}}
{"name": "vehicle_attributes", "description": "Fetches all available options for a given vehicle attribute using the Toolbench RapidAPI.", "parameters": {"attribute": {"description": "The attribute options to be returned. Defaults to 'bodies.type'.", "type": "str", "default": "bodies.type"}}}
{"name": "us_fl", "description": "Fetches current or historical gas price data for Florida.", "parameters": {"date": {"description": "Date for which to fetch historical gas price data in the format 'YYYY-MM-DD'. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "vivanews_detail", "description": "Fetches and returns the detailed news information from Vivanews by the given ID using the provided RapidAPI key.", "parameters": {"is_id": {"description": "The ID of the Vivanews article to fetch details for.", "type": "int", "default": "1612364"}}}
{"name": "actors_get_all_filmography", "description": "Retrieves the complete filmography of a specified actor or actress using their unique identifier (nconst).", "parameters": {"nconst": {"description": "Unique identifier for the actor or actress. This value starts with \"nm\" and can be obtained from endpoints such as .../actors/list-born-today or .../actors/list-most-popular-celebs.", "type": "str", "default": "nm0001667"}}}
{"name": "world", "description": "Fetches world news from Google News using the specified region and RapidAPI key.", "parameters": {"lr": {"description": "The language and regional code to filter news, e.g., 'en-US'. Defaults to 'en-US'.", "type": "str, optional", "default": "en-US"}}}
{"name": "bmi", "description": "Calculates the Body Mass Index (BMI) using given weight and height, optionally specifying the measurement system.", "parameters": {"weight": {"description": "Weight of the individual.", "type": "int", "default": "86"}, "height": {"description": "Height of the individual.", "type": "int", "default": "184"}, "system": {"description": "Measurement system, either 'metric' (kg/m^2) or 'imperial' (lbs/in^2). Defaults to 'metric'.", "type": "str, optional", "default": "metric"}}}
{"name": "view_all_food_items", "description": "Retrieves a comprehensive list of all available food items from the API with an optional limit on the number of items.", "parameters": {"limit": {"description": "The maximum number of food items to retrieve. Defaults to 10.", "type": "int, optional", "default": "10"}}}
{"name": "target_heart_rate", "description": "Calculates the target heart rate range for cardiovascular exercise using the Karvonen method based on the user's age and fitness level.", "parameters": {"age": {"description": "The age of the user in years.", "type": "int", "default": "27"}, "fitness_level": {"description": "The fitness level of the user. Acceptable values are \"beginner\", \"intermediate\", and \"advanced\".", "type": "str", "default": "beginner"}}}
{"name": "cities_get_information_deprecated", "description": "Fetches information about a specific city based on its ID.", "parameters": {"is_id": {"description": "The ID of the city to get information for.", "type": "str", "default": "hW7vArorRd8cT9h6v"}, "aqiindex": {"description": "The AQI index to use (default is 'us'). Options are 'us' or 'cn'.", "type": "str, optional", "default": "us"}, "timezone": {"description": "The timezone to use (default is 'Asia/Singapore').", "type": "str, optional", "default": "Asia/Singapore"}, "lang": {"description": "The language for the response (default is 'en_US').", "type": "str, optional", "default": "en_US"}}}
{"name": "vehicle_market_value_by_vin", "description": "Fetches the market value of a vehicle based on its VIN (Vehicle Identification Number) using the Toolbench RapidAPI service.", "parameters": {"vin": {"description": "The vehicle identification number to query.", "type": "str", "default": "5UXKR0C58JL074657"}, "mileage": {"description": "The current mileage of the vehicle. If not specified, the average mileage is used. Default is None.", "type": "str, optional", "default": ""}, "period": {"description": "Number of days to look back for sales data, with a maximum value of 365 days. Default is None.", "type": "str, optional", "default": ""}}}
{"name": "vin_decoder_basic", "description": "Decodes basic information from a Vehicle Identification Number (VIN) using the RapidAPI VIN decoder service.", "parameters": {"vin": {"description": "The Vehicle Identification Number (VIN) to be decoded. Must be 17 characters long.", "type": "str", "default": "5YJ3E1EA6PF384836"}}}
{"name": "get_all_kfc_locations_by_state", "description": "Fetches all KFC locations in a specified state using the given RapidAPI key and returns the results.", "parameters": {"page": {"description": "The page number for paginated results.", "type": "int", "default": "0"}, "state": {"description": "The two-letter state code for which to fetch KFC locations.", "type": "str", "default": "AZ"}}}
{"name": "ski_weather_api", "description": "Fetches ski weather forecasts from the World Weather Online API for a specified location.", "parameters": {"q": {"description": "The location query (e.g., city name, latitude/longitude).", "type": "str", "default": "45.45,6.7"}, "tp": {"description": "Time period for the weather forecast (e.g., '3 hourly'). Default is None.", "type": "str, optional", "default": ""}, "lang": {"description": "The language code for the weather forecast (default is 'en' for English).", "type": "str, optional", "default": "en"}, "format": {"description": "The response format, such as 'json' or 'xml'. Default is None.", "type": "str, optional", "default": ""}, "num_of_days": {"description": "The number of days for the weather forecast, with a maximum of 7 days. Default is 1.", "type": "int, optional", "default": "1"}}}
{"name": "get_station_information", "description": "Get information about a NOAA tide station using its ID.", "parameters": {"is_id": {"description": "The station ID to retrieve information for.", "type": "str", "default": "8570283"}}}
{"name": "canvas_search", "description": "Performs a search for webtoon comics based on a query term or phrase.", "parameters": {"query": {"description": "The search term or phrase for querying comics.", "type": "str", "default": "boy friend"}, "language": {"description": "The language code for results. Defaults to 'en'. Accepted values are 'en', 'zh-hant', 'de', 'fr', 'es', 'th', 'id'.", "type": "str, optional", "default": "en"}, "pagesize": {"description": "The number of results to return per page. Maximum is 20. Defaults to 20.", "type": "int, optional", "default": "20"}, "startindex": {"description": "The starting index for the search results. Defaults to 0.", "type": "int, optional", "default": "0"}}}
{"name": "artists_search", "description": "Search the SongMeanings database for artist names and aliases using various query parameters.", "parameters": {"q": {"description": "The query string used to search for artist names and aliases.", "type": "str", "default": ""}, "page": {"description": "The starting page of results. Defaults to '1'.", "type": "str, optional", "default": "1"}, "page_size": {"description": "The number of results returned per page. Defaults to '25'.", "type": "str, optional", "default": "25"}, "matchmode": {"description": "The mode by which matching occurs. Defaults to 'extended'.", "type": "str, optional", "default": "extended"}}}
{"name": "countries_detail", "description": "Fetch detailed information of a country from the unofficial Shein API.", "parameters": {"region": {"description": "The region code to fetch details for a specific country. Default is 'US'.", "type": "str", "default": "US"}}}
{"name": "gameslist", "description": "Retrieves a list of games on special discount offers from the specified region.", "parameters": {"region": {"description": "The region code to fetch the game offers from.", "type": "str", "default": "US"}, "start": {"description": "The starting index for the list of games.", "type": "int", "default": "0"}, "count": {"description": "The number of games to retrieve starting from the `start` index.", "type": "int", "default": "10"}}}
{"name": "get_username_point_blank", "description": "Fetch the username associated with a given Point Blank ID using the RapidAPI service.", "parameters": {"is_id": {"description": "The Point Blank ID to look up.", "type": "str", "default": "blackforster"}}}
{"name": "calculate_card_game_probability", "description": "Calculate the probability of drawing a certain number of desired cards from a deck.", "parameters": {"total_cards": {"description": "Total number of cards in the deck.", "type": "int"}, "desired_cards": {"description": "Number of cards in the deck that satisfy the conditions.", "type": "int"}, "cards_drawn": {"description": "Number of cards drawn from the deck.", "type": "int"}}}
{"name": "linear_regression_prediction", "description": "Predicts the y-value for a given x-value using linear regression.", "parameters": {"x_values": {"description": "The x-coordinates of the data points.", "type": "List[float]"}, "y_values": {"description": "The y-coordinates of the data points.", "type": "List[float]"}, "target_x": {"description": "The x-value for which to predict the y-value.", "type": "float"}}}
{"name": "judget0", "description": "Compiles and executes code using the Safe Exam API.", "parameters": {"code": {"description": "The code to be compiled and executed. Defaults to 'print(\"Hello World\")'.", "type": "str", "default": "print(\"Hello World\")"}}}
{"name": "gettotalactivedays", "description": "Fetch the total active days of the user in the current year from the LeetCode API.", "parameters": {"username": {"description": "The username of the user whose active days are to be fetched.", "type": "str", "default": "mujtabah258"}}}
{"name": "today", "description": "Fetches the treasure of the day from the Uncovered Treasure API.", "parameters": {"callback": {"description": "Optional JSONP callback for the request. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "getuservideos", "description": "Fetch a list of the most recent user-generated videos that have been publicly shared to YouTube.", "parameters": {"num": {"description": "Number of shared user-generated videos to include in the response. Default is 10.", "type": "int, optional", "default": "10"}, "since": {"description": "Optionally truncate result set if this ISO 8601 combined UTC date and time is reached.", "type": "str, optional", "default": ""}, "force": {"description": "Optionally bypass cache to retrieve the most up-to-date data.", "type": "bool, optional", "default": ""}, "callback": {"description": "Wrap the response object in a function call of your choosing.", "type": "str, optional", "default": ""}}}
{"name": "can_attend_all_meetings", "description": "Determines if a person can attend all meetings given a list of meeting time intervals.", "parameters": {"intervals": {"description": "A list of meeting time intervals, where each interval is represented as [start_time, end_time].", "type": "List[List[int]]"}}}
{"name": "v1_airlines", "description": "Fetches airline information using the API Ninjas Airlines API given certain parameters.", "parameters": {"iata": {"description": "International Air Transport Association (IATA) 2-character airline code. Defaults to None.", "type": "str, optional", "default": ""}, "name": {"description": "Airline name. Supports partial matching (e.g., 'United' will match 'United Airlines'). Defaults to 'Singapore Airlines'.", "type": "str, optional", "default": "Singapore Airlines"}, "icao": {"description": "International Civil Aviation Organization (ICAO) 3-character airline code. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "v1_motorcycles", "description": "Fetches motorcycle data from the Motorcycles API, returning up to 30 results that match the given parameters.", "parameters": {"model": {"description": "Name of the motorcycle model. Supports partial matching (default is 'Ninja').", "type": "str", "default": "Ninja"}, "offset": {"description": "Number of results to offset for pagination. Default is None.", "type": "int, optional", "default": ""}, "make": {"description": "Name of the manufacturer/brand. Supports partial matching (default is 'Kawasaki').", "type": "str", "default": "Kawasaki"}, "year": {"description": "Release year of the motorcycle model in YYYY format. Default is None.", "type": "str, optional", "default": ""}}}
{"name": "get_all_organizations_environment_admin", "description": "Fetches organization information for all organizations in your Enterprise Hub.", "parameters": {"limit": {"description": "The maximum number of organizations to return. Defaults to None.", "type": "str, optional", "default": ""}, "offset": {"description": "The number of organizations to skip. Defaults to None.", "type": "str, optional", "default": ""}, "status": {"description": "The status of organizations to return (e.g., 'ACTIVE'). Defaults to 'ACTIVE'.", "type": "str, optional", "default": "ACTIVE"}}}
{"name": "specifications_by_group", "description": "Fetches specified groups of specifications for a given motorcycle article from the Motorcycle Specs Database API.", "parameters": {"specs": {"description": "The type of specification group to fetch (e.g., engineAndTransmission, chassisSuspensionBrakesAndWheels, physicalMeasuresAndCapacities, otherSpecifications).", "type": "str", "default": "engineAndTransmission"}, "article": {"description": "The identifier for the motorcycle article.", "type": "str", "default": ""}}}
{"name": "cnpj", "description": "Fetch company data by CNPJ (Cadastro Nacional da Pessoa Jurídica) using the RapidAPI service.", "parameters": {"cnpj": {"description": "The CNPJ number of the company to fetch data for.", "type": "str", "default": "22543331000100"}}}
{"name": "get_by_origin", "description": "Fetches plants by their origin using the specified RapidAPI key.", "parameters": {"origin": {"description": "The origin of the plants to retrieve. Default is 'Asia'.", "type": "str", "default": "Asia"}}}
{"name": "tz_lookup_by_location", "description": "Fetches time zone information for a given geographic location using Stadia Maps Time Zone API.", "parameters": {"lat": {"description": "The latitude component of a geographic location.", "type": "int", "default": "37.4666405"}, "lng": {"description": "The longitude component of a geographic location.", "type": "int", "default": "-85.89465"}, "timestamp": {"description": "The UNIX timestamp for which the time zone data is to be fetched. Defaults to 1589932800.", "type": "int, optional", "default": "1589932800"}}}
{"name": "euclidean_distance", "description": "Computes the Euclidean distance between two points in a 2D plane.", "parameters": {"point_a": {"description": "The coordinates of the first point (x, y).", "type": "Tuple[float, float]"}, "point_b": {"description": "The coordinates of the second point (x, y).", "type": "Tuple[float, float]"}}}
{"name": "player_events", "description": "Fetch events for a specified player by their player ID.", "parameters": {"player_id": {"description": "The ID of the player for whom to fetch events.", "type": "int", "default": "12994"}, "page": {"description": "The page number of events to fetch.", "type": "int", "default": "0"}, "course_events": {"description": "Additional event details or filters to be applied.", "type": "str", "default": "last"}}}
{"name": "select_race_based_on_race_number", "description": "Fetches the details for a Formula 1 race based on the provided race number.", "parameters": {"race_no": {"description": "The race number of the Formula 1 race to get details for.", "type": "str", "default": ""}}}
{"name": "get_the_next_dividend_payout_date", "description": "Fetches the next dividend payout date for a given stock ticker using the Sunday Finance API.", "parameters": {"ticker": {"description": "The stock ticker symbol to lookup for the next dividend payout date.", "type": "str", "default": "aapl"}}}
{"name": "charts_chain", "description": "Retrieves the historical Total Value Locked (TVL) data for a specified blockchain chain.", "parameters": {"chain": {"description": "The slug identifier of the blockchain chain. This can be obtained from the /v1/tvl/chains endpoint or the chains property on /v1/tvl/protocols.", "type": "str", "default": "Ethereum"}}}
{"name": "verify_plate_number_location", "description": "Fetches information about the state and LGA (Local Government Area) associated with a given Nigerian plate number code.", "parameters": {"platecodeloc": {"description": "The first three characters of a Nigerian plate number.", "type": "str", "default": ""}}}
{"name": "is_rotation", "description": "Checks if one string is a rotation of another string.", "parameters": {"str1": {"description": "The first string.", "type": "str"}, "str2": {"description": "The second string.", "type": "str"}}}
{"name": "kanji_english_meaning", "description": "Fetches the English meaning for a given Kanji using the Kanji Alive API.", "parameters": {"kem": {"description": "Simplified English meaning of the Kanji to search for.", "type": "str", "default": "parent"}}}
{"name": "getdefinition", "description": "Retrieves the definition, pronunciation, and example usages of a given word using the Dictionary Data API.", "parameters": {"word": {"description": "The word for which the definition, pronunciation, and example usages are retrieved.", "type": "str", "default": "dance"}}}
{"name": "word_infos", "description": "Fetch detailed information about a word from the Master Dictionary API using the provided RapidAPI key.", "parameters": {"word": {"description": "The word to fetch information for.", "type": "str", "default": "hello"}}}
{"name": "top_popular_posts", "description": "Fetches the top popular posts from Reddit based on the specified time frame.", "parameters": {"time": {"description": "The time frame for fetching popular posts. It can be one of the following: 'hour', 'day', 'week', 'month', 'year', or 'all'.", "type": "str", "default": "year"}, "cursor": {"description": "A cursor for pagination to fetch the next set of results. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "global_search_by_query", "description": "Performs a global search on Instagram based on the given query.", "parameters": {"query": {"description": "The search term to be used in the Instagram search.", "type": "str", "default": "iq"}}}
{"name": "get_reply_comment_by_id", "description": "Fetch a list of reply comments from TikTok for a given comment and video ID.", "parameters": {"cid": {"description": "The ID of the comment for which to fetch reply comments.", "type": "int", "default": "7178309240628658970"}, "aweme_id": {"description": "The ID of the TikTok video associated with the comment.", "type": "int", "default": "7178094165614464282"}, "count": {"description": "The number of reply comments to retrieve, with a maximum value of 30. Default is 5.", "type": "int, optional", "default": "5"}, "cursor": {"description": "The cursor position for paginating through the comments. Default is 0.", "type": "int, optional", "default": "0"}}}
{"name": "horse_stats", "description": "Fetches the racing statistics for a specified horse using the RapidAPI Horse Racing API.", "parameters": {"id_horse": {"description": "The unique identifier of the horse.", "type": "str", "default": "230380"}}}
{"name": "pull_track", "description": "Fetches tracking information for a shipment using a given AWB (Air Waybill) number.", "parameters": {"awb": {"description": "The Air Waybill number to be tracked.", "type": "str", "default": "000-99999970"}}}
{"name": "parse", "description": "Parses a US address string and returns the result in JSON format using the RapidAPI US Address Parser service.", "parameters": {"q": {"description": "The US address string to be parsed. Defaults to '2025 N HOPE ST PHILADELPHIA PA 19122'.", "type": "str", "default": "2025 N HOPE ST PHILADELPHIA PA 19122"}}}
{"name": "get_addresses", "description": "Fetches addresses from the address-monitor API with specified query parameters.", "parameters": {"limit": {"description": "The maximum number of addresses to fetch. Defaults to '100'.", "type": "str", "default": "100"}, "offset": {"description": "The number of addresses to skip before starting to fetch. Defaults to '0'.", "type": "str", "default": "0"}, "network": {"description": "The network type for which addresses are to be fetched (e.g., 'BSC_TESTNET'). Defaults to 'BSC_TESTNET'.", "type": "str", "default": "BSC_TESTNET"}}}
{"name": "igtv", "description": "Fetch IGTV channel details for a given Instagram username.", "parameters": {"username": {"description": "The Instagram username to fetch IGTV details for. Defaults to 'kimkardashian'.", "type": "str", "default": "kimkardashian"}, "nextmaxid": {"description": "Pagination identifier for fetching next set of results.", "type": "str, optional", "default": ""}}}
{"name": "user_data_by_name", "description": "Fetches user data from TikTok Solutions API for a given username.", "parameters": {"username": {"description": "The username of the TikTok user whose data is to be retrieved.", "type": "str", "default": "mrbeast"}}}
{"name": "get_job_by_task_id", "description": "Fetches the job and action job status associated with the given task ID from the MidJourney API.", "parameters": {"task_id": {"description": "The unique identifier for the task. This ID will expire 24 hours after its creation.", "type": "str", "default": "6ddd8121-2ae4-af61-b73d-eaefc8318d09"}}}
{"name": "get_session_messages", "description": "Retrieve the message history for a specific character within a given session.", "parameters": {"character_id": {"description": "Unique identifier for the character whose message history is being retrieved.", "type": "str", "default": "938545c6-ac0e-423b-93ba-39159fbfb866"}, "session_id": {"description": "Identifier for the session. Defaults to 'e5f6g7h8'.", "type": "str, optional", "default": "e5f6g7h8"}, "page": {"description": "Page number for pagination of the message history. Defaults to '1'.", "type": "str, optional", "default": "1"}, "page_size": {"description": "Number of messages per page for pagination. Defaults to '40'.", "type": "str, optional", "default": "40"}}}
{"name": "list_all_bot_category_groups", "description": "Get a list of category groups that are linked to user-owned bots (not locked bots).", "parameters": {"category_group": {"description": "Category group slug of the category group in the bot category group.", "type": "str, optional", "default": ""}, "dir": {"description": "Direction of the ordering. Default is 'asc'.", "type": "str, optional", "default": "asc"}, "limit": {"description": "The number of records to return. Default is 20.", "type": "int, optional", "default": 20}, "order": {"description": "The search field to order by. Default is 'id'.", "type": "str, optional", "default": "id"}, "is_id": {"description": "The ID of the bot category group.", "type": "int, optional", "default": ""}, "bot": {"description": "Bot slug of the bot in the bot category group.", "type": "str, optional", "default": ""}, "category_group_id": {"description": "The ID of the category group.", "type": "int, optional", "default": ""}, "bot_id": {"description": "The ID of the bot category group.", "type": "int, optional", "default": ""}, "page": {"description": "The page number of results to start from. Default is 1.", "type": "int, optional", "default": 1}}}
{"name": "trending_challenges", "description": "Fetches the trending challenges from the TikTok API.", "parameters": {"cursor": {"description": "The position to start fetching results from. Defaults to 0.", "type": "int, optional", "default": "0"}, "proxy": {"description": "The proxy server to use for the request. Defaults to None.", "type": "str, optional", "default": ""}, "count": {"description": "The number of results to return. Defaults to 10.", "type": "int, optional", "default": "10"}}}
{"name": "user_by_id", "description": "Fetches user information by user ID from the Instagram API.", "parameters": {"is_id": {"description": "The ID of the user to fetch information for.", "type": "str", "default": ""}}}
{"name": "get_9gag", "description": "Checks if a given username is available on 9gag using the RapidAPI service.", "parameters": {"username": {"description": "The username to check for availability on 9gag.", "type": "str", "default": "username"}}}
{"name": "get_dm_conversations", "description": "Fetches direct message conversations and messages from the Twitter API using the provided session and optional parameters.", "parameters": {"twttr_session": {"description": "The session token for authenticating with the Twitter API.", "type": "str", "default": ""}, "twttr_proxy": {"description": "Optional proxy URL to route the request through.", "type": "str, optional", "default": ""}, "cursor": {"description": "Optional cursor token to paginate through the result set.", "type": "str, optional", "default": ""}}}
{"name": "love_quote", "description": "Fetches and returns love quotes from the olato-quotes API.", "parameters": {"quotes": {"description": "Specific quotes to search for. Defaults to 'random quotes'.", "type": "str", "default": "random quotes"}}}
{"name": "list", "description": "Fetches a full list of expired user details from the OnlyFans API.", "parameters": {"sort": {"description": "Sorting order for the results.", "type": "str", "default": ""}, "signend": {"description": "End signature for authentication.", "type": "str", "default": ""}, "signstart": {"description": "Start signature for authentication.", "type": "str", "default": ""}, "apptoken": {"description": "Application token for API access.", "type": "str", "default": ""}, "xbc": {"description": "XBC token for API access.", "type": "str", "default": ""}, "timezone": {"description": "Timezone used for the query.", "type": "str", "default": "America/Los_Angeles"}, "useragent": {"description": "User agent string for the API request.", "type": "str", "default": ""}, "field": {"description": "Specific field to query for information.", "type": "str", "default": ""}, "offset": {"description": "Offset for pagination, must be divisible by 200.", "type": "str", "default": ""}, "sess": {"description": "Session identifier for the request.", "type": "str", "default": ""}, "auth_id": {"description": "Authentication ID for the user.", "type": "str", "default": "729369"}}}
{"name": "user_likes", "description": "Fetches the liked tweets of a specified user from the Twitter API using RapidAPI.", "parameters": {"user_id": {"description": "The ID of the user for whom to fetch liked tweets.", "type": "str", "default": "44196397"}, "limit": {"description": "The maximum number of liked tweets to return. Defaults to 40.", "type": "int, optional", "default": "40"}, "cursor": {"description": "The cursor for pagination to fetch the next set of results. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "user_metadata_information", "description": "Fetch and return metadata information for a specified TikTok user, such as number of followers, followings, avatar URL, description, and more.", "parameters": {"username": {"description": "The TikTok username to fetch metadata for (e.g., \"amazon\").", "type": "str", "default": "tiktok"}, "fresh": {"description": "If set to '1', forces the API to return fresh (non-cached) data. Defaults to '0'.", "type": "str, optional", "default": "0"}}}
{"name": "fetchdividends", "description": "Fetches the dividends data for a given ISIN using the RapidAPI service.", "parameters": {"isin": {"description": "The International Securities Identification Number (ISIN) for which to fetch dividends data.", "type": "str", "default": ""}}}
{"name": "get_daily_influencer_posts_by_coin_ticker", "description": "Fetch daily social media posts from top influencers by a specific coin ticker.", "parameters": {"cointicker": {"description": "The ticker symbol of the coin for which to retrieve influencer posts.", "type": "str", "default": "BTC"}}}
{"name": "v3_auto_complete", "description": "Fetches auto-suggestions based on a given symbol or company name using the RapidAPI Fidelity Investments endpoint.", "parameters": {"q": {"description": "Symbol or company name for which to fetch auto-suggestions.", "type": "str", "default": "apple"}}}
{"name": "industry_list", "description": "Gets a list of industries based on the provided alias from the specified API.", "parameters": {"alias": {"description": "An alias used to specify which industry list to fetch.", "type": "str", "default": ""}}}
{"name": "shows_id", "description": "Fetches show information from the TVMaze API using a given show ID.", "parameters": {"is_id": {"description": "The ID of the show to retrieve information for.", "type": "int", "default": ""}}}
{"name": "new_titles", "description": "Fetches a listing of new title IDs added to Watchmode within a specific date range.", "parameters": {"page": {"description": "Specifies the page of results to return. Defaults to 1.", "type": "int, optional", "default": "1"}, "types": {"description": "Filters results to include specific types of titles. Acceptable values are: 'movie', 'tv_series', 'tv_special', 'tv_miniseries', 'short_film'. Multiple types can be passed as a comma-delimited string. Defaults to 'movie,tv_series'.", "type": "str, optional", "default": "movie,tv_series"}, "limit": {"description": "Specifies the number of titles to return per page. The default and maximum is 250. Defaults to 50.", "type": "int, optional", "default": "50"}, "end_date": {"description": "Sets the end date to include changes from a specific date range. The format is YYYYMMDD (e.g., 20210101 for January 1st, 2021). If not specified, the API returns changes since the beginning of yesterday.", "type": "int, optional", "default": ""}, "start_date": {"description": "Sets the start date to include changes from a specific date range. The format is YYYYMMDD (e.g., 20210101 for January 1st, 2021). If not specified, the API returns changes since the beginning of yesterday.", "type": "int, optional", "default": ""}}}
{"name": "yh_historical", "description": "Retrieves the historical data for a given stock ticker within specified date ranges.", "parameters": {"ticker": {"description": "The ticker symbol of the stock.", "type": "str", "default": ""}, "sdate": {"description": "The start date for retrieving historical data in YYYY-MM-DD format.", "type": "str", "default": ""}, "edate": {"description": "The end date for retrieving historical data in YYYY-MM-DD format.", "type": "str", "default": ""}}}
{"name": "earnings", "description": "Fetches the earnings data for a given company symbol using the Yahoo Finance API.", "parameters": {"symb": {"description": "The stock symbol representing the company whose earnings data is to be fetched.", "type": "str", "default": "tsla"}}}
{"name": "binance_charts", "description": "Fetch candlestick chart data for a specified cryptocurrency trading pair from Binance.", "parameters": {"symbol": {"description": "Symbol for the trading pair. Example: 'BTCUSDT'", "type": "str", "default": "BTCUSDT"}, "content_type": {"description": "Type of content for the query. Defaults to 'application/x-www-form-urlencoded'.", "type": "str, optional", "default": "application/x-www-form-urlencoded"}, "limit": {"description": "Number of candles to include in the chart. Defaults to 16. Maximum is 1000.", "type": "int, optional", "default": "16"}, "interval": {"description": "Time interval for each candle. Defaults to '1m'. Valid intervals are:", "type": "str, optional", "default": "1m"}, "lastprice": {"description": "The specified last price for the chart. Defaults to 57500.", "type": "int, optional", "default": "57500"}}}
{"name": "copyright_free_images_api", "description": "Fetch copyright-free images from an API based on a search term.", "parameters": {"search": {"description": "The search term to query for free images.", "type": "str", "default": "wallpaper"}}}
{"name": "independent_samples_t_test", "description": "Conducts a two-sample independent t-test and returns the t-statistic, p-value, and conclusion.", "parameters": {"sample1": {"description": "The first sample of observations.", "type": "List[float]", "default": 0.05}, "sample2": {"description": "The second sample of observations.", "type": "List[float]", "default": 0.05}, "alpha": {"description": "The significance level of the test. Defaults to 0.05.", "type": "float, optional"}}}
{"name": "expand_around_center", "description": "Helper function to expand around a center for finding palindromic substrings.", "parameters": {"s": {"description": "The input string.", "type": "str"}, "left": {"description": "The left index of the center.", "type": "int"}, "right": {"description": "The right index of the center.", "type": "int"}}}
{"name": "search_text", "description": "Search for verses from the Bible that match the given text using the Toolbench RapidAPI service.", "parameters": {"text": {"description": "The text to search for within Bible verses.", "type": "str", "default": "Melchizedek"}}}
{"name": "nz_decode", "description": "Decodes a New Zealand Vehicle Identification Number (VIN) using the VIN Decoder API.", "parameters": {"vin": {"description": "The Vehicle Identification Number to decode.", "type": "str", "default": "JMFXDGL3WNZ002145"}}}
{"name": "tsv6", "description": "Fetches the variable list within the specified category of a merged data subset along with the metadata.", "parameters": {"dataset": {"description": "The dataset identifier.", "type": "str", "default": "frim1"}, "category": {"description": "The category to filter the data.", "type": "str", "default": "factor"}, "subset": {"description": "The data subset identifier.", "type": "str", "default": "activome"}, "format": {"description": "The desired output format. Default is 'tsv'.", "type": "str, optional", "default": "tsv"}}}
{"name": "getpetbyid", "description": "Get details of a pet by its ID using the provided RapidAPI key.", "parameters": {"petid": {"description": "The ID of the pet to retrieve.", "type": "int", "default": 0}}}
{"name": "get_vehicle_information", "description": "Fetch vehicle information from the Mexican Vehicle Registry using the provided license plate number and optional RapidAPI key.", "parameters": {"plates": {"description": "The license plate number for which to retrieve the vehicle information.", "type": "str", "default": "Y20BBG"}}}
{"name": "ilod_status_ilod_ticket_get", "description": "Fetches the result of an ILOD (Industry Level of Development) check using a given ticket.", "parameters": {"ticket": {"description": "The ticket identifier for the ILOD check.", "type": "str", "default": ""}}}
{"name": "info", "description": "Fetches profile information for a given Instagram username using the RapidAPI service.", "parameters": {"username": {"description": "The Instagram username for which to fetch profile information. Defaults to 'kimkardashian'.", "type": "str", "default": "kimkardashian"}}}
{"name": "get_ecoindex_analysis_list_version_ecoindexes_get", "description": "Fetches a list of ecoindex analysis based on the specified version and query filters. The results are ordered by ascending date.", "parameters": {"version": {"description": "Engine version used to run the analysis (e.g., 'v0' or 'v1').", "type": "str", "default": "v1"}, "size": {"description": "Number of elements per page. Defaults to 50.", "type": "int, optional", "default": 50}, "host": {"description": "Host name to filter the results by.", "type": "str, optional", "default": ""}, "date_from": {"description": "Start date for filtering results (format: 'YYYY-MM-DD').", "type": "str, optional", "default": ""}, "page": {"description": "Page number to retrieve. Defaults to 1.", "type": "int, optional", "default": 1}, "date_to": {"description": "End date for filtering results (format: 'YYYY-MM-DD').", "type": "str, optional", "default": ""}}}
{"name": "visa_requirements", "description": "Fetches visa requirements for a given passport and destination using the Toolbench RapidAPI.", "parameters": {"passport": {"description": "The passport country code.", "type": "str", "default": "US"}, "destination": {"description": "The destination country code.", "type": "str", "default": "US"}}}
{"name": "autocomplete", "description": "Autocomplete a brewery query using the Open Brewery DB API.", "parameters": {"query": {"description": "The query string to autocomplete.", "type": "str", "default": "dog"}}}
{"name": "route_information", "description": "Fetch route information from the BART API using the given command.", "parameters": {"cmd": {"description": "The command to send to the BART API. Possible commands can be found at http://api.bart.gov/docs/overview/examples.aspx.", "type": "str", "default": "routes"}}}
{"name": "history", "description": "Fetches the number of articles published daily during the last week and the corresponding news agencies that created those articles, optionally filtering by specific terms.", "parameters": {"terms": {"description": "Narrows down results to articles that contain the provided keywords. The terms should consist of one to three words separated by a dash, e.g., `election-campaign`. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "vivanews_search", "description": "Performs a search query on Vivanews through the RapidAPI endpoint.", "parameters": {"page": {"description": "The page number to retrieve results from.", "type": "int", "default": "1"}, "keyword": {"description": "The search keyword to query.", "type": "str", "default": "banjir"}}}
{"name": "get_region_details", "description": "Fetch the details of a specific region within a given country using the RapidAPI GIS Engine.", "parameters": {"region_code": {"description": "The code representing the specific region to look up.", "type": "str", "default": "abr"}, "country_code": {"description": "The code representing the country in which the region is located.", "type": "str", "default": "ph"}}}
{"name": "zip_code", "description": "Retrieves income-related data for a given US ZIP code using the Toolbench RapidAPI service.", "parameters": {"zip": {"description": "The ZIP code for which to retrieve income-related data.", "type": "int", "default": "0"}}}
{"name": "time_zone_time", "description": "Fetches the current time for a given time-zone ID in ISO-8601 format (HHmmss.SSSZ) using the GeoDB API.", "parameters": {"zoneid": {"description": "The ID of the time-zone for which the current time is to be fetched.", "type": "str", "default": "America__Los_Angeles"}}}
{"name": "getlearningresources", "description": "Fetches Azure learning resources from a specified page using RapidAPI.", "parameters": {"page": {"description": "The page number for the learning resources to be fetched.", "type": "int", "default": "1"}}}
{"name": "validate_cpf_number", "description": "Validates a given CPF number using the RapidAPI CPF Validator service.", "parameters": {"n": {"description": "The CPF number to be validated.", "type": "str", "default": "123.456.789-09"}}}
{"name": "sticker_roulette", "description": "Fetches a randomly selected sticker from Giphy's sticker collection. Optionally, it allows the selection to be limited to a specific tag. The function interacts with the Giphy API to retrieve the sticker.", "parameters": {"tag": {"description": "The tag to limit the scope of the sticker search. Should be URL encoded and can include phrases separated by hyphens.", "type": "str", "default": "oops"}}}
{"name": "get_channel_points_context", "description": "Fetches the channel points context for a given Twitch channel using the provided RapidAPI key.", "parameters": {"channel": {"description": "The name of the Twitch channel for which to fetch the channel points context.", "type": "str", "default": "xqc"}}}
{"name": "shotmap", "description": "Fetches the shotmap data for a given event from the SofaSport API.", "parameters": {"event_id": {"description": "The unique identifier for the event.", "type": "int", "default": "10230638"}}}
{"name": "results", "description": "Fetch soccer match results for a specified date from the Msport API.", "parameters": {"date": {"description": "The date of the soccer matches to retrieve results for (format: 'YYYY-MM-DD').", "type": "str", "default": "2023-01-30"}, "page": {"description": "The page number of results to retrieve. Defaults to 1.", "type": "int, optional", "default": "1"}}}
{"name": "get_5_day_forecast", "description": "Fetches the 5-day weather forecast for a specified ski resort.", "parameters": {"resort": {"description": "The name of the ski resort for which to fetch the forecast.", "type": "str", "default": "Jackson Hole"}, "units": {"description": "The units for temperature and snow depth. Accepted values are 'i' for imperial and 'm' for metric. Defaults to 'i'.", "type": "str, optional", "default": "i"}, "el": {"description": "The elevation level of the mountain for which to fetch the forecast. Accepted values are 'top', 'mid', and 'bot'. Defaults to 'top'.", "type": "str, optional", "default": "top"}}}
{"name": "get_quotes_by_genre", "description": "Fetches a list of quotes for a given genre from the Quotsy API.", "parameters": {"name": {"description": "The name of the genre to fetch quotes for.", "type": "str", "default": "love"}}}
{"name": "random", "description": "Fetch a random quote, optionally based on custom search terms, using the Toolbench API.", "parameters": {"search": {"description": "A search term to filter the quotes. If None, a completely random quote is returned.", "type": "str, optional", "default": ""}}}
{"name": "compatibility", "description": "Calculates the compatibility between two astrological signs using the Horoscope Astrology API.", "parameters": {"sign1": {"description": "The first astrological sign. Options include:", "type": "str", "default": "Libra"}, "sign2": {"description": "The second astrological sign. Options include:", "type": "str", "default": "Aries"}}}
{"name": "is_perfect_square", "description": "Checks if a number is a perfect square.", "parameters": {"num": {"description": "The number to check.", "type": "int"}}}
{"name": "trapezoidal_integration", "description": "Calculates the definite integral of a function using the trapezoidal rule.", "parameters": {"func": {"description": "The function to integrate, expressed as a string (e.g., \"x**2 + 2*x\").", "type": "str", "default": 10000}, "a": {"description": "The lower limit of integration.", "type": "float", "default": 10000}, "b": {"description": "The upper limit of integration.", "type": "float"}, "n": {"description": "The number of subdivisions for the trapezoidal approximation. Defaults to 10000.", "type": "int, optional"}}}
{"name": "find_kth_smallest_number", "description": "Finds the kth smallest number in a list.", "parameters": {"nums": {"description": "The list of numbers.", "type": "List[int]"}, "k": {"description": "The position (1-based index) of the smallest number to find.", "type": "int"}}}
{"name": "city_list", "description": "Fetches a list of valid cities for a given province using the Canadian Gas Prices API.", "parameters": {"province": {"description": "The name of the province for which to fetch the list of cities.", "type": "str", "default": ""}}}
{"name": "title_get_parental_guide", "description": "Fetches parental guide information for a specific movie from the online movie database.", "parameters": {"tconst": {"description": "The unique identifier for the movie. It should start with 'tt' and can be obtained from the `/title/auto-complete` or `/title/find` endpoints. For example, 'tt0944947'.", "type": "str", "default": "tt0944947"}}}
{"name": "market_undervalued_large_caps", "description": "Fetches a list of potentially undervalued large cap stocks from the API.", "parameters": {"start": {"description": "The starting index for the results. Defaults to 0.", "type": "int, optional", "default": "0"}}}
{"name": "filter_protein", "description": "Fetches keto recipes within a specified range of protein content.", "parameters": {"protein_in_grams_lt": {"description": "Maximum protein content in grams.", "type": "int", "default": "15"}, "protein_in_grams_gt": {"description": "Minimum protein content in grams.", "type": "int", "default": "5"}}}
{"name": "get_specific_dessert", "description": "Fetch a specific dessert's details using its ID from the Pizza and Desserts API.", "parameters": {"is_id": {"description": "The ID of the dessert to fetch.", "type": "int", "default": "1"}}}
{"name": "get_desserts_by_there_id", "description": "Fetch dessert information from an API using a given dessert ID.", "parameters": {"is_id": {"description": "The ID of the dessert to look up.", "type": "str", "default": ""}}}
{"name": "get_5_year_historical_quarterly_prices", "description": "Fetches the 5-year historical quarterly stock prices for a given ticker.", "parameters": {"ticker": {"description": "The stock ticker symbol to retrieve historical data for.", "type": "str", "default": "AAPL"}}}
{"name": "yearly_income_statements", "description": "Fetches the annual income statements for a given stock symbol using the specified RapidAPI key.", "parameters": {"symbol": {"description": "The stock symbol for which the annual income statements are to be fetched.", "type": "str", "default": "MSFT"}}}
{"name": "search_exchange", "description": "Search for exchanges based on a query string or category.", "parameters": {"q": {"description": "A query string to search for specific exchanges. Defaults to 'B'.", "type": "str, optional", "default": "B"}, "category": {"description": "The category to filter the exchanges, for example, 'Cryptocurrency'. Defaults to 'Cryptocurrency'.", "type": "str, optional", "default": "Cryptocurrency"}}}
{"name": "stock_net_share_purchase_activity", "description": "Fetches net share purchase activity information for a particular stock symbol.", "parameters": {"symbol": {"description": "The stock symbol for which to retrieve net share purchase activity information.", "type": "str", "default": "AAPL"}}}
{"name": "v1_music_music_id", "description": "Fetches music information by music ID using the provided RapidAPI key.", "parameters": {"music_id": {"description": "The ID of the music to fetch information for.", "type": "str", "default": "6928004115846924290"}}}
{"name": "playlist_posts", "description": "Fetch posts from TikTok for a specific user and playlist.", "parameters": {"user_id": {"description": "The ID or secret UID of the user.", "type": "str", "default": "6896921279983977474"}, "playlist_id": {"description": "The ID of the playlist.", "type": "str", "default": "6974449062670027522"}, "offset": {"description": "The offset for pagination. Defaults to 0.", "type": "int, optional", "default": "0"}}}
{"name": "full_info_with_url", "description": "Fetches detailed information about a TikTok video, including author info, video statistics, and metadata, using the provided URL.", "parameters": {"url": {"description": "The URL of the TikTok video to fetch information for.", "type": "str", "default": "https://www.tiktok.com/@mehdi_amri_10/video/7060576901613587718"}}}
{"name": "search_location", "description": "Fetch Instagram locations based on a given keyword using the Toolbench API.", "parameters": {"keyword": {"description": "The search term to find relevant Instagram locations.", "type": "str", "default": "paris"}}}
{"name": "user_follower", "description": "Retrieves the followers of a specified TikTok user using the provided API key.", "parameters": {"user_id": {"description": "The unique identifier of the TikTok user whose followers are to be retrieved.", "type": "str", "default": "107955"}, "count": {"description": "The number of followers to retrieve. Default is None.", "type": "str, optional", "default": ""}, "cursor": {"description": "The cursor for pagination (to fetch the next set of followers). Default is None.", "type": "str, optional", "default": ""}}}
{"name": "get_a_specific_champion_s_base_stats", "description": "Fetches the base stats of a specified League of Legends champion using the provided RapidAPI key.", "parameters": {"name": {"description": "The name of the champion whose base stats are to be retrieved.", "type": "str", "default": "ekko"}}}
{"name": "get_card_by_slug", "description": "Fetches card information by slug from the Hearthstone API.", "parameters": {"slug": {"description": "The slug identifier for the card.", "type": "str", "default": "a-light-in-the-darkness"}}}
{"name": "get_a_specific_item", "description": "Fetches a specific item from the Lost Ark API using the provided item name.", "parameters": {"name": {"description": "The name of the item to retrieve from the Lost Ark API.", "type": "str", "default": "Hollowfruit"}}}
{"name": "news_v2_list_trending", "description": "Fetches a list of trending news from the Seeking Alpha API.", "parameters": {"size": {"description": "The number of items per response, with a maximum of 40. Defaults to 20.", "type": "int, optional", "default": "20"}, "since": {"description": "Unix timestamp (Epoch timestamp) to filter data from this date onwards. Can be used together with the 'until' parameter to filter data by date range. Defaults to None.", "type": "int, optional", "default": ""}, "until": {"description": "Unix timestamp (Epoch timestamp) to filter data up to this date. Can be used together with the 'since' parameter to filter data by date range. Defaults to None.", "type": "int, optional", "default": ""}}}
{"name": "calendars_get_earning_calendar", "description": "Fetches the earnings calendar for a specified date range and stock exchange.", "parameters": {"is_from": {"description": "The starting epoch timestamp in seconds (e.g., 1661187600).", "type": "int", "default": ""}, "to": {"description": "The ending epoch timestamp in seconds (e.g., 1661619600).", "type": "int", "default": ""}, "lang": {"description": "The language code for the response (default is 'en').", "type": "str, optional", "default": "en"}, "screenername": {"description": "The screener name value returned in the /countries/list endpoint (default is 'america').", "type": "str, optional", "default": "america"}}}
{"name": "stockprice", "description": "Fetches the live price of a given stock symbol from the exchange using the RapidAPI service.", "parameters": {"symbol": {"description": "The stock symbol for which to fetch the live price (e.g., TATAMOTORS, M&M).", "type": "str", "default": "TATAMOTORS"}}}
{"name": "get_latest_price", "description": "Fetch the latest Thai oil price data from the specified API.", "parameters": {"info": {"description": "Whether to include additional info in the API request. Defaults to None.", "type": "bool, optional", "default": "true"}}}
{"name": "premium_daily", "description": "Fetches the daily zip files of filed 10-Q and 10-K reports for a given date using the provided RapidAPI key.", "parameters": {"date": {"description": "The date for which to fetch the report in YYYY-MM-DD format.", "type": "str", "default": "2023-07-07"}}}
{"name": "current", "description": "Fetch the current weather information for a specified location using the Foreca Weather API.", "parameters": {"location": {"description": "The location for which the current weather is to be retrieved.", "type": "str", "default": "102643743"}, "windunit": {"description": "The unit for wind speed in the response. Default is 'MS'.", "type": "str, optional", "default": "MS"}, "alt": {"description": "The altitude in meters. Default is 0.", "type": "int, optional", "default": "0"}, "lang": {"description": "The language for the response, specified using ISO 639-1 codes. Default is 'en'.", "type": "str, optional", "default": "en"}, "tz": {"description": "The time zone for the response, specified using IANA time zone database names. Default is 'Europe/London'.", "type": "str, optional", "default": "Europe/London"}, "tempunit": {"description": "The unit for temperature in the response. Default is 'C'.", "type": "str, optional", "default": "C"}}}
{"name": "xyz_map_tiles_for_ocean_conditions", "description": "Fetches ocean condition tiles based on the specified variable and datetime using Wavebase API.", "parameters": {"variable": {"description": "The ocean variable to fetch (e.g., 'VHM0' for wave significant height).", "type": "str", "default": "VHM0"}, "datetime": {"description": "The datetime for the desired observation, in the format 'YYYYMMDDHH'.", "type": "str", "default": ""}}}
{"name": "air_quality_forecast", "description": "Returns an air quality forecast for a given location.", "parameters": {"lat": {"description": "The latitude of the location for which the air quality forecast is to be retrieved.", "type": "int", "default": "35.779"}, "lon": {"description": "The longitude of the location for which the air quality forecast is to be retrieved.", "type": "int", "default": "-78.638"}, "hours": {"description": "The number of hours for which the forecast is to be retrieved (default is 72).", "type": "int", "default": "72"}}}
{"name": "find_equilibrium_index", "description": "Finds the equilibrium index of a list, where the sum of elements on the left is equal to the sum of elements on the right.", "parameters": {"arr": {"description": "The input list of integers.", "type": "List[int]"}}}
{"name": "planet_list", "description": "Fetches the list of planets surrounding a given star using the provided API key.", "parameters": {"starid": {"description": "The ID of the star for which to fetch the planets. Defaults to '4'.", "type": "str", "default": "4"}}}
{"name": "get_random_quote", "description": "Fetches a random quote from an API, with an option to limit the length of the quote.", "parameters": {"limit": {"description": "Maximum length of the quote in characters. Defaults to 50.", "type": "int, optional", "default": "50"}}}
{"name": "retrieve_user", "description": "Retrieves details of a user based on the provided user ID from the rapidapi service.", "parameters": {"user_id": {"description": "The ID of the user whose details are to be retrieved.", "type": "str", "default": "yKscUgpDShWKaf6zCLjyZw"}}}
{"name": "numbers_translator", "description": "Converts a numerical text string into its spelled-out form using an external API.", "parameters": {"text": {"description": "Numerical text to be converted. Defaults to '23879908709817834'.", "type": "str, optional", "default": "23879908709817834"}}}
{"name": "search_hashtags", "description": "Search for Instagram hashtags by keyword using the RapidAPI service.", "parameters": {"name": {"description": "The keyword to search hashtags for.", "type": "str", "default": "fitness"}}}
{"name": "gettrendinglenses", "description": "Fetches the trending lenses from Snapchat using the RapidAPI service.", "parameters": {"cursor": {"description": "A cursor for pagination. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "hashtag", "description": "Fetch posts from Instagram using a specific hashtag.", "parameters": {"hashtag": {"description": "The hashtag to search for.", "type": "str", "default": "football"}, "raw": {"description": "Set to True to return the raw unprocessed data feed. Defaults to None.", "type": "bool, optional", "default": ""}}}
{"name": "search_all_words_api", "description": "Fetches King James Version (KJV) Bible verses containing all the supplied words from the Complete Study Bible API.", "parameters": {"words": {"description": "Words to search for in the KJV Bible verses, separated by '%20' (URL encoded spaces).", "type": "str", "default": "Melchizedek priest"}}}
{"name": "get_lottery_result_by_date", "description": "Fetches the lottery results for the given date using the RapidAPI service.", "parameters": {"date": {"description": "The date for which to retrieve the lottery results, formatted as 'YYYY-MM-DD'.", "type": "str", "default": "2022-10-16"}}}
{"name": "test", "description": "Retrieves data from the PMI Jateng API and returns the response as a JSON or text.", "parameters": {"iniya": {"description": "An optional query string parameter to be sent with the request. Defaults to 9.", "type": "int, optional", "default": "9"}}}
{"name": "view_song_copy", "description": "Retrieves detailed information about a song using the specified parameters.", "parameters": {"https_only": {"description": "Indicates if the request should use HTTPS only.", "type": "str", "default": "1"}, "wmid": {"description": "Identifier for the user or session making the request.", "type": "str", "default": "161445361"}, "songid": {"description": "Identifier for the song whose information is being retrieved.", "type": "str", "default": "ttEleQJoxgCuNOIbUuRh7Q=="}, "s": {"description": "Signature or token required for the API call.", "type": "str", "default": "fe7cc2de3cfcc4efd457838a9521e7e9"}, "song_preview_kbps": {"description": "Bitrate for the song preview.", "type": "str", "default": "320"}, "lang": {"description": "Desired language for the response.", "type": "str", "default": "id"}, "country": {"description": "Country code where the request is made from.", "type": "str", "default": "id"}}}
{"name": "concerts", "description": "Fetches concert information using the Spotify API through RapidAPI, filtered by the specified geographical location.", "parameters": {"gl": {"description": "The geographical location filter to apply when fetching concert information.", "type": "str", "default": "US"}}}
{"name": "get_artist", "description": "Gets artist information from the Spotify Data API using the artist's ID.", "parameters": {"is_id": {"description": "The Spotify ID of the artist.", "type": "str", "default": "0TnOYISbd1XYRBk9myaseg"}}}
{"name": "hot_100_songs", "description": "Fetch the Billboard YEAR-END Hot 100 Songs chart information for a specified year.", "parameters": {"year": {"description": "The year for which to retrieve the chart, in YYYY format. Defaults to '2022'.", "type": "str, optional", "default": "2022"}}}
{"name": "get_channels", "description": "Retrieve a list of radio channels based on various filtering parameters.", "parameters": {"keyword": {"description": "Filter channels by keyword. Default is 'a'. Set to an empty string if no filtering by keyword is needed.", "type": "str", "default": "a"}, "genre_id": {"description": "Filter channels by genre ID. Default is None.", "type": "int, optional", "default": ""}, "city_id": {"description": "Filter channels by city ID. Default is None.", "type": "int, optional", "default": ""}, "country_id": {"description": "Filter channels by country ID. Default is 50.", "type": "int", "default": "50"}, "page": {"description": "The page number for pagination. Default is 1.", "type": "int", "default": "1"}}}
{"name": "label_templates", "description": "Fetches a list of label templates filtered by various parameters such as paper format, brand, label size, and shape.", "parameters": {"format": {"description": "The paper format, either 'Letter' (8.5 inch by 11 inch) or 'A4' (210 mm by 297 mm).", "type": "str", "default": "letter"}, "brand": {"description": "The name of the label manufacturer. Default is 'avery'. Possible values include 'Avery', 'Herma', 'Onlinelabels', 'Uline', 'Megastar', 'Sheetlabels'.", "type": "str, optional", "default": "avery"}, "height": {"description": "The height of the label.", "type": "str, optional", "default": ""}, "code": {"description": "A string representing approximate label sizes in the format [width]x[height]. Default is '2x2'.", "type": "str, optional", "default": "2x2"}, "width": {"description": "The width of the label.", "type": "str, optional", "default": ""}, "shape": {"description": "The shape of the label. Valid values include 'square', 'rectangle', 'circle', 'oval'.", "type": "str, optional", "default": ""}}}
{"name": "autocomplete_zipcodes_zip4", "description": "Fetches autocomplete suggestions for USA Zip+4 zip codes using the provided zipcode and API key.", "parameters": {"zipcode": {"description": "The base ZIP code for which to fetch autocomplete suggestions.", "type": "str", "default": "110"}}}
{"name": "get_cities_in_a_country", "description": "Fetches a list of cities in a specified country filtered by population range, with options for pagination.", "parameters": {"country_iso2": {"description": "The ISO 3166-1 alpha-2 code of the country.", "type": "str", "default": ""}, "page_size": {"description": "The number of cities to return per page. Default is 20.", "type": "int, optional", "default": 20}, "population_min": {"description": "The minimum population of the cities to include. Default is 0.", "type": "int, optional", "default": 0}, "next_token": {"description": "Token for pagination to fetch the next set of cities. Default is None.", "type": "str, optional", "default": ""}, "population_max": {"description": "The maximum population of the cities to include. Default is 100,000,000.", "type": "int, optional", "default": 100000000}}}
{"name": "group_breed_data_by_property", "description": "Groups cat breed data based on a specified property and its value.", "parameters": {"property": {"description": "The property by which to group the cat breed data.", "type": "str", "default": "origin"}, "property_value": {"description": "The value of the property to group the cat breed data.", "type": "str", "default": "united states"}}}
{"name": "get_mempool_v2", "description": "Retrieve a list of transaction IDs currently in the mempool of the specified blockchain node, representing unconfirmed transactions not yet included in any block.", "parameters": {"blockchain": {"description": "The name of the blockchain.", "type": "str", "default": "bitcoin"}, "pagesize": {"description": "The number of transactions to return per call. Default and maximum is 1000.", "type": "int, optional", "default": 1000}, "page": {"description": "Specifies the page of returned transactions, starting from 1. If out of range, the closest possible page is returned. Default is 1.", "type": "int, optional", "default": 1}}}
{"name": "consulta_empresa", "description": "Fetches company information based on the given CNPJ ID using the RapidAPI service.", "parameters": {"is_id": {"description": "The first 8 digits of the CNPJ used to identify the company.", "type": "str", "default": "37335118"}}}
{"name": "country_location_api", "description": "Retrieves location data for a specified country using the Country Location API.", "parameters": {"country": {"description": "Name of the country for which to retrieve location data. Defaults to 'canada'.", "type": "str", "default": "canada"}}}
{"name": "leagueawaystandings", "description": "Retrieve the league's away standings for a given tournament and season.", "parameters": {"tournamentid": {"description": "The unique ID of the tournament for which you want to retrieve the away standings.", "type": "int", "default": 7}, "seasonid": {"description": "The ID of the season for which you want to retrieve the away standings.", "type": "int", "default": 36886}}}
{"name": "wnba_play_by_play", "description": "Retrieves the WNBA game play-by-play data for a specific game using the provided game ID.", "parameters": {"is_id": {"description": "The ID of the game for which play-by-play data is to be retrieved.", "type": "str", "default": "401244185"}}}
{"name": "primeira_liga_standings", "description": "Fetches the standings for the Primeira Liga for a specified season.", "parameters": {"season": {"description": "The season for which the standings are to be fetched, e.g., '2022'. If not provided, the current season is assumed.", "type": "str, optional", "default": ""}}}
{"name": "tournament_list_wta", "description": "Retrieves the list of all WTA tournaments to be played in a given year, including basic information such as tournament venue, surface, and prizemoney.", "parameters": {"year": {"description": "The year for which to retrieve tournament data. Must be between 1960 and 2022.", "type": "str", "default": "2022"}}}
{"name": "get_1_3_analyse", "description": "Analyse a given period between start and end dates for a specified country and configuration.", "parameters": {"start_date": {"description": "The start date in YYYY-MM-DD format.", "type": "str", "default": "2013-01-01"}, "end_date": {"description": "The end date in YYYY-MM-DD format.", "type": "str", "default": "2013-12-31"}, "country_code": {"description": "The ISO 3166-1 alpha-2 country code (2 letters).", "type": "str", "default": "US"}, "end_time": {"description": "The end time in 24-hour format (e.g., '18:15'). Defaults to '18:15'.", "type": "str, optional", "default": "18:15"}, "start_time": {"description": "The start time in 24-hour format (e.g., '09:14'). Defaults to '09:14'.", "type": "str, optional", "default": "09:14"}, "profile_id": {"description": "An identifier for a specific profile configuration. Defaults to None.", "type": "str, optional", "default": ""}, "configuration": {"description": "The name of the preset configuration to be used. Defaults to 'Federal holidays'.", "type": "str, optional", "default": "Federal holidays"}}}
{"name": "feriados_dos_estados", "description": "Retrieves the holidays for a given Brazilian state and year.", "parameters": {"estado": {"description": "Abbreviation of the Brazilian state in uppercase letters.", "type": "str", "default": "MG"}, "ano": {"description": "Year for which to retrieve the holidays.", "type": "str", "default": "2023"}}}
{"name": "get_1_3_add_working_hours", "description": "Adds a specified amount of working hours to a given start date and time for a specified country.", "parameters": {"start_date": {"description": "The start date in the format 'YYYY-MM-DD'.", "type": "str", "default": "2013-12-31"}, "country_code": {"description": "The ISO country code (2 letters) specifying the country.", "type": "str", "default": "US"}, "start_time": {"description": "The start time in 24-hour format with leading zeros (e.g., '08:00').", "type": "str", "default": "08:15"}, "increment_time": {"description": "The amount of working time to add or remove from the start date and time in 'H:i' format (e.g., '1:00' for one hour, '30:15' for thirty hours and fifteen minutes, or '-0:45' for a negative increment). Defaults to '1815'.", "type": "str, optional", "default": 1815}, "configuration": {"description": "The name of the preset configuration to be used (e.g., 'Federal holidays'). Defaults to 'Federal holidays'.", "type": "str, optional", "default": "Federal holidays"}, "profile_id": {"description": "Optional profile identifier. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "get_vehicule_info", "description": "Fetches vehicle information from the API PLAQUE IMMATRICULATION using provided parameters.", "parameters": {"token": {"description": "The token for API authentication. Defaults to 'TokenDemoRapidapi'.", "type": "str", "default": "TokenDemoRapidapi"}, "host_name": {"description": "The base URL of the API endpoint. Defaults to 'https://apiplaqueimmatriculation.com'.", "type": "str", "default": "https://apiplaqueimmatriculation.com"}, "immatriculation": {"description": "The vehicle registration number. Defaults to 'AA-123-BC'.", "type": "str", "default": "AA-123-BC"}}}
{"name": "merge_sorted_lists", "description": "Merges two sorted lists into a single sorted list.", "parameters": {"list1": {"description": "The first sorted list.", "type": "List[int]"}, "list2": {"description": "The second sorted list.", "type": "List[int]"}}}
{"name": "get_amazon_product_details", "description": "Fetches the details of an Amazon product using the provided product ID and RapidAPI key.", "parameters": {"productid": {"description": "The ID of the product on Amazon for which details are to be fetched.", "type": "str", "default": "B08N5R2GQW"}}}
{"name": "get_comments_from_product_id", "description": "Retrieve comments for a given product ID from the Trendyol API.", "parameters": {"product_id": {"description": "The unique identifier for the product whose comments are to be retrieved.", "type": "str", "default": "685539438"}}}
{"name": "scraper", "description": "Fetches product data from the AliExpress API using the given product ID and RapidAPI key.", "parameters": {"productid": {"description": "The ID of the product to scrape from AliExpress.", "type": "str", "default": "32984931216"}}}
{"name": "get_amazon_search_results", "description": "Fetches Amazon search results for a given query using the Toolbench RapidAPI Key.", "parameters": {"searchquery": {"description": "The search term to query on Amazon.", "type": "str", "default": "mac"}}}
{"name": "team_image", "description": "Fetches the image of a soccer team using the given team ID and RapidAPI key.", "parameters": {"team_id": {"description": "The unique identifier of the soccer team whose image is to be fetched.", "type": "int", "default": "662"}}}
{"name": "food_info", "description": "Retrieves information about a specific food item from the food database using its food ID.", "parameters": {"foodid": {"description": "The unique identifier for the food item.", "type": "str", "default": "SR25_1_1"}}}
{"name": "leaguelastmatches", "description": "Retrieve the last matches of an American Football league for a given tournament and season.", "parameters": {"page": {"description": "The zero-based page number for pagination.", "type": "int", "default": ""}, "tournamentid": {"description": "The unique tournament ID for which you want to retrieve the last matches.", "type": "int", "default": 9464}, "seasonid": {"description": "The season ID for which you want to retrieve the last matches.", "type": "int", "default": 36422}}}
{"name": "tsv4", "description": "Retrieves the entry list of a specified subset from a dataset using the odem API.", "parameters": {"subset": {"description": "The identifier of the data subset to retrieve.", "type": "str", "default": "activome"}, "dataset": {"description": "The identifier of the dataset to query.", "type": "str", "default": "frim1"}, "format": {"description": "The output format for the response. Defaults to 'tsv'.", "type": "str, optional", "default": "tsv"}}}
{"name": "getusers", "description": "Fetches user information from the RapidAPI user-demo service, optionally filtered by email and name.", "parameters": {"email": {"description": "Email address to filter the users.", "type": "str, optional", "default": ""}, "name": {"description": "Name to filter the users.", "type": "str, optional", "default": ""}}}
{"name": "display_entities", "description": "Displays the extracted named entities from the given text using a specified model and RapidAPI service.", "parameters": {"text": {"description": "The text to extract entities from.", "type": "str", "default": "An October post from Dylan that may be saving you a Google search."}, "model": {"description": "The name of the model to use for entity extraction. If None, the default model will be used.", "type": "str, optional", "default": ""}, "spans": {"description": "Specific spans to use for entity extraction. If None, entity extraction will be performed on the entire text.", "type": "str, optional", "default": ""}}}
{"name": "chat", "description": "Communicates with the AI chatbot via RapidAPI and returns the chatbot's response.", "parameters": {"uid": {"description": "User Identification for personalized response and response continuity.", "type": "str", "default": "user1"}, "message": {"description": "Message that the chatbot has to respond to.", "type": "str", "default": "What's your name?"}}}
{"name": "mailcheck", "description": "Checks if an email domain is valid or a disposable/temporary address.", "parameters": {"domain": {"description": "The email or domain to check for validity. It is recommended to enter just the domain for user privacy.", "type": "str", "default": "mailinator.com"}}}
{"name": "qr_code", "description": "Creates a QR code by making a GET request to the QR code API with the given URL.", "parameters": {"url": {"description": "The URL to be included in the QR code. Defaults to 'https://rapidapi.com/'.", "type": "str", "default": "https://rapidapi.com/"}}}
{"name": "get_order", "description": "Fetch the order details from the API using the given ID and API key.", "parameters": {"is_id": {"description": "The ID of the order to be fetched.", "type": "str", "default": ""}}}
{"name": "us", "description": "Fetches current or historical national average gas price data for the US.", "parameters": {"date": {"description": "The date for which historical gas price data is to be fetched, in the format 'YYYY-MM-DD'. If not provided, current gas price data is returned.", "type": "str, optional", "default": ""}}}
{"name": "get_taxi_fares", "description": "Calculate taxi fares between two geographical points using the RapidAPI taxi fare calculator.", "parameters": {"arr_lat": {"description": "Latitude of the arrival point.", "type": "int", "default": "52.47"}, "arr_lng": {"description": "Longitude of the arrival point.", "type": "int", "default": "13.63"}, "dep_lat": {"description": "Latitude of the departure point.", "type": "int", "default": "52.50"}, "dep_lng": {"description": "Longitude of the departure point.", "type": "int", "default": "13.43"}}}
{"name": "interior_colors", "description": "Fetches interior color details for a car based on various query parameters.", "parameters": {"model": {"description": "The model of the car.", "type": "str, optional", "default": ""}, "name": {"description": "The name of the color.", "type": "str, optional", "default": ""}, "trim": {"description": "The trim level of the car.", "type": "str, optional", "default": ""}, "page": {"description": "The page number for pagination.", "type": "int, optional", "default": ""}, "direction": {"description": "The sorting direction, either 'asc' or 'desc'. Default is 'asc'.", "type": "str, optional", "default": "asc"}, "limit": {"description": "The maximum number of results to return.", "type": "int, optional", "default": ""}, "make_model_trim_id": {"description": "The unique ID for make, model, and trim combination.", "type": "str, optional", "default": ""}, "year": {"description": "The year of the car.", "type": "str, optional", "default": ""}, "rgb": {"description": "The RGB value of the color.", "type": "str, optional", "default": ""}, "sort": {"description": "The field to sort by. Default is 'id'.", "type": "str, optional", "default": "id"}, "verbose": {"description": "If 'yes', includes detailed information about make, model, and trim. Default is 'yes'.", "type": "str, optional", "default": "yes"}, "json": {"description": "A URL encoded JSON array of conditions to filter results.", "type": "str, optional", "default": ""}, "make_id": {"description": "The ID of the car make.", "type": "str, optional", "default": ""}, "make": {"description": "The make of the car.", "type": "str, optional", "default": ""}, "make_model_id": {"description": "The ID for make and model combination.", "type": "str, optional", "default": ""}}}
{"name": "pastry_ingredient", "description": "Retrieves a random pastry recipe that contains a specific ingredient using the Toolbench RapidAPI.", "parameters": {"ingredient": {"description": "The specific ingredient to include in the pastry recipe.", "type": "str", "default": "strawberry"}}}
{"name": "search_for_recipes", "description": "Search for recipes that match provided criteria.", "parameters": {"maxnetcarbs": {"description": "Maximum net carbs (total carbs minus fiber and sugar alcohols) per serving in grams. Default is 5.", "type": "int, optional", "default": "5"}, "limit": {"description": "Maximum number of results to return. Default is 10.", "type": "int, optional", "default": "10"}, "maxcalories": {"description": "Maximum calories per serving in KCal. Default is 500.", "type": "int, optional", "default": "500"}, "maxpreparetime": {"description": "Maximum preparation time in minutes. Default is 10.", "type": "int, optional", "default": "10"}, "excludeingredients": {"description": "Semicolon-separated terms to be excluded in ingredients. Default is 'cinnamon'.", "type": "str, optional", "default": "cinnamon"}, "tags": {"description": "Semicolon-separated tags to filter recipes. Example tags include 'keto', 'dairy-free', etc. Default is 'keto;dairy-free'.", "type": "str, optional", "default": "keto;dairy-free"}, "name": {"description": "Search terms to be appeared in the recipe name. Default is 'cake'.", "type": "str, optional", "default": "cake"}, "maxaddedsugar": {"description": "Maximum added sugar per serving in grams. Default is 0.", "type": "int, optional", "default": "0"}, "maxsugar": {"description": "Maximum sugar per serving in grams. Default is 3.", "type": "int, optional", "default": "3"}, "maxcooktime": {"description": "Maximum cook time in minutes. Default is 20.", "type": "int, optional", "default": "20"}, "includeingredients": {"description": "Semicolon-separated terms to be included in ingredients. Default is 'egg;butter'.", "type": "str, optional", "default": "egg;butter"}}}
{"name": "generate_shield", "description": "Generates a shield using the Shields API and returns the response.", "parameters": {"name": {"description": "The name parameter to be included in the query string. Defaults to 'google'.", "type": "str", "default": "google"}}}
{"name": "getmusic", "description": "Fetches all TikTok videos that are using a specific music track along with information about the original music.", "parameters": {"getmusic": {"description": "The identifier or name of the music track to search for on TikTok.", "type": "str", "default": "6818239458366753542"}}}
{"name": "v1_sticker", "description": "Fetches information related to specific stickers given their IDs from the RapidAPI service.", "parameters": {"sticker_ids": {"description": "Comma-separated string of sticker IDs to fetch information for.", "type": "str", "default": "1108584,1108584"}}}
{"name": "protocol", "description": "Gets the historical Total Value Locked (TVL) of a specified protocol, including breakdowns by token and chain.", "parameters": {"protocol": {"description": "The slug identifier of the protocol.", "type": "str", "default": "aave"}}}
{"name": "get_product_detail", "description": "Retrieve the details of a product from the Taobao-Tmall API using a specified product ID and RapidAPI key.", "parameters": {"is_id": {"description": "The ID of the product whose details are being retrieved.", "type": "int", "default": 616211697315}}}
{"name": "search_autocomplete", "description": "Fetches product autocompletion suggestions based on a search keyword.", "parameters": {"q": {"description": "The search keyword for which to get autocompletion suggestions.", "type": "str", "default": "tv"}}}
{"name": "ultimateoscillator", "description": "Fetches the Ultimate Oscillator (UO) indicator data for a given cryptocurrency symbol from the Qvantana API.", "parameters": {"exchange": {"description": "The exchange to retrieve data from.", "type": "str", "default": "binance"}, "interval": {"description": "The interval time frame for the data (e.g., '1h', '1d').", "type": "str", "default": "1m"}, "market": {"description": "The type of market to query (e.g., 'spot', 'usdt-perpetual', 'inverse-perpetual').", "type": "str", "default": "spot"}, "symbol": {"description": "The cryptocurrency symbol to retrieve the indicator for.", "type": "str", "default": "btcusdt"}, "is_from": {"description": "The starting time for the data retrieval in Unix timestamp format. Defaults to '1683895800'.", "type": "str, optional", "default": "1683895800"}, "shortperiod": {"description": "The short time period used for the Ultimate Oscillator. Defaults to 7.", "type": "int, optional", "default": "7"}, "mediumperiod": {"description": "The medium time period used for the Ultimate Oscillator. Defaults to 14.", "type": "int, optional", "default": "14"}, "longperiod": {"description": "The long time period used for the Ultimate Oscillator. Defaults to 28.", "type": "int, optional", "default": "28"}, "backtracks": {"description": "The number of past periods to include in the analysis. Defaults to 1.", "type": "int, optional", "default": "1"}}}
{"name": "account_transaction_history", "description": "Retrieves an array of all transactions associated with a specific address on the Optimism blockchain.", "parameters": {"address": {"description": "The blockchain address to query for transaction history.", "type": "str", "default": "0x0000000000000000000000000000000000000123"}, "network": {"description": "The network to query, either 'mainnet' or 'testnet'. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "supply_chain", "description": "Fetches supply chain information for a given stock ticker.", "parameters": {"ticker": {"description": "The stock symbol of the company to get supply chain information for.", "type": "str", "default": "IBM"}}}
{"name": "title_details", "description": "Fetches the details of specified Netflix titles using the RapidAPI.", "parameters": {"ids": {"description": "A comma-separated string of Netflix title IDs to fetch details for.", "type": "str", "default": "80057281"}}}
{"name": "titles_seasons_seriesid", "description": "Fetches the seasons information of a TV series from the Movies Database API using the given series ID.", "parameters": {"seriesid": {"description": "The IMDb ID of the TV series for which to fetch seasons information.", "type": "str", "default": ""}}}
{"name": "get_individual_quotes_by_quote_id", "description": "Fetches individual quotes based on the given quote ID.", "parameters": {"is_id": {"description": "The ID of the quote to be retrieved.", "type": "int", "default": "4"}}}
{"name": "dns_lookup", "description": "Fetches DNS data for a given domain using the specified record type.", "parameters": {"domain": {"description": "The domain to search for DNS records.", "type": "str", "default": "google.com"}, "rtype": {"description": "The type of DNS record to fetch. Available records: A, PTR, MX, CNAME, TXT, NS.", "type": "str", "default": "NS"}}}
{"name": "agent_details", "description": "Fetch the details of an agent using their ID from the RapidAPI service.", "parameters": {"is_id": {"description": "The unique ID of the agent.", "type": "str", "default": "569e892a89a68901006bdb99"}}}
{"name": "convert_cooking_measurements", "description": "Converts a quantity of a cooking ingredient from one measurement unit to another.", "parameters": {"quantity": {"description": "The quantity of the item to convert.", "type": "float"}, "from_unit": {"description": "The unit of the input quantity (e.g., 'cup', 'gram').", "type": "str"}, "to_unit": {"description": "The unit to which the quantity should be converted (e.g., 'ounce', 'kilogram').", "type": "str"}, "item": {"description": "The cooking ingredient being converted (e.g., 'flour', 'sugar').", "type": "str"}}}
{"name": "bodyfat", "description": "Calculates the body fat percentage based on age, gender, weight, and height using the provided Toolbench RapidAPI key.", "parameters": {"age": {"description": "The age of the person in years.", "type": "int", "default": "27"}, "gender": {"description": "The gender of the person. Possible values are 'male' or 'female'.", "type": "str", "default": "female"}, "weight": {"description": "The weight of the person. Expected to be in kilograms if unit is 'metric', otherwise in pounds.", "type": "int", "default": "78"}, "height": {"description": "The height of the person. Expected to be in centimeters if unit is 'metric', otherwise in inches.", "type": "int", "default": "165"}, "unit": {"description": "The desired units of measurement to use. Possible values are 'metric' (default) or 'imperial'.", "type": "str, optional", "default": "metric"}}}
{"name": "getgender", "description": "Determines the gender of a given name using the Toolbench RapidAPI service.", "parameters": {"name": {"description": "The name for which to determine the gender.", "type": "str", "default": "Jane"}}}
{"name": "getrandomword", "description": "Fetches random words based on the specified type and count from the RapidAPI service.", "parameters": {"type": {"description": "The type of words to fetch (e.g., 'adjective', 'noun'). Defaults to 'adjective'.", "type": "str", "default": "adjective"}, "count": {"description": "The number of random words to fetch. Defaults to 1.", "type": "int", "default": "1"}}}
{"name": "leaguegroups", "description": "Fetches the groups in a specified basketball league tournament for a given season.", "parameters": {"seasonid": {"description": "The season ID for which to retrieve the league's groups.", "type": "int", "default": 22873}, "tournamentid": {"description": "The unique tournament ID for which to retrieve the league's groups.", "type": "int", "default": 441}}}
{"name": "races", "description": "Retrieves a list of races and session details for a specified F1 season.", "parameters": {"season_id": {"description": "The ID of the F1 season for which to list races and session details.", "type": "int", "default": "2020"}}}
{"name": "ip_lookup", "description": "This function performs an IP lookup using the provided IP address and returns the geolocation details. It utilizes the IP Whois Geolocation API from RapidAPI.", "parameters": {"ip": {"description": "The IP address (IPv4 or IPv6) to look up.", "type": "str", "default": "1.1.1.1"}}}
{"name": "ideal_body_weight", "description": "Calculates the ideal body weight based on height, body frame size, gender, and optional formula.", "parameters": {"body_frame": {"description": "The body frame size of the person. It can be one of the following values: \"small\", \"medium\", or \"large\".", "type": "str", "default": "medium"}, "height": {"description": "The height in centimeters (cm) of the person.", "type": "int", "default": "175"}, "gender": {"description": "The gender of the person. It can be either \"male\" or \"female\".", "type": "str", "default": "male"}, "formula": {"description": "The formula for ideal weight estimation. It can be either \"hamwi\" (default) or \"devine\".", "type": "str, optional", "default": "hamwi"}}}
{"name": "get_workout_plan", "description": "Fetches a workout plan based on specified criteria including time duration, target muscle, location, and available equipment.", "parameters": {"time": {"description": "The duration of the workout.", "type": "str", "default": "30"}, "equipment": {"description": "The type of equipment available.", "type": "str", "default": "dumbbells"}, "muscle": {"description": "The target muscle group for the workout.", "type": "str", "default": "biceps"}, "location": {"description": "The location for the workout (e.g., gym, home).", "type": "str", "default": "gym"}}}
{"name": "get_exercises", "description": "Fetch a list of exercises from the MuscleWiki API with optional filters.", "parameters": {"force": {"description": "Filter exercises by the type of force (e.g., push, pull). Defaults to None.", "type": "str, optional", "default": ""}, "name": {"description": "Filter exercises by exercise name. Defaults to None.", "type": "str, optional", "default": ""}, "muscle": {"description": "Filter exercises by targeted muscle group. Defaults to None.", "type": "str, optional", "default": ""}, "category": {"description": "Filter exercises by exercise category. Defaults to None.", "type": "str, optional", "default": ""}, "difficulty": {"description": "Filter exercises by difficulty level. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "suggestqueries", "description": "Fetches suggestions based on the given query using the specified RapidAPI key.", "parameters": {"query": {"description": "The search query for which suggestions are to be fetched.", "type": "str", "default": "How to"}}}
{"name": "all_crypto", "description": "Fetches a datatable of cryptocurrency information from the RapidAPI endpoint.", "parameters": {"page": {"description": "The page number of the data to retrieve. Defaults to '1'.", "type": "str, optional", "default": "1"}, "lang": {"description": "The language code for the data. Defaults to 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "market", "description": "Fetches market data from Brave New Coin API based on specified asset IDs.", "parameters": {"quoteassetid": {"description": "UUID of the quote asset to filter the market results. Only returns markets which include this asset on the quote side, e.g., USD = 'e77b9824-126a-418e-a69c-a2e682578e94'.", "type": "str, optional", "default": ""}, "baseassetid": {"description": "UUID of the base asset to filter the market results. Only returns markets which include this asset on the base side, e.g., BTC = 'f1ff77b6-3ab4-4719-9ded-2fc7e71cff1f'.", "type": "str, optional", "default": ""}}}
{"name": "stock_get_stock_historical_price_data", "description": "Fetch historical pricing data for a given stock symbol over a specified date range and interval.", "parameters": {"symbol": {"description": "Ticker symbol for the stock (e.g., \"AAPL\" for Apple Inc.).", "type": "str", "default": "AAPL"}, "start_date": {"description": "The start date for fetching historical data in 'YYYY-MM-DD' format.", "type": "str", "default": "2022-03-02"}, "time_interval": {"description": "The time interval for the data; can be 'daily', 'weekly', or 'monthly'.", "type": "str", "default": "daily"}, "end_date": {"description": "The end date for fetching historical data in 'YYYY-MM-DD' format.", "type": "str", "default": "2022-03-03"}, "region": {"description": "The region for the stock market. Default is 'US'.", "type": "str, optional", "default": "US"}}}
{"name": "marketbyid", "description": "Retrieves detailed information about a specific market based on the provided market UUID.", "parameters": {"is_id": {"description": "The unique identifier (UUID) of the market.", "type": "str", "default": ""}}}
{"name": "streams_investor_relations", "description": "Fetches the most recent messages posted by verified Investor Relations customers from the StockTwits API.", "parameters": {"since": {"description": "Returns results with an ID greater than (more recent than) the specified ID.", "type": "int, optional", "default": ""}, "max": {"description": "Returns results with an ID less than (older than) or equal to the specified ID.", "type": "int, optional", "default": ""}, "limit": {"description": "The number of results to return, default and max limit is 30. This limit must be a number under 30. Defaults to '20'.", "type": "str, optional", "default": "20"}, "callback": {"description": "Defines your own callback function name for JSONP support, add this parameter as the value. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "calculate_median", "description": "Calculates the median of a list of numbers.", "parameters": {"numbers": {"description": "The list of numbers.", "type": "List[Union[int, float]]"}}}
{"name": "search_by_keyword", "description": "Searches for products using a specified keyword on the 1688 platform through the Taobao-Tmall Product Detail API.", "parameters": {"keyword": {"description": "The search keyword to look for products.", "type": "str", "default": "海久水瓶"}, "page": {"description": "The page number for paginated results.", "type": "int", "default": "1"}}}
{"name": "products_detail", "description": "Fetch detailed information of a product using its ID and a RapidAPI key.", "parameters": {"is_id": {"description": "The product ID used to query the product details.", "type": "int", "default": "397144"}}}
{"name": "downloadmovie", "description": "Downloads a movie in the specified format using the given parameters.", "parameters": {"is_id": {"description": "Unique identifier for the movie.", "type": "str", "default": "VXvX5"}, "format": {"description": "Format to download the movie in. Supported formats are 'mp4', 'webm', or 'flv'.", "type": "str", "default": "mp4"}, "hq": {"description": "If set to True, downloads a higher-quality version of the movie. This is only valid for 'mp4' format.", "type": "bool, optional", "default": "checked"}}}
{"name": "define_a_word_search", "description": "Fetches the definition of a specific word from the Urban Dictionary API.", "parameters": {"term": {"description": "The word to define.", "type": "str", "default": "yeet"}}}
{"name": "schoolname", "description": "Fetches all data from a specific school by its name using the Toolbench RapidAPI.", "parameters": {"name": {"description": "The name of the school for which data is to be fetched.", "type": "str", "default": ""}}}
{"name": "stock_get_daily_low", "description": "Fetches the daily low stock price for a given symbol from the specified region using the RapidAPI service.", "parameters": {"symbol": {"description": "The ticker symbol of the stock (e.g., \"AAPL\" for Apple Inc.).", "type": "str", "default": "AAPL"}, "region": {"description": "The region code where the stock is listed. Defaults to 'US'. Valid options include 'US', 'BR', 'AU', 'CA', 'FR', 'DE', 'HK', 'IN', 'IT', 'ES', 'GB', 'S'.", "type": "str, optional", "default": "US"}}}
{"name": "note_duration", "description": "Calculates the duration between two musical notes based on their frequencies and the tempo.", "parameters": {"freq1": {"description": "The frequency of the first note in Hz.", "type": "int", "default": 120}, "freq2": {"description": "The frequency of the second note in Hz.", "type": "int", "default": 120}, "bpm": {"description": "The tempo of the music in beats per minute. Defaults to 120.", "type": "int, optional"}}}
{"name": "stochrsi", "description": "Fetches the Stochastic Relative Strength Index (STOCHRSI) for a given financial instrument using the Twelve Data API.", "parameters": {"symbol": {"description": "The instrument symbol, which can be an equity, index, ETF, forex, or cryptocurrency (e.g., `AAPL`, `EUR/USD`, `ETH/BTC`).", "type": "str", "default": "AAPL"}, "interval": {"description": "The interval between two consecutive points in the time series. Supported values include `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`.", "type": "str", "default": "1min"}, "fast_dma_type": {"description": "The type of moving average used for smoothing. Supported values are `SMA`, `EMA`, `WMA`, `DEMA`, `TEMA`, `TRIMA`, `KAMA`, `MAMA`, `T3MA`. Defaults to `SMA`.", "type": "str", "default": "SMA"}, "series_type": {"description": "The type of series data. Supported values are `open`, `high`, `low`, `close`. Defaults to `close`.", "type": "str", "default": "close"}, "fast_d_period": {"description": "The period for the fast D moving average. Defaults to 3.", "type": "int", "default": 3}, "outputsize": {"description": "The number of data points to return. Defaults to 30.", "type": "int", "default": 30}, "fast_k_period": {"description": "The period for the fast K moving average. Defaults to 3.", "type": "int", "default": 3}, "format": {"description": "The output format of the API response. Supported values are `json` and `csv`. Defaults to `json`.", "type": "str", "default": "json"}, "time_period": {"description": "The period for the RSI calculation. Defaults to 14.", "type": "int", "default": 14}}}
{"name": "summary_details", "description": "Fetches and returns a detailed summary of any public stock using a given stock symbol.", "parameters": {"symbol": {"description": "The stock symbol for which to fetch the summary details.", "type": "str", "default": ""}}}
{"name": "stock_news", "description": "Fetches the latest news related to a specific stock symbol/ticker.", "parameters": {"symbol": {"description": "The stock symbol or ticker for which to fetch news. Examples include 'MSFT:NASDAQ', 'MSFT', '^DJI', and 'VTSAX'.", "type": "str", "default": "AAPL:NASDAQ"}, "language": {"description": "The language in which to return the results, specified as a 2-letter ISO 639-1 code. Default is 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "get_10_year_historical_quarterly_prices", "description": "Fetch the 10-year historical quarterly prices for a given stock ticker.", "parameters": {"ticker": {"description": "The stock ticker symbol for which the historical data is to be fetched.", "type": "str", "default": "AAPL"}}}
{"name": "get_stations_within_1_km", "description": "Fetch the nearest EV charging stations within a 1 km radius from a given latitude and longitude.", "parameters": {"region": {"description": "The region code (us for United States, ca for Canada, uk for United Kingdom, nz for New Zealand, hk for Hong Kong).", "type": "str", "default": ""}, "latitude": {"description": "The latitude of the location for which to find nearby charging stations.", "type": "int", "default": "40.733"}, "longitude": {"description": "The longitude of the location for which to find nearby charging stations.", "type": "int", "default": "-74.202"}}}
{"name": "get_web_detection", "description": "Detects web information for a given image using the Toolbench RapidAPI.", "parameters": {"image": {"description": "The URL of the image to be analyzed.", "type": "str", "default": "https://avatars.mds.yandex.net/get-mpic/5215925/img_id4862938180215999126.jpeg/orig"}}}
{"name": "nsfw_image_classification", "description": "Classifies whether the image content at the given URL is inappropriate or not using the NSFW Image Classification API.", "parameters": {"link": {"description": "The URL of the image to be analyzed.", "type": "str", "default": "https://cdn77-pic.xvideos-cdn.com/videos/thumbs169poster/c5/d0/e4/c5d0e4cd6124e1d2f5b3add1f582ca13/c5d0e4cd6124e1d2f5b3add1f582ca13.30.jpg"}}}
{"name": "get_label_detection", "description": "This function interacts with the RapidAPI Label Detection service to get label information for a given image URL. ", "parameters": {"image": {"description": "The URL of the image to be analyzed.", "type": "str", "default": "https://m.media-amazon.com/images/I/71k6XnjuwkL._AC_SL1500_.jpg"}}}
{"name": "get_person_by_id", "description": "Fetches the information of a person from the system using their `person_id`.", "parameters": {"person_id": {"description": "The unique identifier of the person whose information is to be retrieved.", "type": "str", "default": ""}}}
{"name": "steam", "description": "Checks the availability of a given username on Steam using the Toolbench RapidAPI service.", "parameters": {"username": {"description": "The username to check for availability on Steam.", "type": "str", "default": "username"}}}
{"name": "navigations_get_node_content", "description": "Fetches the content of a node in a navigation hierarchy.", "parameters": {"is_id": {"description": "The 'id' field value returned from the /navigations/get-root endpoint.", "type": "int", "default": "26066300130"}, "cat_id": {"description": "The 'cat_id' field value returned from the /navigations/get-tabs endpoint.", "type": "int", "default": "2026"}, "language": {"description": "The 2-letter language code (default is 'en').", "type": "str, optional", "default": "en"}, "currency": {"description": "The 3-letter currency code (default is 'USD').", "type": "str, optional", "default": "USD"}, "country": {"description": "The 2-letter country code (default is 'US').", "type": "str, optional", "default": "US"}}}
{"name": "get_city_from_zipcode", "description": "Retrieves the city name for a given ZIP code using the Ziptastic API.", "parameters": {"zipcode": {"description": "The ZIP code to look up.", "type": "str"}}}
{"name": "by_zip_code", "description": "Fetches weather data based on a given zip code using the Toolbench RapidAPI service.", "parameters": {"zip": {"description": "The zip code for which to fetch the weather data. If the country is not specified, the search defaults to the USA.", "type": "str", "default": "94040"}, "lang": {"description": "Language in which to receive the output. Defaults to None.", "type": "str, optional", "default": ""}, "units": {"description": "Units of measurement to use. Available options are 'standard', 'metric', and 'imperial'. If not specified, 'standard' units will be used by default. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "weather_statistics", "description": "Fetches the average weather statistics for a specified location for the next 30 days.", "parameters": {"units": {"description": "Unit system to be used. Available values are:", "type": "str", "default": "auto"}, "place_id": {"description": "Identifier of a place. If not provided, the location can be specified using `lat` and `lon`.", "type": "str, optional", "default": ""}, "lon": {"description": "Longitude in the format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4. Defaults to '-122.42282'.", "type": "str, optional", "default": "-122.42282"}, "lat": {"description": "Latitude in the format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4. Defaults to '37.81021'.", "type": "str, optional", "default": "37.81021"}}}
{"name": "by_geographic_coordinates", "description": "Fetches weather data based on geographic coordinates.", "parameters": {"lon": {"description": "Longitude of the geographic coordinates.", "type": "int", "default": "139"}, "lat": {"description": "Latitude of the geographic coordinates.", "type": "int", "default": "35"}, "units": {"description": "Units of measurement. Options are 'standard', 'metric', and 'imperial'. Defaults to 'standard' if not specified.", "type": "str, optional", "default": ""}, "lang": {"description": "Language for the output. Defaults to the API's default language if not specified.", "type": "str, optional", "default": ""}}}
{"name": "get_media_links", "description": "Fetches media links associated with a given watch ID from the Watch Database API.", "parameters": {"watchid": {"description": "The unique identifier for the watch whose media links are to be fetched.", "type": "str", "default": ""}}}
{"name": "web_search", "description": "Performs a web search using the specified query and optional parameters.", "parameters": {"query": {"description": "The search query to be executed. Examples include 'ronaldo site:instagram.com', 'twitter filetype:pdf', and 'inurl:market'.", "type": "str", "default": "Leo Messi"}, "related_keywords": {"description": "If specified, includes related keywords in the search results. This may increase API latency. Default is None.", "type": "str, optional", "default": ""}, "limit": {"description": "The maximum number of search results to return. The maximum recommended value is 300. Default is 10.", "type": "int, optional", "default": "10"}}}
{"name": "song_info", "description": "Retrieve basic information about a song from a given track URL using the SoundCloud API.", "parameters": {"track_url": {"description": "The URL of the track for which the information is to be retrieved.", "type": "str", "default": "https://soundcloud.com/user-977421934/the-phoenix"}}}
{"name": "get_search_keyword", "description": "Search for a keyword using RapidAPI and return related hashtags and places.", "parameters": {"keyword": {"description": "The keyword to search for on Instagram.", "type": "str", "default": "los angeles"}}}
{"name": "get_related_video_with_keywords", "description": "Fetches a list of related videos based on the provided keywords from the TikTok API.", "parameters": {"keywords": {"description": "The search keywords to find related videos.", "type": "str", "default": "Beautiful Girl"}, "count": {"description": "The number of videos to return. Defaults to '10'.", "type": "str, optional", "default": "10"}, "publish_time": {"description": "Filter videos by their publish time. Defaults to 0.", "type": "int, optional", "default": "0"}, "cursor": {"description": "The cursor for pagination. Defaults to '0'.", "type": "str, optional", "default": "0"}, "region": {"description": "The region to filter videos. Refer to the TikTok region list for details. Defaults to 'US'.", "type": "str, optional", "default": "US"}, "sort_type": {"description": "Sort type for the videos. Defaults to 0.", "type": "int, optional", "default": "0"}}}
{"name": "label_template_brands", "description": "Returns the list of blank label sheet brands supported by Ecardify on the given date.", "parameters": {"format": {"description": "The paper size format, which can be either \"Letter\" (8.5 inch by 11 inch) or \"A4\" (210 mm by 297 mm).", "type": "str", "default": "a4"}}}
{"name": "get_all_images_of_an_collection", "description": "Fetches all images from a specified collection using the Pulsar6 API.", "parameters": {"is_id": {"description": "The ID of the collection to retrieve images from.", "type": "str", "default": ""}}}
{"name": "email", "description": "Retrieve detailed information about a person using their email address via the RapidAPI enrichment tool.", "parameters": {"email": {"description": "The email address of the person to be enriched.", "type": "str", "default": "carynburns83@gmail.com"}}}
{"name": "v1_dictionary", "description": "Fetches the definition of a given word using the API Ninjas Dictionary API.", "parameters": {"word": {"description": "The word to look up.", "type": "str", "default": "bright"}}}
{"name": "translate", "description": "Translates the given text to a specified target language using the Google Translate API and RapidAPI.", "parameters": {"text": {"description": "The text to be translated.", "type": "str", "default": "How are You"}, "target_lang": {"description": "The language code of the target language.", "type": "str", "default": "es"}}}
{"name": "dictionary_examples_temporarily_unavailable", "description": "Fetch dictionary examples for a given query and language using the RapidAPI service.", "parameters": {"q": {"description": "The query string to search for dictionary examples.", "type": "str", "default": ""}, "language": {"description": "The language code for the dictionary examples.", "type": "str", "default": ""}}}
{"name": "year_end_billboard_200_albums", "description": "Fetch the Year-End Billboard 200 Albums chart for a given year and range.", "parameters": {"year": {"description": "The year to fetch the Year-End Billboard 200 Albums for.", "type": "int", "default": "2021"}, "range": {"description": "The range of results to return (default is '1-10'). If not specified, all results are returned.", "type": "str", "default": "1-10"}}}
{"name": "get_the_market_calendar", "description": "Fetches the market calendar for a given month and year using the Tradier API.", "parameters": {"month": {"description": "The month for which to retrieve the market calendar. Defaults to '11'.", "type": "str", "default": "11"}, "year": {"description": "The year for which to retrieve the market calendar. Defaults to '2013'.", "type": "str", "default": "2013"}}}
{"name": "market_get_movers", "description": "Fetch the latest information on market movers based on a specified template.", "parameters": {"is_id": {"description": "The ID value returned from the market auto-complete endpoint, used to specify the market segment.", "type": "str", "default": "nky:ind"}, "template": {"description": "A string representing the category of market movers to retrieve. Possible values are 'COMMODITY', 'CURRENCY', 'INDEX', 'INDEXFUTURE', 'RATE', or 'STOCK'. Defaults to 'INDEX'.", "type": "str, optional", "default": "INDEX"}}}
{"name": "categoryflag", "description": "Fetches the flag image of a specific category in PNG format from the Motorsport API.", "parameters": {"flag": {"description": "The name of the flag category to fetch.", "type": "str", "default": "jp"}}}
{"name": "tournament_teams", "description": "Fetches a list of teams participating in a specific tournament using the RapidAPI service.", "parameters": {"tournamentid": {"description": "The ID of the tournament.", "type": "int", "default": "1"}}}
{"name": "matchh2hduel", "description": "Retrieves head-to-head duel information for a specific basketball match.", "parameters": {"is_id": {"description": "The ID of the basketball match for which to retrieve head-to-head duel information.", "type": "int", "default": 10066290}}}
{"name": "calendars_get_economic_calendar", "description": "Fetch the economic calendar for a specified date range and set of countries.", "parameters": {"is_from": {"description": "The start date in the format yyyy-MM-dd (e.g., '2022-08-21').", "type": "str", "default": ""}, "to": {"description": "The end date in the format yyyy-MM-dd (e.g., '2022-09-05').", "type": "str", "default": ""}, "minimportance": {"description": "The minimum importance level of events to fetch. Valid values are -1, 0, or 1.", "type": "int, optional", "default": ""}, "lang": {"description": "The language code for the response. Default is 'en'.", "type": "str, optional", "default": "en"}, "countries": {"description": "A comma-separated list of country codes to include (e.g., 'US,EU,JP'). Default includes multiple countries.", "type": "str, optional", "default": "US,EU,JP,AU,DE,GB,CA,FR,IT,NZ,ES,MX,CH,TR,ZA"}}}
{"name": "transcripts_list_deprecated", "description": "Fetches a list of transcripts for a specific symbol.", "parameters": {"is_id": {"description": "Symbol to query for data. Only one symbol can be queried at a time.", "type": "str", "default": "aapl"}, "until": {"description": "The value of meta/page/minmaxPublishOn/min JSON object returned to load the next page. Defaults to None.", "type": "int, optional", "default": ""}, "size": {"description": "The number of items per response. Defaults to 20.", "type": "int, optional", "default": "20"}}}
{"name": "chi_square_independence_test", "description": "Performs a Chi-Square test for independence on a 2x2 contingency table.", "parameters": {"contingency_table": {"description": "A 2x2 contingency table represented as a list of lists.", "type": "List[List[int]]", "default": 0.05}, "significance_level": {"description": "The significance level for the Chi-Square test. Defaults to 0.05.", "type": "float, optional", "default": 0.05}}}
{"name": "shazam_songs_list_similarities", "description": "Fetches similar songs using the Shazam API.", "parameters": {"is_id": {"description": "The ID of the song for which similar songs are to be fetched.", "type": "str", "default": "track-similarities-id-424767377"}, "locale": {"description": "The language code for the results. Defaults to 'en-US'.", "type": "str, optional", "default": "en-US"}}}
{"name": "get_song_related", "description": "Fetches related content for a song using the YouTube Music API.", "parameters": {"browse_id": {"description": "The unique identifier for the song being queried.", "type": "str", "default": "MPTRt_ZXONnvFeQpN"}}}
{"name": "get_artist_s_albums", "description": "Fetches and returns basic details about the albums of an artist from a given Spotify URL.", "parameters": {"spotify_url": {"description": "The URL of the artist's Spotify page.", "type": "str", "default": "https://open.spotify.com/artist/1nIUhcKHnK6iyumRyoV68C"}}}
{"name": "list_weekly_top_albums", "description": "Fetches the weekly top albums from Spotify for a given date and region.", "parameters": {"date": {"description": "The date in `YYYY-MM-DD` format for which to retrieve the top albums. Leave blank to get the latest chart.", "type": "str, optional", "default": ""}, "region": {"description": "The region code (ISO 3166 alpha-2, e.g., `US`) for which to retrieve the top albums. Defaults to `global`.", "type": "str, optional", "default": ""}}}
{"name": "postalcode", "description": "Fetches location information for a given US postal code using the Toolbench API service.", "parameters": {"postal_code": {"description": "The postal code or zip code for which to fetch location information.", "type": "str", "default": "33166"}}}
{"name": "getstatus", "description": "Fetches the status of the current session for a given phone ID from the Maytapi WhatsApp API.", "parameters": {"phone_id": {"description": "The unique identifier for the phone whose session status is to be queried.", "type": "str", "default": ""}}}
{"name": "article_index", "description": "Fetches an indexed list of articles from the RapidAPI endpoint with an optional limit on the number of articles returned.", "parameters": {"limit": {"description": "The maximum number of articles to return. Defaults to 1.", "type": "int, optional", "default": "1"}}}
{"name": "veiculo_tipo_id_marca", "description": "Retrieves a listing of vehicles for a given brand from an API.", "parameters": {"veiculo_tipo": {"description": "The type of vehicle (e.g., \"carros\", \"motos\").", "type": "str", "default": "carros"}, "id_marca": {"description": "The ID of the vehicle brand.", "type": "str", "default": "6"}}}
{"name": "consumer_phone_search", "description": "Search for people in the Data Axle database based on the provided criteria.", "parameters": {"limit": {"description": "The maximum number of results to return.", "type": "str", "default": "20"}, "packages": {"description": "The data packages or filters to apply to the search.", "type": "str", "default": "standard_v2"}, "query": {"description": "The phone number to search for. Defaults to '(206) 555-1212'.", "type": "str, optional", "default": "(206) 555-1212"}}}
{"name": "historic_event_by_year", "description": "Fetches historical events for a given year using the World History Timeline API.", "parameters": {"year": {"description": "The year for which historical events are to be fetched.", "type": "str", "default": "400"}}}
{"name": "get_futured_playlists", "description": "Fetch featured playlists for a specific country and timestamp from Spotify.", "parameters": {"timestamp": {"description": "Date of the featured playlists in the format 'yyyy-mm-dd'.", "type": "str", "default": "2022-03-23"}, "country": {"description": "Country code to fetch playlists for. Must be one of the following:", "type": "str", "default": "US"}, "offset": {"description": "Number of items to skip (default is 0).", "type": "int, optional", "default": "0"}, "limit": {"description": "Maximum number of items to return (default is 20, max is 50).", "type": "int, optional", "default": "20"}}}
{"name": "india_songs", "description": "Fetch the India Songs chart information for a given date and range from the Billboard API.", "parameters": {"date": {"description": "The date for which the chart information is requested, formatted as 'YYYY-MM-DD'.", "type": "str", "default": "2022-05-07"}, "range": {"description": "The range of chart positions to retrieve.", "type": "str", "default": "1-10"}}}
{"name": "related_artists", "description": "Fetches related artists for a given artist ID using the Spotify RapidAPI.", "parameters": {"artist_id": {"description": "The Spotify ID of the artist to find related artists for.", "type": "str", "default": "0EmeFodog0BfCgMzAIvKQp"}}}
{"name": "get_podcast_metadata", "description": "Fetch full details of a podcast using its Show ID from Spotify's metadata API.", "parameters": {"showid": {"description": "The unique identifier for the podcast show.", "type": "str", "default": "4oTBzqC3DHbaKNFq2YXpQw"}}}
{"name": "quote_get_margin_requirements", "description": "Fetches the margin requirements for a given stock symbol from the Schwab API.", "parameters": {"symbol": {"description": "The stock symbol for which to retrieve margin requirements.", "type": "str", "default": "TSLA"}}}
{"name": "displacement", "description": "Calculates the displacement of an object given its initial velocity, acceleration, and time.", "parameters": {"initial_velocity": {"description": "The initial velocity of the object.", "type": "float"}, "acceleration": {"description": "The acceleration of the object.", "type": "float"}, "time": {"description": "The time elapsed.", "type": "float"}}}
{"name": "get_crime_rates_by_zip", "description": "Retrieve crime statistics for a given ZIP code using the Crime Data by Zipcode API.", "parameters": {"zip": {"description": "ZIP code to retrieve crime data for.", "type": "int", "default": "94109"}}}
{"name": "codepoint", "description": "Fetch detailed information about a Unicode codepoint using the Codepoints API.", "parameters": {"codepoint": {"description": "The hex number representing the Unicode codepoint.", "type": "str", "default": "0A2F"}}}
{"name": "block", "description": "Fetches information about a specified Unicode block from the Codepoints API.", "parameters": {"block": {"description": "The name of the Unicode block to retrieve information about.", "type": "str", "default": "basic_latin"}, "callback": {"description": "The JSON-P function name for the response. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "get_draw_result", "description": "Retrieve the draw result for a specified game in a given region and on a specific date.", "parameters": {"game": {"description": "The name of the game for which to retrieve the draw result. Use the **Game List** method to get available games by country in JSON format.", "type": "str", "default": "lotto"}, "date": {"description": "The date of the draw result to retrieve, formatted as 'YYYY-MM-DD'.", "type": "str", "default": "2023-01-01"}, "region": {"description": "The region or country for which to retrieve the draw result. Use the **Region List** method to get available regions in JSON format.", "type": "str", "default": "us"}}}
{"name": "v1_ownersearch", "description": "Performs a search on the owner name or postcode and returns details about the trademarks found for that owner. Duplicate owner results can be returned by this endpoint, especially when an owner had an address change.", "parameters": {"search_keyword": {"description": "The search keyword (e.g., 'ferr' will return results for 'ferrari'). Defaults to 'netflix'. Use literal 'null' if you don't want to use this parameter.", "type": "str", "default": "netflix"}, "postcode": {"description": "The postcode to filter the search results (e.g., '95066'). Use literal 'null' if you don't want to use this parameter. Note that attorneys might omit postcodes from filings, so those results cannot be returned as they don't have postcode attached as metadata.", "type": "str", "default": ""}}}
{"name": "list_users", "description": "Fetches and returns a list of users associated with a specified account identifier from the RapidAPI service.", "parameters": {"aid": {"description": "The account identifier for which the list of users is being fetched.", "type": "str", "default": ""}, "page": {"description": "The page offset for paginated results. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "currencies_list", "description": "Fetch a list of all available currencies using the investing-cryptocurrency-markets API.", "parameters": {"time_utc_offset": {"description": "The UTC offset value in seconds. For example, UTC+8 is represented as 28800 (8 * 60 * 60). Default is 28800.", "type": "int, optional", "default": "28800"}, "lang_id": {"description": "The language ID as returned by the .../get-meta-data endpoint. Default is 1.", "type": "int, optional", "default": "1"}}}
{"name": "get_channel_description", "description": "Fetches the channel description from the Twitch API using the provided user ID.", "parameters": {"userid": {"description": "The ID of the user whose channel description is to be fetched.", "type": "str", "default": "julie"}}}
{"name": "wnba_schedule", "description": "Fetches the WNBA schedule data for a specified date using the provided API key.", "parameters": {"month": {"description": "The month for which to retrieve the schedule, as a string.", "type": "str", "default": "05"}, "day": {"description": "The day for which to retrieve the schedule, as a string.", "type": "str", "default": "05"}, "year": {"description": "The year for which to retrieve the schedule, as a string.", "type": "str", "default": "2022"}}}
{"name": "getallgames", "description": "Retrieve all games data using the RapidAPI service.", "parameters": {"cookie": {"description": "The cookie value to include in the query parameters. Default is 'i18next=es;'.", "type": "str", "default": "i18next=es;"}, "host": {"description": "The host value to include in the query parameters. Default is 'www.mozzartbet.com.co'.", "type": "str", "default": "www.mozzartbet.com.co"}, "referer": {"description": "The referer value to include in the query parameters. Default is 'https://www.mozzartbet.com.co/es'.", "type": "str", "default": "https://www.mozzartbet.com.co/es"}}}
{"name": "drivers_standings", "description": "Retrieve F1 drivers' standings data for a specified year.", "parameters": {"year": {"description": "The championship year for which to retrieve drivers' standings. Defaults to 2020.", "type": "int, optional", "default": "2020"}}}
{"name": "provider3_live_match_id", "description": "Fetches live match details for a given match ID from Provider3 using the RapidAPI service.", "parameters": {"is_id": {"description": "The unique identifier for the match.", "type": "str", "default": ""}}}
{"name": "managerlastmatches", "description": "Gets the list of the last matches played by a football manager, paginated by the given page number.", "parameters": {"is_id": {"description": "The ID of the manager whose last matches you want to retrieve.", "type": "int", "default": 787526}, "page": {"description": "The zero-based page number of the results you want to retrieve.", "type": "int", "default": ""}}}
{"name": "pitstop_summary", "description": "Retrieves the pitstop summary for a specific race given the year and location.", "parameters": {"year": {"description": "The year of the race.", "type": "int", "default": "2021"}, "location": {"description": "The location of the race.", "type": "str", "default": "abu dhabi"}}}
{"name": "get_pricing", "description": "Retrieves pricing information for a specified country or all countries.", "parameters": {"p": {"description": "API Key from Sms77.io.", "type": "str", "default": ""}, "country": {"description": "An ISO Code representing the country you wish to retrieve the pricing for. If not specified, the prices for all countries will be returned. Examples include 'de' for Germany, 'uk' for Great Britain, and 'fr' for France.", "type": "str, optional", "default": ""}, "format": {"description": "The format of the response: either 'JSON' or 'CSV'. Defaults to 'JSON'.", "type": "str, optional", "default": ""}}}
{"name": "getmessage", "description": "Retrieves message details based on the provided message ID using the Toolbench RapidAPI service.", "parameters": {"message_id": {"description": "The unique identifier of the message to retrieve.", "type": "int", "default": ""}}}
{"name": "keyword_search_at_coordinates", "description": "Performs a keyword search at specific geographic coordinates for businesses using the Google Local Rank Tracker API.", "parameters": {"query": {"description": "The Google Place ID of the business or the business name to match against in results.", "type": "str", "default": "web design"}, "lng": {"description": "Grid center coordinate point longitude value.", "type": "int", "default": "-121.938314"}, "lat": {"description": "Grid center coordinate point latitude value.", "type": "int", "default": "37.341759"}, "zoom": {"description": "Google Maps zoom level to use for search on each grid point. Allowed values are 0-18. Default is 13.", "type": "int, optional", "default": "13"}}}
{"name": "getpastevents", "description": "Fetches past Azure events from the specified page using the given RapidAPI key.", "parameters": {"page": {"description": "The page number to fetch the past events from.", "type": "int", "default": "1"}}}
{"name": "onpage_seo_analyze", "description": "Analyzes on-page SEO for a given website using the Toolbench RapidAPI service.", "parameters": {"website": {"description": "The URL of the website to be analyzed.", "type": "str", "default": "getecz.com"}}}
{"name": "city_details", "description": "Fetch detailed information about a specific city using its ID from the RapidAPI service.", "parameters": {"is_id": {"description": "The ID of the city for which detailed information is to be retrieved.", "type": "str", "default": "132782"}}}
{"name": "pagesblanches", "description": "This function retrieves data from the Pages Blanches API for extracting email and phone information based on the given parameters.", "parameters": {"pbpage": {"description": "The page number of the search results to retrieve.", "type": "int", "default": "1"}, "pbkeyword": {"description": "The search keyword or term for the Pages Blanches query.", "type": "str", "default": "Patrick"}, "pblocation": {"description": "The location to filter the search results.", "type": "str", "default": "Paris"}}}
{"name": "api_analyze", "description": "Analyzes user data on TikTok, including engagement, hashtags, mentions, and recent videos.", "parameters": {"sec_user_id": {"description": "The unique security user ID of the TikTok user to analyze.", "type": "str", "default": "MS4wLjABAAAA-VASjiXTh7wDDyXvjk10VFhMWUAoxr8bgfO1kAL1-9s"}}}
{"name": "hashtag_feed_video_posts", "description": "Fetches current video posts from a hashtag feed using the provided parameters.", "parameters": {"limit": {"description": "The number of records to return. Default is 100, with a maximum limit of 500.", "type": "int, optional", "default": ""}, "hashtag_id": {"description": "The unique identifier of the hashtag, which can be obtained from the `/live/hashtag` endpoint. Requests using `hashtag_id` are executed faster than those using `name`.", "type": "str, optional", "default": ""}, "max_cursor": {"description": "A pagination cursor to get additional videos. Use the `max_cursor` value received in the previous response to get more videos.", "type": "str, optional", "default": ""}, "name": {"description": "The name of the hashtag. For example, 'summer'. Using `hashtag_id` is recommended for faster requests.", "type": "str, optional", "default": "summer"}}}
{"name": "get_user_info_by_user_id", "description": "Fetch Instagram user information by user ID using the RapidAPI service.", "parameters": {"is_id": {"description": "The Instagram user ID for which the information is to be fetched.", "type": "int", "default": "18527"}}}
{"name": "all_coins_ticker", "description": "Fetches ticker information for a range of cryptocurrencies.", "parameters": {"start": {"description": "The starting index for fetching tickers.", "type": "int", "default": "0"}, "limit": {"description": "The number of tickers to fetch from the starting index.", "type": "int", "default": "100"}}}
{"name": "get_price_history_by_id", "description": "Retrieve the price history for a given item ID from the Steam Market API.", "parameters": {"is_id": {"description": "The item ID for which to retrieve the price history.", "type": "str", "default": "730---Dreams %26 Nightmares Case"}}}
{"name": "filter_fats", "description": "Fetch keto recipes within a specified range of fat content.", "parameters": {"fat_in_grams_lt": {"description": "The upper limit for the fat content in grams.", "type": "int", "default": "25"}, "fat_in_grams_gt": {"description": "The lower limit for the fat content in grams.", "type": "int", "default": "5"}}}
{"name": "fetch_details_of_multiple_records", "description": "Fetches details of multiple records given their IDs using the Magical Taske API.", "parameters": {"is_id": {"description": "A comma-separated string of record IDs for which to fetch details. Maximum 10 IDs allowed, no spaces between commas.", "type": "str", "default": "b4180336-ef07-453d-b833-807161aedf36,7cf78e19-57d2-4bce-8999-63aad8f0e70c"}}}
{"name": "lookup_coordinates", "description": "Converts US latitude and longitude coordinates into local city information by querying the Reverse Geocode Locator API.", "parameters": {"lat": {"description": "The latitude coordinate.", "type": "int", "default": "40.785091"}, "long": {"description": "The longitude coordinate.", "type": "str", "default": "-73.968285"}}}
{"name": "dictionary_synonyms_temporarily_unavailable", "description": "Fetches synonyms from a dictionary API for a given word in the specified language.", "parameters": {"language": {"description": "The language for which the synonyms are to be fetched.", "type": "str", "default": ""}, "q": {"description": "The word for which synonyms are being requested.", "type": "str", "default": ""}}}
{"name": "get_vector_tile", "description": "Fetches vector tiles based on the OpenMapTiles schema using the provided x, y, and z coordinates.", "parameters": {"x": {"description": "The X coordinate of the tile.", "type": "int", "default": "0"}, "y": {"description": "The Y coordinate of the tile.", "type": "int", "default": "0"}, "z": {"description": "The zoom level of the tile.", "type": "int", "default": "0"}}}
{"name": "reversegeocode", "description": "Obtain the human-readable address for a given geographical location.", "parameters": {"location": {"description": "The latitude and longitude coordinates (comma-separated) for which to obtain the address.", "type": "str", "default": "37.7879493,-122.3961974"}, "language": {"description": "The language in which to return results. Defaults to 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "local_osm_v1_z_x_y_png", "description": "Downloads an OpenStreetMap standard tile image for specified coordinates and zoom level.", "parameters": {"y": {"description": "y tile number.", "type": "int", "default": "3"}, "z": {"description": "Zoom factor between 0 and 19.", "type": "int", "default": "3"}, "x": {"description": "x tile number.", "type": "int", "default": "6"}}}
{"name": "search_zip_codes_in_mexico", "description": "Performs a text search for zip codes in Mexico using the provided query string.", "parameters": {"q": {"description": "The search query string to look up zip codes.", "type": "str", "default": "cerrada san mibuel"}}}
{"name": "get_home_page_overview", "description": "Fetches trending information displayed on the Spotify home page as an incognito visitor.", "parameters": {"region": {"description": "Region code (ISO 3166 alpha-2) for localized results. Defaults to `None`, which will fallback to `US` if unsupported.", "type": "str, optional", "default": ""}}}
{"name": "bus_trolley_schedules", "description": "Fetches bus or trolley schedules based on the provided parameters from the SEPTA API.", "parameters": {"req1": {"description": "The stop ID for which the schedule is being requested.", "type": "int", "default": "17842"}, "req2": {"description": "The route number. Defaults to 17.", "type": "int, optional", "default": "17"}, "req3": {"description": "'i' for inbound or 'o' for outbound. Defaults to 'i'.", "type": "str, optional", "default": "i"}, "req6": {"description": "The number of results to return. Defaults to 7.", "type": "int, optional", "default": "7"}}}
{"name": "search_by_weight", "description": "Performs a search for player data based on the given weight using the toolbench RapidAPI.", "parameters": {"input_weight": {"description": "The weight to search for. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "discover", "description": "Discover files using the FilePursuit API with optional filters for pagination, result type, and specific links.", "parameters": {"start": {"description": "The starting point for result pagination.", "type": "int, optional", "default": ""}, "type": {"description": "The type of result to filter by. Accepted values are 'filelinks' and 'all'.", "type": "str, optional", "default": ""}, "link": {"description": "A specific link to discover files from.", "type": "str, optional", "default": ""}}}
{"name": "images", "description": "Fetches the URLs for a specified number of random WikiHow images.", "parameters": {"count": {"description": "The number of image URLs to retrieve (maximum 100).", "type": "int", "default": "3"}}}
{"name": "bus_trolley_routes", "description": "Fetches and returns the bus or trolley route stops information using the SEPTA API.", "parameters": {"req1": {"description": "The route number to fetch stops information for.", "type": "str", "default": "23"}}}
{"name": "tmall_search_by_keyword", "description": "Searches for products on Tmall by keyword.", "parameters": {"page": {"description": "The page number of the search results to retrieve.", "type": "int", "default": "1"}, "keyword": {"description": "The keyword to search for products.", "type": "str", "default": "海久水瓶"}}}
{"name": "product_details", "description": "Returns detailed product information from the Target API including variants, ratings, reviews, images, videos, price, promotion, and child products.", "parameters": {"tcin": {"description": "Target product ID which is obtained from the product search API.", "type": "str", "default": "16251811"}, "store_id": {"description": "The ID of the store from which the product details data is being retrieved. This field is required and cannot be empty.", "type": "str", "default": "3330"}, "zip": {"description": "User's zip code. Defaults to '94611'.", "type": "str, optional", "default": "94611"}, "state": {"description": "State code of the user's location. Defaults to 'CA'.", "type": "str, optional", "default": "CA"}, "latitude": {"description": "User's latitude information. Defaults to '37.820'.", "type": "str, optional", "default": "37.820"}, "longitude": {"description": "User's longitude information. Defaults to '-122.200'.", "type": "str, optional", "default": "-122.200"}}}
{"name": "earnings_history", "description": "Fetches the earnings history of a given stock ticker using the Toolbench RapidAPI.", "parameters": {"ticker": {"description": "The stock ticker symbol for which to fetch the earnings history.", "type": "str", "default": "AAPL"}}}
{"name": "update", "description": "Updates data on a specified endpoint using the provided information and RapidAPI key.", "parameters": {"info3": {"description": "The third piece of information to be sent as a query parameter.", "type": "str", "default": "333"}, "info1": {"description": "The first piece of information to be sent as a query parameter.", "type": "str", "default": "111"}, "info2": {"description": "The second piece of information to be sent as a query parameter.", "type": "str", "default": "222"}}}
{"name": "feedbacks_id", "description": "Fetches feedbacks for a given product ID from the AliExpress unofficial API.", "parameters": {"is_id": {"description": "The product ID for which feedbacks are to be fetched.", "type": "int", "default": "4000886597329"}, "withpictures": {"description": "Indicates whether to include feedbacks with pictures (1 by default).", "type": "int, optional", "default": 1}, "page": {"description": "Specifies the page number of feedback results to fetch (1 by default).", "type": "int, optional", "default": 1}}}
{"name": "get_administrative_divisions", "description": "Retrieves geographical administrative division names to be used in the Listing by georef endpoint from the Airbnb API. The hierarchical structure of administrative divisions must be respected for accurate results, meaning `admin1` is needed for `admin2`, `admin2` is needed for `admin3`, and so on.", "parameters": {"countrycode": {"description": "The ISO country code.", "type": "str", "default": "IT"}, "admin2": {"description": "The second-level administrative division. Requires `admin1` to be properly specified. Defaults to 'RM'.", "type": "str, optional", "default": "RM"}, "admin1": {"description": "The first-level administrative division. Defaults to '07'.", "type": "str, optional", "default": "07"}, "admin4": {"description": "The fourth-level administrative division. Requires `admin3`, `admin2`, and `admin1` to be properly specified. Defaults to '05809101'.", "type": "str, optional", "default": "05809101"}, "admin3": {"description": "The third-level administrative division. Requires `admin2` and `admin1` to be properly specified. Defaults to '058091'.", "type": "str, optional", "default": "058091"}}}
{"name": "list_of_hotel_types", "description": "Returns hotel type names and their translations from the Booking.com API.", "parameters": {"hotel_type_id": {"description": "The ID of the specific hotel type to query. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "trip_details", "description": "Fetches the details of a trip using the given trip UID from the Flixbus API.", "parameters": {"trip_uid": {"description": "Unique identifier for the trip.", "type": "str", "default": "direct:110725991:2015:4188"}}}
{"name": "getbookcoverimage", "description": "Fetches the book cover image for a given ISBN and language code from the RapidAPI service.", "parameters": {"isbn": {"description": "The International Standard Book Number of the book.", "type": "str", "default": "9781526606198"}, "languagecode": {"description": "The language code for the book.", "type": "str", "default": "en"}}}
{"name": "get", "description": "Fetch the word equivalent of a given number in a specified language using an API.", "parameters": {"language": {"description": "The language in which the number should be translated.", "type": "str", "default": "EN"}, "number": {"description": "The number to be converted to words.", "type": "int", "default": "98765432.10"}, "authorization": {"description": "Optional authorization token for the API. Defaults to a pre-set value.", "type": "str, optional", "default": "YzdiOTg1YmItZWM1Zi00YTQ3LTk3MWItNDExMzEyMWE3NGVlOlc3T09UTXNrbGVnZkhqRm5UcFpBRDllbFdVNXBqSTM0cXREb2NLWUpVNjFUWGw1R2sxajJFRTNDdUFKamxJT1Q="}, "content_type": {"description": "The media type of the request. Defaults to 'application/json'.", "type": "str, optional", "default": "application/json"}, "accept_charset": {"description": "The character encoding standard. Defaults to 'utf-8'.", "type": "str, optional", "default": "utf-8"}, "locale": {"description": "The locale to use for language-specific formatting. Defaults to 'USA'.", "type": "str, optional", "default": "USA"}, "units": {"description": "The unit type for the number. Defaults to 'cent'.", "type": "str, optional", "default": "cent"}, "currency": {"description": "The currency type related to the number. Defaults to 'dollar'.", "type": "str, optional", "default": "dollar"}, "output": {"description": "The format of the output. Defaults to 'text'.", "type": "str, optional", "default": "text"}}}
{"name": "get_brandlist_by_siteid_zappos_1_6pm_2", "description": "Retrieve the brand list from the Zappos or 6pm websites by site ID using the RapidAPI.", "parameters": {"siteid": {"description": "The site ID to fetch the brand list from (1 for Zappos, 2 for 6pm).", "type": "int", "default": "1"}}}
{"name": "investment_profit", "description": "Calculates the profit from an investment based on the initial amount, annual return rate, and time.", "parameters": {"amount": {"description": "The initial investment amount.", "type": "float"}, "rate": {"description": "The annual return rate expressed as a decimal.", "type": "float"}, "years": {"description": "The number of years the investment is held.", "type": "int"}}}
{"name": "product_category_list", "description": "Fetches the list of Amazon product categories for a specified country or marketplace.", "parameters": {"country": {"description": "Sets the marketplace country, language, and currency.", "type": "str", "default": "US"}}}
{"name": "tweet_retweeters", "description": "Fetches the list of retweeters for a given tweet.", "parameters": {"is_id": {"description": "The ID of the tweet for which to fetch retweeters.", "type": "str", "default": "1485953263040188416"}, "count": {"description": "The number of results to return. Defaults to 20.", "type": "int, optional", "default": "20"}, "cursor": {"description": "The cursor for pagination to fetch additional results. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "get_sign_prediction_for_today_by_name", "description": "Fetches the zodiac sign prediction for today based on the provided sign name using the RapidAPI service.", "parameters": {"name": {"description": "The name of the zodiac sign for which the prediction is requested.", "type": "str", "default": "Aries"}}}
{"name": "user_videos", "description": "Retrieves videos for a specified TikTok user using their `secUid` and `user_id`. Optionally, a cursor can be provided for pagination.", "parameters": {"secuid": {"description": "The secUid of the TikTok user.", "type": "str", "default": "MS4wLjABAAAAsY6EjWejsVbCjir7Vdy-uNX364xNywkQSLqqoV5Hcnt7v3CVToFzfIgcdpQ_iW3D"}, "user_id": {"description": "The unique identifier of the TikTok user.", "type": "str", "default": "6676352751163032582"}, "cursor": {"description": "Cursor for pagination to get the subsequent set of videos. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "get_user_favorite_list", "description": "Retrieve the favorite video list for a TikTok user using their unique identifier.", "parameters": {"sec_uid": {"description": "The unique identifier of the TikTok user whose favorite list is to be retrieved.", "type": "str", "default": "MS4wLjABAAAAv7iSuuXDJGDvJkmH_vz1qkDZYo1apxgzaxdBSeIuPiM"}}}
{"name": "get_basic_details_dp", "description": "Retrieves basic details and Instagram display picture (DP) download link for a given user.", "parameters": {"is_id": {"description": "Username or profile link of the Instagram account.", "type": "str", "default": "deepikapadukone"}}}
{"name": "getfscore", "description": "Fetches the Piotroski F-Score for a given stock ticker using the RapidAPI service.", "parameters": {"ticker": {"description": "The stock ticker symbol for which the F-Score is to be retrieved.", "type": "str", "default": "AAPL"}}}
{"name": "v1_babynames", "description": "Fetches a list of baby names from the API Ninjas Baby Names API endpoint.", "parameters": {"popular_only": {"description": "Whether to only return popular (top 10%) of names. Must be either 'true' or 'false'. Defaults to 'true' if not set.", "type": "str, optional", "default": ""}, "gender": {"description": "The gender for the baby names. Must be one of the following: 'boy', 'girl', or 'neutral'.", "type": "str, optional", "default": ""}}}
{"name": "v1_dogs", "description": "Fetch a list of dog breeds matching specified parameters from the API. Returns at most 20 results by default.", "parameters": {"offset": {"description": "Number of results to offset for pagination. Defaults to None.", "type": "int, optional", "default": ""}, "energy": {"description": "Energy level of the breed (0-5, where 0 indicates low energy and 5 indicates high energy). Defaults to None.", "type": "int, optional", "default": ""}, "protectiveness": {"description": "Protectiveness level of the breed (0-5, where 0 indicates minimal alerting and 5 indicates maximum alerting). Defaults to None.", "type": "int, optional", "default": ""}, "max_weight": {"description": "Maximum weight of the breed in pounds. Defaults to None.", "type": "int, optional", "default": ""}, "min_weight": {"description": "Minimum weight of the breed in pounds. Defaults to None.", "type": "int, optional", "default": ""}, "trainability": {"description": "Ease of training the breed (0-5, where 0 indicates very difficult and 5 indicates very easy). Defaults to None.", "type": "int, optional", "default": ""}, "shedding": {"description": "Shedding level of the breed (0-5, where 0 indicates no shedding and 5 indicates maximum shedding). Defaults to None.", "type": "int, optional", "default": ""}, "name": {"description": "Name of the dog breed. Defaults to 'golden retriever'.", "type": "str, optional", "default": "golden retriever"}, "min_height": {"description": "Minimum height of the breed in inches. Defaults to None.", "type": "int, optional", "default": ""}, "barking": {"description": "Barking tendency of the breed (0-5, where 0 indicates minimal barking and 5 indicates maximum barking). Defaults to None.", "type": "int, optional", "default": ""}, "max_height": {"description": "Maximum height of the breed in inches. Defaults to None.", "type": "int, optional", "default": ""}, "max_life_expectancy": {"description": "Maximum life expectancy of the breed in years. Defaults to None.", "type": "int, optional", "default": ""}, "min_life_expectancy": {"description": "Minimum life expectancy of the breed in years. Defaults to None.", "type": "int, optional", "default": ""}}}
{"name": "search_for_channels", "description": "Searches for YouTube channels based on the provided keyword and other optional parameters. Supports pagination for retrieving multiple pages of results.", "parameters": {"keyword": {"description": "Keyword for the channel search. Default is 'Rick Astley'.", "type": "str", "default": "Rick Astley"}, "lang": {"description": "ISO-639 language code for localized results. Defaults to None.", "type": "str, optional", "default": ""}, "sortby": {"description": "Criteria for sorting the results. Defaults to None.", "type": "str, optional", "default": ""}, "nexttoken": {"description": "Token for fetching the next page of results. If not specified, the first page of results is returned. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "retreive_collections", "description": "Retrieves information about collections, including real-time statistics such as floor price.", "parameters": {"filters": {"description": "A JSON string representing the filters to apply when retrieving collections. Default is '{\"sort\":\"VOLUME_ONE_DAY\",\"order\":\"DESC\"}'.", "type": "str", "default": "{\"sort\":\"VOLUME_ONE_DAY\",\"order\":\"DESC\"}"}}}
{"name": "getvideodetails", "description": "Retrieve video details from YouTube using a specified video ID.", "parameters": {"is_id": {"description": "The ID of the video to retrieve details for.", "type": "str", "default": ""}}}
{"name": "getchannelplaylists", "description": "Retrieve a comprehensive list of playlists associated with a specific YouTube channel.", "parameters": {"is_id": {"description": "The YouTube channel ID for which to retrieve playlists.", "type": "str", "default": ""}}}
{"name": "search_web", "description": "Performs a text search on the web using the Google Search JSON API and returns search results in JSON format.", "parameters": {"q": {"description": "The search query.", "type": "str", "default": "facebook"}, "num": {"description": "The number of search results to return. Valid values range from 1 to 20, inclusive. Defaults to 10.", "type": "int, optional", "default": "10"}, "start": {"description": "The index of the first result to return. Defaults to 0.", "type": "int, optional", "default": "0"}, "gl": {"description": "A two-letter country code to boost search results whose country of origin matches the parameter value. Defaults to 'US'.", "type": "str, optional", "default": "US"}, "lr": {"description": "Restricts the search to documents written in a particular language. Defaults to 'lang_en'.", "type": "str, optional", "default": "lang_en"}}}
{"name": "getbarcode", "description": "Retrieves price information based on a barcode from the South Africa Price Tracker API.", "parameters": {"barcode": {"description": "The barcode of the product to look up.", "type": "str", "default": "6009175611701"}}}
{"name": "get_comments_with_product_id", "description": "Retrieve comments for a given product ID from the specified API.", "parameters": {"product_id": {"description": "The ID of the product for which to retrieve comments.", "type": "str", "default": "493611399"}}}
{"name": "minus_di", "description": "Fetches the Minus Directional Indicator (MINUS_DI) for a given financial instrument.", "parameters": {"symbol": {"description": "The instrument symbol, which can be any equity, index, ETF, forex, or cryptocurrency (e.g., 'AAPL', 'EUR/USD', 'ETH/BTC').", "type": "str", "default": "AAPL"}, "interval": {"description": "The interval between two consecutive points in the time series data. Supported intervals are: '1min', '5min', '15min', '30min', '45min', '1h', '2h', '4h', '1day', '1week', '1month'.", "type": "str", "default": "1min"}, "outputsize": {"description": "The number of data points to return. Defaults to 30 if no date parameters are set, otherwise set to maximum.", "type": "int, optional", "default": 30}, "time_period": {"description": "The number of periods to consider in the calculation. Defaults to 9.", "type": "int, optional", "default": 9}, "format": {"description": "The format of the data returned. Can be 'CSV' or 'JSON'. Defaults to 'json'.", "type": "str, optional", "default": "json"}}}
{"name": "get_litecoin_block_hash", "description": "Fetches the hash of a Litecoin block by its index using the RapidAPI service.", "parameters": {"i": {"description": "The index of the Litecoin block.", "type": "int", "default": "23"}}}
{"name": "tournament_list", "description": "Retrieves a list of all tennis tournaments to be played in a selected year, based on the specified category. It provides basic information about each tournament such as venue, surface, and winners.", "parameters": {"category": {"description": "The category of tournaments to retrieve. Options include:", "type": "str", "default": "atpgs"}, "year": {"description": "The year for which to retrieve the list of tournaments.", "type": "str", "default": "2022"}}}
{"name": "result", "description": "This function retrieves the result of a sports event using the specified language and event ID, by querying the Sports Betting API.", "parameters": {"lang": {"description": "Language code for the results (e.g., 'en' for English).", "type": "str", "default": "en"}, "evt": {"description": "Event ID for which the result is to be fetched.", "type": "int", "default": ""}}}
{"name": "get_count_and_increase_by_one", "description": "Sends a GET request to the specified counter API, optionally including parameters for ID, label, and color, ", "parameters": {"is_id": {"description": "An ID to include in the request query. Default is None.", "type": "str, optional", "default": ""}, "clabel": {"description": "A label to include in the request query. Default is 'blue'.", "type": "str, optional", "default": "blue"}, "color": {"description": "A color to include in the request query. Default is 'red'.", "type": "str, optional", "default": "red"}}}
{"name": "go", "description": "Convert raw text to a Bionized Reading format using the specified parameters via a RapidAPI request.", "parameters": {"txt": {"description": "The raw text to be converted.", "type": "str", "default": "Fast Reading - is a shallow method of reading facilitating the reading process by guiding the eyes through text with artificial fixation points. As a result, the reader is only focusing on the highlighted initial letters and lets the brain center complete the word."}, "fix": {"description": "The word fixation level to be applied. Default is 5.", "type": "int, optional", "default": "5"}, "lng": {"description": "The language code for text conversion. Supported values are 'en', 'ru', and 'es'. Default is 'en'.", "type": "str, optional", "default": "en"}, "model": {"description": "The model for text processing. Supported values range from 'm1' to 'm11'. Default is 'm1'.", "type": "str, optional", "default": "m1"}}}
{"name": "filter_calories", "description": "Fetch keto recipes that have a calorie count within the specified range.", "parameters": {"calories_lt": {"description": "The upper limit for calorie count.", "type": "int", "default": "200"}, "calories_gt": {"description": "The lower limit for calorie count.", "type": "int", "default": "50"}}}
{"name": "search_keto_recipe", "description": "Search for keto recipes based on a given search term using the Keto Diet API.", "parameters": {"search": {"description": "The search term to find keto recipes.", "type": "str", "default": "beef"}}}
{"name": "referents", "description": "Fetch referents, which are sections of content items (songs or web pages) where annotations are attached, using various filter options.", "parameters": {"song_id": {"description": "ID of a song to get referents for. Default is '2396871'.", "type": "str, optional", "default": "2396871"}, "page": {"description": "Paginated offset, for example, per_page=5&page=3 returns items 11–15.", "type": "int, optional", "default": ""}, "created_by_id": {"description": "ID of a user to get referents for.", "type": "str, optional", "default": ""}, "text_format": {"description": "Format for text bodies related to the document. One or more of `dom`, `plain`, `markdown`, and `html`, separated by commas (defaults to html).", "type": "str, optional", "default": ""}, "per_page": {"description": "Number of results to return per request.", "type": "int, optional", "default": ""}, "web_page_id": {"description": "ID of a web page to get referents for.", "type": "str, optional", "default": ""}}}
{"name": "artist_discovered_on", "description": "Fetches playlists where the specified artist was discovered using the Spotify API.", "parameters": {"is_id": {"description": "The Spotify artist ID.", "type": "str", "default": "2w9zwq3AktTeYYMuhMjju8"}}}
{"name": "ip_address", "description": "Fetch information related to an IP address using the Phone and Email Validator API.", "parameters": {"ip": {"description": "The IP address to be queried.", "type": "str", "default": "127.0.0.1"}}}
{"name": "logs", "description": "Fetches logs from the Maytapi WhatsApp API for a given page.", "parameters": {"page": {"description": "The page number or identifier for the logs to fetch.", "type": "str", "default": "0"}}}
{"name": "user_login", "description": "Logs in a user with the given username and password, and returns a JSON object containing the account's session key.", "parameters": {"username": {"description": "Username for the user account. For US domestic users, this should be a 10-digit number. For international users, use the full E.164 format (e.g., US: 5555555555, E.164: +1155555555555).", "type": "str", "default": ""}, "password": {"description": "Password associated with the username.", "type": "str", "default": ""}}}
{"name": "get_1_obter_c_digo_do_chat_code_to_chat", "description": "This function retrieves the chat code by querying the \"compras-net\" API using the provided UASG code and process number.", "parameters": {"co_uasg": {"description": "Code of the UASG (Unified System of General Services Code) of the organization.", "type": "int", "default": "980369"}, "numprp": {"description": "Number of the process to be consulted.", "type": "int", "default": "632021"}}}
{"name": "video_details", "description": "Retrieve details of a YouTube video using its ID.", "parameters": {"is_id": {"description": "The ID of the YouTube video to retrieve details for.", "type": "str", "default": "dQw4w9WgXcQ"}, "x_cachebypass": {"description": "The cache bypass parameter; if provided, it must be set to '1'. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "get_user_related_profiles_by_user_id", "description": "Fetches related profiles for a given Instagram user ID using the RapidAPI service.", "parameters": {"is_id": {"description": "The Instagram user ID for which to fetch related profiles.", "type": "int", "default": "18527"}}}
{"name": "user_followers_list", "description": "Fetches the list of followers for a TikTok user using the provided API parameters.", "parameters": {"fresh": {"description": "If set to 1, forces the API to return fresh data instead of cached data. Defaults to 0.", "type": "int, optional", "default": "0"}, "sec_uid": {"description": "A secure user ID that can be obtained from the User Information endpoint. Using `sec_uid` makes the request faster than using `username`.", "type": "str, optional", "default": ""}, "max_cursor": {"description": "Pagination cursor for fetching the next batch of followers.", "type": "str, optional", "default": ""}, "limit": {"description": "Number of follower records to return. The default is 100, and the maximum is 100.", "type": "str, optional", "default": ""}, "username": {"description": "TikTok username, such as 'amazon'. Using `sec_uid` instead of `username` will result in a faster request. Defaults to 'tiktok'.", "type": "str, optional", "default": "tiktok"}}}
{"name": "get_user_info", "description": "Fetches user information from TikTok using the RapidAPI service.", "parameters": {"user_id": {"description": "The user ID of the TikTok user. Defaults to '107955'.", "type": "str", "default": "107955"}, "unique_id": {"description": "The unique ID of the TikTok user. Defaults to '@tiktok'.", "type": "str", "default": "@tiktok"}}}
{"name": "getrandompassword", "description": "Generates a random password string of the specified length using the Random Chunk API on RapidAPI.", "parameters": {"length": {"description": "The desired length of the generated password. Defaults to 10.", "type": "int, optional", "default": "10"}}}
{"name": "stats_performance", "description": "Fetches performance statistics of the AI prediction module for football matches.", "parameters": {"date": {"description": "The date for which to fetch the performance statistics, formatted as 'YYYY-MM-DD'. Defaults to '2022-08-13'.", "type": "str", "default": "2022-08-13"}}}
{"name": "entry_list", "description": "Fetches the entry list for a given golf tournament using the specified RapidAPI key.", "parameters": {"tournament_id": {"description": "The ID of the tournament for which to fetch the entry list.", "type": "int", "default": "219"}}}
{"name": "leaderboards", "description": "Fetch the most recent leaderboard for a given tournament ID, year, and optional round ID.", "parameters": {"orgid": {"description": "Identifier for the organizing body. Choose '1' for PGA Tour or '2' for LIV Tour.", "type": "str", "default": ""}, "tournid": {"description": "The tournament ID for which the leaderboard is to be fetched.", "type": "str", "default": "475"}, "year": {"description": "The year of the tournament.", "type": "str", "default": "2022"}, "roundid": {"description": "The round ID to filter the leaderboard by a specific round. Defaults to None.", "type": "int, optional", "default": ""}}}
{"name": "get_clips", "description": "Fetch the latest 50 clips of a specified Twitch channel.", "parameters": {"name": {"description": "The name of the Twitch channel to fetch clips from.", "type": "str", "default": "jakubloveshorror"}}}
{"name": "nearby_arcgis", "description": "Returns nearby places of a specified type sorted by distance from the origin coordinates in ascending order using the ArcGIS API.", "parameters": {"lng": {"description": "Longitude of the origin point.", "type": "int", "default": "-123.0413988"}, "lat": {"description": "Latitude of the origin point.", "type": "int", "default": "49.2803703"}, "radius": {"description": "Search radius in meters. Defaults to 500. Maximum is 50,000.", "type": "int, optional", "default": "500"}, "type": {"description": "Type of places to search for. Defaults to 'coffee shop'.", "type": "str, optional", "default": "coffee shop"}}}
{"name": "user_feed_video_posts_v2", "description": "Fetches user feed video posts from TikTok using version 2 of the API.", "parameters": {"limit": {"description": "Limit the number of records returned. Defaults to 30, with a maximum of 30.", "type": "int, optional", "default": ""}, "max_cursor": {"description": "Pagination cursor for getting additional videos. Use the value of `max_cursor` from the previous request response to fetch more videos.", "type": "int, optional", "default": ""}, "username": {"description": "The username of the TikTok influencer. For example, `'charlidamelio'`. Defaults to `'tiktok'`.", "type": "str, optional", "default": "tiktok"}, "sec_uid": {"description": "The secondary unique ID for faster request processing. It can be obtained from the User Information endpoint. For example: `'MS4wLjABAAAAv7iSuuXDJGDvJkmH_vz1qkDZYo1apxgzaxdBSeIuPiM'`.", "type": "str, optional", "default": ""}}}
{"name": "get_reel_by_media_id", "description": "Retrieves reel information given a specific media ID from Instagram using the RapidAPI service.", "parameters": {"media_id": {"description": "The unique identifier for the Instagram media.", "type": "str", "default": "3089561820519690447"}}}
{"name": "readmail", "description": "Fetches mail data from the provided mail ID using the Toolbench RapidAPI service.", "parameters": {"mailid": {"description": "The ID of the mail to retrieve.", "type": "str", "default": "null"}}}
{"name": "getupdates", "description": "Fetch updates about newly received messages from the server, starting from a given message ID and optionally waiting for incoming messages for a specified time.", "parameters": {"start_id": {"description": "The ID from which to start fetching updates. Set to zero for the first call to retrieve all updates.", "type": "int", "default": "0"}, "time_out": {"description": "The time-out period (in seconds) for the server to wait for incoming messages before returning. Defaults to 0.", "type": "int, optional", "default": "0"}}}
{"name": "list_by_equipment", "description": "Fetch a list of exercises by the type of equipment.", "parameters": {"type": {"description": "The equipment type to filter exercises by.", "type": "str", "default": ""}}}
{"name": "get_mark_price_kline", "description": "Fetches the mark price kline data for a specified trading symbol within a given time range and interval.", "parameters": {"interval": {"description": "The Kline interval. Possible values are '1', '3', '5', '15', '30', '60', '120', '240', '360', '720', 'D', 'M', 'W'.", "type": "str", "default": "D"}, "start": {"description": "The start timestamp for the result in milliseconds.", "type": "int", "default": "1652112000000"}, "symbol": {"description": "The trading symbol to query.", "type": "str", "default": "BTCUSDT"}, "category": {"description": "The derivatives products category. Currently available categories include 'linear' and 'inverse' (inverse futures).", "type": "str", "default": "linear"}, "end": {"description": "The end timestamp for the result in milliseconds.", "type": "int", "default": "1652544000000"}, "limit": {"description": "The limit for data size per page, with a maximum of 200. Defaults to 200 pieces of data per page.", "type": "int, optional", "default": ""}}}
{"name": "open_interest", "description": "Fetch the total amount of unsettled contracts for a given symbol and period from the Bybit API.", "parameters": {"symbol": {"description": "The trading symbol for which to retrieve open interest data.", "type": "str", "default": "BTCUSD"}, "period": {"description": "The data recording period, which can be one of '5min', '15min', '30min', '1h', '4h', or '1d'.", "type": "str", "default": "5min"}, "limit": {"description": "The maximum number of data points to return. The default is 50, with a maximum allowable value of 200.", "type": "int, optional", "default": ""}}}
{"name": "getpatient", "description": "Fetches patient objects filtered by specified query parameters from the API.", "parameters": {"format": {"description": "Specifies the output type. Allowed values are CSV, HTML, XML, and JSON. Defaults to None.", "type": "str, optional", "default": ""}, "collection": {"description": "A label used to name a set of images collected for a specific trial or other reason. Assigned during the data curation process. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "drug_info", "description": "Fetches information about a specified drug using the RapidAPI Drug Info and Price History API.", "parameters": {"drug": {"description": "The name of the drug to retrieve information for.", "type": "str", "default": "advil"}}}
{"name": "v1_covid19", "description": "Fetches COVID-19 data from the API Ninjas COVID-19 endpoint based on the provided parameters. Either `date` or `country` must be set.", "parameters": {"type": {"description": "Type of data to retrieve. Must be either \"cases\" or \"deaths\". If not set, \"cases\" will be used by default.", "type": "str, optional", "default": ""}, "country": {"description": "Country name (case insensitive).", "type": "str, optional", "default": ""}, "date": {"description": "Date to retrieve single-day snapshot. Must be in the form of YYYY-MM-DD (e.g., 2022-01-01). Defaults to '2022-01-01'.", "type": "str, optional", "default": "2022-01-01"}, "county": {"description": "County name for US states (case insensitive). For United States data only. Must be used in conjunction with `country` (United States) and `region` (e.g., California).", "type": "str, optional", "default": ""}, "region": {"description": "Administrative region (also known as state or province in many countries) name (case insensitive). Must be used in conjunction with `country`. If not set, countries with data broken down by administrative regions will return separate data for each region.", "type": "str, optional", "default": ""}}}
{"name": "trending_feed_video_posts_v2", "description": "Fetch trending video posts from a social media feed using the V2 endpoint.", "parameters": {"limit": {"description": "The maximum number of records to return. Defaults to 12. Must not exceed 12.", "type": "int, optional", "default": ""}, "max_cursor": {"description": "Pagination cursor. Use this to fetch the next batch of videos by providing the value received in the previous request's response.", "type": "int, optional", "default": ""}}}
{"name": "search_autocomplete_api", "description": "Search or Autocomplete API returns matching cities and towns based on the query.", "parameters": {"q": {"description": "Query parameter used to obtain matching locations. Supported formats include:", "type": "str", "default": ""}}}
{"name": "nearby_superchargers", "description": "Fetches nearby Tesla superchargers within a specified radius around given coordinates.", "parameters": {"lng": {"description": "Longitude of the center point to search for superchargers.", "type": "int", "default": "-122.348906"}, "lat": {"description": "Latitude of the center point to search for superchargers.", "type": "int", "default": "47.619957"}, "radius": {"description": "Radius in kilometers to search within, default is 20 km.", "type": "int, optional", "default": "20"}}}
{"name": "findbypincode", "description": "Fetches information for a given Indian pincode using the Toolbench RapidAPI.", "parameters": {"pincode": {"description": "The pincode for which information needs to be fetched.", "type": "int", "default": 518345}}}
{"name": "get_elevation", "description": "Gets the elevation for specified latitude and longitude using the Toolbench RapidAPI service.", "parameters": {"lat": {"description": "Latitude of the location for which the elevation is required.", "type": "int", "default": "57.081937"}, "lng": {"description": "Longitude of the location for which the elevation is required.", "type": "int", "default": "-2.246567"}}}
{"name": "market_growth_technology_stocks", "description": "Retrieves a list of technology stocks with revenue and earnings growth in excess of 25% from the mboum-finance API.", "parameters": {"start": {"description": "The starting index for the list of stocks. Defaults to 0.", "type": "int, optional", "default": "0"}}}
{"name": "latest_spac_deals_ipos_closings", "description": "Fetches the latest SPAC events from a specified category using the SPACHero database API.", "parameters": {"event": {"description": "The type of SPAC event to retrieve. Options include 'ipo', 'closings', 'deals', and 'rumor'.", "type": "str", "default": "deals"}}}
{"name": "listing_status", "description": "Retrieve the availability status of a listing for a given month and year.", "parameters": {"is_id": {"description": "The ID of the listing.", "type": "str", "default": "619966061834034729"}, "year": {"description": "The year for which the status is to be retrieved.", "type": "int", "default": "2024"}, "month": {"description": "The month for which the status is to be retrieved.", "type": "int", "default": "1"}}}
{"name": "webcams_list_category_category_category", "description": "Fetch a list of webcams based on specified categories.", "parameters": {"category": {"description": "Comma-separated list of category names for which webcams are to be fetched. At least one category is required.", "type": "str", "default": ""}, "lang": {"description": "Language code to localize the results, if available. Defaults to 'en'.", "type": "str, optional", "default": "en"}, "show": {"description": "Specifies the content to be listed in the response. Possible values include 'webcams', 'categories', 'continents', 'countries', 'regions', 'properties'. Defaults to 'webcams:image,location'.", "type": "str, optional", "default": "webcams:image,location"}}}
{"name": "get_locations", "description": "Fetches geographical locations within a specified radius of the given longitude and latitude coordinates, optionally filtered by type.", "parameters": {"lon": {"description": "Longitude coordinate of the center point.", "type": "int", "default": "-75.33299748"}, "lat": {"description": "Latitude coordinate of the center point.", "type": "int", "default": "40.11043326"}, "radius": {"description": "Radius in miles from the center point within which to search for locations. Defaults to 3.", "type": "int, optional", "default": "3"}, "type": {"description": "Type of locations to filter; one of ['bus_stops', 'rail_stations', 'perk_locations', 'trolley_stops', 'sales_locations']. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "list_of_room_facility_types", "description": "Fetches a list of room facility types from the Booking.com API based on given criteria.", "parameters": {"room_facility_type_id": {"description": "ID of the specific room facility type to filter.", "type": "str, optional", "default": ""}, "facility_type_id": {"description": "ID of the specific room facility type to filter.", "type": "str, optional", "default": ""}}}
{"name": "author", "description": "Fetches author information from the quotes-diffusion API based on the given parameters.", "parameters": {"page": {"description": "Page number for pagination purposes.", "type": "int, optional", "default": ""}, "search": {"description": "Term to search for specific authors.", "type": "str, optional", "default": ""}}}
{"name": "get_d_tails_image", "description": "Fetch detailed information about a specific image using the Toolbench RapidAPI.", "parameters": {"image": {"description": "The identifier or name of the image to retrieve details for.", "type": "str", "default": "domaine-nc-api"}}}
{"name": "reverse_search_by_image", "description": "Perform a reverse image search using a specified image URL and return the search results.", "parameters": {"url": {"description": "The URL of the image to search by.", "type": "str", "default": "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a3/Eq_it-na_pizza-margherita_sep2005_sml.jpg/260px-Eq_it-na_pizza-margherita_sep2005_sml.jpg"}, "number": {"description": "The maximum number of search results to return. Defaults to 10.", "type": "int, optional", "default": "10"}}}
{"name": "similar", "description": "Search for visually similar images to a given image ID from a previous search result.", "parameters": {"image_id": {"description": "The image ID of the image from the search results for which to find visually similar images.", "type": "str", "default": "7TJ6HT2DAUMDFITP4LSIJLWICKWRCQOE"}, "number": {"description": "The number of similar images to retrieve. Defaults to 10.", "type": "int, optional", "default": "10"}}}
{"name": "search_image", "description": "Performs an image search using the Google Search JSON API and returns a JSON response containing information about images that match the search query.", "parameters": {"q": {"description": "The search query for finding images.", "type": "str", "default": "Newyork City"}, "num": {"description": "Number of search results to return. Valid values are between 1 and 20, inclusive. Default is 10.", "type": "int, optional", "default": "10"}, "lr": {"description": "Restricts the search to documents written in a particular language. Default is 'lang_en'.", "type": "str, optional", "default": "lang_en"}, "start": {"description": "The index of the first result to return. Default is 0.", "type": "int, optional", "default": "0"}, "gl": {"description": "A two-letter country code that boosts search results whose country of origin matches the parameter value. Default is 'US'.", "type": "str, optional", "default": "US"}}}
{"name": "document", "description": "Fetches the authorized blob URI for a court document using the provided document ID and RapidAPI key.", "parameters": {"documentid": {"description": "The ID of the document to fetch. Defaults to '41aac429-40dd-ea11-a813-000d3a79365a'.", "type": "str, optional", "default": "41aac429-40dd-ea11-a813-000d3a79365a"}}}
{"name": "video_no_watermark", "description": "Retrieves a video without a watermark from a given URL using the Toolbench RapidAPI service.", "parameters": {"video_url": {"description": "The URL of the video to be retrieved without watermark.", "type": "str", "default": "https://www.tiktok.com/@tiktok/video/7173042191730740523"}}}
{"name": "generate_avatar", "description": "Generates an avatar and returns it to the client based on the provided parameters.", "parameters": {"randomizer": {"description": "Bypasses caching to return random images. Any value can be used (default is 'anything').", "type": "str, optional", "default": "anything"}, "name": {"description": "The name for the avatar. Only the first character will be displayed (default is 'John').", "type": "str, optional", "default": "John"}, "bg_color": {"description": "HEX code for the background color of the avatar, without the '#' (default is 'FF2029').", "type": "str, optional", "default": "FF2029"}, "text_color": {"description": "HEX code for the avatar's text color, without the '#' (default is '000000').", "type": "str, optional", "default": "000000"}}}
{"name": "ip_lookup_api", "description": "Fetches detailed information for a given IP address using the WeatherAPI.", "parameters": {"q": {"description": "The IP address to look up. Can also be 'auto:ip' to auto-detect the IP address.", "type": "str", "default": ""}}}
{"name": "hourly_forecast", "description": "Fetches the hourly weather forecast for a specified ski resort.", "parameters": {"resort": {"description": "The name of the ski resort for which the forecast is to be fetched.", "type": "str", "default": "Jackson Hole"}, "el": {"description": "Specifies a part of the mountain. Accepted values are 'top', 'mid', and 'bot'. Default is 'top'.", "type": "str, optional", "default": "top"}, "units": {"description": "Specifies desired units. Accepted values are 'i' (imperial) and 'm' (metric). Default is 'i'.", "type": "str, optional", "default": "i"}, "c": {"description": "Limits the result to the current day only. Default is None.", "type": "bool, optional", "default": "false"}}}
{"name": "nowcast", "description": "Fetches a 3-hour weather forecast in 15-minute time steps for a given location.", "parameters": {"location": {"description": "The geographic location for which the forecast is requested.", "type": "str", "default": "102643743"}, "dataset": {"description": "The set of weather variables to include in the response (default is 'full').", "type": "str", "default": "full"}, "windunit": {"description": "The unit for wind speed in the response, such as 'MS' (meters per second) (default is 'MS').", "type": "str", "default": "MS"}, "tz": {"description": "The time zone for the response, using IANA time zone database names (default is 'Europe/London').", "type": "str", "default": "Europe/London"}, "tempunit": {"description": "The unit for temperature in the response, such as 'C' (Celsius) (default is 'C').", "type": "str", "default": "C"}, "alt": {"description": "The altitude of the location in meters (default is 0).", "type": "int", "default": "0"}, "periods": {"description": "The number of 15-minute time steps to include, with a maximum of 12 (default is 8).", "type": "int", "default": "8"}}}
{"name": "getrank", "description": "Fetches the contest rank of a LeetCode user.", "parameters": {"username": {"description": "The LeetCode username whose contest rank is to be fetched.", "type": "str", "default": "mujtabah258"}}}
{"name": "image_generation_endpoint", "description": "Generates an image using the Bruzu API with the specified width, height, and background image URL. The API key for the Toolbench RapidAPI is also required to authenticate the request.", "parameters": {"width": {"description": "The width of the generated image. Defaults to 500.", "type": "int, optional", "default": "500"}, "backgroundimage": {"description": "The URL of the background image. Defaults to 'https://source.unsplash.com/500x500/'.", "type": "str, optional", "default": "https://source.unsplash.com/500x500/"}, "height": {"description": "The height of the generated image. Defaults to 500.", "type": "int, optional", "default": "500"}}}
{"name": "get_streamer_info", "description": "Retrieves information about a Twitch streamer using the provided channel name.", "parameters": {"channel": {"description": "The name of the Twitch channel for which information is being retrieved.", "type": "str", "default": "xqc"}}}
{"name": "places_list_by_radius_nearby_search", "description": "Fetches objects closest to a selected point filtered by optional parameters.", "parameters": {"lang": {"description": "Language code (2 characters, ISO639-1). Available values include 'en' (English) and 'ru' (Russian).", "type": "str", "default": ""}, "radius": {"description": "Maximum distance from the selected point in meters.", "type": "int", "default": "500"}, "lon": {"description": "Longitude of the selected point.", "type": "int", "default": "38.364285"}, "lat": {"description": "Latitude of the selected point.", "type": "int", "default": "59.855685"}, "src_attr": {"description": "Source of the object attributes, multiple sources can be separated by commas. Defaults to None. Available values include 'osm', 'wikidata', 'snow', 'cultura.ru', 'rosnedra', 'user'.", "type": "str, optional", "default": ""}, "format": {"description": "The output format. Defaults to GeoJSON. Values can be 'json', 'geojson', or 'count'.", "type": "str, optional", "default": ""}, "kinds": {"description": "Object category, multiple categories can be separated by commas. Defaults to None. See object category hierarchy at 'https://dev.opentripmap.com/doc/en/'.", "type": "str, optional", "default": ""}, "src_geom": {"description": "Source of the object geometry. Defaults to None. Available values include 'osm', 'wikidata', 'snow', 'cultura.ru', 'rosnedra'.", "type": "str, optional", "default": ""}, "rate": {"description": "Minimum rating of the object popularity. Defaults to None. Available values are '1', '2', '3', '1h', '2h', '3h'.", "type": "str, optional", "default": ""}, "limit": {"description": "Maximum number of returned objects. Defaults to None, with a maximum limit of 500.", "type": "int, optional", "default": ""}, "name": {"description": "Text string to search at the beginning of the object name (minimum 3 characters). Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "top_artists_male", "description": "Fetches the YEAR-END Top Artists - Male chart information from the Billboard API.", "parameters": {"year": {"description": "The year for which to retrieve the chart information in 'YYYY' format. Defaults to '2022' if not provided.", "type": "str", "default": "2022"}}}
{"name": "emailverification", "description": "Verifies an email address using the Fast Email Verifier API.", "parameters": {"emailsimple": {"description": "The email address to be verified. Defaults to 'mbavazijoshua@gmail.com'.", "type": "str", "default": "mbavazijoshua@gmail.com"}}}
{"name": "verify_email", "description": "Verifies a single email address using the RapidAPI email verification service.", "parameters": {"email": {"description": "The email address to be verified.", "type": "str", "default": "abc1@gmail.com"}}}
{"name": "freedomain", "description": "Checks whether a domain is available for free using the Fast Email Verifier API.", "parameters": {"domain": {"description": "The domain name to be checked for availability.", "type": "str", "default": "domain.org"}}}
{"name": "get_the_mx_records", "description": "Fetches the MX (Mail Exchange) records for a given email address using the RapidAPI service.", "parameters": {"email": {"description": "The email address for which to retrieve MX records.", "type": "str", "default": "example@gmail.com"}}}
{"name": "custom_dice_rolls", "description": "Roll any number of dice with a specified number of sides a specified number of times using the Dice Roll Simulator API.", "parameters": {"dice": {"description": "The number of dice to roll. Defaults to 3.", "type": "int, optional", "default": "3"}, "sides": {"description": "The number of sides on each die. Defaults to 8.", "type": "int, optional", "default": "8"}, "rolls": {"description": "The number of times to roll the dice. Defaults to '2'.", "type": "str, optional", "default": "2"}}}
{"name": "custom_dice", "description": "Roll a specified number of dice with a specified number of sides using the RapidAPI Dice Roll Simulator.", "parameters": {"dice": {"description": "The number of dice to roll. Defaults to 3.", "type": "int, optional", "default": "3"}, "sides": {"description": "The number of sides on each die. Defaults to 8.", "type": "int, optional", "default": "8"}}}
{"name": "list_all_conversation_turns", "description": "Fetches and lists all conversation turns based on specified search parameters.", "parameters": {"limit": {"description": "The number of records to return. Default is 20.", "type": "int, optional", "default": 20}, "conversation": {"description": "The slug of the conversation. Conversations are linked to conversation turns.", "type": "str, optional", "default": ""}, "conversation_id": {"description": "The ID of the conversation. Conversations are linked to conversation turns.", "type": "int, optional", "default": ""}, "dir": {"description": "The direction of the ordering. Default is 'asc'.", "type": "str, optional", "default": "asc"}, "input": {"description": "The input to the bot by the client for partial search.", "type": "str, optional", "default": ""}, "page": {"description": "The page number of results to start from. Default is 1.", "type": "int, optional", "default": 1}, "output": {"description": "The output from the bot in response to the client input for partial search.", "type": "str, optional", "default": ""}, "is_id": {"description": "The ID of the conversation turn.", "type": "int, optional", "default": ""}, "order": {"description": "The search field to order by. Default is 'id'.", "type": "str, optional", "default": "id"}}}
{"name": "have_a_chat_with_our_bot", "description": "Initiates a conversation with the Islam&AI Bot, utilizing chat history and an API key for authentication.", "parameters": {"question": {"description": "The question to pose to the Islam&AI Bot.", "type": "str", "default": "What is Islam?"}, "chathistory": {"description": "The chat history to be included in the conversation. Defaults to a predefined string about a dua.", "type": "str, optional", "default": "What is Dua to recite when you see a miraculous thing like Islam & AI? | There is no specific dua (supplication) mentioned in the Quran or Hadith that is to be recited when witnessing a miracle. However, Muslims are encouraged to constantly remember Allah and express their gratitude to Him for the blessings and miracles they witness in their lives. In general, it is recommended to say 'Subhan Allah' (Glory be to Allah) when witnessing something amazing or miraculous"}}}
{"name": "result_statistics_goals", "description": "Fetches the goal statistics for a given handball match within a 7-day period relative to the current date.", "parameters": {"matchid": {"description": "The ID of the handball match.", "type": "int", "default": ""}}}
{"name": "inplay", "description": "Fetches the in-play sports betting data from the RapidAPI service.", "parameters": {"lang": {"description": "The language code for the response data.", "type": "str", "default": "en"}, "sp": {"description": "The sport identifier for which to fetch in-play data.", "type": "int", "default": "1"}}}
{"name": "doji", "description": "Fetches a list of stocks having a Doji signal from the specified page using the Toolbench RapidAPI service.", "parameters": {"page": {"description": "The page number to fetch the Doji signal stocks from. Defaults to 1.", "type": "int, optional", "default": "1"}}}
{"name": "advanced_chart", "description": "Fetches a real-time advanced chart image from TradingView using specified parameters.", "parameters": {"symbol": {"description": "A valid TradingView symbol. Example: 'BINANCE:BTCUSDT', 'BINANCE:BTCUSDTPERP'. Default is 'BINANCE:BTCUSDT'.", "type": "str", "default": "BINANCE:BTCUSDT"}, "studies": {"description": "Indicators to be included on the chart. Supports multiple values such as 'MACD', 'RSI', 'EMA'. Default is 'MACD'.", "type": "str", "default": "MACD"}, "format": {"description": "The format of the chart image. Supported formats are 'png' and 'jpeg'. Default is 'png'.", "type": "str", "default": "png"}, "theme": {"description": "The color theme of the chart. Supported themes are 'light' and 'dark'. Default is 'dark'.", "type": "str", "default": "dark"}, "interval": {"description": "The interval of the chart. Supported intervals include '1m', '3m', '5m', '15m', '30m', '45m', '1h', '2h', '3h', '4h', '1d', '1w'. Default is '1d'.", "type": "str", "default": "1d"}, "width": {"description": "The width of the chart image. Minimum is 320. Default is 800.", "type": "int", "default": "800"}, "height": {"description": "The height of the chart image. Minimum is 240. Default is 600.", "type": "int", "default": "600"}, "timezone": {"description": "The timezone for the chart. Default is 'Etc/UTC'. Refer to comprehensive list for other values.", "type": "str", "default": "Etc/UTC"}}}
{"name": "rsi_overbought", "description": "Fetches a list of stocks that have the RSI (Relative Strength Index) Overbought signal using the BarPatterns RapidAPI.", "parameters": {"page": {"description": "The page number to retrieve (default is 1).", "type": "int", "default": "1"}}}
{"name": "search_return_flights", "description": "Retrieve all return flights for a given contract/return bundle from FlightDepartures using the getFlightReturns endpoint.", "parameters": {"sid": {"description": "Session ID. A random string to identify the session, e.g., 'j10k11l12m13n14'.", "type": "str", "default": ""}, "ppn_bundle": {"description": "A unique ID used to identify a specific return rate bundle provided by FlightDepartures.", "type": "str", "default": ""}, "convert_currency": {"description": "The requested currency for the results, in ISO 4217 format. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "get_airports_by_city", "description": "Retrieve a list of airports based on a specific city using the \"Get Airports By City\" API.", "parameters": {"city": {"description": "Name of the city for which the airport details are to be retrieved.", "type": "str", "default": "dallas"}}}
{"name": "hotel_details", "description": "Fetches detailed information about a specified hotel from the Priceline API.", "parameters": {"hotel_id": {"description": "The PPN Hotel ID identifying the desired property.", "type": "str", "default": "700008849"}, "airport_limit": {"description": "Limit the number of nearby airports included in the response.", "type": "int, optional", "default": ""}, "check_in": {"description": "Check-in date in 'YYYY-MM-DD' or 'MM/DD/YYYY' format.", "type": "str, optional", "default": ""}, "promo": {"description": "Flag to include promotional data. Default is False.", "type": "bool, optional", "default": true}, "photos": {"description": "Flag to include photo data. Default is False.", "type": "bool, optional", "default": "1"}, "videos": {"description": "Flag to include video data. Default is False.", "type": "bool, optional", "default": true}, "guest_score_breakdown": {"description": "Flag to include guest score breakdown data. Default is False.", "type": "bool, optional", "default": true}, "reviews": {"description": "Flag to include hotel review data. Default is False.", "type": "bool, optional", "default": "1"}, "city_limit": {"description": "Limit the number of cities included in the response.", "type": "int, optional", "default": ""}, "sid": {"description": "Session ID. Default is 'iSiX639'.", "type": "str, optional", "default": "iSiX639"}, "important_info": {"description": "Flag to include extra details about the hotel. Default is False.", "type": "bool, optional", "default": true}, "recent": {"description": "Flag to include recent sales data. Default is False.", "type": "bool, optional", "default": true}, "poi_limit": {"description": "Limit the number of points of interest included in the response.", "type": "int, optional", "default": ""}, "plugins": {"description": "Flag to include plugin information. Default is False.", "type": "bool, optional", "default": true}, "image_size": {"description": "The size of the images returned. Options are 'small', 'medium', or 'large'.", "type": "str, optional", "default": ""}, "id_lookup": {"description": "Flag to search non-PPN Hotel IDs. Default is False.", "type": "bool, optional", "default": true}, "check_out": {"description": "Check-out date in 'YYYY-MM-DD' or 'MM/DD/YYYY' format.", "type": "str, optional", "default": ""}, "currency": {"description": "The currency format for the results, in ISO 4217 format.", "type": "str, optional", "default": ""}, "nearby": {"description": "Flag to include nearby location data such as city, airport, and points of interest. Default is False.", "type": "bool, optional", "default": true}}}
{"name": "v1_city", "description": "Fetches city data from the API Ninjas City API endpoint with various filtering criteria.", "parameters": {"max_lat": {"description": "Maximum latitude coordinate.", "type": "int, optional", "default": ""}, "min_population": {"description": "Minimum city population.", "type": "int, optional", "default": ""}, "min_lon": {"description": "Minimum longitude coordinate.", "type": "int, optional", "default": ""}, "country": {"description": "Country filter. Must be an ISO-3166 alpha-2 code (default is 'US').", "type": "str, optional", "default": "US"}, "max_population": {"description": "Maximum city population.", "type": "int, optional", "default": ""}, "min_lat": {"description": "Minimum latitude coordinate.", "type": "int, optional", "default": ""}, "name": {"description": "Name of the city to search for (default is 'New York').", "type": "str, optional", "default": "New York"}, "max_lon": {"description": "Maximum longitude coordinate.", "type": "int, optional", "default": ""}, "limit": {"description": "Number of results to return. Must be between 1 and 30 (default is 1).", "type": "int, optional", "default": "1"}}}
{"name": "get_time_zones", "description": "Fetch a list of time zones based on certain search criteria.", "parameters": {"is_id": {"description": "The ID of the time zone to filter by. Defaults to None.", "type": "str, optional", "default": ""}, "keyword": {"description": "The keyword to search for in the time zones. Defaults to 'asia'.", "type": "str, optional", "default": "asia"}, "page": {"description": "The page number for pagination. Defaults to 1.", "type": "int, optional", "default": "1"}, "perpage": {"description": "The number of records per page for pagination. Defaults to 50.", "type": "int, optional", "default": "50"}}}
{"name": "get_district_capital_by_name", "description": "Retrieves the capital of a district in Ghana given the district name.", "parameters": {"name": {"description": "The name of the district whose capital is to be retrieved.", "type": "str", "default": "accra"}}}
{"name": "search_by_company_name", "description": "Search for a company in the Uganda company register by its name.", "parameters": {"name": {"description": "The name of the company to search for.", "type": "str", "default": "Uganda Airlines"}}}
{"name": "categorize_job_title", "description": "Categorizes a given job title using the Toolbench RapidAPI job title categorization service.", "parameters": {"title": {"description": "The job title to be categorized.", "type": "str", "default": "Head of Finance"}}}
{"name": "amazonproductreviews", "description": "Retrieves product reviews from Amazon using the provided API key, domain, and product ASIN.", "parameters": {"pagenum": {"description": "The page number of reviews to retrieve. Each page contains 10 reviews.", "type": "int", "default": "1"}, "domain": {"description": "The Amazon domain to query reviews from (e.g., 'amazon.com', 'amazon.in', 'amazon.co.uk').", "type": "str", "default": "amazon.com"}, "asin": {"description": "The Amazon Standard Identification Number (ASIN) of the product to retrieve reviews for.", "type": "str", "default": "B01H6GUCCQ"}}}
{"name": "stock_recommendation_trend", "description": "Fetches stock recommendation trends using the Yahoo Finance API.", "parameters": {"symbol": {"description": "The stock symbol for which to fetch recommendation trends.", "type": "str", "default": "AAPL"}}}
{"name": "stock_get_financial_stmts", "description": "Fetch financial statements for a given stock symbol.", "parameters": {"frequency": {"description": "The frequency of the financial statements. It can be either 'annual' or 'quarterly'.", "type": "str", "default": "quarterly"}, "symbol": {"description": "The ticker symbol of the stock (e.g., \"AAPL\" for Apple Inc.).", "type": "str", "default": "AAPL"}, "statement_type": {"description": "The type of financial statement to retrieve. It can be 'income', 'balance', 'cash', or a list containing these types.", "type": "str", "default": "income"}, "region": {"description": "The region of the stock market. Defaults to 'US'. Allowed values are 'US', 'BR', 'AU', 'CA', 'FR', 'DE', 'HK', 'IN', 'IT', 'ES', 'GB', 'S'.", "type": "str, optional", "default": "US"}}}
{"name": "stock_splits", "description": "Fetch the list of all stock splits for a given stock symbol.", "parameters": {"symbol": {"description": "The stock symbol for which to fetch stock splits.", "type": "str", "default": "MSFT"}, "orderby": {"description": "The order in which to sort the stock splits. Defaults to 'Ascending'.", "type": "str, optional", "default": "Ascending"}}}
{"name": "get_movies_by_name", "description": "python", "parameters": {"movie_name": {"description": "The name of the movie to search for. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "crypto_exchanges", "description": "Fetches the list of cryptocurrency exchanges available at Twelve Data API.", "parameters": {"format": {"description": "The desired response format. Acceptable values are 'json' (default) and 'csv'.", "type": "str", "default": "json"}}}
{"name": "restaurants_v2_auto_complete", "description": "Fetches restaurant suggestions based on a given term or phrase.", "parameters": {"text": {"description": "Term or phrase to get restaurant suggestions (e.g., city, district, country name).", "type": "str", "default": "basara sushi"}, "longitude": {"description": "Longitude of the user's location for sorting purposes. Defaults to None.", "type": "int, optional", "default": ""}, "latitude": {"description": "Latitude of the user's location for sorting purposes. Defaults to None.", "type": "int, optional", "default": ""}}}
{"name": "latest_sold", "description": "Fetches a list of recently sold artworks, with optional filtering by gallery and sorting options.", "parameters": {"page": {"description": "The page number of the results to return. Defaults to '1'.", "type": "str", "default": "1"}, "gallery": {"description": "The name of the gallery to filter results by. Possible values include 'Art Blocks', 'Async Art', 'Auction Houses', 'Foundation', 'hic et nunc', 'KnownOrigin', 'MakersPlace', 'Nifty Gateway', and 'SuperRare'.", "type": "str, optional", "default": ""}, "sort": {"description": "The parameter by which to sort the results. Defaults to 'date_sold'.", "type": "str", "default": "date_sold"}}}
{"name": "get_synonyms", "description": "Fetches synonyms of a specific word using the Dicolink API.", "parameters": {"mot": {"description": "The word for which to fetch synonyms.", "type": "str", "default": "cheval"}, "limite": {"description": "The maximum number of synonyms to return. Defaults to '10'.", "type": "str, optional", "default": "10"}}}
{"name": "latest_rates", "description": "Fetch the latest real-time exchange rate data for specified symbols and base currency.", "parameters": {"symbols": {"description": "A list of comma-separated currency or metal codes to limit the output.", "type": "str", "default": "XAU"}, "base": {"description": "The three-letter currency or metal code for the preferred base currency.", "type": "str", "default": "USD"}}}
{"name": "seasonendconstructorstanding", "description": "Fetches the Constructor Standings at the end of the specified Formula 1 season.", "parameters": {"year": {"description": "The year for which to fetch the constructor standings.", "type": "str", "default": "year"}}}
{"name": "billboard_global_200", "description": "Fetch Billboard Global 200 chart information for a specific date.", "parameters": {"date": {"description": "The date for which to retrieve the chart information, in the format 'YYYY-MM-DD'.", "type": "str", "default": "2020-09-19"}}}
{"name": "get_biden_articles_from_specific_newspaper", "description": "Fetches all articles related to Biden from a specified newspaper using a given API key.", "parameters": {"newspaper": {"description": "The name of the newspaper from which to fetch the articles.", "type": "str", "default": "boston_globe,new_york_times,cnn,washington_post,los_angeles_times,chicago_tribute"}}}
{"name": "get_birthday_draws", "description": "Fetches lottery draw results for a given birthday date (in 'mm-dd' format) and returns related statistics and potentially a lucky number.", "parameters": {"date": {"description": "The birthday date in 'mm-dd' format for which to fetch the lottery draw results.", "type": "str", "default": "01-21"}}}
{"name": "retrieve_compensation", "description": "Fetches the full compensation details associated with a given ID using the specified RapidAPI key.", "parameters": {"is_id": {"description": "The ID for which to retrieve the compensation details.", "type": "str", "default": "0xF0F2e446EeD32236EA0c78a6E4a91Ed712654799"}}}
{"name": "get_specific_country", "description": "Fetches fuel prices for a specific country from the RapidAPI endpoint.", "parameters": {"country": {"description": "The name of the country for which to fetch fuel prices.", "type": "str", "default": "Germany"}}}
{"name": "google_fake_autocomplete", "description": "Generate a fake Google autocomplete suggestion using three input texts.", "parameters": {"text1": {"description": "The first text input for the autocomplete query.", "type": "str", "default": "Search"}, "text3": {"description": "The third text input for the autocomplete query.", "type": "str", "default": "search autocomplete 2"}, "text2": {"description": "The second text input for the autocomplete query.", "type": "str", "default": "search autocomplete 1"}}}
{"name": "video_info", "description": "Fetches video information from YouTube using the provided video ID.", "parameters": {"is_id": {"description": "The ID of the YouTube video for which the information is to be fetched.", "type": "str", "default": "dQw4w9WgXcQ"}}}
{"name": "originals_episodes_get_info", "description": "Fetch information and photo links for a specific episode of a Webtoon Original.", "parameters": {"episodeno": {"description": "The episode number. It corresponds to the `episodeNo` field returned by the `/originals/episodes/list` endpoint.", "type": "int", "default": "1"}, "titleno": {"description": "The title number. It corresponds to the `titleNo` field returned by the `/originals/titles/list` or `/originals/titles/list-by-rank` endpoint.", "type": "int", "default": "2113"}, "language": {"description": "The language code for the response. Defaults to 'en'. Accepted values are 'en', 'zh-hant', 'de', 'fr', 'es', 'th', 'id'.", "type": "str, optional", "default": "en"}}}
{"name": "datum_conversion", "description": "Converts latitude and longitude from one geodetic system to another using the Navitime Geocoding API.", "parameters": {"coord": {"description": "Latitude and longitude before conversion. Supports millisecond and degree notation.", "type": "str", "default": "35.624822,139.742121"}, "after_datum": {"description": "The target geodetic system for conversion. Options are 'wgs84' for World Geodetic System (default) and 'tokyo' for Old Japan Geodetic System.", "type": "str", "default": "wgs84"}}}
{"name": "is_a_coordinate_water", "description": "Determines if a given coordinate on Earth is water based on the provided longitude and latitude.", "parameters": {"longitude": {"description": "The longitude of the coordinate to check.", "type": "int", "default": "-70.2652276"}, "latitude": {"description": "The latitude of the coordinate to check.", "type": "int", "default": "41.9029192"}}}
{"name": "country_by_iso_code", "description": "Fetches information about a country using its 2-letter ISO code, localized to a specified language.", "parameters": {"iso_code": {"description": "The 2-letter ISO country code.", "type": "str", "default": "US"}, "fields": {"description": "A comma-delimited list of fields to include in the response. Defaults to None.", "type": "str, optional", "default": ""}, "lang": {"description": "The 2-letter ISO language code for localizing the country name. Defaults to 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "get_signals", "description": "Fetches trading signals and trends for a specified cryptocurrency pair from the given exchange and market type.", "parameters": {"coin": {"description": "The cryptocurrency pair to get signals for (e.g., BTC, ETH, TRX).", "type": "str", "default": "BTC"}, "exchange": {"description": "The exchange to get signals from (e.g., Binance, Bybit, Huobi, Kucoin, Coinex, MXC, Gate).", "type": "str", "default": "Bybit"}, "market_type": {"description": "The market type to get signals for (e.g., SPOT, FUTURES).", "type": "str", "default": "SPOT"}}}
{"name": "coins_list_pairs", "description": "Fetches a list of available cryptocurrency pairs from the RapidAPI endpoint.", "parameters": {"lang_id": {"description": "The language ID returned in the /get-meta-data endpoint. Defaults to 1.", "type": "int, optional", "default": "1"}, "time_utc_offset": {"description": "UTC offset value in seconds. For example, UTC+8 is represented as 28800. Defaults to 28800.", "type": "int, optional", "default": "28800"}}}
{"name": "domain_detail", "description": "Fetches the domain detail for a given domain ID using the RapidAPI service.", "parameters": {"did": {"description": "The domain ID for which the details are to be fetched.", "type": "int", "default": ""}}}
{"name": "specifications_by_year_make_model", "description": "Retrieves motorcycle specifications for a given make, model, and year from the Motorcycle Specs Database.", "parameters": {"make": {"description": "The manufacturer of the motorcycle.", "type": "str", "default": "BMW"}, "model": {"description": "The model of the motorcycle.", "type": "str", "default": "F 800 GS Trophy"}, "year": {"description": "The production year of the motorcycle.", "type": "str", "default": "2012"}}}
{"name": "get_3_summary", "description": "Fetches a summary of stock performance and related metrics from the Stocky API.", "parameters": {"keyword": {"description": "The stock keyword to search for. Default is 'GOOG'.", "type": "str", "default": "GOOG"}}}
{"name": "get_global_stats", "description": "Fetches global statistics available on CoinRanking using the RapidAPI service.", "parameters": {"referencecurrencyuuid": {"description": "UUID of the reference currency in which all the prices are calculated. Defaults to US Dollar UUID 'yhjMzLPhuIDl'.", "type": "str", "default": "yhjMzLPhuIDl"}}}
{"name": "us_license_plate_to_vin", "description": "Converts a U.S. state license plate number to a Vehicle Identification Number (VIN).", "parameters": {"state_code": {"description": "A two-letter U.S. state code where the license plate is registered. Examples include 'CA' for California, 'NY' for New York, etc.", "type": "str", "default": "AL"}, "license_plate": {"description": "The license plate number for which to find the VIN.", "type": "str", "default": "S8TAN"}}}
{"name": "codes", "description": "This function searches for information based on the provided code using the Postali API.", "parameters": {"code": {"description": "The code to be searched.", "type": "str", "default": "66446"}}}
{"name": "search_wikipedia", "description": "Searches Wikipedia and returns the top K summarized information along with similar items. Additionally, images and coordinates with map links are provided when available.", "parameters": {"q": {"description": "Query string to search for on Wikipedia.", "type": "str", "default": "Messi"}, "topk": {"description": "Number of top summarized items to return. Defaults to 3. Must be greater than 0.", "type": "int, optional", "default": "3"}}}
{"name": "keywordsearch", "description": "Fetches popular keywords for a given language and country from the Google Keyword Scraper API.", "parameters": {"glanguage": {"description": "Alpha code for the language (e.g., 'en' for English, 'es' for Spanish).", "type": "str", "default": "en"}, "gcountry": {"description": "Alpha code for the country (e.g., 'us' for United States, 'de' for Germany).", "type": "str", "default": "ua"}, "gkeyword": {"description": "The keyword for which to fetch popular keywords.", "type": "str", "default": "ukraine war"}}}
{"name": "routing", "description": "Calculates a route based on specified waypoints and options using the Map Toolkit API.", "parameters": {"points": {"description": "Waypoints defined as latitude and longitude pairs in the format `{lat},{lng}|{lat},{lng}...`. At least 2 points are required.", "type": "str", "default": "48.202596,16.369801|48.208373,16.370401"}, "finish_instruction": {"description": "Adds a finish instruction at the end of the route. Default is None.", "type": "str, optional", "default": ""}, "language": {"description": "Language for the given instructions in ISO 639-1 code format. Default is `en`.", "type": "str, optional", "default": ""}, "voice_instructions": {"description": "Enables voice instructions for text-to-speech engines. Default is None.", "type": "str, optional", "default": ""}, "filename": {"description": "The name of the file if the output `format` is `gpx` or `kml`. Default is None.", "type": "str, optional", "default": ""}, "format": {"description": "The format of the output. Default is `json`.", "type": "str, optional", "default": ""}, "weighting": {"description": "Weighting option for bike routes. Default is `networks`.", "type": "str, optional", "default": ""}, "routetype": {"description": "The type of route to calculate. Default is `bike`.", "type": "str, optional", "default": "bike"}}}
{"name": "fetch_by_type_and_region", "description": "Fetch records from the API based on the given type, limit, and region.", "parameters": {"type": {"description": "The type of records to fetch. Refer to the README for accepted types.", "type": "str", "default": "Hill"}, "limit": {"description": "The maximum number of records to fetch.", "type": "int", "default": "5"}, "region": {"description": "The region from which to fetch records.", "type": "str", "default": "Eastern"}}}
{"name": "findplacesnearby", "description": "Find nearby places based on the given location, language, radius, and type.", "parameters": {"location": {"description": "The latitude/longitude around which to retrieve places.", "type": "str", "default": "37.783366,-122.402325"}, "language": {"description": "The language in which to return results. Defaults to 'en'.", "type": "str, optional", "default": "en"}, "radius": {"description": "The distance (in meters) within which to return results. Max = 10000 m. Defaults to 180.", "type": "int, optional", "default": "180"}, "type": {"description": "The type of places that are returned. Defaults to 'cafe'.", "type": "str, optional", "default": "cafe"}}}
{"name": "geocodingsearch", "description": "Performs a forward geocoding search using a free-form query string and optional parameters to specify query filters and output format.", "parameters": {"q": {"description": "Free-form query string for the geocoding search.", "type": "str", "default": "New York City NY USA"}, "countrycodes": {"description": "Two-letter country code as defined in ISO 3166-1 alpha2 to restrict search to a specific country.", "type": "str, optional", "default": ""}, "json_callback": {"description": "Name of JSON callback function for JSONP calls; use this when the format is set to JSON.", "type": "str, optional", "default": ""}, "polygon_text": {"description": "Include a textual representation of the polygon geometry in the output.", "type": "str, optional", "default": ""}, "namedetails": {"description": "Include detailed naming information in the output.", "type": "str, optional", "default": ""}, "limit": {"description": "Limit the number of search results.", "type": "str, optional", "default": ""}, "viewbox": {"description": "Specify a bounding box for the search area in the format 'x1,y1,x2,y2', where x is longitude and y is latitude.", "type": "str, optional", "default": ""}, "format": {"description": "Output format of the response (e.g., JSON).", "type": "str, optional", "default": ""}, "polygon_geojson": {"description": "Include GeoJSON representation of the polygon geometry in the output.", "type": "str, optional", "default": ""}, "bounded": {"description": "Use '1' to restrict the search area to the specified viewbox.", "type": "str, optional", "default": ""}, "polygon_svg": {"description": "Include SVG representation of the polygon geometry in the output.", "type": "str, optional", "default": ""}, "polygon_kml": {"description": "Include KML representation of the polygon geometry in the output.", "type": "str, optional", "default": ""}, "polygon_threshold": {"description": "Simplification threshold for the polygon geometry.", "type": "int, optional", "default": "0.0"}, "accept_language": {"description": "Set the query and response language using two-letter language codes (e.g., 'en' or 'es') or a combination of language and region code (e.g., 'en-GB' or 'es-AR'). Default is 'en'.", "type": "str, optional", "default": "en"}, "addressdetails": {"description": "Include detailed address information in the output.", "type": "str, optional", "default": ""}}}
{"name": "namebydomain", "description": "Fetch the organization name using a given domain through the RapidAPI service.", "parameters": {"domain": {"description": "The domain name for which the organization name is to be fetched.", "type": "str", "default": "tftus.com"}}}
{"name": "consulta_receita_federal", "description": "Fetch data from the Receita Federal using a given tax ID.", "parameters": {"taxid": {"description": "The tax ID to search for in the Receita Federal database.", "type": "str", "default": "37335118000180"}, "maxage": {"description": "The maximum age of the data to be fetched. Defaults to 30.", "type": "int, optional", "default": "30"}}}
{"name": "searchentries", "description": "Search for entries with various filters in the query.", "parameters": {"sample": {"description": "Number of randomly-sampled results to return.", "type": "int, optional", "default": ""}, "source": {"description": "The resource to search within.", "type": "str, optional", "default": ""}, "language": {"description": "The language code of the entry’s language.", "type": "str, optional", "default": ""}, "analyzed": {"description": "Whether to search using the language analyzer or to get exact matches only.", "type": "bool, optional", "default": ""}, "subcategorization": {"description": "The subcategorization (e.g., countable, transitive) to search for.", "type": "str, optional", "default": ""}, "polysemous": {"description": "Whether to only return polysemous entries.", "type": "bool, optional", "default": ""}, "pos": {"description": "The part of speech (POS) to search for.", "type": "str, optional", "default": ""}, "gender": {"description": "The grammatical gender to search for.", "type": "str, optional", "default": ""}, "monosemous": {"description": "Whether to only return monosemous entries.", "type": "bool, optional", "default": ""}, "morph": {"description": "Whether to search in headword inflections, if they exist.", "type": "bool, optional", "default": ""}, "text": {"description": "The headword text to search for.", "type": "str, optional", "default": ""}, "number": {"description": "The grammatical number to search for.", "type": "str, optional", "default": ""}, "page": {"description": "Page number of results to return (1-indexed).", "type": "int, optional", "default": ""}}}
{"name": "downloadminecraftjson", "description": "Downloads the Minecraft JSON configuration file for a specified version.", "parameters": {"minecraftversion": {"description": "The version of Minecraft for which to download the JSON configuration file.", "type": "str", "default": ""}}}
{"name": "get_by_imdb_id", "description": "Fetch movie or TV show information by IMDb ID using the specified RapidAPI key.", "parameters": {"i": {"description": "A valid IMDb ID for the movie or TV show.", "type": "str", "default": "tt0073195"}}}
{"name": "v1_riddles", "description": "Retrieves random riddles from the API Ninjas Riddles API endpoint.", "parameters": {"limit": {"description": "The number of riddles to return. Must be between 1 and 20. Defaults to None.", "type": "int, optional", "default": ""}}}
{"name": "get_user_media_by_user_id", "description": "Fetches Instagram user media based on the provided user ID using the specified RapidAPI key.", "parameters": {"count": {"description": "The number of media posts to retrieve.", "type": "int", "default": "12"}, "is_id": {"description": "The Instagram user ID for which to fetch media.", "type": "int", "default": "18527"}, "end_cursor": {"description": "The cursor for pagination to fetch the next set of media posts. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "get_users_detail_info", "description": "Fetch detailed user information from the TikTok Video Feature Summary API.", "parameters": {"unique_id": {"description": "The unique identifier for the user. Default is 'voyagel'.", "type": "str", "default": "voyagel"}, "user_id": {"description": "The user ID. Default is '107955'.", "type": "str", "default": "107955"}}}
{"name": "get_distance_by_city_state_country", "description": "Retrieves the latitude, longitude, and calculated distance in miles between two locations specified by city, state, and country.", "parameters": {"country1": {"description": "The country of the first location.", "type": "str", "default": "us"}, "country2": {"description": "The country of the second location.", "type": "str", "default": "us"}, "state2": {"description": "The state of the second location.", "type": "str", "default": "ca"}, "city2": {"description": "The city of the second location.", "type": "str", "default": "sacramento"}, "city1": {"description": "The city of the first location.", "type": "str", "default": "birmingham"}, "state1": {"description": "The state of the first location.", "type": "str", "default": "al"}}}
{"name": "get_currency", "description": "Fetches the currency information from the Airbnb Search API.", "parameters": {"language_code": {"description": "The language code to use for retrieving the currency information from the API. Defaults to 'en-US'.", "type": "str", "default": "en-US"}}}
{"name": "download_chains", "description": "Downloads a list of hotel chains using the provided API key and optional parameters.", "parameters": {"resume_key": {"description": "An optional key to resume results from a given ID. Default is None.", "type": "str, optional", "default": ""}, "limit": {"description": "The limit on the number of results to return. Default is 100.", "type": "int, optional", "default": 100}}}
{"name": "webcams_list_property_property_property", "description": "Retrieves a list of webcams based on the specified property.", "parameters": {"property": {"description": "The property to filter webcams by. Multiple properties can be separated by comma. Possible values are \"editors\" (featured from the editors), \"hd\" (high resolution webcams), and \"live\" (webcams with a live stream). At least one property is required.", "type": "str", "default": ""}, "lang": {"description": "Localizes the results to the specified language, if available. Default is 'en'.", "type": "str, optional", "default": "en"}, "show": {"description": "Specifies the content to be listed in the response. Possible values are \"webcams\", \"categories\", \"continents\", \"countries\", \"regions\", \"properties\". Default is 'webcams:image,location'.", "type": "str, optional", "default": "webcams:image,location"}}}
{"name": "download_states", "description": "Downloads a list of states from the Priceline API using the provided parameters.", "parameters": {"limit": {"description": "Limits the number of results returned by the API. Defaults to 100.", "type": "int, optional", "default": 100}, "resume_key": {"description": "A key to resume results from a specific ID. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "search_by_genre", "description": "Discover movies by genre using the RapidAPI.", "parameters": {"with_genres": {"description": "The genre code to filter movies by. Defaults to '80'.", "type": "str", "default": "80"}, "page": {"description": "The page number of results to retrieve. Defaults to 1.", "type": "int", "default": "1"}}}
{"name": "d_die", "description": "Rolls a die with a given number of faces by making a request to an API.", "parameters": {"die": {"description": "The number of faces on the die. Must be between 2 and 100.", "type": "int", "default": ""}}}
{"name": "color_to_picture", "description": "Creates a new image of a specified color using the given dimensions and color mode through the Color-to-Picture API.", "parameters": {"height": {"description": "The height of the image in pixels. Default is '200'.", "type": "str", "default": "200"}, "color": {"description": "The color of the image in hex format (e.g., 'ff0000'). Default is 'ff0000'.", "type": "str", "default": "ff0000"}, "width": {"description": "The width of the image in pixels. Default is '200'.", "type": "str", "default": "200"}, "mode": {"description": "The mode of the image (e.g., 'L', 'RGB', 'RGBA'). Default is 'RGB'.", "type": "str", "default": "RGB"}}}
{"name": "price_probability", "description": "Fetch the probabilistic outcome of a stock's price based on over 1000 forecasts.", "parameters": {"symbol": {"description": "The stock symbol for which the probabilistic outcome is to be fetched.", "type": "str", "default": "AAPL"}}}
{"name": "swift_codes_by_country", "description": "Fetches and returns a list of SWIFT codes for a specified country using the RapidAPI service.", "parameters": {"country_code": {"description": "Two-letter ISO country code to get the SWIFT codes for.", "type": "str", "default": "AU"}}}
{"name": "logo_api", "description": "Fetches the logo for a given domain using the RapidAPI logo service.", "parameters": {"domain": {"description": "The domain name for which the logo is to be fetched.", "type": "str", "default": "amazon.com"}}}
{"name": "read_vault_by_name", "description": "Fetches vault details by the given vault name using the Yardillo API.", "parameters": {"name": {"description": "The name of the vault to fetch details for.", "type": "str", "default": "Vault_ESBHI"}}}
{"name": "nhl_summary", "description": "Fetch the game summary data for a specified NHL game using the RapidAPI service.", "parameters": {"is_id": {"description": "The game ID for which the summary data is requested.", "type": "str", "default": "401458986"}}}
{"name": "ema", "description": "Fetch the Exponential Moving Average (EMA) for a given financial instrument.", "parameters": {"symbol": {"description": "The financial instrument's symbol. Examples include 'AAPL' for Apple Inc., 'EUR/USD' for Euro to US Dollar, 'ETH/BTC' for Ethereum to Bitcoin, etc.", "type": "str", "default": "AAPL"}, "interval": {"description": "The time interval between successive data points. Supported intervals include '1min', '5min', '15min', '30min', '45min', '1h', '2h', '4h', '1day', '1week', and '1month'.", "type": "str", "default": "1min"}, "series_type": {"description": "The type of series to use in the calculations. Supported values are 'open', 'high', 'low', and 'close'. Defaults to 'close'.", "type": "str, optional", "default": "close"}, "format": {"description": "The format of the response data. Supported values are 'JSON' and 'CSV'. Defaults to 'JSON'.", "type": "str, optional", "default": "json"}, "outputsize": {"description": "The number of data points to return. Defaults to 30 when no date parameter is set, otherwise is set to the maximum available.", "type": "int, optional", "default": 30}, "time_period": {"description": "The number of periods to use in the calculation of the EMA. Defaults to 9.", "type": "int, optional", "default": 9}}}
{"name": "forex_quotes", "description": "Fetches the real-time price of a forex currency pair.", "parameters": {"target": {"description": "The target currency code (e.g., 'USD').", "type": "str", "default": "USD"}, "source": {"description": "The source currency code (e.g., 'EUR').", "type": "str", "default": "EUR"}}}
{"name": "symbols_get_profile", "description": "Fetch summary information for a stock quote, index, exchange, etc., given an issue ID.", "parameters": {"issueid": {"description": "The value of the issueId field obtained from previous endpoints such as .../auto-complete or .../symbols/translate.", "type": "int", "default": "36276"}}}
{"name": "get_company_ads_count", "description": "Fetch the number of ads a specific company has posted on LinkedIn using the Toolbench RapidAPI.", "parameters": {"company_id": {"description": "The unique identifier of the company whose ad count is to be fetched.", "type": "str", "default": "162479"}}}
{"name": "random_post_by_id", "description": "Retrieves a fake post by its ID from the specified API.", "parameters": {"is_id": {"description": "The ID of the fake post to retrieve.", "type": "int", "default": "1"}}}
{"name": "bouncer_email_checker", "description": "Validates an email address using the Bouncer Email Checker API.", "parameters": {"email": {"description": "The email address to be validated.", "type": "str", "default": "example@gmail.com"}}}
{"name": "get_open_profile_status", "description": "Check if a given LinkedIn profile URL has an open profile using the RapidAPI service.", "parameters": {"linkedin_url": {"description": "The URL of the LinkedIn profile to check.", "type": "str", "default": "https://www.linkedin.com/in/williamhgates/"}}}
{"name": "aircraft_scatter_data", "description": "Fetch aircraft data above 10,000 feet within 1000 kilometers from the specified latitude and longitude.", "parameters": {"lat": {"description": "Latitude coordinate for the center point of the search radius.", "type": "int", "default": "51.533"}, "lon": {"description": "Longitude coordinate for the center point of the search radius.", "type": "int", "default": "-0.0926"}}}
{"name": "fixtures_by_date", "description": "Fetches rugby match fixtures and results for a specific date using the RapidAPI service. If no date is provided, the default date is set to '2023-02-04'.", "parameters": {"date": {"description": "The date for which to retrieve fixtures and results, in the format 'YYYY-MM-DD'. Defaults to '2023-02-04' if not provided.", "type": "str", "default": "2023-02-04"}}}
{"name": "get_all_latest_nba_articles", "description": "Fetches the latest NBA articles with optional filters for source, team, player, and limit.", "parameters": {"limit": {"description": "The maximum number of articles to retrieve. Default is `None`.", "type": "str, optional", "default": ""}, "player": {"description": "The player's name for which to filter articles, use a dash to separate names (e.g., 'kevin-durant'). Default is `None`.", "type": "str, optional", "default": ""}, "team": {"description": "The team name for which to filter articles (e.g., 'lakers'). Default is `None`.", "type": "str, optional", "default": ""}, "source": {"description": "The source of the articles (e.g., 'bleacher-report', 'nba', 'espn'). Default is `None`.", "type": "str, optional", "default": ""}}}
{"name": "random_post", "description": "Generates a list of fake posts by calling an external API.", "parameters": {"size": {"description": "The number of fake posts to generate. Defaults to 5.", "type": "int, optional", "default": "5"}}}
{"name": "get_states", "description": "Fetches a list of states based on various search parameters.", "parameters": {"keyword": {"description": "A keyword to search for states. Defaults to 'asia'.", "type": "str, optional", "default": "asia"}, "perpage": {"description": "The number of results to return per page. Defaults to 50.", "type": "int, optional", "default": "50"}, "city_id": {"description": "A city ID to find associated states. Defaults to None.", "type": "str, optional", "default": ""}, "is_id": {"description": "A specific state ID to search for. Defaults to None.", "type": "str, optional", "default": ""}, "page": {"description": "The number of results to return per page. Defaults to 50.", "type": "int, optional", "default": "1"}}}
{"name": "getphonesbybrandid", "description": "Fetches all phone IDs for a specific brand using the given brand ID.", "parameters": {"brandid": {"description": "The unique identifier for the brand whose phone IDs are to be retrieved.", "type": "int", "default": "237"}}}
{"name": "get_specifications_by_custom_id", "description": "Fetch specifications for a mobile phone using its custom ID via the Mobile Phone Specs Database API.", "parameters": {"phonecustomid": {"description": "The custom ID of the mobile phone for which specifications are to be fetched.", "type": "int", "default": "103693"}}}
{"name": "maclookup", "description": "Looks up the manufacturer information for a given MAC address using the Toolbench RapidAPI service.", "parameters": {"mac_number": {"description": "The MAC address for which to find the manufacturer. Supported formats include 'xx-xx-xx-xx-xx-xx', 'xx:xx:xx:xx:xx:xx', 'xxxx.xxxx.xxxx', and 'xxxxxxxxxxxx'.", "type": "str", "default": "14-AB-C5-D5-DA-F9"}}}
{"name": "getphonedetails", "description": "Fetches all specifications and photos for a given phone based on its ID.", "parameters": {"phoneid": {"description": "The unique identifier of the phone.", "type": "int", "default": "1859"}}}
{"name": "product_groups_list", "description": "Fetches a list of product groups based on specified categories and types with optional pagination.", "parameters": {"size": {"description": "The number of items per response. Maximum is 500. Defaults to 100.", "type": "int, optional", "default": "100"}, "productgrouptypeid": {"description": "The ID representing the type of product group.", "type": "int, optional", "default": ""}, "page": {"description": "The page index starting from 0 for pagination purposes.", "type": "int, optional", "default": ""}, "parentproductgroupid": {"description": "The ID of the parent product group to filter the results.", "type": "int, optional", "default": ""}}}
{"name": "url_metrics", "description": "Fetches and returns various metrics for a given target URL, such as Domain Authority Score, Page Authority Score, Spam Score, and Total Backlinks, using the Toolbench RapidAPI service.", "parameters": {"target": {"description": "The target URL, page, or domain for which to fetch the metrics.", "type": "str", "default": "www.google.com"}}}
{"name": "getchapter", "description": "Fetches a specific chapter from a specified book of the Bible using the Ajith Holy Bible API.", "parameters": {"book": {"description": "The name of the book from the Bible.", "type": "str", "default": "Luke"}, "chapter": {"description": "The chapter number from the specified book.", "type": "int", "default": "8"}}}
{"name": "trending_gifs", "description": "Fetch currently trending GIFs from Giphy.", "parameters": {"limit": {"description": "The maximum number of results to return. Defaults to 25 if not specified.", "type": "str, optional", "default": ""}, "rating": {"description": "Restricts results to the specified rating (y, g, pg, pg-13, or r).", "type": "str, optional", "default": ""}}}
{"name": "search_title", "description": "Searches for books by a given title using the Open Library API.", "parameters": {"title": {"description": "The title of the book to search for.", "type": "str", "default": ""}}}
{"name": "products", "description": "Fetch products from the Facebook Marketplace using the RapidAPI.", "parameters": {"no_of_save": {"description": "Minimum number of saves for the listed items. Defaults to 25.", "type": "int, optional", "default": "25"}, "min_sales": {"description": "Minimum number of sales for the listed items. Defaults to 5.", "type": "int, optional", "default": "5"}, "min_price": {"description": "Minimum price for the listed items. Defaults to '2.00'.", "type": "str, optional", "default": "2.00"}, "category": {"description": "Category of the listed items. Defaults to 'Apparel'.", "type": "str, optional", "default": "Apparel"}, "city": {"description": "City where the items are listed. Defaults to 'New York'.", "type": "str, optional", "default": "New York"}, "page": {"description": "Page number for pagination. Defaults to 1.", "type": "int, optional", "default": "1"}}}
{"name": "get_all_brands", "description": "Fetches all available brands from the iHerb Product Data API for a given page number.", "parameters": {"page": {"description": "The page number to retrieve brands from.", "type": "int", "default": 1}}}
{"name": "zappos_search_product", "description": "Searches for products on Zappos using the given keyword and various optional parameters for sorting and pagination.", "parameters": {"keyword": {"description": "The search term to use for finding products on Zappos.", "type": "str", "default": "crocs body"}, "sort": {"description": "The sorting criteria for the search results. Possible values are 'best_seller', 'relevance', 'low_to_high', 'high_to_low', 'customer_rating', 'new_arrivals', and 'brand_name'. Defaults to 'new_arrivals'.", "type": "str, optional", "default": "new_arrivals"}, "page": {"description": "The page number for pagination of search results. Defaults to 1.", "type": "int, optional", "default": "1"}}}
{"name": "get_coin_price_difference", "description": "Fetches the price difference of a specified cryptocurrency from the Crypto Arbitrage Trading API using the provided RapidAPI key.", "parameters": {"name": {"description": "The name of the cryptocurrency for which to fetch the price difference.", "type": "str", "default": "MOVR"}}}
{"name": "nearest_airport_from_postal_code", "description": "Retrieves the nearest airport to a given postal code within a specified country.", "parameters": {"postal_code": {"description": "The postal code for which to find the nearest airport.", "type": "str", "default": ""}, "country_code": {"description": "The two-digit country code corresponding to the postal code.", "type": "str", "default": ""}}}
{"name": "chapters_list_paginated", "description": "Fetches a paginated list of chapters for a specific webtoon from a specified provider.", "parameters": {"provider": {"description": "The slug identifying the webtoon provider. Refer to /providers for the list of providers.", "type": "str", "default": "cosmic"}, "webtoon": {"description": "The slug identifying the webtoon. Refer to /webtoons for the list of webtoons.", "type": "str", "default": "eleceed"}, "limit": {"description": "The number of results to return per page, between 1 and 20.", "type": "int", "default": "10"}, "page": {"description": "The page number to fetch.", "type": "int", "default": "1"}}}
{"name": "get_match", "description": "Calculates the match percentage between two names using the Love Calculator API.", "parameters": {"fname": {"description": "The first name for the love match calculation.", "type": "str", "default": "oliver m"}, "sname": {"description": "The second name for the love match calculation.", "type": "str", "default": "chloe p"}}}
{"name": "read_group", "description": "Fetches information of a specific group from the IronWiFi API using the given group ID.", "parameters": {"group_id": {"description": "The ID of the group to retrieve information for.", "type": "str", "default": ""}}}
{"name": "getrandom", "description": "Retrieve a random sequence of characters based on the specified attributes.", "parameters": {"length": {"description": "The length of the random sequence to generate.", "type": "int", "default": ""}, "case": {"description": "Specifies the case for the character sequence. Defaults to 'all'.", "type": "str, optional", "default": "all"}, "extra": {"description": "Specifies whether to include special characters in the sequence. Defaults to 'true'.", "type": "str, optional", "default": "true"}, "type": {"description": "Specifies the type of sequence (e.g., 'all', 'string', 'number', 'special'). Defaults to 'all'.", "type": "str, optional", "default": "all"}}}
{"name": "companies", "description": "Fetch a specified quantity of companies for a given locale from the RapidAPI endpoint.", "parameters": {"quantity": {"description": "The number of companies to retrieve.", "type": "int", "default": 100}, "locale": {"description": "The locale code for the data, e.g., 'en_US'.", "type": "str", "default": "en_US"}}}
{"name": "get_data_and_story", "description": "Fetches data and story for a given Snapchat username using the RapidAPI service.", "parameters": {"user": {"description": "The Snapchat username for which to fetch the data and story.", "type": "str", "default": "ysyn_lny"}}}
{"name": "get_region_info", "description": "Retrieves region information from the given Redfin URL using the RapidAPI service.", "parameters": {"url": {"description": "The input value can be a full URL (e.g., 'https://www.redfin.com/zipcode/01026') or a sub URL (e.g., '/zipcode/01026'). Use the Auto-complete API to obtain the property URL if needed.", "type": "str", "default": "https://www.redfin.com/zipcode/01026"}}}
{"name": "get_verse_by_bookname", "description": "Fetches a specific verse from the Bible given the verse ID, book name, and chapter ID using the Toolbench RapidAPI.", "parameters": {"verseid": {"description": "The ID of the verse to retrieve.", "type": "int", "default": "1"}, "bookname": {"description": "The name of the book in the Bible.", "type": "str", "default": "Revelation"}, "chapterid": {"description": "The chapter number within the specified book.", "type": "int", "default": "12"}}}
{"name": "live_giveaways_by_platform_type_sorted", "description": "Fetches all live giveaways filtered by platform and type, and sorts them based on the specified criteria.", "parameters": {"platform": {"description": "Platform for which to fetch giveaways (default is 'steam').", "type": "str", "default": "steam"}, "sort_by": {"description": "Criteria to sort the giveaways by (default is 'popularity').", "type": "str", "default": "popularity"}, "type": {"description": "Type of giveaways to filter (default is 'loot').", "type": "str", "default": "loot"}}}
{"name": "get_game", "description": "Returns game data for a given game ID using the specified RapidAPI key.", "parameters": {"gameid": {"description": "The unique identifier of the game to retrieve data for.", "type": "str", "default": "107458367241215654"}}}
{"name": "get_pictionary_word", "description": "Retrieve a random Pictionary word with a specified difficulty level from the Toolbench RapidAPI.", "parameters": {"difficulty": {"description": "The difficulty level of the word to retrieve (e.g., \"easy\", \"medium\", \"hard\"). If not provided, a random difficulty will be used.", "type": "str, optional", "default": ""}}}
{"name": "search_php", "description": "Search for geocoding information using the specified Geokeo Forward Geocoding API.", "parameters": {"api": {"description": "The API key for accessing the Geokeo Forward Geocoding service.", "type": "str", "default": "api key from geokeo"}, "q": {"description": "The address or location query string to be geocoded.", "type": "str", "default": "empire state building"}}}
{"name": "nearest_metro_station", "description": "Finds the nearest Delhi Metro station to the given longitude and latitude.", "parameters": {"long": {"description": "The longitude coordinate.", "type": "str", "default": "77.2122"}, "lat": {"description": "The latitude coordinate.", "type": "str", "default": "28.5729"}}}
{"name": "channel_details", "description": "Fetches details of a YouTube channel given its ID and desired parts using the RapidAPI service.", "parameters": {"is_id": {"description": "The ID of the YouTube channel to fetch details for.", "type": "str", "default": "UCBVjMGOIkavEAhyqpxJ73Dw"}, "part": {"description": "The part parameter specifies a comma-separated list of one or more channel resource properties that the API response will include.", "type": "str", "default": "snippet,statistics"}}}
{"name": "cinemas", "description": "Fetches a list of cinemas based on the specified brand using the RapidAPI service.", "parameters": {"brand": {"description": "The brand of the cinema to filter the results. Default is 'hoyts'.", "type": "str", "default": "hoyts"}}}
{"name": "chart_by_id", "description": "Get an IMDb chart given a specific chart ID.", "parameters": {"is_id": {"description": "The ID representing the type of IMDb chart to retrieve (e.g., 'boxoffice', 'moviemeter', 'top').", "type": "str", "default": "boxoffice"}}}
{"name": "genericname", "description": "This function retrieves the generic name of a given drug using the RapidAPI Drug Info and Price History API.", "parameters": {"drug": {"description": "The brand name of the drug. Defaults to 'advil'.", "type": "str, optional", "default": "advil"}}}
{"name": "district_detail_of_specific_division", "description": "Fetches all districts and upazilas of a specified division in Bangladesh using the bdapi RapidAPI endpoint.", "parameters": {"division_name": {"description": "The name of the division for which to retrieve district and upazila information.", "type": "str", "default": ""}}}
{"name": "municipio_por_c_digo_postal", "description": "Fetches the municipality corresponding to a given postal code using the provided RapidAPI key.", "parameters": {"codigo_postal": {"description": "The postal code for which the municipality is to be retrieved.", "type": "str", "default": "32500"}}}
{"name": "upvote_riddle", "description": "Registers an upvote for a riddle using the Riddlie API. This function sends a GET request to the Riddlie API to upvote a riddle identified by `is_id`. The upvote helps in better serving the riddles in the future.", "parameters": {"is_id": {"description": "The identifier of the riddle to upvote.", "type": "str", "default": "63bdef027183b71946b64ee6"}}}
{"name": "stock_get_yearly_high", "description": "Fetch the yearly high stock price for a given ticker symbol from the specified region using the RapidAPI service.", "parameters": {"symbol": {"description": "The ticker symbol of the stock (e.g., \"AAPL\" for Apple Inc.).", "type": "str", "default": "AAPL"}, "region": {"description": "The region in which the stock is listed. Defaults to 'US'. Valid options include 'US', 'BR', 'AU', 'CA', 'FR', 'DE', 'HK', 'IN', 'IT', 'ES', 'GB', and 'S'.", "type": "str, optional", "default": "US"}}}
{"name": "player_statistics_seasons", "description": "Fetch the season statistics for a given player using the SofaScores API.", "parameters": {"player_id": {"description": "The unique identifier for the player whose statistics are to be fetched.", "type": "int", "default": "12994"}}}
{"name": "tournament_results_by_id_and_year_wta", "description": "Retrieves all the matches played in a selected WTA tournament for a given year.", "parameters": {"year": {"description": "The year of the tournament. Please note that not all tournaments are held every year.", "type": "int", "default": "2022"}, "tournament_id": {"description": "The ID of the tournament. You can retrieve this list from the WTA endpoint.", "type": "str", "default": "709"}}}
{"name": "drivers", "description": "Fetches a list of all drivers for a given season using the F1 Live Motorsport Data API.", "parameters": {"season_id": {"description": "The ID of the season for which to list the drivers.", "type": "int", "default": "2020"}}}
{"name": "clubs_list_by_competition", "description": "Fetches the list of clubs in a specific competition using the specified competition ID and domain.", "parameters": {"is_id": {"description": "The ID of the competition to fetch the list of clubs for. This value is returned from the .../search or .../competitions/list endpoints.", "type": "str", "default": "IT1"}, "domain": {"description": "The domain to use for the request. It should be one of the following: 'com', 'de', 'be', 'es', 'it', 'nl', 'pl', 'pt', 'com.tr', 'world'. Defaults to 'de'.", "type": "str, optional", "default": "de"}}}
{"name": "wnba_team_info", "description": "Retrieve information for a specific WNBA team using the RapidAPI service.", "parameters": {"teamid": {"description": "The ID of the WNBA team for which information is being requested.", "type": "str", "default": "18"}}}
{"name": "listofallcircuitswithinaraceinayear", "description": "Fetches a list of all circuits within a race for a given year from the Formula 1 API.", "parameters": {"round": {"description": "The round number/name of the race within the year.", "type": "str", "default": "round"}, "year": {"description": "The year of the race season.", "type": "str", "default": "year"}}}
{"name": "inbox", "description": "Fetches the inbox messages for a given temporary email address using the Toolbench RapidAPI.", "parameters": {"email": {"description": "The temporary email address for which to fetch the inbox messages.", "type": "str", "default": "example@mx.getmailet.com"}}}
{"name": "validate_domain_or_email_address", "description": "Validates whether the given input is a disposable domain or email address using the RapidAPI Disposable Email Validation service.", "parameters": {"validate": {"description": "The domain or email address to be validated.", "type": "str", "default": "badactor@spam4.me"}}}
{"name": "get_specific_pizza", "description": "Fetches a specific pizza by its ID from the RapidAPI service.", "parameters": {"is_id": {"description": "The ID of the pizza to retrieve.", "type": "int", "default": "1"}}}
{"name": "africa", "description": "Fetch a list of African cities sorted by the given criteria from the Nomad List API.", "parameters": {"sort": {"description": "Sort order, either 'asc' for ascending or 'desc' for descending. Defaults to 'desc'.", "type": "str", "default": "desc"}, "sort_by": {"description": "The attribute to sort by, such as 'overall_score', 'internet_speed', 'temperatureC', 'cost_for_family_in_usd', etc. Defaults to 'overall_score'.", "type": "str", "default": "overall_score"}, "page": {"description": "Page number for pagination. Defaults to '1'.", "type": "str", "default": "1"}, "size": {"description": "Number of results per page. Defaults to '20'.", "type": "str", "default": "20"}}}
{"name": "get_cities_by_filter", "description": "Fetches cities information based on the provided filter ID using the RapidAPI service.", "parameters": {"is_id": {"description": "The filter ID used to specify which cities to fetch information for.", "type": "str", "default": ""}}}
{"name": "get_2_thumbnail_ready", "description": "Generate a thumbnail of a specified size from a given URL by polling an API.", "parameters": {"size": {"description": "The size of the thumbnail to generate. Options are:", "type": "str", "default": "m"}, "url": {"description": "The URL from which to generate the thumbnail.", "type": "str", "default": "http://www.mashape.com/"}}}
{"name": "generate_qr_code", "description": "Generates a QR code for the given data by making a request to an external API.", "parameters": {"data": {"description": "The data to be encoded into the QR code.", "type": "str", "default": "NigeriansOnly.com"}}}
{"name": "generate_a_qr_code_image", "description": "Generate a QR Code image using the Qrickit API.", "parameters": {"d": {"description": "Data for the QR Code (e.g., URL, text, vCard data, iCal data, etc.).", "type": "str", "default": "YourData"}, "logotext": {"description": "Header text, typically 15 to 35 characters maximum, displayed at the top of the QR Code.", "type": "str, optional", "default": ""}, "t": {"description": "Header text, typically 15 to 35 characters maximum, displayed at the top of the QR Code.", "type": "str, optional", "default": ""}, "fgdcolor": {"description": "QR Code color in HTML Hex format (e.g., 'FFFFFF' for white, '000000' for black). Default is black ('000000').", "type": "str, optional", "default": ""}, "qrsize": {"description": "Size of the QR Code image in pixels. Default is 150. Minimum is 80, maximum is 1480.", "type": "int, optional", "default": ""}, "lang": {"description": "Set to 'jp' if the footer text contains Japanese characters, otherwise leave blank.", "type": "str, optional", "default": ""}, "e": {"description": "Header text, typically 15 to 35 characters maximum, displayed at the top of the QR Code.", "type": "int, optional", "default": ""}, "addtext": {"description": "Footer text, typically 15 to 60 characters maximum, displayed at the bottom of the QR Code.", "type": "str, optional", "default": ""}, "txtcolor": {"description": "Footer text color in HTML Hex format (e.g., 'FFFFFF' for white, '000000' for black). Default is black ('000000').", "type": "str, optional", "default": ""}, "bgdcolor": {"description": "Background color in HTML Hex format (e.g., 'FFFFFF' for white, '000000' for black). Default is white ('FFFFFF').", "type": "str, optional", "default": ""}}}
{"name": "bulkgenerateguids", "description": "Generates a bulk of GUIDs (Globally Unique Identifiers) using the GUID Generator API.", "parameters": {"batch_size": {"description": "The number of GUIDs to generate. Must be between 1 and 10,000. Defaults to 20 if not specified.", "type": "int, optional", "default": ""}}}
{"name": "retrieve_owners", "description": "Retrieve the list of owners for a given NFT including the quantity owned.", "parameters": {"asset_contract_address": {"description": "The contract address of the NFT asset.", "type": "str", "default": "0xb47e3cd837ddf8e4c57f05d70ab865de6e193bbb"}, "token_id": {"description": "The unique identifier of the NFT.", "type": "str", "default": "1"}, "limit": {"description": "The maximum number of results to return. Defaults to '20'.", "type": "str, optional", "default": "20"}, "cursor": {"description": "An opaque value used for pagination to retrieve the next set of results. Defaults to None.", "type": "str, optional", "default": ""}, "order_by": {"description": "The field by which to sort the results. Defaults to 'created_date'.", "type": "str, optional", "default": "created_date"}, "order_direction": {"description": "The direction to sort the results, either 'asc' for ascending or 'desc' for descending. Defaults to 'desc'.", "type": "str, optional", "default": "desc"}}}
{"name": "salvagecheck", "description": "Checks if a given Vehicle Identification Number (VIN) has been listed in a salvage database.", "parameters": {"vin": {"description": "A 17-character VIN from North America.", "type": "str", "default": "1G1JC5SHXC4134208"}}}
{"name": "lines_line_abs", "description": "Fetches poems that contain a specific line using the Thundercomb Poetry DB API.", "parameters": {"line": {"description": "The exact line to search for in poems.", "type": "str", "default": ""}}}
{"name": "global_result_single", "description": "Fetches global SEO keyword research data using the RapidAPI Keyword Research service.", "parameters": {"keyword": {"description": "The keyword for which to perform the research.", "type": "str", "default": "email marketing"}}}
{"name": "text_to_image", "description": "Generate an image based on the input text using the specified style through the Toolbench RapidAPI.", "parameters": {"text": {"description": "The text to convert into an image.", "type": "str", "default": "Daring treasure hunter, map and compass, standing in desolate desert, adventurous, detailed, high detail, portrait"}, "style": {"description": "The preset style for the image. Defaults to 'enhance'.", "type": "str, optional", "default": "enhance"}}}
{"name": "download", "description": "Downloads a barcode of the specified type with the given data and optional size using the Toolbench RapidAPI service.", "parameters": {"type": {"description": "The type of barcode to generate. Can be one of: 'qr_code', 'code_128a', 'code_128b', 'code_128c', 'code_25', 'code_25_interleaved', 'code_25_iata', 'code_39', 'code_93', 'gs1_128', 'ean_13', 'bookland', 'ean_8', 'upc_supplemental', 'codabar'.", "type": "str", "default": "qr_code"}, "data": {"description": "The data to encode in the barcode.", "type": "str", "default": "https://www.wynk182.com"}, "size": {"description": "The size of the barcode. Default is 5.", "type": "int, optional", "default": "5"}}}
{"name": "analyze_v2", "description": "Analyzes the page speed and generates a detailed report for the given URL using the specified parameters.", "parameters": {"url": {"description": "The URL of the webpage to be analyzed.", "type": "str", "default": "https://google.com"}, "category": {"description": "The category of analysis to be performed. Options include 'accessibility', 'best-practices', 'performance', 'seo', and 'pwa'. Defaults to 'performance'.", "type": "str, optional", "default": ""}, "strategy": {"description": "The strategy for analysis. Options include 'desktop' and 'mobile'. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "shares_float", "description": "Provides the current shares float for a given stock symbol using the Holistic Finance Stock Data API.", "parameters": {"symbol": {"description": "The stock symbol for which to retrieve the shares float.", "type": "str", "default": "MSFT"}}}
{"name": "get_postal_codes_by_id", "description": "Fetches postal codes information by given ID from the Canada Postal Codes API.", "parameters": {"is_id": {"description": "The postal code ID to fetch information for.", "type": "int", "default": "1"}}}
{"name": "bp_par_localite", "description": "Fetches postal boxes by locality in New Caledonia using the provided RapidAPI key.", "parameters": {"localite": {"description": "The locality for which to fetch postal boxes. Defaults to 'poum'.", "type": "str", "default": "poum"}}}
{"name": "web_snapshot", "description": "Fetches a snapshot of a webpage as an image using the Pragmavant API.", "parameters": {"accept": {"description": "The MIME type that is acceptable for the response.", "type": "str", "default": "image/png"}, "source": {"description": "The URL of the webpage to capture.", "type": "str", "default": "https://www.yahoo.com"}}}
{"name": "get_quotes_by_specific_author", "description": "Fetch quotes from a specified author using the World of Quotes API.", "parameters": {"author": {"description": "Name of the author whose quotes are to be fetched.", "type": "str", "default": "Albert Einstein"}, "page": {"description": "Page number for pagination. Defaults to 3.", "type": "int, optional", "default": "3"}, "limit": {"description": "Number of quotes to retrieve per request. Maximum is 20. Defaults to 20.", "type": "int, optional", "default": "20"}}}
{"name": "file_digest", "description": "Calculates the digest/checksum for a given file by making a request to the pragmavantapi via RapidAPI.", "parameters": {"source": {"description": "The URL of the file for which the digest/checksum is to be calculated.", "type": "str", "default": "http://google.com"}, "cache_key": {"description": "An optional cache key for quicker lookup. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "mensajes_2", "description": "Fetches messages for student number 2 using the provided RapidAPI key and authorization details.", "parameters": {"authorization": {"description": "The authorization token required for API access.", "type": "str", "default": "1234567890"}, "authoriza": {"description": "An additional authorization token. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "recitations_by_juz_number", "description": "Fetches a list of ayah recitations for a specified juz number.", "parameters": {"recitation_id": {"description": "The ID of the recitation.", "type": "int", "default": ""}, "juz_number": {"description": "The number of the juz for which to fetch ayah recitations.", "type": "int", "default": ""}}}
{"name": "get_voice", "description": "Generates a voice response from the given text using the Anime Voice Waifu AI via RapidAPI.", "parameters": {"text": {"description": "The text to be converted into voice.", "type": "str", "default": ""}, "speaker": {"description": "The speaker's voice to use for conversion. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "transliterate_any_to_latin", "description": "Transliterates the given text from any language to Latin script using the RapidAPI Webit Language Transliterate API.", "parameters": {"text": {"description": "The text to be transliterated to Latin script.", "type": "str", "default": "こんにちは。"}}}
{"name": "products_list", "description": "Fetches a list of products from a specified category with options for filtering and sorting.", "parameters": {"adp": {"description": "The value of 'goodsId' returned by the endpoint `/navigations/get-node-content`.", "type": "str", "default": "10170797"}, "cat_id": {"description": "The value of 'hrefTarget' returned by the endpoint `/navigations/get-node-content`.", "type": "str", "default": "1980"}, "max_price": {"description": "The maximum price to filter products. Defaults to None.", "type": "int, optional", "default": ""}, "sort": {"description": "Sorting option for the product list.", "type": "int, optional", "default": "7"}, "min_price": {"description": "The minimum price to filter products. Defaults to None.", "type": "int, optional", "default": ""}, "filter": {"description": "A string representing attribute filters in the format `{attr_id}_{attr_value_id}`, separated by commas for multiple filters. Defaults to None.", "type": "str, optional", "default": ""}, "currency": {"description": "The 3-letter currency code. Defaults to 'USD'.", "type": "str, optional", "default": "USD"}, "page": {"description": "The page index for pagination. Defaults to 1.", "type": "int, optional", "default": "1"}, "limit": {"description": "The number of items per page. Defaults to 20.", "type": "int, optional", "default": "20"}, "country": {"description": "The 2-letter country code. Defaults to 'US'.", "type": "str, optional", "default": "US"}, "language": {"description": "The 2-letter language code. Defaults to 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "area_code", "description": "Fetches the International Country Calling Code and the Local Area Code information for a given country and region using the Metropolis API.", "parameters": {"country": {"description": "The ISO 2-letter country code or the name of the country in English.", "type": "str", "default": "BR"}, "region": {"description": "The geographic region (e.g., city) without accented letters.", "type": "str", "default": "Manaus"}}}
{"name": "getrandomarray", "description": "Generate a random array with specified data type and size using the Toolbench RapidAPI service.", "parameters": {"data_type": {"description": "The type of data to include in the array. Options are 'string', 'number', 'mixed', etc. Default is 'string'.", "type": "str", "default": "string"}, "size": {"description": "The number of elements in the array. Default is 5.", "type": "int", "default": "5"}}}
{"name": "list_of_countries", "description": "Fetches information about countries where Booking.com offers hotels.", "parameters": {"country": {"description": "The country code for filtering the results. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "get_regions", "description": "Fetches the regions of a specified country using the provided API key.", "parameters": {"country_code": {"description": "The ISO code of the country for which regions are to be fetched. The country code can be obtained from the \"Get Countries\" endpoint.", "type": "str", "default": "ph"}}}
{"name": "convert_hex", "description": "Converts a hex color code to other color formats such as RGB, HSL, and CMYK using the Convexity API.", "parameters": {"hex": {"description": "The hex color code to be converted.", "type": "str", "default": "ffffff"}}}
{"name": "stock_get_stock_price", "description": "Retrieve the current stock price for a given ticker symbol from the Yahoo! Finance API.", "parameters": {"symbol": {"description": "The ticker symbol of the stock. For example, \"AAPL\" is the ticker symbol for Apple Inc.", "type": "str", "default": "AAPL"}, "region": {"description": "The market region of the ticker symbol. Allowed values are 'US', 'BR', 'AU', 'CA', 'FR', 'DE', 'HK', 'IN', 'IT', 'ES', 'GB', 'S'. Defaults to 'US'.", "type": "str, optional", "default": "US"}}}
{"name": "get_one_anime_by_ranking", "description": "Fetches the details of an anime based on its ranking from the Anime DB API.", "parameters": {"rank": {"description": "The ranking position of the desired anime.", "type": "int", "default": "1"}}}
{"name": "recipe_search_and_recommendations", "description": "Search for recipes and provide recommendations based on given keywords and filters.", "parameters": {"q": {"description": "The keyword to search for in the recipe database. Defaults to 'chicken'.", "type": "str", "default": "chicken"}, "r": {"description": "Optional filter parameter for the search.", "type": "str", "default": ""}}}
{"name": "detailed_food_recipe_by_id", "description": "Fetches a detailed food recipe using the given recipe ID from The Vegan Recipes DB API.", "parameters": {"is_id": {"description": "The ID of the food recipe to fetch.", "type": "str", "default": "45"}}}
{"name": "get_all_food", "description": "Fetches a list of Ghanaian foods including ingredients and a short description from the specified API endpoint.", "parameters": {"page": {"description": "The page number to request data from. Default is '?page=2'.", "type": "str", "default": "?page=2"}}}
{"name": "v1_cocktail", "description": "Fetches cocktail information from the API Ninjas Cocktail API based on the provided cocktail name or ingredients.", "parameters": {"name": {"description": "The name of the cocktail to search for. This parameter supports partial matches (default is 'bloody mary').", "type": "str", "default": "bloody mary"}, "ingredients": {"description": "A comma-separated string of ingredients to search for. Only cocktails containing all listed ingredients will be returned (default is None).", "type": "str", "default": ""}}}
{"name": "bmi_imperial", "description": "Calculates the Body Mass Index (BMI) based on the provided height and weight parameters in imperial units (inches and pounds).", "parameters": {"height": {"description": "The height in inches.", "type": "int", "default": "65"}, "weight": {"description": "The weight in pounds.", "type": "int", "default": "150"}}}
{"name": "daily_water_intake", "description": "Calculates the daily recommended water intake based on factors such as weight, activity level, and climate.", "parameters": {"weight": {"description": "The weight of the individual in kilograms (kg).", "type": "int", "default": "60"}, "activity_level": {"description": "The activity level of the individual. Acceptable values are:", "type": "str", "default": "sedentary"}, "climate": {"description": "The climate in which the individual is located. Acceptable values are:", "type": "str", "default": "normal"}, "unit": {"description": "The unit of measurement for the water intake. Default is 'liters', specify 'ounces' to get the result in ounces.", "type": "str, optional", "default": "liters"}}}
{"name": "obtain_a_new_datacenter_proxy", "description": "Obtain a new datacenter proxy using the provided API key. The proxy will only allow connections from a specified IP address or a list of countries.", "parameters": {"whitelist_ip": {"description": "The IP address to whitelist for using the proxy. Allows an additional IP address besides the one making the API call.", "type": "str, optional", "default": ""}, "countries": {"description": "A comma-separated list of country codes from which the proxy should be obtained. If not specified, the country is selected randomly.", "type": "str, optional", "default": ""}}}
{"name": "movies_get_opening", "description": "Fetches the list of opening movies for a given country using the Flixster API.", "parameters": {"countryid": {"description": "The country code for which to fetch opening movies. Defaults to 'usa'. Examples include 'afg', 'alb', 'dza', etc.", "type": "str, optional", "default": "usa"}}}
{"name": "random_credit_card_by_id", "description": "Retrieve fake credit card details by ID using the RapidAPI service.", "parameters": {"is_id": {"description": "The ID used to retrieve the fake credit card details.", "type": "int", "default": "1"}}}
{"name": "get_dns_records", "description": "Fetch DNS records for a given domain using the specified parameters.", "parameters": {"domain": {"description": "The domain for which to fetch the DNS records.", "type": "str", "default": "rapidapi.com"}, "record_type": {"description": "A comma-separated string specifying the types of DNS records to fetch. Possible values include 'a', 'ns', 'mx', 'txt', and 'cname'. Defaults to 'a,mx'.", "type": "str, optional", "default": "a,mx"}, "response_type_seperator": {"description": "Specifies the delimiter to use when the response type is 'target'. Default is ',' (comma).", "type": "str, optional", "default": ","}, "response_type": {"description": "Specifies the kind of data to return, such as 'ip', 'txt', or 'target'. Default is 'target'.", "type": "str, optional", "default": "target"}}}
{"name": "strongs_number_detail_api", "description": "Fetches detailed information for one or more Strong's Numbers from the Complete Study Bible API.", "parameters": {"comma_separated_strongs_numbers": {"description": "A comma-separated list of Strong's Numbers (up to 3 at a time).", "type": "str", "default": "G4931,G5000"}}}
{"name": "tournaments", "description": "Fetches tournament information such as metadata, players, courses, and earnings from the live golf data API.", "parameters": {"orgid": {"description": "Identifier for the organization. Choose '1' for PGA Tour or '2' for LIV Tour.", "type": "str", "default": ""}, "tournid": {"description": "The tournament ID retrieved from the `schedule` endpoint.", "type": "str", "default": "475"}, "year": {"description": "The year of the tournament.", "type": "str", "default": "2022"}}}
{"name": "stock_v2_get_price_fair_value", "description": "Fetches the price vs fair value data for a given stock.", "parameters": {"performanceid": {"description": "The performance ID of the stock. This value can be obtained from endpoints such as /auto-complete, /get-summary, or /get-movers.", "type": "str", "default": "0P0000OQN8"}}}
{"name": "options_historical", "description": "Returns historical options data based on the given parameters.", "parameters": {"expiration": {"description": "The expiration date of the option in the format YYYY-mm-dd, e.g., '2018-04-20'.", "type": "str", "default": "2018-04-20"}, "type": {"description": "The type of option contract, either 'Call' or 'Put'.", "type": "str", "default": "Call"}, "strike": {"description": "The strike price of the option, e.g., 100.", "type": "int", "default": "100"}, "symbol": {"description": "The symbol of the asset, e.g., 'AAPL' for Apple Inc, 'MSFT' for Microsoft.", "type": "str", "default": "AAPL"}}}
{"name": "series_get_news", "description": "Retrieves news articles for a specified cricket series.", "parameters": {"seriesid": {"description": "The unique identifier for the cricket series.", "type": "int", "default": "3636"}}}
{"name": "super_lig_standings", "description": "Fetches the standings of the Super Lig for a specific season using the RapidAPI service.", "parameters": {"season": {"description": "The season for which standings are required. Example: '2022'. If not provided, the current season's standings will be fetched.", "type": "str, optional", "default": ""}}}
{"name": "domain_reputation", "description": "Evaluate the reputation of a given domain using the Toolbench RapidAPI service.", "parameters": {"domainname": {"description": "The domain name to be evaluated.", "type": "str", "default": "whoisxmlapi.com"}, "outputformat": {"description": "The response output format. Acceptable values are 'XML' or 'JSON'. Defaults to 'JSON'.", "type": "str, optional", "default": ""}, "mode": {"description": "The mode for the API check. Acceptable values are 'fast' (some heavy tests and data collectors will be disabled) or 'full' (all data and tests will be processed). Defaults to 'fast'.", "type": "str, optional", "default": ""}}}
{"name": "prematchform", "description": "Fetch pre-match form information for a specific cricket match using the RapidAPI service.", "parameters": {"is_id": {"description": "The ID of the cricket match for which to get pre-match form information.", "type": "int", "default": 10534787}}}
{"name": "exchange", "description": "Converts an amount of money from one currency to another using a currency conversion API.", "parameters": {"base": {"description": "The currency code to convert from (e.g., 'USD', 'EUR').", "type": "str", "default": "USD"}, "to": {"description": "The target currency code to convert to.", "type": "str", "default": "EUR"}, "int": {"description": "The amount of money to convert, default is '1'.", "type": "str, optional", "default": "1"}}}
{"name": "days_from_date", "description": "Fetches futures contracts for the date falling on the specified number of days from the given date.", "parameters": {"symbol": {"description": "The symbol for the futures contract you are interested in.", "type": "str", "default": "CL"}, "daysfrom": {"description": "The number of days from the reference date (`datefrom`).", "type": "int", "default": "30"}, "datefrom": {"description": "The reference date in \"YYYY-MM-DD\" format from which days are counted.", "type": "str", "default": "2021-12-25"}, "month": {"description": "The specific month for the contract (default is 7).", "type": "int, optional", "default": "7"}, "offset": {"description": "The parameter for paginating results (default is None).", "type": "int, optional", "default": ""}, "format": {"description": "The desired format for the response (default is 'json').", "type": "str, optional", "default": "json"}, "inpast": {"description": "Set to True if looking for past contracts; False for future contracts (default is None).", "type": "bool, optional", "default": "true"}}}
{"name": "analysis_list_deprecated", "description": "Fetches a list of analyses for a specified financial symbol using the Seeking Alpha API.", "parameters": {"is_id": {"description": "The symbol to query for data. Only one symbol is allowed at a time.", "type": "str", "default": "aapl"}, "size": {"description": "The number of items per response. Defaults to 20.", "type": "int, optional", "default": "20"}, "until": {"description": "The value used to load the next page of data. This corresponds to the value of meta/page/minmaxPublishOn/min in the JSON response.", "type": "int, optional", "default": ""}}}
{"name": "actors_list_born_today", "description": "Fetches a list of actors and actresses born on a specific day and month from the Online Movie Database via the RapidAPI platform.", "parameters": {"month": {"description": "The month of birth of the actors.", "type": "int", "default": "7"}, "day": {"description": "The day of birth of the actors.", "type": "int", "default": "27"}}}
{"name": "states_list", "description": "Fetches a list of states with optional filtering and sorting criteria.", "parameters": {"country_id": {"description": "The ID of the country to filter states by.", "type": "str, optional", "default": ""}, "sortorder": {"description": "The order in which to sort the results. Can be 'asc' for ascending or 'desc' for descending.", "type": "str, optional", "default": ""}, "sortby": {"description": "The field by which to sort the results (e.g., 'name', 'code').", "type": "str, optional", "default": ""}, "limit": {"description": "The maximum number of results to retrieve.", "type": "int, optional", "default": ""}, "country_code": {"description": "The code of the country to filter states by. Defaults to 'IN'.", "type": "str, optional", "default": "IN"}, "country_name": {"description": "The name of the country to filter states by.", "type": "str, optional", "default": ""}}}
{"name": "get_trend_keyword", "description": "Retrieve trending keywords for a specific date and geographic location using the given RapidAPI key.", "parameters": {"date": {"description": "The date for which to retrieve trending keywords. Defaults to '2023-05-18'.", "type": "str", "default": "2023-05-18"}, "geo": {"description": "The geographic location for which to retrieve trending keywords. Defaults to 'US'.", "type": "str", "default": "US"}}}
{"name": "searchcontent", "description": "The function searches for videos, playlists, and channels on YouTube using the specified query and RapidAPI key.", "parameters": {"q": {"description": "The search query for finding content on YouTube. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "topic_headlines", "description": "Fetches the latest news headlines for a specified topic.", "parameters": {"topic": {"description": "The topic for which to get news headlines. Available topics include:", "type": "str", "default": "WORLD"}, "lang": {"description": "The language for the results, specified as a 2-letter language code (ISO 639-1 alpha-2). Default is 'en'.", "type": "str, optional", "default": "en"}, "country": {"description": "The country code for filtering the results (ISO 3166-1 alpha-2). Default is 'US'.", "type": "str, optional", "default": "US"}}}
{"name": "fastsearchfull", "description": "Fetch detailed information using the Fast API for a given search term.", "parameters": {"fastav": {"description": "The search query string.", "type": "str", "default": "https://www.avito.ma/fr/maroc/jeux_vid%C3%A9o_et_consoles-%C3%A0_vendre?cities=8,5&price_min=350&price_max=1200"}}}
{"name": "domain_analysis", "description": "Analyzes a given domain and retrieves various metrics such as domain length, past sales, and number of mentions using the RapidAPI service.", "parameters": {"domain": {"description": "The domain name to be analyzed. Defaults to 'dailynews.com'.", "type": "str", "default": "dailynews.com"}}}
{"name": "get_all_users_paged_by_hundreds", "description": "Fetches a list of users from a specified page, with each page containing up to one hundred users, using the provided RapidAPI key.", "parameters": {"page": {"description": "The page number to retrieve the users from.", "type": "int", "default": "0"}}}
{"name": "staffs_list_by_club", "description": "Retrieves a list of staff members for a specific club from the Transfermarket API.", "parameters": {"is_id": {"description": "The ID of the club whose staff members are to be retrieved.", "type": "int", "default": "631"}, "domain": {"description": "The domain specification for the API request. One of the following: com, de, be, es, it, nl, pl, pt, com.tr, world. Defaults to 'de'.", "type": "str, optional", "default": "de"}}}
{"name": "getmatchesbyteam", "description": "Fetches all matches for a specified team using the RapidAPI IPL endpoint.", "parameters": {"team": {"description": "The name of the team for which to retrieve matches.", "type": "str", "default": "Kolkata Knight Riders"}}}
{"name": "drink_by_id", "description": "Fetches a specific drink recipe by its ID using the Ghana Food Recipe API.", "parameters": {"is_id": {"description": "The unique identifier for the drink recipe.", "type": "str", "default": "63c67c9db06a3ed9f92b2367"}}}
{"name": "get_user_posts", "description": "Fetches posts for a specified user from the 9gag API.", "parameters": {"username": {"description": "The username of the 9gag user whose posts are to be fetched.", "type": "str", "default": "kleido007"}, "counter": {"description": "The pagination counter for subsequent requests. Defaults to None for the first request.", "type": "str, optional", "default": ""}, "after": {"description": "The pagination marker for subsequent requests. Defaults to None for the first request.", "type": "str, optional", "default": ""}}}
{"name": "get_chat_restrictions", "description": "Fetches chat restrictions for a given Twitch channel using the Toolbench RapidAPI.", "parameters": {"channel": {"description": "The name of the Twitch channel to fetch chat restrictions for.", "type": "str", "default": "xqc"}}}
{"name": "get_character_by_id", "description": "Fetches a Game of Thrones character's information by their ID using the RapidAPI service.", "parameters": {"is_id": {"description": "The ID of the Game of Thrones character to fetch.", "type": "int", "default": "0"}}}
{"name": "sticker_translate", "description": "Translates a given term or phrase into a sticker using the Giphy API.", "parameters": {"s": {"description": "The term or phrase to translate into a sticker.", "type": "str", "default": "hungry"}}}
{"name": "blocks", "description": "Retrieves information about a specific Minecraft block using the Toolbench API.", "parameters": {"block_id": {"description": "The ID of the Minecraft block to retrieve information for. Defaults to 'minecraft:stone'.", "type": "str", "default": "minecraft:stone"}}}
{"name": "live_giveaways_by_platform", "description": "Fetches live giveaways for a specified gaming platform using the GamerPower API.", "parameters": {"platform": {"description": "The gaming platform to fetch giveaways for (e.g., pc, steam, epic-games-store, uplay, gog, itch.io, ps4, xbox-one, switch, android, ios, vr, battlenet).", "type": "str", "default": "pc"}}}
{"name": "get_character_skills", "description": "Fetches the list of skills for a given character from the Lost Ark API.", "parameters": {"character_name": {"description": "The name of the Lost Ark character whose skills are to be fetched.", "type": "str", "default": "Scrapper"}}}
{"name": "example", "description": "Fetch an example phone number for a specified country and type using the Veriphone API.", "parameters": {"country_code": {"description": "The country code in 2-letter ISO format (e.g., 'US', 'RU'). If absent or invalid, the country will be inferred from the IP address. Default is 'GB'.", "type": "str, optional", "default": "GB"}, "type": {"description": "The type of example phone number to return. Options include 'fixed_line', 'mobile', 'premium_rate', 'shared_cost', 'toll_free', and 'voip'. Default is 'mobile'.", "type": "str, optional", "default": "mobile"}}}
{"name": "simple", "description": "Formats a given phone number using the Toolbench RapidAPI phone formatter service.", "parameters": {"phone": {"description": "The phone number to be formatted. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "getgamecontent", "description": "Fetches the content of a specific NHL game using its game ID.", "parameters": {"is_id": {"description": "The ID of the game. The first 4 digits identify the season of the game (e.g., 2017 for the 2017-2018 season). The next 2 digits indicate the type of game (01 = preseason, 02 = regular season, 03 = playoffs, 04 = all-star). The final 4 digits identify the specific game number. For regular season and preseason games, this ranges from 0001 to the number of games played. For playoff games, the 2nd digit of the specific number gives the round of the playoffs, the 3rd digit specifies the matchup, and the 4th digit specifies the game (out of 7).", "type": "int", "default": 2017020851}}}
{"name": "get_game_lineup", "description": "Fetches the full lineup for a specific game, along with its confirmation status or forecast.", "parameters": {"gameid": {"description": "The unique identifier for the game.", "type": "str", "default": "9576185"}}}
{"name": "get_best_player", "description": "Retrieves the best player of each team for a given game, including their rating.", "parameters": {"gameid": {"description": "The unique identifier for the game.", "type": "str", "default": "9576185"}}}
{"name": "leaguetotalstandings", "description": "Fetches the total standings for a specific E-Sports league given the season ID and tournament ID.", "parameters": {"seasonid": {"description": "The season ID for which to retrieve the league's total standings.", "type": "int", "default": 47832}, "tournamentid": {"description": "The unique tournament ID for which to retrieve the league's total standings.", "type": "int", "default": 16026}}}
{"name": "retrieve_audio_file", "description": "Retrieve an audio file in MP3 format from a previously submitted text-to-speech conversion.", "parameters": {"transactionid": {"description": "The transaction ID for the previously submitted text-to-speech conversion.", "type": "str", "default": "string"}}}
{"name": "queue", "description": "Retrieve the queue information of a phone using the specified phone ID.", "parameters": {"phone_id": {"description": "The ID of the phone for which queue information is to be retrieved.", "type": "str", "default": ""}}}
{"name": "api_whois", "description": "Fetch WHOIS data for a given IP address, host, or URL using the RapidAPI service.", "parameters": {"ip": {"description": "The IP address to query WHOIS information for. Defaults to '8.8.8.8'.", "type": "str, optional", "default": "8.8.8.8"}, "host": {"description": "The host name to query WHOIS information for. Defaults to 'google.com'.", "type": "str, optional", "default": "google.com"}, "url": {"description": "The URL to query WHOIS information for. Defaults to 'http://google.com'.", "type": "str, optional", "default": "http://google.com"}}}
{"name": "riddle_by_id", "description": "Fetches a riddle by its ID from the Riddlie API.", "parameters": {"is_id": {"description": "The ID of the riddle to fetch.", "type": "str", "default": "63bdef0283b194664ee6c121"}}}
{"name": "v1_hobbies", "description": "Fetches a random hobby and a Wikipedia link detailing the hobby from the Hobbies by API Ninjas API.", "parameters": {"category": {"description": "The category of hobbies to fetch. Possible values are 'general', 'sports_and_outdoors',", "type": "str", "default": "general"}}}
{"name": "playlist_details", "description": "Retrieves the details of a YouTube playlist based on the provided playlist ID using the RapidAPI service.", "parameters": {"is_id": {"description": "The ID of the YouTube playlist to fetch details for. Default is 'PLcirGkCPmbmFeQ1sm4wFciF03D_EroIfr'.", "type": "str", "default": "PLcirGkCPmbmFeQ1sm4wFciF03D_EroIfr"}}}
{"name": "aroon", "description": "Fetches the Aroon Indicator (AROON) for a given financial instrument symbol. The Aroon Indicator is used to identify trends, the beginning of a new trend, and its strength in price movements.", "parameters": {"symbol": {"description": "The financial instrument symbol, which can be any equity, index, ETF, forex, or cryptocurrency (e.g., 'AAPL', 'EUR/USD', 'ETH/BTC').", "type": "str", "default": "AAPL"}, "interval": {"description": "The time interval between data points in the time series. Supported values include '1min', '5min', '15min', '30min', '45min', '1h', '2h', '4h', '1day', '1week', '1month'.", "type": "str", "default": "1min"}, "format": {"description": "The format of the returned data. Can be 'json' or 'csv'. Defaults to 'json'.", "type": "str, optional", "default": "json"}, "time_period": {"description": "The look-back period for the Aroon calculation. Defaults to 14.", "type": "int, optional", "default": 14}, "outputsize": {"description": "The number of data points to return. Defaults to 30.", "type": "int, optional", "default": 30}}}
{"name": "rocp", "description": "Calculates the Rate of Change Percentage (ROCP) for a given financial instrument over a specified time period.", "parameters": {"interval": {"description": "Interval between two consecutive points in the time series. Supports `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`.", "type": "str", "default": "1min"}, "symbol": {"description": "Financial instrument symbol, can be any equity, index, ETF, forex, or cryptocurrency (e.g., `AAPL`, `EUR/USD`, `ETH/BTC`).", "type": "str", "default": "AAPL"}, "outputsize": {"description": "Number of data points to be retrieved. Default is `30` if no date parameters are set.", "type": "int, optional", "default": 30}, "time_period": {"description": "Number of intervals used to calculate the ROCP. Default is `9`.", "type": "int, optional", "default": 9}, "format": {"description": "Format of the output data. Can be `csv` or `json`. Default is `json`.", "type": "str, optional", "default": "json"}, "series_type": {"description": "The type of price series to use. Supports `open`, `high`, `low`, or `close`. Default is `close`.", "type": "str, optional", "default": "close"}}}
{"name": "listportfolios", "description": "Fetches a list of portfolios from the Trader Wagon API based on the given parameters.", "parameters": {"limit": {"description": "The number of results to return. Default is 10.", "type": "int, optional", "default": "10"}, "portfoliotype": {"description": "The type of portfolio to filter by. Default is None.", "type": "str, optional", "default": ""}, "available": {"description": "Specifies whether to list only available portfolios. Default is 0.", "type": "int, optional", "default": "0"}}}
{"name": "properties_get_facilities", "description": "Fetches the facilities of a property given its hotel ID.", "parameters": {"hotel_ids": {"description": "The value of the hotel_id field from the properties/list API.", "type": "int", "default": "1528418"}, "languagecode": {"description": "The language code for the response. Default is 'en-us'. Possible values include en, en-us, ar, bg, ca, cs, da, de, el, es, es-ar, et, fi, fr, he, hr, hu, id, is, it, ja, ko, lt, lv, ms, nl, no, pl, pt, pt-br, ro, ru, sk, sl, sr, sv, th, tl, tr, uk, vi, zh, zh-tw.", "type": "str, optional", "default": "en-us"}}}
{"name": "stays_properties_detail", "description": "Fetch detailed information about a property from the Booking.com API.", "parameters": {"id_detail": {"description": "The ID of the property to fetch details for. This ID is obtained from the `stays/properties/list` endpoint.", "type": "str", "default": "cr/playa-grande-inn"}, "language_code": {"description": "The language code for the returned information. Defaults to 'en-us'.", "type": "str, optional", "default": "en-us"}, "currency_code": {"description": "The currency code for the returned information. Defaults to 'USD'.", "type": "str, optional", "default": "USD"}}}
{"name": "station_information", "description": "Retrieves station information from the BART (Bay Area Rapid Transit) API.", "parameters": {"cmd": {"description": "A command code that specifies the type of station information to retrieve. See examples at http://api.bart.gov/docs/overview/examples.aspx.", "type": "str", "default": "stns"}}}
{"name": "generate_uuid", "description": "Generates one or more UUID v4 strings with optional formatting.", "parameters": {"timestamp_first": {"description": "If set to True, the generated UUID will have the timestamp first.", "type": "bool, optional", "default": "false"}, "remove_dash": {"description": "If set to True, the generated UUIDs will not contain dashes.", "type": "bool, optional", "default": "true"}, "count": {"description": "The number of UUIDs to generate. Default is '5'.", "type": "str, optional", "default": "5"}}}
{"name": "rgb_to_hsl", "description": "Converts RGB color values to HSL color values using the RapidAPI service.", "parameters": {"r": {"description": "Red component of the RGB color (0-255).", "type": "int", "default": "127"}, "g": {"description": "Green component of the RGB color (0-255).", "type": "int", "default": "255"}, "b": {"description": "Blue component of the RGB color (0-255).", "type": "int", "default": "212"}}}
{"name": "hsl_to_rgb", "description": "Converts HSL color values to RGB color values using an external API.", "parameters": {"s": {"description": "Saturation component of the HSL color value (0-100).", "type": "int", "default": "78"}, "h": {"description": "Hue component of the HSL color value (0-360).", "type": "int", "default": "250"}, "l": {"description": "Lightness component of the HSL color value (0-100).", "type": "int", "default": "45"}}}
{"name": "search_content", "description": "Searches for content based on a provided query using the RapidAPI content extractor.", "parameters": {"query": {"description": "The search query string.", "type": "str", "default": ""}}}
{"name": "qr_endpoint", "description": "Generates a QR code for the given URL using the RapidAPI QR code service.", "parameters": {"url": {"description": "The website URL to encode in the QR code. Defaults to 'www.google.com'.", "type": "str", "default": "www.google.com"}}}
{"name": "take_image_screenshot", "description": "Takes a screenshot of a specified website using given dimensions.", "parameters": {"width": {"description": "The width of the screenshot in pixels. Defaults to 1024.", "type": "int, optional", "default": "1024"}, "url": {"description": "The URL of the website to be captured. Defaults to 'https://google.com'.", "type": "str, optional", "default": "https://google.com"}, "height": {"description": "The height of the screenshot in pixels. Defaults to 780.", "type": "int, optional", "default": "780"}}}
{"name": "test_app_deepfry_get", "description": "Sends a GET request to the deepfry endpoint of the RapidAPI Image Processing service with the specified URL and API key.", "parameters": {"url": {"description": "The URL of the image that you want to deepfry. Defaults to 'https://dagbot-is.the-be.st/logo.png'.", "type": "str", "default": "https://dagbot-is.the-be.st/logo.png"}}}
{"name": "getresult", "description": "Retrieves the result of a previously requested video rendering job using the given job ID.", "parameters": {"job_id": {"description": "The ID of the previously requested rendering job.", "type": "str", "default": ""}}}
{"name": "trending_videos", "description": "Fetches a list of trending YouTube videos based on the given parameters.", "parameters": {"country": {"description": "The country code for which to retrieve trending videos. Defaults to 'us'.", "type": "str, optional", "default": "us"}, "lang": {"description": "The language code for the video titles and descriptions. Defaults to 'en'.", "type": "str, optional", "default": "en"}, "section": {"description": "The section of trending videos to retrieve. Possible values are \"Now\", \"Music\", \"Movies\", \"Gaming\". Defaults to 'Now'.", "type": "str, optional", "default": "Now"}}}
{"name": "popular_posts", "description": "Fetches popular posts from Reddit based on the given sort type.", "parameters": {"sort": {"description": "The sorting method for the posts. Accepted values are 'new' and 'hot'.", "type": "str", "default": "new"}, "cursor": {"description": "An optional cursor for pagination to fetch the next set of results. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "current_block_number", "description": "Fetch the current block number of the Optimism blockchain.", "parameters": {"network": {"description": "The network to query, either \"mainnet\" or \"testnet\". Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "stories_list", "description": "Retrieves a list of stories related to a specific sticker using the BB Finance API.", "parameters": {"template": {"description": "The category of the sticker, which can be one of the following: COMMODITY, CURRENCY, INDEX, INDEXFUTURE, RATE, or STOCK.", "type": "str", "default": "CURRENCY"}, "is_id": {"description": "The value of the 'id' field returned by the /market/auto-complete endpoint.", "type": "str", "default": "usdjpy"}}}
{"name": "qualifyingresults", "description": "Fetches the qualifying results for a specific year and round of the Formula 1 season.", "parameters": {"year": {"description": "The year of the Formula 1 season.", "type": "str", "default": "year"}, "round": {"description": "The round of the Formula 1 season.", "type": "str", "default": "round"}}}
{"name": "get_the_stock_history_by_exchange_code_and_stock_code", "description": "Fetches the stock history for a specific stock on a given date using the exchange code and stock code.", "parameters": {"date": {"description": "The date for which to fetch the stock history in YYYY-MM-DD format.", "type": "str", "default": "2023-02-01"}, "exchangecode": {"description": "The code representing the stock exchange (e.g., NASDAQ).", "type": "str", "default": "NASDAQ"}, "stockcode": {"description": "The code representing the specific stock (e.g., AAPL).", "type": "str", "default": "GOOG"}}}
{"name": "web_pair_details", "description": "Fetches detailed information about a trading pair from a specified blockchain using the RapidAPI service.", "parameters": {"chain_slug": {"description": "Blockchain slug (e.g., \"ethereum\").", "type": "str", "default": "ethereum"}, "pair_slug": {"description": "Trading pair presentation or pool contract address. Examples include `ETH-USDC`, `eth-usdc`, `WETH-USDC`, `USDC-WETH`, or a pool contract address.", "type": "str", "default": "ETH-USDC"}, "exchange_slug": {"description": "Exchange path slug (e.g., 'sushiswap').", "type": "str", "default": "sushiswap"}}}
{"name": "get_last_5_news", "description": "Fetches the last 5 news articles from the financial section.", "parameters": {"content_type": {"description": "The type of content to retrieve (e.g., 'application/json').", "type": "str", "default": "application/json"}}}
{"name": "get_2_convert_endpoint", "description": "Returns the converted amount and the exchange rate used for the conversion in JSON format by querying the currency exchange rate API.", "parameters": {"amount": {"description": "The amount of currency to be converted.", "type": "int", "default": "100"}, "is_from": {"description": "The source currency symbol.", "type": "str", "default": "EUR"}, "to": {"description": "The target currency symbol.", "type": "str", "default": "USD"}, "date": {"description": "The date for the historical exchange rate. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "origin", "description": "Fetches a list of all dog breeds from a given country of origin using the Dog Breed Database API.", "parameters": {"origin": {"description": "The country of origin to filter the dog breeds.", "type": "str", "default": "germany"}}}
{"name": "get_geo_location_of_ip_address", "description": "Retrieve the geographical location and other details of a given IP address using the Toolbench RapidAPI.", "parameters": {"ip": {"description": "The IPV4 address for which geographical information is to be retrieved.", "type": "str", "default": "34.89.89.28"}}}
{"name": "get_specific_dog_breed", "description": "Fetch detailed information about a specific dog breed.", "parameters": {"slug": {"description": "The identifier for the specific dog breed.", "type": "str", "default": "shiba-inu"}}}
{"name": "get_qoute", "description": "Fetch a quote by its ID using the Quotsy API.", "parameters": {"is_id": {"description": "The ID of the quote to be retrieved.", "type": "str", "default": "00667985-3375-4b1b-abb0-60bcfa70a80f"}}}
{"name": "token_id", "description": "Fetches the information of a Token by its address using the Uniswap V2 API.", "parameters": {"is_id": {"description": "The address or ID of the Token to fetch information for.", "type": "str", "default": "0x95ad61b0a150d79219dcf64e1e6cc01f0b64c4ce"}}}
{"name": "topic", "description": "Fetches topics from the Quotes Diffusion API with optional pagination and search functionality.", "parameters": {"page": {"description": "Page number for pagination. Defaults to None.", "type": "int, optional", "default": ""}, "search": {"description": "Custom search term to filter topics. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "stocks_get_financials", "description": "Fetches financial information related to a stock ticker or symbol.", "parameters": {"symbol": {"description": "The stock exchange and ticker symbol in the format \"exchange:symbol\" (e.g., \"NASDAQ:TSLA\").", "type": "str", "default": "NASDAQ:TSLA"}, "columns": {"description": "A comma-separated list of financial metrics to retrieve (e.g., \"ADR,ADX,average_volume\").", "type": "str", "default": "name,average_volume,close,open,change"}, "screenername": {"description": "The screener name field value as returned by the /countries/list endpoint. Defaults to 'america'.", "type": "str, optional", "default": "america"}, "lang": {"description": "The language code for the returned data. Defaults to 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "stickers_trending", "description": "Fetches trending stickers or creators from the Mojitok sticker store API.", "parameters": {"include": {"description": "Specifies whether to include 'STICKER_PACK' or 'CREATOR' information in the response. Defaults to 'STICKER_PACK'.", "type": "str", "default": "STICKER_PACK"}}}
{"name": "regions", "description": "Returns a collection of supported regions for the specified IETF BCP 47 language tag.", "parameters": {"language": {"description": "Language code in BCP 47 format.", "type": "str", "default": "us"}}}
{"name": "advanced_phone_number_lookup", "description": "Retrieves advanced technical information about a phone number, including validity, approximate location, timezone, carrier, line type, ported status, robocall/spam score, and more.", "parameters": {"dialcode": {"description": "The phone number dial code to retrieve information for.", "type": "str", "default": "+16502530000"}}}
{"name": "webcams_list_country_country_country", "description": "Fetches a list of webcams for the specified country or countries.", "parameters": {"country": {"description": "Comma-separated ISO 3166-1-alpha-2 codes representing the country or countries of interest.", "type": "str", "default": ""}, "lang": {"description": "The language to localize the results to, if available. Default is 'en'.", "type": "str, optional", "default": "en"}, "show": {"description": "Content to be listed in the response. Default is 'webcams:image,location'.", "type": "str, optional", "default": "webcams:image,location"}}}
{"name": "crypto_info", "description": "Fetches detailed information about a cryptocurrency by its slug name.", "parameters": {"slug": {"description": "The unique identifier (slug) for the cryptocurrency.", "type": "str", "default": "binance-usd"}, "lang": {"description": "The language code for the response. Defaults to 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "search_leaderboard", "description": "Search the Binance Futures leaderboard based on various criteria.", "parameters": {"istrader": {"description": "Include only copytraders if True.", "type": "bool, optional", "default": "false"}, "statisticstype": {"description": "The statistics type to filter the leaderboard.", "type": "str, optional", "default": ""}, "periodtype": {"description": "The period type to filter the leaderboard.", "type": "str, optional", "default": ""}, "isshared": {"description": "Include shared positions if True.", "type": "bool, optional", "default": "true"}, "tradetype": {"description": "The trade type to filter the leaderboard. 'PERPETUAL' represents USDⓈ-M, and 'DELIVERY' represents COIN-M.", "type": "str, optional", "default": ""}}}
{"name": "search_on_ebay", "description": "Searches for items on eBay using the provided search query and RapidAPI key.", "parameters": {"searchquery": {"description": "The search term used to look for items on eBay.", "type": "str", "default": "iphone"}}}
{"name": "categories", "description": "Fetches categories from the AliExpress unofficial API, optionally filtered by locale and country.", "parameters": {"locale": {"description": "The locale to filter categories by. Defaults to None.", "type": "str, optional", "default": ""}, "country": {"description": "The country to filter categories by. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "get_user_dialog_string", "description": "Fetches the dialog string for a given user from the Waifu API.", "parameters": {"user_id": {"description": "A unique identifier for the user.", "type": "str", "default": "sample_user_id"}}}
{"name": "match_embed_link", "description": "Generates a live stream link for a given football match using the provided RapidAPI key.", "parameters": {"matchid": {"description": "The unique identifier for the football match.", "type": "int", "default": "1"}}}
{"name": "drawing_by_date", "description": "Fetches the winning Fantasy 5 number set for a specific drawing date.", "parameters": {"date": {"description": "The date of the drawing in the format MM-DD-YYYY.", "type": "str", "default": "01-01-2023"}}}
{"name": "instagram", "description": "Checks the availability of a given Instagram username using RapidAPI.", "parameters": {"username": {"description": "The Instagram username to be checked.", "type": "str", "default": "username"}}}
{"name": "download_video_or_reel", "description": "Downloads Facebook video or reel links in HD and SD formats.", "parameters": {"url": {"description": "The URL of the Facebook video or reel to be downloaded.", "type": "str", "default": "https://www.facebook.com/antarikshTV/videos/958242908874442/"}}}
{"name": "track_package", "description": "Tracks a package's shipping details using a provided tracking number and the Toolbench RapidAPI service.", "parameters": {"tracking_number": {"description": "The tracking number of the package to be tracked.", "type": "str", "default": "1234567890"}}}
{"name": "api_tracking", "description": "Fetches tracking information for the provided Pack & Send reference number using the RapidAPI service.", "parameters": {"reference": {"description": "The Pack & Send reference number for which tracking information is requested.", "type": "str", "default": "ReferenceNumberHere"}}}
{"name": "carriers_detect", "description": "Detects the carrier by providing a parcel tracking number using the TrackingMore API.", "parameters": {"trackingnumber": {"description": "The tracking number of the parcel.", "type": "str", "default": "YT2003521266065328"}}}
{"name": "cities_states_stateisocode", "description": "Fetches the list of cities for a given state's ISO code using the specified RapidAPI key.", "parameters": {"stateisocode": {"description": "The ISO code of the state for which the cities need to be retrieved.", "type": "str", "default": ""}}}
{"name": "il", "description": "Fetches data related to a specified Turkish province using the RapidAPI key.", "parameters": {"il": {"description": "Province code for a Turkish province (from 1 to 81).", "type": "int", "default": "34"}}}
{"name": "packages_v2_track", "description": "Retrieves tracking information for a specific package using the TrackingMore API.", "parameters": {"trackingnumber": {"description": "The tracking number of the package.", "type": "str", "default": "NY323068698GB"}}}
{"name": "getrandomuser", "description": "Fetches random user data such as name, e-mail, etc., from the specified API.", "parameters": {"count": {"description": "The number of user records to retrieve. Defaults to -2 if not specified.", "type": "int", "default": "-2"}}}
{"name": "get_ratings_by_restaurant", "description": "Fetch the Food Hygiene Rating for a given restaurant using the Wyre Data API.", "parameters": {"restaurant": {"description": "The name or identifier of the restaurant for which the rating is to be fetched.", "type": "str", "default": "Shovels Inn"}}}
{"name": "get_place_by_ip", "description": "Retrieve the place information for a given IP address.", "parameters": {"is_id": {"description": "The IP address (IPv4 and IPv6 are supported) to look up.", "type": "str", "default": "200.194.51.97"}, "language": {"description": "Specifies the language (ISO 639-1) to get the", "type": "str, optional", "default": ""}}}
{"name": "partenaire_par_id", "description": "Fetches a partner's details by their ID from the designated API.", "parameters": {"is_id": {"description": "The ID of the partner to be fetched, as provided by the API.", "type": "str", "default": "14"}}}
{"name": "emoji", "description": "Fetches the emoji associated with a given name using the Emoji API.", "parameters": {"name": {"description": "The name for which the emoji is to be fetched.", "type": "str", "default": "cat_face"}}}
{"name": "list_comments", "description": "Fetches comments for the specified TikTok post using the given parameters.", "parameters": {"aweme_id": {"description": "The ID of the TikTok post for which to retrieve comments.", "type": "str", "default": ""}, "count": {"description": "The number of comments to retrieve. Defaults to 10.", "type": "int, optional", "default": "10"}, "cursor": {"description": "The position from where to start retrieving comments. Defaults to 0.", "type": "int, optional", "default": "0"}, "proxy": {"description": "The proxy server to use for the request. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "oldsort", "description": "Fetches and sorts data from the oldsort endpoint using the given RapidAPI host and key.", "parameters": {"host": {"description": "The host to be used in the request header. Defaults to 'www.mozzartbet.com.co'.", "type": "str", "default": "www.mozzartbet.com.co"}, "referer": {"description": "The referer to be used in the request header. Defaults to 'https://www.mozzartbet.com.co/es'.", "type": "str", "default": "https://www.mozzartbet.com.co/es"}}}
{"name": "competition_image", "description": "Fetches the image associated with a given competition ID using the Soccerway RapidAPI service.", "parameters": {"competition_id": {"description": "The ID of the competition for which the image is requested.", "type": "int", "default": "8"}}}
{"name": "bundesliga_standings", "description": "Fetches the Bundesliga standings for a given season using the provided RapidAPI key.", "parameters": {"season": {"description": "The specific season to fetch standings for (e.g., '2022'). If not provided, the current season standings will be fetched.", "type": "str, optional", "default": ""}}}
{"name": "get_game_statistics", "description": "Fetches statistics for a given game using the ViperScore RapidAPI.", "parameters": {"gameid": {"description": "The unique identifier of the game for which the statistics are to be fetched.", "type": "str", "default": "9576185"}}}
{"name": "local_weather_api", "description": "Fetches local weather data using the World Weather Online API.", "parameters": {"q": {"description": "Location query (city name, town name, or geographic coordinates).", "type": "str", "default": "40.73,-73"}, "tp": {"description": "Time interval between weather updates (e.g., '1' for hourly updates). Defaults to None.", "type": "str, optional", "default": ""}, "aqi": {"description": "Whether to include Air Quality Index data ('yes' or 'no'). Defaults to 'yes'.", "type": "str, optional", "default": "yes"}, "format": {"description": "Response format (e.g., 'json' or 'xml'). Defaults to None.", "type": "str, optional", "default": ""}, "lang": {"description": "Language for the output. Defaults to 'en'.", "type": "str, optional", "default": "en"}, "alerts": {"description": "Whether to include weather alerts ('yes' or 'no'). Defaults to 'no'.", "type": "str, optional", "default": "no"}, "num_of_days": {"description": "Number of days for the weather forecast. Defaults to 3.", "type": "int, optional", "default": "3"}}}
{"name": "get_call", "description": "Fetches the API result using the given request ID.", "parameters": {"request_id": {"description": "The unique identifier for the API request.", "type": "str", "default": "76d1c748-51ed-435b-bcd8-3d9c9d3eb68a"}}}
{"name": "titles_with_changed_sources", "description": "Fetches a listing of titles that have changed their streaming sources within a specified date range.", "parameters": {"start_date": {"description": "Start date to include changes from a specific date range. Format is YYYYMMDD (e.g., 20210101 for January 1st, 2021), or YYYYMMDDHHMMSS for more granular results (e.g., 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24-hour format and in Eastern Standard Time. Defaults to None.", "type": "int, optional", "default": ""}, "limit": {"description": "Number of titles to return per page. Default is 50, maximum is 250.", "type": "int, optional", "default": "50"}, "end_date": {"description": "End date to include changes from a specific date range. Format is YYYYMMDD (e.g., 20210101 for January 1st, 2021), or YYYYMMDDHHMMSS for more granular results (e.g., 20210101123459 for January 1st, 2021 12:24pm and 59 seconds). Hours are in 24-hour format and in Eastern Standard Time. Defaults to None.", "type": "int, optional", "default": ""}, "regions": {"description": "2-character region code (e.g., US) for the country to get titles with changed sources from. Defaults to 'US,CA'.", "type": "str, optional", "default": "US,CA"}, "types": {"description": "Filter result to include only certain types of titles. Pass a single type or multiple types comma delimited. Possible values: 'movie', 'tv_series', 'tv_special', 'tv_miniseries', 'short_film'. Defaults to 'movie,tv_series'.", "type": "str, optional", "default": "movie,tv_series"}, "page": {"description": "Page of results to return. Defaults to 1.", "type": "int, optional", "default": "1"}}}
{"name": "flag_riddle", "description": "Flags a riddle for further review using the specified criteria.", "parameters": {"is_id": {"description": "The unique identifier of the riddle to be flagged.", "type": "str", "default": "63bdef027183b71946b64ee6"}, "flag": {"description": "The type of flag to be applied to the riddle (default is 0).", "type": "int, optional", "default": "0"}}}
{"name": "text", "description": "Converts the input text into a fancy text format using the Ajith Fancy Text API.", "parameters": {"text": {"description": "The text to be converted into fancy text.", "type": "str", "default": "This is funny."}}}
{"name": "double_name_medium", "description": "Generates a medium double name based on the provided query string.", "parameters": {"query": {"description": "The query string for generating the double name. Maximum length is 50 characters.", "type": "str", "default": ""}}}
{"name": "news_latest_page", "description": "Fetches the latest news stories in chronological order, filtered by the specified page ID.", "parameters": {"page_id": {"description": "The identifier for the specific news page to filter the stories.", "type": "str", "default": "main"}}}
{"name": "extract", "description": "Extract and validate phone or cell numbers from the given text.", "parameters": {"text": {"description": "The text containing phone or cell numbers to be extracted and validated.", "type": "str", "default": ""}, "country": {"description": "The country name or ISO2/ISO3 code to be used for identifying the number format. Defaults to None.", "type": "str, optional", "default": ""}, "country_auto": {"description": "Flag to auto-detect the country if not provided. Accepts values 0 (false), 1 (fast mode), and 2 (slow mode). Defaults to 0.", "type": "int, optional", "default": 0}}}
{"name": "iceland_songs", "description": "Fetches the Iceland Songs chart information from the Billboard API for a specific date and range.", "parameters": {"date": {"description": "The date for which the chart information is requested, in 'YYYY-MM-DD' format.", "type": "str", "default": "2022-05-07"}, "range": {"description": "The range of the chart information to fetch.", "type": "str", "default": "1-10"}}}
{"name": "billboard_200", "description": "Retrieves the Billboard 200 chart for a specified date.", "parameters": {"date": {"description": "The date for which to retrieve the Billboard 200 chart, formatted as 'YYYY-MM-DD'.", "type": "str", "default": "2021-07-07"}, "range": {"description": "The range of chart positions to return (default is '1-10'). Use '1-200' to get all results.", "type": "str, optional", "default": "1-10"}}}
{"name": "independent_albums", "description": "Retrieves the Independent Albums chart for a specified week from the Billboard API.", "parameters": {"week": {"description": "The week for which to retrieve the chart, in the format 'YYYY-MM-DD'. If not provided, defaults to the previous week. If the provided date is not a Saturday, it will default to the preceding Saturday of that week.", "type": "str, optional", "default": "2022-10-08"}}}
{"name": "time_series_endpoint", "description": "Retrieve historical exchange rates for specified date range and currency conversions.", "parameters": {"start_date": {"description": "The start date for the time series data in `YYYY-MM-DD` format.", "type": "str", "default": "2019-01-01"}, "end_date": {"description": "The end date for the time series data in `YYYY-MM-DD` format.", "type": "str", "default": "2019-01-02"}, "is_from": {"description": "Three-letter currency code of the base currency to convert from. Defaults to 'USD'.", "type": "str, optional", "default": "USD"}, "to": {"description": "A comma-separated list of target currency codes to convert to. Defaults to 'EUR,GBP'.", "type": "str, optional", "default": "EUR,GBP"}}}
{"name": "top_players_by_matchmaking", "description": "Fetch the top players by their matchmaking rank from the TrackMania API.", "parameters": {"limit": {"description": "The number of results to be returned. Default is `50`.", "type": "int, optional", "default": "50"}, "page": {"description": "The page number for the results, each containing 50 results. Default is `0`.", "type": "int, optional", "default": "0"}}}
{"name": "custom_die", "description": "Simulates rolling a custom die with a specified number of sides using the RapidAPI service.", "parameters": {"sides": {"description": "The number of sides on the custom die. Default is 8.", "type": "int, optional", "default": "8"}}}
{"name": "stock_get_stock_profile_data", "description": "Fetches the stock profile data for a specified ticker symbol and region.", "parameters": {"symbol": {"description": "The ticker symbol of the stock (e.g., \"AAPL\" for Apple Inc.).", "type": "str", "default": "AAPL"}, "region": {"description": "The region in which the stock is listed. Default is 'US'. Allowed values are 'US', 'BR', 'AU', 'CA', 'FR', 'DE', 'HK', 'IN', 'IT', 'ES', 'GB', 'S'.", "type": "str, optional", "default": "US"}}}
{"name": "stock_get_dividends_splits", "description": "Fetches stock dividends and splits data for a given ticker ID using the Webull API.", "parameters": {"tickerid": {"description": "The ticker ID of the stock for which to fetch dividends and splits data. This is the value of the tickerId field returned from endpoints such as /stock/search, /market/get-common-ranking, /market/get-top-active, and /market/get-top-gainers.", "type": "int", "default": "913255598"}}}
{"name": "mama", "description": "Fetches the MESA Adaptive Moving Average (MAMA) for a given instrument symbol and time interval from the Twelve Data API.", "parameters": {"interval": {"description": "Interval between two consecutive points in the time series. Supports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`.", "type": "str", "default": "1min"}, "symbol": {"description": "Instrument symbol, can be any equity, index, ETF, forex, or cryptocurrency (e.g., `AAPL`, `EUR/USD`, `ETH/BTC`).", "type": "str", "default": "AAPL"}, "format": {"description": "Response format. Supports `csv` or `json`. Default is `json`.", "type": "str, optional", "default": "json"}, "slow_limit": {"description": "Slow limit parameter for MAMA calculation.", "type": "int, optional", "default": 0.05}, "series_type": {"description": "Type of series data. Supports: `open`, `high`, `low`, `close`. Default is `close`.", "type": "str, optional", "default": "close"}, "fast_limit": {"description": "Fast limit parameter for MAMA calculation.", "type": "int, optional", "default": 0.5}, "outputsize": {"description": "Number of data points to return. Default is `30` if no date parameters are set, otherwise set to maximum.", "type": "int, optional", "default": 30}}}
{"name": "get_info_by_city", "description": "Fetches geographic information for a specific city, state, and country using the Zippopotamus API.", "parameters": {"country": {"description": "The country code (e.g., 'US' for the United States).", "type": "str", "default": "us"}, "state": {"description": "The state or region code within the country.", "type": "str", "default": "ma"}, "city": {"description": "The name of the city.", "type": "str", "default": "belmont"}}}
{"name": "search_emails", "description": "Search the web for email addresses based on a specified email domain and query.", "parameters": {"email_domain": {"description": "The email domain to search within (e.g., wsgr.com, gmail.com).", "type": "str", "default": "gmail.com"}, "query": {"description": "The search query to use, which can include names, job titles, locations, etc.", "type": "str", "default": "car dealer california usa"}, "limit": {"description": "The maximum number of emails to return. Defaults to 100. Accepts values from 1 to 5000.", "type": "int, optional", "default": "100"}}}
{"name": "email_validate", "description": "Validate a single email address in real-time using the Toolbench RapidAPI service.", "parameters": {"email": {"description": "The email address to be validated.", "type": "str", "default": ""}}}
{"name": "email_verifier", "description": "Verifies the validity of an email address using the Toolbench RapidAPI service.", "parameters": {"email": {"description": "The email address to be verified.", "type": "str", "default": "hello@gmail.com"}}}
{"name": "check_for_disposable_emails", "description": "Checks if the given email address is disposable or temporary using the Email Existence Validator API.", "parameters": {"email": {"description": "The email address to check for disposability.", "type": "str", "default": "example@besttempmail.com"}}}
{"name": "domain", "description": "Checks if a given domain is disposable using the Mailcheck API.", "parameters": {"domain": {"description": "The domain to check for disposability.", "type": "str", "default": "example.com"}}}
{"name": "latest_articles", "description": "Fetches the latest cryptocurrency news articles from the web, including sentiment analysis and keyword extraction.", "parameters": {"subject": {"description": "The subject of the news articles (e.g., bitcoin, altcoin, ethereum, nft, blockchain, defi).", "type": "str", "default": "bitcoin"}, "top_n_keywords": {"description": "The number of keywords to extract from each article (default is 10).", "type": "int, optional", "default": "10"}, "max_articles": {"description": "The maximum number of articles to retrieve in response (default is 10).", "type": "int, optional", "default": "10"}, "last_n_hours": {"description": "The time window in hours for the latest news articles (default is 48 hours).", "type": "int, optional", "default": "48"}}}
{"name": "fixtures_and_results_by_team", "description": "Returns all fixtures and results for a given team by querying the \"rugby-live-data\" API.", "parameters": {"team_id": {"description": "The ID of the team for which to retrieve fixtures and results.", "type": "int", "default": "6167"}}}
{"name": "team_list", "description": "Fetches and returns a list of sports teams from the SportScore API.", "parameters": {"page": {"description": "Page number for pagination. Defaults to 1.", "type": "int, optional", "default": "1"}}}
{"name": "channels_data", "description": "Fetches data from a specified TV channel for a given event using the provided RapidAPI key.", "parameters": {"channel_id": {"description": "The unique identifier for the TV channel.", "type": "int", "default": "2707"}, "event_id": {"description": "The unique identifier for the event.", "type": "int", "default": "10253769"}}}
{"name": "superoffer", "description": "Fetches the super offer data from the bet sports API.", "parameters": {"cookie": {"description": "Cookie string for the request header. Default is 'i18next=es;'.", "type": "str", "default": "i18next=es;"}, "host": {"description": "Host string for the request header. Default is 'www.mozzartbet.com.co'.", "type": "str", "default": "www.mozzartbet.com.co"}, "referer": {"description": "Referer string for the request header. Default is 'https://www.mozzartbet.com.co/es'.", "type": "str", "default": "https://www.mozzartbet.com.co/es"}}}
{"name": "countries_list", "description": "Returns a list of countries where Asos supports selling products.", "parameters": {"lang": {"description": "The language code for the country names. Defaults to 'en-US'.", "type": "str", "default": "en-US"}}}
{"name": "places_v2_list_by_map", "description": "Fetches a list of places within a specified boundary box using the AirVisual API.", "parameters": {"nelat": {"description": "North East latitude of the boundary.", "type": "int", "default": "40.95240778688068"}, "nelon": {"description": "North East longitude of the boundary.", "type": "int", "default": "-73.43762621283531"}, "swlat": {"description": "South West latitude of the boundary.", "type": "int", "default": "40.43539120253853"}, "swlon": {"description": "South West longitude of the boundary.", "type": "int", "default": "-74.41956583410503"}, "x_user_lang": {"description": "Language for the response. Defaults to 'en-US'.", "type": "str, optional", "default": "en-US"}, "x_units_pressure": {"description": "Units for pressure measurement. Allowed values are 'mbar' or 'hg'. Defaults to 'mbar'.", "type": "str, optional", "default": "mbar"}, "x_units_temperature": {"description": "Units for temperature measurement. Allowed values are 'celsius' or 'fahrenheit'. Defaults to 'celsius'.", "type": "str, optional", "default": "celsius"}, "x_user_timezone": {"description": "User's timezone. Defaults to 'Asia/Singapore'.", "type": "str, optional", "default": "Asia/Singapore"}, "x_aqi_index": {"description": "Air Quality Index standard. Allowed values are 'us' or 'cn'. Defaults to 'us'.", "type": "str, optional", "default": "us"}, "x_units_distance": {"description": "Units for distance measurement. Allowed values are 'kilometer' or 'miles'. Defaults to 'kilometer'.", "type": "str, optional", "default": "kilometer"}}}
{"name": "last_menstrual_period_lmp", "description": "Calculates the estimated due date based on the user's last menstrual period (LMP).", "parameters": {"cycle_length": {"description": "The average length of the user's menstrual cycle in days.", "type": "str", "default": "28"}, "last_period_date": {"description": "The date of the user's last menstrual period in the format 'YYYY-MM-DD'.", "type": "str", "default": "2023-01-01"}}}
{"name": "v1_sentiment", "description": "Performs sentiment analysis on the provided block of text using the API Ninjas sentiment analysis service.", "parameters": {"text": {"description": "The input text for sentiment analysis, with a maximum length of 2000 characters.", "type": "str", "default": "It's a wonderful day!"}}}
{"name": "read_text", "description": "Filters and censors profanity or offensive words from a given text using an external API.", "parameters": {"check_word": {"description": "The text to be checked for profanity or offensive words. Maximum length is 700 characters.", "type": "str", "default": "This example text contains no profanity / offensive word."}, "add": {"description": "Comma-separated list of additional words to be added to the profanity list. Case-insensitive and accepts up to 250 characters. Defaults to None.", "type": "str, optional", "default": ""}, "range": {"description": "The level of filtering range. It can be 'low', 'mid', or 'high'. Defaults to 'low'.", "type": "str, optional", "default": ""}, "r": {"description": "The replacement string to be used for censored words. Must be a valid punctuation mark and no longer than 1 character. Defaults to '*'.", "type": "str, optional", "default": "*"}}}
{"name": "advance", "description": "This function makes a GET request to the cleantalk1.p.rapidapi.com service with specified parameters and returns the response.", "parameters": {"fill_char": {"description": "A character to fill within the text.", "type": "str", "default": "_"}, "text": {"description": "The text to be processed.", "type": "str", "default": "How about you?"}, "add": {"description": "Additional text or parameters to be included.", "type": "str", "default": "about"}}}
{"name": "get_current_weather", "description": "Retrieves the current weather for a specified city using the Cloud Cast API.", "parameters": {"city": {"description": "The name of the city for which to retrieve the weather.", "type": "str", "default": "New York"}}}
{"name": "music_information", "description": "Fetch music information from Instagram using the provided audio cluster ID.", "parameters": {"musicid": {"description": "The Instagram audio cluster ID.", "type": "str", "default": "514041080820366"}}}
{"name": "get_media_info_by_url", "description": "Fetches Instagram media information based on the given URL.", "parameters": {"link": {"description": "The URL link to the specific Instagram media.", "type": "str", "default": "https://www.instagram.com/p/CqIbCzYMi5C/"}}}
{"name": "get_by_latin_name", "description": "Retrieves information about plants that match the provided Latin plant name using the House Plants API.", "parameters": {"latin_name": {"description": "The Latin name of the plant to search for. Defaults to 'philodendron'. This parameter accepts only [a-zA-Z] characters.", "type": "str", "default": "philodendron"}}}
{"name": "get_all_teas", "description": "Fetches all types of teas from the RapidAPI endpoint, optionally limited to a specified number.", "parameters": {"limit": {"description": "The maximum number of tea types to retrieve. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "get_teams_and_players", "description": "Fetches teams and players information from the League of Legends Esports API. This function can filter results based on the team name or team ID.", "parameters": {"name": {"description": "The name of the team to filter by. Defaults to None.", "type": "str, optional", "default": ""}, "is_id": {"description": "The ID of the team to filter by. Defaults to 'lng-esports'.", "type": "str, optional", "default": "lng-esports"}}}
{"name": "user_aliases", "description": "Gets a list of user aliases and the timestamps when they were changed.", "parameters": {"is_id": {"description": "The Steam ID of the user for whom the aliases are retrieved.", "type": "str", "default": "sindex"}}}
{"name": "get_cards", "description": "Fetches a list of Hearthstone cards from the API.", "parameters": {"page": {"description": "The page number to retrieve. Defaults to '1'.", "type": "str", "default": "1"}, "pagesize": {"description": "The number of cards to retrieve per page. Defaults to '1'.", "type": "str", "default": "1"}}}
{"name": "game_lookup", "description": "Fetches detailed information for a specific game from the CheapShark API, including a list of all deals associated with the game.", "parameters": {"is_id": {"description": "The unique identifier for the game to look up.", "type": "int", "default": "612"}}}
{"name": "commanderskills", "description": "Fetches the details of a specific commander skill from the RapidAPI service.", "parameters": {"skill": {"description": "The specific commander skill to query. If not provided, the function will use a default value.", "type": "str, optional", "default": ""}}}
{"name": "playerstatisticsseasons", "description": "Fetches the statistics for all seasons for a specific basketball player.", "parameters": {"is_id": {"description": "The ID of the player for whom the statistics are being retrieved.", "type": "int", "default": 846936}}}
{"name": "stock_get_stat", "description": "Retrieves stock statistics for a given ticker ID from the Webull API.", "parameters": {"tickerid": {"description": "The value of the ticker ID to fetch statistics for. This ID can be obtained from other endpoints such as /stock/search or /market/get-common-ranking.", "type": "int", "default": "913255598"}}}
{"name": "get_5_year_historical_monthly_prices", "description": "Fetch 5-year historical monthly stock prices for a given ticker symbol.", "parameters": {"ticker": {"description": "The stock ticker symbol for which historical data is to be fetched.", "type": "str", "default": "AAPL"}}}
{"name": "basic_daily", "description": "Fetch daily 10-Q and 10-K report zip files from the SEC financial statement dataset.", "parameters": {"date": {"description": "The specific date for which to fetch the daily zip file, formatted as 'YYYY-MM-DD'.", "type": "str", "default": "2023-07-07"}}}
{"name": "email_qr_code", "description": "Creates and returns a static QR code encoded with the provided email address. The QR code can be customized with various design parameters such as background color, eye pattern, error correction level, size, data gradient colors, and data patterns. When scanned, the QR code will prompt the user to send an email to the specified address.", "parameters": {"address": {"description": "The email address to encode in the QR code.", "type": "str", "default": "marketing@scanova.io"}, "background_color": {"description": "The background color of the QR code. Defaults to '#FFFFFF'.", "type": "str, optional", "default": "#FFFFFF"}, "eye_pattern": {"description": "The pattern of the QR code eyes. Defaults to 'RECT_RECT'.", "type": "str, optional", "default": "RECT_RECT"}, "error_correction": {"description": "The error correction level of the QR code. Defaults to 'M'.", "type": "str, optional", "default": "M"}, "size": {"description": "The size of the QR code. Defaults to 'm'.", "type": "str, optional", "default": "m"}, "data_gradient_start_color": {"description": "The starting color for the data gradient. Defaults to '#000000'.", "type": "str, optional", "default": "#000000"}, "data_gradient_style": {"description": "The style of the data gradient. Defaults to 'None'.", "type": "str, optional", "default": "None"}, "data_pattern": {"description": "The pattern for the QR code data. Defaults to 'RECT'.", "type": "str, optional", "default": "RECT"}, "eye_color_outer": {"description": "The outer color of the QR code eyes. Defaults to '#000000'.", "type": "str, optional", "default": "#000000"}, "data_gradient_end_color": {"description": "The ending color for the data gradient. Defaults to '#000000'.", "type": "str, optional", "default": "#000000"}, "eye_color_inner": {"description": "The inner color of the QR code eyes. Defaults to '#000000'.", "type": "str, optional", "default": "#000000"}}}
{"name": "convert_date", "description": "Convert a date to a specified calendar format using the Calendar Converter API.", "parameters": {"to": {"description": "The target calendar format to which the date will be converted. Possible values are:", "type": "str", "default": ""}, "date": {"description": "The date to be converted, in \"yyyy-mm-dd\" format. Default is '1986-09-03'.", "type": "str, optional", "default": "1986-09-03"}, "is_from": {"description": "The calendar format of the input date. If not specified, the input date is assumed to be in Gregorian format.", "type": "str, optional", "default": ""}}}
{"name": "multiple_guids", "description": "Generate multiple GUIDs by querying an external API.", "parameters": {"number": {"description": "The number of GUIDs to generate (must be between 0 and 1000).", "type": "str", "default": "10"}}}
{"name": "retrieve_proxy_information", "description": "Retrieves proxy test result information for a given user request ID.", "parameters": {"is_id": {"description": "The user request ID received from the response of sending a proxy for checking.", "type": "str", "default": "6416ab3d3c01efbe45e97675"}}}
{"name": "get_the_latest_remote_jobs", "description": "Fetches the latest 20 remote job listings from a specified company and/or category using the RapidAPI.", "parameters": {"company": {"description": "The company name to filter job listings (default is 'shopify').", "type": "str", "default": "shopify"}, "category": {"description": "The job category to filter job listings (default is None).", "type": "str", "default": ""}}}
{"name": "generate_document_resume", "description": "Generates a resume document using the provided degree, skills, and university information.", "parameters": {"degree": {"description": "The degree to be included in the resume. Defaults to 'Information Systems'.", "type": "str", "default": "Information Systems"}, "skills": {"description": "The skills to be included in the resume. Defaults to 'Networking, Web Development'.", "type": "str", "default": "Networking, Web Development"}, "university": {"description": "The university to be included in the resume. Defaults to 'Michigan State University'.", "type": "str", "default": "Michigan State University"}}}
{"name": "air_quality_history", "description": "Fetches the past 24 hours of air quality observations for a specified geographic location.", "parameters": {"lat": {"description": "Latitude of the location for which to retrieve air quality data.", "type": "int", "default": "35.779"}, "lon": {"description": "Longitude of the location for which to retrieve air quality data.", "type": "int", "default": "-78.638"}}}
{"name": "current_weather_data_of_a_location", "description": "Fetch the current weather data for a given location based on longitude and latitude.", "parameters": {"lon": {"description": "The longitude of the location.", "type": "str", "default": "38.5"}, "lat": {"description": "The latitude of the location.", "type": "str", "default": "-78.5"}}}
{"name": "get_wind_speed", "description": "Fetches the current wind speed for a specified city using the Toolbench RapidAPI service.", "parameters": {"city": {"description": "The name of the city for which to retrieve wind speed information.", "type": "str", "default": "New York"}}}
{"name": "current_air_quality", "description": "Fetches the current air quality conditions for a given location specified by its longitude and latitude.", "parameters": {"lon": {"description": "Longitude of the location for which to retrieve air quality data.", "type": "str", "default": "-73.00597"}, "lat": {"description": "Latitude of the location for which to retrieve air quality data.", "type": "str", "default": "40.71427"}}}
{"name": "fetch_latest", "description": "Fetch the latest updated manga from the server based on specified genres and page number.", "parameters": {"genres": {"description": "A comma-separated list of genres to filter the manga by (e.g., 'Harem,Fantasy'). Defaults to 'Harem,Fantasy'.", "type": "str, optional", "default": "Harem,Fantasy"}, "page": {"description": "The page number to fetch, starting from '1'. Defaults to '1'.", "type": "str, optional", "default": "1"}}}
{"name": "v1_jokes", "description": "Fetches a set number of jokes from the API Ninjas Jokes API endpoint.", "parameters": {"limit": {"description": "The number of jokes to return, with a valid range of 1 to 30. Defaults to None, which returns a single joke.", "type": "str, optional", "default": ""}}}
{"name": "challenge", "description": "Fetch the challenge details from TikTok based on a provided hashtag.", "parameters": {"hashtag": {"description": "The hashtag of the challenge to fetch details for.", "type": "str", "default": "fyp"}}}
{"name": "list_replies_by_comment", "description": "Fetches replies to a specific comment on a given TikTok video using the RapidAPI service.", "parameters": {"aweme_id": {"description": "The ID of the TikTok video.", "type": "str", "default": ""}, "comment_id": {"description": "The ID of the comment for which replies are being retrieved.", "type": "str", "default": ""}, "count": {"description": "The number of replies to retrieve. Defaults to 10.", "type": "int, optional", "default": "10"}, "cursor": {"description": "The starting point for pagination. Defaults to 0.", "type": "int, optional", "default": "0"}, "proxy": {"description": "Proxy server to use for the request. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "video_data", "description": "Retrieves video data for a given video ID from YouTube using the RapidAPI service.", "parameters": {"video_id": {"description": "The ID of the YouTube video for which to retrieve data.", "type": "str", "default": "hs1W2KQluWA"}}}
{"name": "get_pin_info", "description": "Fetches information about a Pinterest pin using its shortcode.", "parameters": {"shortcode": {"description": "The shortcode for the Pinterest pin.", "type": "str", "default": "39Nfim2"}}}
{"name": "get_balance", "description": "Retrieves the account balance for the given API key using the Sms77.io API through RapidAPI.", "parameters": {"p": {"description": "Your API key from Sms77.io.", "type": "str", "default": ""}}}
{"name": "get_video_info", "description": "Gets video download links and other relevant information in JSON format for a given YouTube video ID.", "parameters": {"is_id": {"description": "The YouTube video ID for which to fetch information.", "type": "str", "default": "UxxajLWwzqY"}, "geo": {"description": "The country code in ISO 3166 format of the end user. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "domain_seo_analysis", "description": "Fetch popular SEO metrics for a specified domain name, optionally considering the search from a specific country's perspective.", "parameters": {"domain": {"description": "The domain name to analyze for SEO metrics.", "type": "str", "default": "apify.com"}, "country": {"description": "Specify the proxy location for the search. Supported countries include 'US', 'CA', 'IE', 'GB', 'FR', 'DE', 'SE', 'IN', 'JP', 'KR', 'SG', 'AU', 'BR'. Defaults to 'us'.", "type": "str, optional", "default": "us"}}}
{"name": "get_holidays", "description": "Retrieve the list of holidays for a specified country and year using the Toolbench RapidAPI service.", "parameters": {"country": {"description": "The name of the country for which to retrieve holidays. Fuzzy search is supported.", "type": "str", "default": "USA"}, "year": {"description": "The year for which to retrieve holidays. Defaults to 2023.", "type": "int, optional", "default": 2023}}}
{"name": "open_high_low_close_ohlc_price", "description": "Gets the open, high, low, and close prices for a given symbol and date by querying the API.", "parameters": {"symbols": {"description": "The three-letter currency code or commodity code for which to get the price data.", "type": "str", "default": "BRENTOIL"}, "date": {"description": "The date for which to retrieve the price data.", "type": "str", "default": "2022-01-10"}, "base": {"description": "The three-letter currency code or commodity code of the base currency.", "type": "str", "default": "USD"}}}
{"name": "search_for_creators", "description": "Search for creators on Patreon using the given search query.", "parameters": {"search_query": {"description": "The search term used to query creators on Patreon.", "type": "str", "default": "adnr studios"}}}
{"name": "related_videos", "description": "Fetches videos related to a specified video using the YouTube V3 API.", "parameters": {"is_id": {"description": "The ID of the video for which to fetch related videos.", "type": "str", "default": "dQw4w9WgXcQ"}, "x_cachebypass": {"description": "Cache bypass parameter; pass '1' to bypass the cache. Defaults to None.", "type": "str, optional", "default": ""}, "geo": {"description": "ISO 3166-2 country code of the region (e.g., 'US', 'UK', 'CA'). Defaults to 'US'.", "type": "str, optional", "default": "US"}, "lang": {"description": "Locale/language for the request (e.g., 'en', 'gb', 'hi'). Defaults to 'en'.", "type": "str, optional", "default": "en"}, "token": {"description": "Pagination token for fetching additional results. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "captions_list", "description": "Returns a list of caption tracks associated with a specified YouTube video.", "parameters": {"part": {"description": "The part parameter specifies a comma-separated list of one or more caption resource properties that the API response will include.", "type": "str", "default": "snippet"}, "videoid": {"description": "The YouTube video ID for which the caption tracks are being requested.", "type": "str", "default": "M7FIvfx5J10"}}}
{"name": "tournament_fixture", "description": "Fetches the full match list with periods and final scores for a given tournament.", "parameters": {"tournamentid": {"description": "The ID of the tournament to retrieve the fixture for.", "type": "int", "default": "25"}}}
{"name": "footballersbyname", "description": "Returns a list of footballers that match the given name using the Premier League Stats API.", "parameters": {"name": {"description": "The name of the footballer to search for.", "type": "str", "default": "Ryan Yates"}}}
{"name": "matchdetails", "description": "Fetch detailed information for a specific American Football match from the API.", "parameters": {"is_id": {"description": "The ID of the match for which the details are to be retrieved.", "type": "int", "default": 10060042}}}
{"name": "staffs_get_short_info", "description": "Fetch short information for one or more staff members given their IDs.", "parameters": {"ids": {"description": "Comma-separated list of staff IDs. Example: `60805,39208,17455`.", "type": "str", "default": "60805,39208,17455,38756,72819,48174"}, "domain": {"description": "Specifies the domain. One of the following: `com`, `de`, `be`, `es`, `it`, `nl`, `pl`, `pt`, `com.tr`, `world`. Defaults to `de`.", "type": "str, optional", "default": "de"}}}
{"name": "teamplayers", "description": "Retrieve the players for a specific baseball team using the team ID.", "parameters": {"is_id": {"description": "The team ID for which players need to be retrieved.", "type": "int", "default": 3633}}}
{"name": "skill_rating_mw_2_ranked", "description": "Fetches the Skill Ratings of the top players ranked in Modern Warfare 2 (MW 2) leaderboard.", "parameters": {"limit": {"description": "Maximum number of top-ranked players to retrieve, defaults to '250'. Must be a number between 1 and 250.", "type": "str", "default": "250"}}}
{"name": "get_team_info", "description": "Retrieves comprehensive information about a team, including player details, events, results, and more, using the VLR.gg team ID.", "parameters": {"teamid": {"description": "The team ID from VLR.gg for which information is being retrieved.", "type": "str", "default": "1001"}}}
{"name": "get_weak_certs", "description": "Fetches weak certificates for a given firmware hash from the IoT Security API.", "parameters": {"firmware_hash": {"description": "SHA2 hash of the device firmware.", "type": "str", "default": "52841661d61e00649451cc471e9b56d169df8041926b1252bb3fd0710c27b12c"}}}
{"name": "get_expired_certs", "description": "Fetches expired SSL/TLS certificates for a given firmware.", "parameters": {"firmware_hash": {"description": "SHA2 hash of the device firmware.", "type": "str", "default": "ac7c090c34338ea6a3b335004755e24578e7e4eee739c5c33736f0822b64907e"}}}
{"name": "list_all_models_by_phone_brand", "description": "Fetches and returns a list of mobile phone models for a given phone brand using the specified RapidAPI key.", "parameters": {"brandname": {"description": "The name of the phone brand for which to fetch model information.", "type": "str", "default": "Samsung"}}}
{"name": "job_salary", "description": "Fetch estimated job salaries based on job title and location using the RapidAPI Job Salary API.", "parameters": {"job_title": {"description": "The job title for which to get the salary estimation.", "type": "str", "default": "nodejs developer"}, "location": {"description": "The location or area to search for the job salary estimation.", "type": "str", "default": "new york, usa"}, "radius": {"description": "The search radius in kilometers from the location. Defaults to '200'.", "type": "str, optional", "default": "200"}}}
{"name": "get_4_date_endpoint", "description": "Fetches the exchange rates for specified currencies on a given date.", "parameters": {"base": {"description": "The base currency for which to get the exchange rates.", "type": "str", "default": "eur"}, "symbols": {"description": "A comma-separated string of target currencies to get exchange rates for.", "type": "str", "default": "usd"}, "date": {"description": "The date for which to fetch the exchange rates in 'YYYY-MM-DD' format. Defaults to '2023-02-01'.", "type": "str, optional", "default": "2023-02-01"}}}
{"name": "a_chapter_by_its_slug", "description": "Fetches information for a specified chapter of a webtoon from a given provider.", "parameters": {"slug": {"description": "The slug identifier for the chapter. See /chapters for the chapter list.", "type": "str", "default": "the-world-after-the-fall-chapter-64"}, "provider": {"description": "The slug identifier for the webtoon provider. See /providers for the provider list.", "type": "str", "default": "flame"}, "webtoon": {"description": "The slug identifier for the webtoon. See /webtoons for the webtoon list.", "type": "str", "default": "the-world-after-the-fall"}}}
{"name": "get_anime_detail", "description": "Fetches detailed information about a specific anime using its ID via the RapidAPI service.", "parameters": {"is_id": {"description": "The MyAnimeList ID of the anime.", "type": "str", "default": "5114"}, "fields": {"description": "Comma-separated list of specific fields to retrieve data for. Available fields include '*', 'id', 'title', 'main_picture', 'start_date', 'end_data', 'synopsis', 'mean', 'rank', 'popularity', 'num_list_users', 'num_scoring_users', 'status', 'genres', 'num_episodes', 'source', 'studios', 'volume', 'chapter', 'light_novel', 'media_type', 'mal_id', 'broadcast', 'statistics', 'related_manga', 'related_anime', 'season', 'year', 'title_english', 'title_japanese', and 'synonyms'. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "originals_genres_list", "description": "Retrieves a list of genres in the originals category from the Webtoon API.", "parameters": {"language": {"description": "The language of the genre names to be retrieved. Must be one of the following: 'en', 'zh-hant', 'de', 'fr', 'es', 'th', 'id'. Default is 'en'.", "type": "str", "default": "en"}}}
{"name": "get_all_social_spikes_by_coin_name", "description": "Retrieve social media spikes for a given coin name within the last 24 hours.", "parameters": {"coinname": {"description": "The name of the cryptocurrency for which to retrieve social media spikes.", "type": "str", "default": "Bitcoin"}}}
{"name": "volume_from_to_number", "description": "Converts a given volume from one unit to another using the RapidAPI Unit Conversion API.", "parameters": {"to": {"description": "The unit to convert the volume to.", "type": "str", "default": "cubic kilometer"}, "number": {"description": "The numerical value of the volume to be converted.", "type": "int", "default": "60"}, "is_from": {"description": "The unit of the volume to be converted from.", "type": "str", "default": "cubic meter"}}}
{"name": "measure_units", "description": "Fetches an array of all units associated with a specific measurement type using the Measurement Unit Converter API.", "parameters": {"measure": {"description": "The type of measurement for which units are to be fetched (e.g., 'length', 'weight').", "type": "str", "default": "length"}}}
{"name": "get_content", "description": "Retrieves the content from the given URL using the RapidAPI service.", "parameters": {"url": {"description": "The URL of the webpage from which to extract content.", "type": "str", "default": "https://www.cnbc.com/2022/06/27/three-arrows-capital-crypto-hedge-fund-defaults-on-voyager-loan.html"}}}
{"name": "listoforders", "description": "Executes an HTTP GET request to the Ecombr marketplace API for seller orders with the provided parameters and returns the response.", "parameters": {"token": {"description": "Authentication token for the Ecombr API.", "type": "str", "default": ""}, "cache_control": {"description": "Value for the Cache-Control header.", "type": "str", "default": "no-cache"}, "e_mail": {"description": "Email address associated with the seller account.", "type": "str", "default": ""}, "content_type": {"description": "Value for the Content-Type header.", "type": "str", "default": "application/json"}, "secret": {"description": "Secret key for additional authentication.", "type": "str", "default": ""}, "status": {"description": "Status of the orders to filter.", "type": "str", "default": ""}, "action": {"description": "The action to be performed on the orders.", "type": "str", "default": "orders_list"}}}
{"name": "getproductbyname", "description": "Fetches product information for a specific brand from the products database via the Cartify API.", "parameters": {"brand": {"description": "The name of the brand to filter products by.", "type": "str", "default": "iPhone"}}}
{"name": "smart_phones", "description": "Fetches data of smart phones from the Amazon API using optional brand filtering.", "parameters": {"name_brand": {"description": "The brand name to filter the smart phones. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "get_hsn_tsn", "description": "Fetch HSN/TSN data for a specified car query from the HSN-TSN API.", "parameters": {"query": {"description": "The search query for the car.", "type": "str", "default": "Audi A6"}, "year": {"description": "The year of the car. Defaults to 2018.", "type": "int, optional", "default": "2018"}}}
{"name": "breed_type", "description": "Fetches information about cat breeds based on the specified breed type.", "parameters": {"breedtype": {"description": "The type of cat breed to search for.", "type": "str", "default": "Natural"}}}
{"name": "getlocationinfobyzipcode", "description": "Fetches location information based on the provided zip code using the Zillow API.", "parameters": {"zipcode": {"description": "The zip code to retrieve location information for.", "type": "str", "default": "01003"}}}
{"name": "sticker_search", "description": "Searches for animated stickers on Giphy using a search query and optional parameters.", "parameters": {"q": {"description": "Search query term or phrase.", "type": "str", "default": "cat"}, "limit": {"description": "Number of results to return, with a maximum of 100. Defaults to 25.", "type": "str, optional", "default": ""}, "offset": {"description": "Results offset, defaults to 0.", "type": "str, optional", "default": ""}, "rating": {"description": "Limit results to those rated (y, g, pg, pg-13, or r).", "type": "str, optional", "default": ""}}}
{"name": "songs_v2_get_details", "description": "Gets detailed information about a specific song using the given song ID.", "parameters": {"is_id": {"description": "The ID of the song to retrieve details for.", "type": "str", "default": "1217912247"}, "l": {"description": "The language code for the response (default is 'en-US').", "type": "str, optional", "default": "en-US"}}}
{"name": "ean13", "description": "Generates an EAN13 barcode as a PNG or returns an error based on a given 12-13 length code. For a 12-digit code, the check digit is automatically calculated; for a 13-digit code, the check digit is verified.", "parameters": {"code": {"description": "A 12 or 13 character string representing the barcode.", "type": "str", "default": "9788804660243"}}}
{"name": "search_searchterm", "description": "Search for a term using the Uncovered Treasure API and return the results.", "parameters": {"searchterm": {"description": "The term to search for, e.g., \"God's plan\".", "type": "str", "default": ""}, "callback": {"description": "An optional JSONP callback parameter for the API request.", "type": "str, optional", "default": ""}}}
{"name": "under_over_analysis", "description": "Fetches the under/over score analysis and statistics for a specific basketball match.", "parameters": {"matchid": {"description": "The ID of the basketball match for which the analysis is to be fetched.", "type": "int", "default": "350279"}}}
{"name": "event_data", "description": "Fetches event data for a given event ID using the Toolbench RapidAPI.", "parameters": {"event_id": {"description": "The unique identifier for the event.", "type": "int", "default": "10277254"}}}
{"name": "receive_the_credit_card_data", "description": "Fetch credit card data from a simulated API based on the specified card type.", "parameters": {"visa_type": {"description": "Type of visa card to generate. Defaults to 'visa'. Valid options include 'amex', 'diners', 'discover', 'jcb', 'jcb15', 'jcb16', 'maestro', 'mastercard', 'visa', 'visa13', 'visa16', 'visa19'.", "type": "str", "default": "visa"}}}
{"name": "red_colour_qr_code_generator", "description": "Generates a red-colored QR code for the given URL using the RapidAPI service.", "parameters": {"url": {"description": "The URL to encode in the QR code. Defaults to 'grayhat.in'.", "type": "str", "default": "grayhat.in"}}}
{"name": "business_slogan", "description": "Generates a business slogan for the given business name using the Toolbench RapidAPI.", "parameters": {"name": {"description": "The name of the business for which to generate the slogan.", "type": "str", "default": "MyBusiness"}}}
{"name": "get_device_asset_by_identifier", "description": "Fetches device asset information using a specified identifier from an external system via RapidAPI.", "parameters": {"identifier": {"description": "The unique identifier for the device asset.", "type": "str", "default": "71491234-A"}}}
{"name": "get_a_random_quote_tagged_by_a_specific_tag", "description": "Fetch a random quote tagged with a specific tag from the Self-Help Quotes API.", "parameters": {"tag": {"description": "The specific tag to filter quotes.", "type": "str", "default": "money"}}}
{"name": "validate_a_token", "description": "Validates a token or a link ID to check if it is valid.", "parameters": {"is_id": {"description": "The identifier for either a token or a link.", "type": "str", "default": ""}, "t": {"description": "The actual token or link to validate.", "type": "str", "default": "link"}}}
{"name": "basic_search", "description": "Performs a basic search for movie news articles using the `/news/basic/search` endpoint.", "parameters": {"q": {"description": "The query term for the search, typically a keyword related to movie news.", "type": "str", "default": "superman"}, "limit": {"description": "The maximum number of results to return. Default is 10.", "type": "int, optional", "default": "10"}, "offset": {"description": "The number of results to skip before returning results. Default is 0.", "type": "int, optional", "default": "0"}}}
{"name": "v1_mortgagecalculator", "description": "Calculates mortgage-related information using the API Ninjas Mortgage Calculator API endpoint.", "parameters": {"interest_rate": {"description": "Annual interest rate (in %). For example, a 3.5% interest rate would be 3.5. Cannot exceed 10000.", "type": "int", "default": "3.5"}, "downpayment": {"description": "Downpayment on the home or asset. Cannot exceed home_value.", "type": "int, optional", "default": ""}, "home_value": {"description": "Total value of the home or asset. Must be greater than downpayment.", "type": "int, optional", "default": ""}, "monthly_hoa": {"description": "Monthly homeowner association fees.", "type": "int, optional", "default": ""}, "annual_property_tax": {"description": "Annual property tax owed.", "type": "str, optional", "default": ""}, "duration_years": {"description": "Duration of the loan in years. Must be between 1 and 10000. If not set, default value is 30 years.", "type": "int, optional", "default": ""}, "loan_amount": {"description": "Principal loan amount. Default is 200000.", "type": "int, optional", "default": "200000"}, "annual_home_insurance": {"description": "Annual homeowner's insurance bill.", "type": "int, optional", "default": ""}}}
{"name": "symbols_get_option_expirations", "description": "Fetches the option expiration dates for a given symbol from the Seeking Alpha API.", "parameters": {"symbol": {"description": "The stock symbol to query for option expiration data.", "type": "str", "default": "aapl"}}}
{"name": "ticker_per_symbol", "description": "Fetch ticker data for a specified cryptocurrency symbol in a given market.", "parameters": {"market": {"description": "The market to retrieve data from. Possible values are: 'global' or 'local'.", "type": "str", "default": "global"}, "symbol": {"description": "The cryptocurrency symbol in the form of 'ETH<fiat>', where '<fiat>' is a valid ISO currency code (e.g., ETHUSD, ETHEUR).", "type": "str", "default": "ETHUSD"}}}
{"name": "transactions_feed", "description": "Fetches the latest large whale transactions for popular blockchains with optional filtering.", "parameters": {"s_amount_usd": {"description": "Filters transactions by value in USD. Use 'desc' for descending order.", "type": "str", "default": "desc"}, "size": {"description": "Number of transactions to fetch. Defaults to '20'.", "type": "str", "default": "20"}, "t_blockchain": {"description": "Specifies the blockchain to filter transactions. Defaults to 'ethereum'.", "type": "str", "default": "ethereum"}}}
{"name": "risk", "description": "Fetches core metrics to measure the risk of investing in a mutual fund from the specified API.", "parameters": {"symbol": {"description": "The symbol ticker of the mutual fund.", "type": "str", "default": "VFIAX"}, "dp": {"description": "The number of decimal places for floating values. Defaults to None.", "type": "str, optional", "default": ""}, "country": {"description": "Filter results by country name or alpha code. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "stock_balance_sheet_stock", "description": "Fetches the balance sheet data for a given stock symbol using the mboum-finance API.", "parameters": {"symbol": {"description": "The stock symbol for which to retrieve balance sheet data.", "type": "str", "default": "AAPL"}}}
{"name": "build_word_ladders", "description": "Builds a word ladder between the given start word and end word using the specified dictionary.", "parameters": {"endword": {"description": "The word that the word ladder must end with.", "type": "str", "default": ""}, "startword": {"description": "The word that the word ladder must start with.", "type": "str", "default": ""}, "dictionary": {"description": "The dictionary edition to use for building the word ladder. Defaults to the 2019 edition of Collins Dictionary if not specified.", "type": "str, optional", "default": ""}}}
{"name": "search_for_a_champion", "description": "Search for a League of Legends champion based on various criteria and return the champion data.", "parameters": {"releasedate": {"description": "Release date of the champion.", "type": "str, optional", "default": ""}, "name": {"description": "Name of the champion. Default is 'zed'.", "type": "str, optional", "default": "zed"}, "resource": {"description": "Resource type of the champion.", "type": "str, optional", "default": ""}, "rp": {"description": "Riot Points cost of the champion.", "type": "str, optional", "default": ""}, "blueessence": {"description": "Blue Essence cost of the champion.", "type": "str, optional", "default": ""}, "attribute": {"description": "Attribute of the champion.", "type": "str, optional", "default": ""}}}
{"name": "search_shops", "description": "Search for shops using a specified keyword.", "parameters": {"keyword": {"description": "The keyword to search for shops.", "type": "str", "default": ""}, "lan": {"description": "The language of the website to search (default is None). For instance, \"en\" for English or \"cn\" for Chinese.", "type": "str, optional", "default": ""}, "page": {"description": "The page number of search results (default is 1).", "type": "int, optional", "default": "1"}, "pagesize": {"description": "The number of results per page (default is 10).", "type": "int, optional", "default": "10"}}}
{"name": "get_price_by_styleids_and_siteid_zappos_1_6pm_2", "description": "Fetch the price information for specific style IDs and site ID from the Zappos API.", "parameters": {"siteid": {"description": "The site ID for which the price information is requested.", "type": "int", "default": "1"}, "styleids": {"description": "The style IDs for which the price information is requested.", "type": "int", "default": "15651"}}}
{"name": "v1_airquality", "description": "Fetches air quality data from the API Ninjas Air Quality API based on provided location parameters.", "parameters": {"zip": {"description": "ZIP code of the desired location.", "type": "str, optional", "default": ""}, "country": {"description": "Name of the country.", "type": "str, optional", "default": ""}, "city": {"description": "Name of the city. Defaults to 'Seattle'.", "type": "str, optional", "default": "Seattle"}, "lon": {"description": "Longitude of the desired location. Must be used in conjunction with `lat`.", "type": "int, optional", "default": ""}, "state": {"description": "US state (United States only).", "type": "str, optional", "default": ""}, "lat": {"description": "Latitude of the desired location. Must be used in conjunction with `lon`.", "type": "int, optional", "default": ""}}}
{"name": "list_of_cities_in_one_country", "description": "Gets a list of cities in a specified country using the Climate Data API.", "parameters": {"country": {"description": "The country code for which to retrieve the list of cities.", "type": "str", "default": "UK"}, "lang": {"description": "The language code for the response data. Options are ['en', 'fr', 'pl', 'pt', 'es', 'it', 'gr', 'tr', 'ru', 'cn', 'cz']. Default is 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "daily", "description": "Fetches daily weather forecast for a given location using the Foreca Weather API.", "parameters": {"location": {"description": "The location for which you want to fetch the weather forecast.", "type": "str", "default": "102643743"}, "alt": {"description": "Altitude in meters. Defaults to 0.", "type": "int, optional", "default": "0"}, "dataset": {"description": "The dataset to use for the forecast. Defaults to 'full'.", "type": "str, optional", "default": "full"}, "tempunit": {"description": "The temperature unit for the response. Defaults to 'C' for Celsius.", "type": "str, optional", "default": "C"}, "windunit": {"description": "The wind speed unit for the response. Defaults to 'MS' for meters per second.", "type": "str, optional", "default": "MS"}, "periods": {"description": "Number of time steps for the forecast. Defaults to 8, with a maximum of 12.", "type": "int, optional", "default": "8"}}}
{"name": "searchfollowers", "description": "Search the followers of a specific Instagram user based on a query.", "parameters": {"user_id": {"description": "The ID of the Instagram user whose followers will be searched.", "type": "str", "default": "25025320"}, "query": {"description": "The search query to filter the followers.", "type": "str", "default": "fake"}}}
{"name": "getlensitem", "description": "Fetches lens item information from the Snapchat RapidAPI using the provided lens ID and API key.", "parameters": {"lens_id": {"description": "The ID of the lens item to retrieve.", "type": "str", "default": "41a72e9ae9a44f8891327ce6cf1c344d"}}}
{"name": "search_by_engine", "description": "Search for airplanes that have engines matching the given keyword.", "parameters": {"engine_icontains": {"description": "Keyword to search for in the airplane engine descriptions.", "type": "str", "default": "rolls"}}}
{"name": "models_by_make", "description": "Fetch all motorcycle models by the given make name using the RapidAPI service.", "parameters": {"make": {"description": "The name of the motorcycle manufacturer (e.g., 'BMW').", "type": "str", "default": "Yamaha"}}}
{"name": "view_user_list", "description": "Retrieves the list of favorite libraries for a given user based on their user ID.", "parameters": {"userid": {"description": "The unique identifier of the user.", "type": "str", "default": "1"}}}
{"name": "get_math_fact", "description": "Fetch a mathematical property or fact about a given number.", "parameters": {"number": {"description": "The number for which the mathematical fact is to be retrieved.", "type": "str", "default": "1729"}, "fragment": {"description": "If set to 'True', returns the fact as a sentence fragment that can be easily included in a larger sentence. Defaults to 'True'.", "type": "str, optional", "default": true}, "json": {"description": "If set to 'True', returns the result in JSON format instead of plaintext. Defaults to 'True'.", "type": "str, optional", "default": true}}}
{"name": "search_music", "description": "Searches for music based on the provided keywords using the TikTok API.", "parameters": {"keywords": {"description": "The search terms to look for in the music database.", "type": "str", "default": "thuyen quyen remix"}, "count": {"description": "The number of results to return, with a maximum of 30. Defaults to 5.", "type": "int, optional", "default": "5"}, "cursor": {"description": "The cursor for pagination to get the next set of results. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "hashtag_metadata_information", "description": "Retrieves metadata information for a given hashtag using the RapidAPI Toolbench.", "parameters": {"hashtag": {"description": "The name of the hashtag for which to retrieve metadata. For example: 'summer'.", "type": "str", "default": "summer"}}}
{"name": "sign_info", "description": "Fetches and returns the sign information from the OnlyFans API using the provided user agent and RapidAPI key.", "parameters": {"useragent": {"description": "The user agent string to be used in the API request.", "type": "str", "default": ""}}}
{"name": "v1_post_post_id_comments", "description": "Fetch comments for a given post ID from the Tokapi mobile API.", "parameters": {"post_id": {"description": "The ID of the post for which to fetch comments.", "type": "str", "default": "6977747303692078337"}, "count": {"description": "The number of comments to retrieve. Defaults to 10.", "type": "int, optional", "default": 10}, "offset": {"description": "The offset for fetching comments, used for pagination. Defaults to 0.", "type": "int, optional", "default": 0}}}
{"name": "user_highlights_list", "description": "Fetches the list of Instagram highlights for a given user ID using the Toolbench API.", "parameters": {"userid": {"description": "The Instagram user ID for which to fetch the highlights.", "type": "str", "default": "25025320"}}}
{"name": "nearest_place", "description": "Searches for the nearest named place (village, town, or city) from given GPS coordinates.", "parameters": {"lon": {"description": "Longitude in formats like \"12E\", \"12.3E\", \"12.3\", \"13W\", \"13.2W\", or \"-13.4\".", "type": "str", "default": "-122.42282"}, "lat": {"description": "Latitude in formats like \"12N\", \"12.3N\", \"12.3\", \"13S\", \"13.2S\", or \"-13.4\".", "type": "str", "default": "37.81021"}, "language": {"description": "The language for the place names. Available options are:", "type": "str, optional", "default": "en"}}}
{"name": "race_detail_info", "description": "Fetch detailed race information and odds comparator using the Race ID and RapidAPI key.", "parameters": {"id_race": {"description": "The unique identifier of the race to get details for.", "type": "str", "default": "207660"}}}
{"name": "getcompetitionsid", "description": "Fetches competition details by unique identifier from the list of televised football matches in Spain.", "parameters": {"is_id": {"description": "Unique identifier of the competition to be fetched.", "type": "int", "default": ""}}}
{"name": "getmaxstreak", "description": "Retrieve the maximum streak of a user on LeetCode using the specified RapidAPI key.", "parameters": {"username": {"description": "The username of the LeetCode user whose maximum streak is being retrieved.", "type": "str", "default": "mujtabah258"}}}
{"name": "geteasyquestion", "description": "Fetches the number of easy questions solved by a specified user from the LeetCode API.", "parameters": {"username": {"description": "The LeetCode username of the user to fetch the information for.", "type": "str", "default": "mujtabah258"}}}
{"name": "hsl_to_hex", "description": "Converts an HSL color code to its HEX color code using the Convexity RapidAPI service.", "parameters": {"s": {"description": "The saturation component of the HSL color code.", "type": "int", "default": "78"}, "h": {"description": "The hue component of the HSL color code.", "type": "int", "default": "250"}, "l": {"description": "The lightness component of the HSL color code.", "type": "int", "default": "45"}}}
{"name": "hashtag_info", "description": "Fetches information about a specific TikTok hashtag using the Toolbench RapidAPI.", "parameters": {"hashtag": {"description": "The TikTok hashtag for which to retrieve information.", "type": "str", "default": "bts"}}}
{"name": "detail", "description": "Fetches detailed historical transactions for a given address using the RapidAPI Real Estate Records API.", "parameters": {"is_id": {"description": "The ID value obtained from the summary API call corresponding to the given address.", "type": "str", "default": "6144a05f3afc5ca06e88a2ab"}}}
{"name": "typical_price", "description": "Fetches the Typical Price Indicator for a given market, exchange, symbol, and interval.", "parameters": {"market": {"description": "The market type. Available options are 'spot', 'usdt-perpetual', and 'inverse-perpetual'.", "type": "str", "default": "spot"}, "exchange": {"description": "The exchange name.", "type": "str", "default": "binance"}, "symbol": {"description": "The symbol representing the security (e.g., \"BTCUSD\").", "type": "str", "default": "btcusdt"}, "interval": {"description": "The interval for which the typical price is calculated (e.g., '1m', '5m', '1h').", "type": "str", "default": "1m"}, "backtracks": {"description": "The number of intervals back to retrieve. Default is 1.", "type": "int, optional", "default": "1"}, "length": {"description": "The number of periods used in calculating the typical price. Default is 18.", "type": "int, optional", "default": "18"}, "is_from": {"description": "The start time in Unix timestamp format. Default is '1683895800'.", "type": "str, optional", "default": "1683895800"}}}
{"name": "tokens", "description": "Retrieves a list of tokens and their contract information based on the specified blockchain network.", "parameters": {"network": {"description": "The name of the blockchain network. Supported networks include arbitrum, aurora, avalanche, bsc, cronos, ethereum, fantom, harmony, heco, kcc, metis, moonriver, oasisemerald, optimism, polygon, and telos.", "type": "str", "default": ""}}}
{"name": "get_coin_exchanges", "description": "Retrieve a list of exchanges where a specific coin can be traded.", "parameters": {"uuid": {"description": "UUID of the coin for which to request exchanges.", "type": "str", "default": "Qwsogvtv82FCd"}, "search": {"description": "Value to search for within results, such as exchange names.", "type": "str, optional", "default": ""}, "orderby": {"description": "Field to order the results by. Allowed values are \"24hVolume\" and \"price\". Defaults to \"24hVolume\".", "type": "str, optional", "default": "24hVolume"}, "orderdirection": {"description": "Order direction, either \"asc\" for ascending or \"desc\" for descending. Defaults to \"desc\".", "type": "str, optional", "default": "desc"}, "offset": {"description": "Offset for pagination. Defaults to 0.", "type": "int, optional", "default": "0"}, "limit": {"description": "Limit for pagination. Defaults to 50. Should be within the range 0-100.", "type": "int, optional", "default": "50"}, "referencecurrencyuuid": {"description": "UUID of the reference currency whose rate is used to calculate the volume. Defaults to \"yhjMzLPhuIDl\" (US Dollar).", "type": "str, optional", "default": "yhjMzLPhuIDl"}}}
{"name": "getcodeplaygroundlink", "description": "Generates a link to the code playground for a specific contract using the provided contract address and name, and an optional API key.", "parameters": {"contract_address": {"description": "The address of the smart contract.", "type": "str", "default": "0x011b6f1425389550"}, "contract_name": {"description": "The name of the smart contract.", "type": "str", "default": "NWayUtilityCoin"}}}
{"name": "originals_titles_get_recommend", "description": "Fetches recommended comics similar to a given comic title number.", "parameters": {"titleno": {"description": "The title number for which recommendations are to be fetched. This corresponds to the `titleNo` field returned by the `/originals/titles/list` or `/originals/titles/list-by-rank` endpoints of the Webtoon API.", "type": "int", "default": "3211"}, "language": {"description": "The language preference for the recommendations. Defaults to 'en'. Accepted values include 'en', 'zh-hant', 'de', 'fr', 'es', 'th', and 'id'.", "type": "str, optional", "default": "en"}}}
{"name": "type_parent_get_recent_investment_rating_change", "description": "Fetches the recent investment rating change as displayed in the Parent tab for a given security.", "parameters": {"type": {"description": "The type of security, either 'etf' or 'fund'.", "type": "str", "default": "etf"}, "securityid": {"description": "The security ID used to query the investment rating change.", "type": "str", "default": "F00000O2CG"}}}
{"name": "bin", "description": "Queries the BIN (Bank Identification Number) information using the Toolbench RapidAPI.", "parameters": {"bin": {"description": "The BIN (Bank Identification Number) to be checked.", "type": "str", "default": "557054"}}}
{"name": "quote", "description": "Retrieve the latest quote for the specified financial instrument.", "parameters": {"symbol": {"description": "The symbol of the financial instrument (e.g., 'AAPL', 'EUR/USD', 'ETH/BTC').", "type": "str", "default": "AMZN"}, "interval": {"description": "Time interval between data points. Supported values are `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`.", "type": "str", "default": "1day"}, "outputsize": {"description": "The number of data points to retrieve. Defaults to 30.", "type": "int, optional", "default": 30}, "format": {"description": "The format of the response. Can be 'csv' or 'json'. Defaults to 'json'.", "type": "str, optional", "default": "json"}}}
{"name": "fetchlatestnav", "description": "Fetch the latest Net Asset Value (NAV) for mutual fund(s) based on various filtering parameters.", "parameters": {"mutualfundfamily": {"description": "Defines the mutual fund family.", "type": "str, optional", "default": ""}, "schemecode": {"description": "Defines the scheme code. Supports multiple comma-separated scheme codes.", "type": "str, optional", "default": ""}, "schemename": {"description": "Defines the scheme name.", "type": "str, optional", "default": ""}, "schemetype": {"description": "Defines the scheme type.", "type": "str, optional", "default": ""}, "additional": {"description": "Additional information for fetching NAV.", "type": "str, optional", "default": ""}, "schemecategory": {"description": "Defines the scheme category.", "type": "str, optional", "default": ""}}}
{"name": "advisory_information", "description": "Fetches advisory information from the BART API based on command and optional origin station.", "parameters": {"cmd": {"description": "Command to specify the type of advisory information.", "type": "str", "default": "bsa"}, "orig": {"description": "Optional station filter using 4 character BART station abbreviations. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "hotels_search", "description": "Searches for available hotels based on the provided filters and parameters.", "parameters": {"order_by": {"description": "Criteria to order the search results.", "type": "str", "default": "popularity"}, "adults_number": {"description": "Number of adults for the hotel booking.", "type": "int", "default": "2"}, "checkin_date": {"description": "Check-in date in the format YYYY-MM-DD.", "type": "str", "default": "2023-09-27"}, "filter_by_currency": {"description": "Currency to display prices in.", "type": "str", "default": "AED"}, "dest_id": {"description": "Destination ID for the hotel search.", "type": "int", "default": -553173}, "locale": {"description": "Locale setting for the search.", "type": "str", "default": "en-gb"}, "checkout_date": {"description": "Check-out date in the format YYYY-MM-DD.", "type": "str", "default": "2023-09-28"}, "units": {"description": "Measurement units to use (e.g., metric or imperial).", "type": "str", "default": "metric"}, "room_number": {"description": "Number of rooms to book.", "type": "int", "default": "1"}, "dest_type": {"description": "Type of the destination (e.g., city, hotel, etc.).", "type": "str", "default": "city"}, "include_adjacency": {"description": "Whether to include hotels in nearby locations. Defaults to None.", "type": "bool, optional", "default": true}, "children_number": {"description": "Number of children for the hotel booking. Defaults to 2.", "type": "int, optional", "default": "2"}, "page_number": {"description": "Page number for paginated results. Defaults to 0.", "type": "int, optional", "default": "0"}, "children_ages": {"description": "Comma-separated ages of the children. Defaults to '5,0'.", "type": "str, optional", "default": "5,0"}, "categories_filter_ids": {"description": "IDs for filtering search categories. Defaults to 'class::2,class::4,free_cancellation::1'.", "type": "str, optional", "default": "class::2,class::4,free_cancellation::1"}}}
{"name": "get_host_language_filters", "description": "Fetches host language filters from the Airbnb API.", "parameters": {"languageid": {"description": "The LanguageId for the desired response language. To obtain a LanguageId, call the getLanguages API and use the Id.", "type": "str, optional", "default": ""}}}
{"name": "webcams_list_orderby_order_sort", "description": "Fetches a list of webcams ordered and sorted based on the specified parameters.", "parameters": {"sort": {"description": "The sorting direction for the results. Possible values are \"asc\" (ascending) or \"desc\" (descending).", "type": "str", "default": ""}, "order": {"description": "The criterion by which the results will be ordered. Possible values are:", "type": "str", "default": ""}, "lang": {"description": "The language for localizing the results, if available. Default is \"en\".", "type": "str, optional", "default": "en"}, "show": {"description": "The content to be listed in the response. Default is \"webcams:image,location\". Possible values include:", "type": "str, optional", "default": "webcams:image,location"}}}
{"name": "players", "description": "Fetches information about a PGA Tour player based on provided search parameters such as last name, first name, or player ID.", "parameters": {"lastname": {"description": "The last name of the player. Default is 'Morikawa'.", "type": "str, optional", "default": "Morikawa"}, "playerid": {"description": "The ID of the player. Default is '50525'.", "type": "str, optional", "default": "50525"}, "firstname": {"description": "The first name of the player. Default is 'Collin'.", "type": "str, optional", "default": "Collin"}}}
{"name": "get_date_fact", "description": "Fetches a fact about a specific day of the year from the Numbers API.", "parameters": {"month": {"description": "The 1-indexed month (e.g., '6' for June).", "type": "str", "default": "6"}, "day": {"description": "The day of the month.", "type": "str", "default": "21"}, "fragment": {"description": "Adds \"?fragment=true\" to return the fact as a sentence fragment. Defaults to 'True'.", "type": "str, optional", "default": true}, "json": {"description": "Specify \"true\" to return the result as JSON instead of plaintext. Defaults to 'True'.", "type": "str, optional", "default": true}}}
{"name": "study_list_macquarie", "description": "Fetches kanji information based on a given list using the Kanjialive API.", "parameters": {"list": {"description": "A string representing the specific chapters of Kanji to be queried (e.g., \"12-22\").", "type": "str", "default": "mac:c12"}}}
{"name": "memre_api_v1_concepts_id", "description": "Retrieve the details of a specific concept by its ID using the MEMRE API v1.", "parameters": {"is_id": {"description": "The unique identifier of the concept to retrieve.", "type": "int", "default": ""}}}
{"name": "memre_api_v1_users_user_id_learning_stats", "description": "Fetches the most effective times of day for a user to study using the memre API.", "parameters": {"user_id": {"description": "The ID of the user for whom to retrieve learning statistics.", "type": "str", "default": ""}}}
{"name": "get_post_by_id", "description": "Retrieves a post by its `post_id` using the FluentMe API.", "parameters": {"post_id": {"description": "The unique identifier of the post to retrieve.", "type": "str", "default": "P36288"}}}
{"name": "memre_api_v1_readiness", "description": "Get the readiness status of a user for a specified item from the memre API.", "parameters": {"user_id": {"description": "The ID of the user whose readiness status is being queried.", "type": "str", "default": ""}, "item_id": {"description": "The ID of the item for which the readiness status is being queried.", "type": "str", "default": ""}}}
{"name": "replies", "description": "Fetch replies for a given Instagram comment.", "parameters": {"after": {"description": "The cursor value after which to fetch the replies. This can be obtained from the `edge_threaded_comments.page_info.end_cursor` field in the response from the comments endpoint.", "type": "str", "default": ""}, "commentid": {"description": "The unique identifier for the comment. This can be obtained from the `node.id` field in the response from the comments endpoint.", "type": "str", "default": "17898559397187730"}}}
{"name": "random_address_by_id", "description": "Retrieve a fake address based on a given ID using the RapidAPI service.", "parameters": {"is_id": {"description": "The ID for which to retrieve the fake address.", "type": "int", "default": "1"}}}
{"name": "movies_id", "description": "Fetch metadata for a specified movie from a given platform and region using the RapidAPI service.", "parameters": {"platform": {"description": "Retrieve sources from the specified platform.", "type": "str", "default": "ios"}, "is_id": {"description": "The ID of the movie. You can also use a TMDb ID.", "type": "int", "default": "508947"}, "region": {"description": "Retrieve the sources' deep link from this region.", "type": "str, optional", "default": "US"}}}
{"name": "sticker_trending", "description": "Fetches the latest trending stickers from Giphy using the specified parameters.", "parameters": {"s": {"description": "The term or phrase to translate into a sticker.", "type": "str", "default": "hungry"}, "limit": {"description": "The number of results to return, with a maximum of 100. Defaults to 25.", "type": "str, optional", "default": ""}, "offset": {"description": "The results offset, defaults to 0.", "type": "str, optional", "default": ""}, "fmt": {"description": "The format in which to return results, either 'html' or 'json'.", "type": "str, optional", "default": ""}, "rating": {"description": "The content rating to limit results to, one of 'y', 'g', 'pg', 'pg-13', or 'r'.", "type": "str, optional", "default": ""}}}
{"name": "new_ios_apps", "description": "Fetch a list of new iOS apps from the App Store using the RapidAPI service.", "parameters": {"country": {"description": "The country code for the App Store. Defaults to 'us'.", "type": "str, optional", "default": "us"}, "category": {"description": "The category code for the type of apps. Defaults to '6016'.", "type": "str, optional", "default": "6016"}, "lang": {"description": "The language code for the App Store content. Defaults to 'en'.", "type": "str, optional", "default": "en"}, "num": {"description": "The number of results to return. Defaults to 100.", "type": "int, optional", "default": "100"}}}
{"name": "walk_transit_and_bike_scores", "description": "Fetches Walk, Transit, and Bike Scores for a property using the given ZPID.", "parameters": {"zpid": {"description": "The Zillow Property ID for which the scores are to be fetched. Default is '20485700'.", "type": "str", "default": "20485700"}}}
{"name": "v1_salestax", "description": "This function fetches sales tax breakdowns for a specified location via the API Ninjas Sales Tax API. The breakdown includes state, county, city, and any additional special sales taxes, represented in decimal form (e.g., 0.1 means 10% tax). You must specify either a ZIP code or a combination of city and state.", "parameters": {"state": {"description": "The name of the state for which sales tax information is required.", "type": "str, optional", "default": ""}, "city": {"description": "The name of the city for which sales tax information is required.", "type": "str, optional", "default": ""}, "zip_code": {"description": "A valid US ZIP code for which sales tax information is required. Defaults to '90210'.", "type": "str, optional", "default": "90210"}}}
{"name": "get_ascii_by_id", "description": "Retrieves a previously generated ASCII image using its unique identifier.", "parameters": {"is_id": {"description": "The unique identifier of the ASCII image.", "type": "str", "default": "2"}}}
{"name": "timezones", "description": "Fetch a list of the world's time zones with various filtering options.", "parameters": {"offset": {"description": "Filter on non-daylight savings offset in hours.", "type": "str, optional", "default": ""}, "name": {"description": "Filter as \"contains\" on timezone name in the chosen language.", "type": "str, optional", "default": ""}, "code": {"description": "Filter on 3-letter non-daylight savings timezone code (not unique).", "type": "str, optional", "default": ""}, "timezone": {"description": "Filter on timezone name in English.", "type": "str, optional", "default": ""}, "daylights_offset": {"description": "Filter on daylight savings offset in hours.", "type": "str, optional", "default": ""}, "lang": {"description": "Language selection ISO 639-1 two-letter code. Overrides the Accept-Language header. Default is 'de'.", "type": "str, optional", "default": "de"}, "daylights_code": {"description": "Filter on daylight savings letter code (not unique).", "type": "str, optional", "default": ""}, "fields": {"description": "Select fields to return in the result. Default is 'offset,daylights_offset,daylights,daylights_code,timezone'.", "type": "str, optional", "default": "offset,daylights_offset,daylights,daylights_code,timezone"}, "daylights": {"description": "Filter on daylight savings/non-daylight savings time zones (`true` or `false`).", "type": "str, optional", "default": ""}}}
{"name": "artist_appears_on", "description": "Fetches tracks where the specified artist appears.", "parameters": {"is_id": {"description": "The Spotify artist ID to look up.", "type": "str", "default": "2w9zwq3AktTeYYMuhMjju8"}}}
{"name": "places", "description": "Fetches a specified number of places from the RapidAPI seeding-data service.", "parameters": {"quantity": {"description": "The number of places to retrieve.", "type": "int", "default": 100}}}
{"name": "baseball_match_statistics", "description": "Fetches and returns statistics for a specified baseball match.", "parameters": {"match_id": {"description": "The unique identifier for the baseball match to retrieve statistics for.", "type": "str", "default": "9863520"}}}
{"name": "mlem_id", "description": "Fetches a mlem image by its ID in JSON format using the Mlem API.", "parameters": {"mlemid": {"description": "The ID of the mlem image to fetch.", "type": "int", "default": ""}}}
{"name": "get_all_players", "description": "Fetches the id, name, and country of all players from the Valorant esports API based on the provided filtering criteria.", "parameters": {"minrounds": {"description": "Minimum rounds a player has to have played.", "type": "str, optional", "default": ""}, "timespan": {"description": "Time span to filter players.", "type": "str, optional", "default": ""}, "map": {"description": "Map to filter players.", "type": "str, optional", "default": ""}, "event": {"description": "Event to filter players.", "type": "str, optional", "default": ""}, "agent": {"description": "Agent to filter players.", "type": "str, optional", "default": ""}, "minrating": {"description": "Minimum rating to filter players.", "type": "str, optional", "default": ""}, "region": {"description": "Region to filter players.", "type": "str, optional", "default": ""}, "country": {"description": "Country to filter players.", "type": "str, optional", "default": ""}, "event_series": {"description": "Event series to filter players.", "type": "str, optional", "default": ""}, "limit": {"description": "Limit the number of players returned.", "type": "str, optional", "default": ""}, "page": {"description": "Page number for paginated results.", "type": "str, optional", "default": ""}}}
{"name": "tournament_info", "description": "Fetch detailed information about a specific tournament, including current season, stage structure (divisions, conferences, etc.), and country.", "parameters": {"tournamentid": {"description": "The ID of the tournament to fetch information for.", "type": "int", "default": "25"}}}
{"name": "getteam", "description": "Fetches the details of an NHL team based on the provided team ID, with optional query parameters to expand the response and specify the season.", "parameters": {"is_id": {"description": "The ID of the team.", "type": "int", "default": 28}, "expand": {"description": "Additional data to expand in the response. Defaults to 'team.roster'.", "type": "str, optional", "default": "team.roster"}, "season": {"description": "The specific season for which to return team data. Defaults to 20172018.", "type": "int, optional", "default": 20172018}}}
{"name": "get_user_activity_pins", "description": "Retrieve activity pins for a given Pinterest username using the Pinterest Scraper API.", "parameters": {"username": {"description": "The Pinterest username for which to retrieve activity pins.", "type": "str", "default": "nasa"}}}
{"name": "trending_tags_from_country", "description": "Fetches trending tags from a specified country using the Hashtag5 API.", "parameters": {"country_name": {"description": "The name of the country for which to fetch trending tags.", "type": "str", "default": "United States"}}}
{"name": "v1_sticker_sticker_id", "description": "Fetches the sticker information for a given sticker ID using the TokAPI service.", "parameters": {"sticker_id": {"description": "The ID of the sticker to fetch information for.", "type": "str", "default": "1108584"}}}
{"name": "get_profile_info", "description": "Fetches the profile information from Pinterest for a given username using the RapidAPI service.", "parameters": {"username": {"description": "The Pinterest username for which the profile information is to be retrieved.", "type": "str", "default": "nasa"}}}
{"name": "get_media_info", "description": "Retrieve information about a media item from Instagram API by providing the media ID.", "parameters": {"is_id": {"description": "The ID of the media item to retrieve information for.", "type": "str", "default": "2789566164107201469_25025320"}}}
{"name": "search_translations", "description": "Fetch a list of translations from the translation memory ranked by quality and similarity.", "parameters": {"langpair": {"description": "The language pair in the format `source|target`, using two ISO-639 language codes.", "type": "str", "default": "en|it"}, "q": {"description": "The text you wish to translate.", "type": "str", "default": "Hello World!"}, "onlyprivate": {"description": "If set to '1', only private matches will be returned. Defaults to '0' (disabled).", "type": "str, optional", "default": "0"}, "mt": {"description": "Enables machine translation results. '1' (enabled) is the default, '0' disables it.", "type": "str, optional", "default": "1"}, "de": {"description": "A valid email address, recommended for high volume usage or use with CAT tools. Defaults to 'a@b.c'.", "type": "str, optional", "default": "a@b.c"}, "key": {"description": "API key to access private memories and customize API limits.", "type": "str, optional", "default": ""}}}
{"name": "house_prices_get_market_activity", "description": "Fetches the market activity for a specified area using the Zoopla API.", "parameters": {"area": {"description": "The value of suggestions/value JSON object returned from the .../auto-complete endpoint. This value must be used exactly as returned by the endpoint.", "type": "str", "default": "Greenwich Close, Crawley RH11"}, "identifier": {"description": "The value of suggestions/identifier JSON object returned from the .../auto-complete endpoint. This value must also be used exactly as returned by the endpoint. Defaults to 'west-sussex/crawley/greenwich-close'.", "type": "str, optional", "default": "west-sussex/crawley/greenwich-close"}}}
{"name": "extract_info", "description": "Retrieve detailed information about a book using its ID from the Project Gutenberg API.", "parameters": {"is_id": {"description": "The ID of the book to retrieve information for.", "type": "str", "default": ""}}}
{"name": "register_device_information", "description": "Registers a device by sending its information to a specified endpoint.", "parameters": {"aid": {"description": "App identifier for the device.", "type": "int", "default": "1180"}, "version": {"description": "Version code of the app. Defaults to '250304'.", "type": "str, optional", "default": "250304"}, "os": {"description": "Operating system version of the device. Defaults to '7.1.2'.", "type": "str, optional", "default": "7.1.2"}}}
{"name": "match", "description": "Fetch detailed information of a specific basketball match using the provided match ID.", "parameters": {"is_id": {"description": "The ID of the basketball match for which detailed information is to be fetched.", "type": "int", "default": 10247060}}}
{"name": "series_get_venues", "description": "Fetches the venues for a given cricket series using the Series ID.", "parameters": {"seriesid": {"description": "The unique identifier for the series, obtainable from the `/series/list` or `/series/list-archives` endpoints.", "type": "int", "default": "3718"}}}
{"name": "get_trivia_fact", "description": "Fetches a trivia fact about a given number from the Numbers API.", "parameters": {"number": {"description": "The number for which to retrieve the trivia fact.", "type": "str", "default": "42"}, "fragment": {"description": "Whether to return the fact as a sentence fragment. Defaults to 'True'.", "type": "str, optional", "default": true}, "notfound": {"description": "Determines the behavior when a fact is not found for the specified number. Options are 'default', 'floor', or 'ceil'. Defaults to 'floor'.", "type": "str, optional", "default": "floor"}, "json": {"description": "Whether to return the result as JSON. Defaults to 'True'.", "type": "str, optional", "default": true}}}
{"name": "school_detail", "description": "Fetch detailed information about a school using the encrypted school ID (sekolah_id_enkrip).", "parameters": {"sekolah_id_enkrip": {"description": "The encrypted ID of the school for which details are to be fetched. Default is '5DB43D89E6BFB0F76FBC'.", "type": "str", "default": "5DB43D89E6BFB0F76FBC"}}}
{"name": "get_entire_surah_chapter", "description": "Fetches the entire Surah (chapter) of the Koran, including all verses and some additional information, based on the provided chapter ID.", "parameters": {"chapterid": {"description": "The unique identifier for a Surah (chapter) in the Koran. Must be between 1 and 114, inclusive.", "type": "int", "default": "114"}}}
{"name": "carbonfootprintfromcartravel", "description": "Calculates the CO2 emissions in kilograms from a car journey using a specified vehicle type and distance.", "parameters": {"distance": {"description": "The distance traveled by the car in kilometers.", "type": "str", "default": "100"}, "vehicle": {"description": "The type of car used for the journey. Options include:", "type": "str", "default": "SmallDieselCar"}}}
{"name": "cleanhydrotocarbonfootprint", "description": "Calculate the CO2 equivalent (CO2e) in kilograms from the consumption of clean hydro energy.", "parameters": {"energy": {"description": "The source of the clean energy. Can be 'Solar', 'Wind', 'HydroElectric', 'Biomass', 'Geothermal', 'Tidal' or 'OtherCleanEnergy'.", "type": "str", "default": "Solar"}, "consumption": {"description": "The amount of energy consumed in kWh.", "type": "str", "default": "500"}}}
{"name": "traditionalhydrotocarbonfootprint", "description": "Calculates the CO2 equivalent (CO2e) emissions from the use of traditional hydroelectric power based on consumption and location.", "parameters": {"consumption": {"description": "The KWH usage of hydroelectric power.", "type": "str", "default": "500"}, "location": {"description": "The country or continent providing the hydroelectric power. Can be one of \"USA\", \"Canada\", \"UK\", \"Europe\", \"Africa\", \"LatinAmerica\", \"MiddleEast\", or \"OtherCountry\".", "type": "str", "default": "UK"}}}
{"name": "get_category", "description": "Fetches categories from the Airbnb API, optionally in a specified language.", "parameters": {"languageid": {"description": "The ID of the language in which the response should be returned. To obtain the language ID, use the `getLanguages` API.", "type": "str, optional", "default": ""}}}
{"name": "getprofilebyuserid", "description": "Fetches the profile information of an Instagram user given their user ID.", "parameters": {"user_id": {"description": "The ID of the Instagram user whose profile is to be retrieved.", "type": "str", "default": "1190758433"}}}
{"name": "channel", "description": "Fetches details and videos of a YouTube channel using the RapidAPI YouTube V3 alternative.", "parameters": {"is_id": {"description": "The ID of the YouTube channel to fetch details for.", "type": "str", "default": "UCTwECeGqMZee77BjdoYtI2Q"}, "x_cachebypass": {"description": "Cache bypass parameter; must be passed as '1' if used.", "type": "str, optional", "default": ""}, "token": {"description": "Pagination token for fetching additional results beyond the first page.", "type": "str, optional", "default": ""}, "sort_by": {"description": "Parameter to sort the channel videos. Available options are 'newest', 'oldest', and 'popular'. Defaults to 'newest'.", "type": "str, optional", "default": ""}}}
{"name": "property_details", "description": "Fetches property details from the Zillow API.", "parameters": {"zpid": {"description": "The Zillow Property ID. Defaults to None.", "type": "int, optional", "default": ""}, "property_url": {"description": "The URL of the property on Zillow. Defaults to 'https://www.zillow.com/homedetails/101-California-Ave-UNIT-303-Santa-Monica-CA-90403/20485700_zpid/'.", "type": "str, optional", "default": "https://www.zillow.com/homedetails/101-California-Ave-UNIT-303-Santa-Monica-CA-90403/20485700_zpid/"}}}
{"name": "image_to_text_ocr", "description": "Extracts text from an image using the Google Lens OCR API and provides detailed detections at the paragraph, sentence, and word levels.", "parameters": {"url": {"description": "The URL of the image from which to extract text.", "type": "str", "default": "https://s3-us-west-2.amazonaws.com/courses-images/wp-content/uploads/sites/1844/2017/06/15213029/images-textwrap-topbottom.png"}, "language": {"description": "The language of the results, specified as a 2-letter ISO 639-1 code (e.g., 'en' for English). Defaults to 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "top_athletes", "description": "Fetches the top athletes based on the provided parameters by making a request to the allscores API.", "parameters": {"langid": {"description": "The language id to use in the request.", "type": "int", "default": 1}, "timezone": {"description": "The timezone name.", "type": "str", "default": "America/Chicago"}, "limit": {"description": "The number of athletes to return.", "type": "int", "default": 10}, "sporttype": {"description": "The sport type for which to fetch top athletes.", "type": "int", "default": 2}}}
{"name": "all_strains_descending", "description": "Fetches a list of all weed strains ordered in a specified descending order from the RapidAPI Weed Strain API.", "parameters": {"ordering": {"description": "The attribute by which to order the strains in descending order (e.g., 'name', 'thc', etc.).", "type": "str", "default": "-strain"}}}
{"name": "bodies", "description": "Fetches a list of vehicle bodies based on various query parameters.", "parameters": {"make_model_trim_id": {"description": "ID representing the make, model, and trim combination.", "type": "str, optional", "default": ""}, "direction": {"description": "Sorting direction, either 'asc' or 'desc'. Default is 'asc'.", "type": "str, optional", "default": "asc"}, "year": {"description": "Year of the vehicle.", "type": "str, optional", "default": ""}, "page": {"description": "Pagination parameter to specify the page of results.", "type": "int, optional", "default": ""}, "verbose": {"description": "Includes additional details like make, model, and trim when set to 'yes'. Default is 'yes'.", "type": "str, optional", "default": "yes"}, "json": {"description": "JSON-encoded string for complex query conditions.", "type": "str, optional", "default": ""}, "make_id": {"description": "ID of the vehicle make.", "type": "str, optional", "default": ""}, "trim": {"description": "Specific trim of the vehicle.", "type": "str, optional", "default": ""}, "sort": {"description": "Field by which to sort the results. Default is 'id'.", "type": "str, optional", "default": "id"}, "make_model_id": {"description": "ID representing the make and model combination.", "type": "str, optional", "default": ""}, "model": {"description": "Model of the vehicle.", "type": "str, optional", "default": ""}, "make": {"description": "Make of the vehicle.", "type": "str, optional", "default": ""}, "type": {"description": "Type of the vehicle, such as SUV, Van, etc.", "type": "str, optional", "default": ""}, "limit": {"description": "Limit on the number of results returned.", "type": "int, optional", "default": ""}, "doors": {"description": "Number of doors on the vehicle.", "type": "str, optional", "default": ""}}}
{"name": "reels_downloader", "description": "Downloads Instagram reels or posts using a given link and RapidAPI key.", "parameters": {"link": {"description": "The URL of the Instagram media (reel or post) to be downloaded.", "type": "str", "default": "https://www.instagram.com/reels/CsinDvAgoYA/"}}}
{"name": "getgamelevel", "description": "Fetches a game level from the Roomtek Music Trivia API.", "parameters": {"level": {"description": "The level to fetch. Defaults to None.", "type": "int, optional", "default": ""}, "output": {"description": "The output format type, either 'xml' or 'json'. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "exact_url", "description": "Retrieves backlinks for a specified domain using the Best Backlink Checker API.", "parameters": {"domain": {"description": "The domain for which backlinks are to be retrieved.", "type": "str", "default": "https://codeconia.com/2021/05/28/html-form-to-email-with-attachment-using-php/"}}}
{"name": "street_level_outcomes", "description": "Fetches street-level outcomes such as crime data for a given location, either at a specific point, within a 1-mile radius, or within a custom area for a specified date.", "parameters": {"date": {"description": "The date for which to fetch outcomes, formatted as 'YYYY-MM'.", "type": "str", "default": "2013-01"}, "lat": {"description": "The latitude of the specific location.", "type": "str", "default": "52.629729"}, "lng": {"description": "The longitude of the specific location.", "type": "str", "default": "-1.131592"}}}
{"name": "random_quote", "description": "Fetches random quotes filtered by length and tags from the Semantic Quotes API.", "parameters": {"max_length": {"description": "Maximum length of the quotes. Defaults to 4000.", "type": "int, optional", "default": 4000}, "tags": {"description": "Comma-separated tags for filtering quotes. Examples include 'faith', 'god', 'humor', 'hope', 'inspirational', 'love', 'life', 'motivational', 'philosophy', 'religion', 'science', 'spirituality', 'success', 'truth', 'wisdom', 'poetry'. Defaults to 'inspirational,motivational'.", "type": "str, optional", "default": "inspirational,motivational"}, "min_length": {"description": "Minimum length of the quotes. Defaults to 0.", "type": "int, optional", "default": "0"}, "limit": {"description": "Number of quotes to return. Defaults to 3.", "type": "int, optional", "default": 3}}}
{"name": "products_get_offers", "description": "Fetches offers for a specific product model from various sites.", "parameters": {"modelid": {"description": "The unique identifier of the product model for which to fetch offers.", "type": "int", "default": "397144"}, "page": {"description": "The page index for pagination, starting from 0. Default is 0.", "type": "int, optional", "default": "0"}, "size": {"description": "The number of items per page for pagination. Default is 100.", "type": "int, optional", "default": "100"}}}
{"name": "trending_with_pagination", "description": "Fetches trending NFT collections from OpenSea with pagination support.", "parameters": {"limit": {"description": "The number of collections to fetch. Default is 50.", "type": "int, optional", "default": "50"}, "offset": {"description": "The number of collections to skip before starting to fetch. Default is 0.", "type": "int, optional", "default": "0"}}}
{"name": "getgroups", "description": "Fetches the WhatsApp groups associated with the provided phone ID using the Maytapi API.", "parameters": {"phone_id": {"description": "The ID of the phone whose WhatsApp groups are to be fetched.", "type": "str", "default": "12"}}}
{"name": "phone_number", "description": "Validates a given phone number using the Phone and Email Validator API from RapidAPI.", "parameters": {"phone": {"description": "The phone number to be validated in E164 format (e.g., '19542567890' for USA).", "type": "str", "default": "12345678900 for US"}}}
{"name": "message_send", "description": "Sends an SMS message using the SensSMS API.", "parameters": {"password": {"description": "Your SensSMS API key.", "type": "str", "default": ""}, "to": {"description": "Destination phone number.", "type": "int", "default": ""}, "text": {"description": "Content of the SMS message.", "type": "str", "default": ""}, "action": {"description": "The action type for the API call.", "type": "str", "default": "message_send"}, "username": {"description": "Your SensSMS username.", "type": "str", "default": ""}, "is_from": {"description": "The sender of the message. Defaults to None.", "type": "str, optional", "default": ""}, "report_mask": {"description": "The report mask for SMS status updates. Defaults to 19.", "type": "int, optional", "default": "19"}, "report_url": {"description": "URL for receiving SMS status reports. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "product_offers", "description": "Fetches a list of offers for a specific product on Amazon based on the given ASIN.", "parameters": {"asin": {"description": "Product ASIN to get offers for. Supports batching up to 10 ASINs in a single request, separated by a comma (e.g., 'B08PPDJWC8,B07ZPKBL9V,B08BHXG144').", "type": "str", "default": "B07ZPKBL9V"}, "delivery": {"description": "[EXPERIMENTAL] Find products with specific delivery options, specified as a comma-delimited list. Valid values: 'PRIME_ELIGIBLE', 'FREE_DELIVERY'. Default is None.", "type": "str, optional", "default": ""}, "limit": {"description": "Maximum number of offers to return. Default is 100.", "type": "int, optional", "default": "100"}, "product_condition": {"description": "Filter products by condition, specified as a comma-delimited list. Valid values: 'NEW', 'USED_LIKE_NEW', 'USED_VERY_GOOD', 'USED_GOOD', 'USED_ACCEPTABLE'. Default is None.", "type": "str, optional", "default": ""}, "country": {"description": "Sets the marketplace country, language, and currency. Allowed values: 'US', 'AU', 'BR', 'CA', 'CN', 'FR', 'DE', 'IN', 'IT', 'MX', 'NL', 'SG', 'ES', 'TR', 'AE', 'GB', 'JP'. Default is 'US'.", "type": "str, optional", "default": "US"}}}
{"name": "replace", "description": "Sends a request to the CleanTalk API to process and replace certain elements in the given text.", "parameters": {"text": {"description": "The text to be processed by the CleanTalk API.", "type": "str", "default": "What the fuck are you doing?"}}}
{"name": "extract_fast", "description": "Extracts and validates phone or cell numbers from the given text based on a specified country.", "parameters": {"country": {"description": "Country name or ISO2/ISO3 code to identify the number format.", "type": "str", "default": "usa"}, "text": {"description": "Text containing the phone or cell numbers to be extracted and validated.", "type": "str", "default": "Real people with real answers in real time, 24/7.  1-800-266-8228, 1(800)266-8229"}}}
{"name": "sentiment_analysis", "description": "Analyzes the sentiment of a given text using Google's BERT sentiment analysis API, with optional language specification.", "parameters": {"text": {"description": "The text to be analyzed for sentiment.", "type": "str", "default": "wah rumahnya bagus ya, tapi kok halamannya kotor sih?"}, "lang": {"description": "The language of the text. This can improve accuracy if specified. Defaults to 'id'.", "type": "str, optional", "default": "id"}}}
{"name": "get_post_data_download_video_photo", "description": "Fetches detailed data for a given post, including a download link for any videos associated with the post.", "parameters": {"post_id": {"description": "The unique identifier of the post. Defaults to 'adPXX3Q'.", "type": "str", "default": "adPXX3Q"}}}
{"name": "get_posts_from_page", "description": "Fetches posts from a specified category on a 9gag page.", "parameters": {"category": {"description": "The category of posts to fetch, as supported by the /get_pages endpoint.", "type": "str", "default": "trending"}, "counter": {"description": "Counter for pagination; leave blank for the first request. For subsequent requests, provide the counter value from the previous response.", "type": "str, optional", "default": ""}, "after": {"description": "Pagination parameter to fetch posts after a certain point; leave blank for the first request. For subsequent requests, provide the after value from the previous response.", "type": "str, optional", "default": ""}}}
{"name": "symbol_strength", "description": "Fetches the combined strength of 8 individual currencies using calculations applied to 28 Forex pairs for a given timeframe.", "parameters": {"timeframe": {"description": "The timeframe for the currency strength data. Supported values are 'h1' for 1 hour, 'h4' for 4 hours, 'd1' for 1 day, and 'w1' for 1 week.", "type": "str", "default": "h1"}}}
{"name": "get_company_historical_data", "description": "Fetches daily historical pricing data for a specified company over a given period of months.", "parameters": {"ticker": {"description": "The stock ticker symbol of the company to fetch historical data for.", "type": "str", "default": "amzn"}, "months": {"description": "The number of months of historical data to retrieve.", "type": "str", "default": "3"}}}
{"name": "analyst_ratings_us_equities", "description": "Fetches analyst ratings for US equities using the Twelve Data API.", "parameters": {"symbol": {"description": "The stock symbol for the US equity.", "type": "str", "default": ""}, "exchange": {"description": "Filter by exchange name or MIC code.", "type": "str, optional", "default": ""}, "country": {"description": "Filter by country name or alpha code.", "type": "str, optional", "default": ""}, "rating_change": {"description": "Filter by rating change action: `Maintains`, `Upgrade`, `Downgrade`, `Initiates`, or `Reiterates`.", "type": "str, optional", "default": ""}, "outputsize": {"description": "Number of records in the response; default is `30`.", "type": "str, optional", "default": ""}}}
{"name": "crime_categories", "description": "Fetches a list of valid crime categories for a specified date from the Data Police UK API.", "parameters": {"date": {"description": "The date for which to fetch crime categories, formatted as 'YYYY-MM'.", "type": "str", "default": "2013-06"}}}
{"name": "town", "description": "Retrieves information about a specified town, such as province and block, using the Mzansi Loadshedding API.", "parameters": {"town": {"description": "The name of the town for which information is being requested.", "type": "str", "default": "kagiso"}}}
{"name": "shopify", "description": "Checks the availability of a given username on Shopify using the Toolbench RapidAPI.", "parameters": {"username": {"description": "The username to check for availability on Shopify.", "type": "str", "default": "username"}}}
{"name": "reddit", "description": "Checks if a given username is available on Reddit using the Toolbench RapidAPI service.", "parameters": {"username": {"description": "The Reddit username to check for availability.", "type": "str", "default": "username"}}}
{"name": "airport_info", "description": "Fetches and returns detailed information about an airport using its IATA code from the Airports Info API.", "parameters": {"iata": {"description": "The IATA code of the airport for which information is being requested.", "type": "str", "default": "JFK"}}}
{"name": "hotel_reviews", "description": "Fetches a list of hotel reviews based on the provided parameters using the Priceline API.", "parameters": {"hotel_id": {"description": "The PPN Hotel ID identifying the desired property.", "type": "str", "default": "700022612"}, "languages": {"description": "Comma-separated language codes to filter the reviews by language. Defaults to 'en,fr'.", "type": "str, optional", "default": "en,fr"}, "order_by": {"description": "Comma-separated sorting order metrics. Valid options include creation_date, average_rating, or verified_guest followed by .asc or .desc.", "type": "str, optional", "default": ""}, "offset": {"description": "The number of reviews to skip before starting to return results. Used in conjunction with `limit`. Defaults to None.", "type": "int, optional", "default": ""}, "limit": {"description": "Limits the number of reviews returned. Defaults to 100.", "type": "int, optional", "default": 100}, "only_verified_guests": {"description": "If set to True, only includes reviews from verified guests. Defaults to None.", "type": "bool, optional", "default": false}}}
{"name": "detail_info", "description": "Fetches detailed information of an application using its slug from the SuggestUse API.", "parameters": {"slug": {"description": "The application's unique identifier used to fetch its details.", "type": "str", "default": "dropbox"}}}
{"name": "get_by_category", "description": "Fetch a list of plants by their category from the house-plants API.", "parameters": {"category": {"description": "The category of plants to fetch. Defaults to 'flower'.", "type": "str", "default": "flower"}}}
{"name": "search_philosopher_by_name", "description": "Searches for a philosopher by their name using the specified API key and returns the result.", "parameters": {"name": {"description": "The name of the philosopher to search for. Defaults to 'Friedrich Nietzsche'.", "type": "str", "default": "Friedrich Nietzsche"}}}
{"name": "cities_search", "description": "Search for cities based on various criteria and return a list of matching cities.", "parameters": {"q": {"description": "The query string to search for cities by name.", "type": "str", "default": "kan"}, "page": {"description": "The page number of the search results.", "type": "int, optional", "default": ""}, "country_code": {"description": "The country code to filter the search results.", "type": "str, optional", "default": ""}, "sortorder": {"description": "The order in which to sort the search results.", "type": "str, optional", "default": ""}, "sortby": {"description": "The attribute to sort the search results by.", "type": "str, optional", "default": ""}, "country_name": {"description": "The name of the country to filter the search results.", "type": "str, optional", "default": ""}, "country_id": {"description": "The ID of the country to filter the search results.", "type": "int, optional", "default": ""}, "limit": {"description": "The maximum number of search results to return.", "type": "int, optional", "default": ""}, "state_code": {"description": "The state code to filter the search results.", "type": "str, optional", "default": ""}, "state_id": {"description": "The ID of the state to filter the search results.", "type": "int, optional", "default": ""}, "state_name": {"description": "The name of the state to filter the search results.", "type": "str, optional", "default": ""}}}
{"name": "vin_decoder_standard", "description": "Decodes the given Vehicle Identification Number (VIN) using the VIN Decoder API.", "parameters": {"vin": {"description": "The Vehicle Identification Number to decode. It must be 17 characters long.", "type": "str", "default": "5YJ3E1EA6PF384836"}}}
{"name": "links_finder", "description": "Fetches relevant links based on a given query using the ExplorArc's Link Finder API.", "parameters": {"query": {"description": "The search query to find relevant links. Defaults to 'roadmap'.", "type": "str", "default": "roadmap"}}}
{"name": "artist_discography_overview", "description": "Fetches the discography overview of an artist from the Spotify API using RapidAPI.", "parameters": {"is_id": {"description": "The ID of the artist for which the discography overview is to be retrieved.", "type": "str", "default": "2w9zwq3AktTeYYMuhMjju8"}}}
{"name": "new_releases", "description": "Retrieves new music releases from Spotify based on the given country code.", "parameters": {"country": {"description": "The country code to fetch new releases for. Example values include 'US', 'CA', 'SE', 'IN', 'UK'.", "type": "str", "default": "us"}}}
{"name": "all_songs_from_artist", "description": "Retrieves all songs by the specified artist using the Toolbench RapidAPI service.", "parameters": {"artist": {"description": "The name of the artist whose songs are to be retrieved.", "type": "str", "default": "Halsey"}}}
{"name": "review", "description": "Fetches reviews for a given recipe from the Worldwide Recipes API.", "parameters": {"recipe_id": {"description": "The unique identifier of the recipe.", "type": "str", "default": "8282fe1d-1222-4da0-9d12-cfb97f50944e"}, "offset": {"description": "The offset for pagination of reviews. Defaults to None.", "type": "int, optional", "default": ""}}}
{"name": "more_from_author", "description": "Fetches more recipes from a specified author using the Worldwide Recipes API.", "parameters": {"profile_display_name": {"description": "The display name of the author's profile to retrieve recipes from.", "type": "str", "default": "Gonna Want Seconds"}, "canonical_term": {"description": "The search term or keyword related to the author's recipes.", "type": "str", "default": "Rachael-Ray_s-Southwestern-Chili-Con-Queso-Pasta-Bake-1178051"}}}
{"name": "food_api", "description": "Fetches food information based on the given name.", "parameters": {"name": {"description": "The name of the food item for which information is being retrieved.", "type": "str", "default": "Jabłko"}, "lang": {"description": "The language code for the search query. Defaults to 'pl'. Supported languages are \"en\", \"ru\", \"pl\", \"bg\", \"de\", \"es\", \"ua\", and \"by\".", "type": "str, optional", "default": "pl"}}}
{"name": "stock_get_financials", "description": "Fetches financial information for a given stock.", "parameters": {"is_id": {"description": "The identifier of the stock. Use the market/auto-complete API to get the correct values.", "type": "str", "default": "aapl:us"}}}
{"name": "recommendations", "description": "Fetches analyst recommendations for a given stock symbol, optionally filtered by exchange and country.", "parameters": {"symbol": {"description": "The stock symbol to get recommendations for.", "type": "str", "default": ""}, "exchange": {"description": "Filter recommendations by exchange name or mic code.", "type": "str, optional", "default": ""}, "country": {"description": "Filter recommendations by country name or alpha code.", "type": "str, optional", "default": ""}}}
{"name": "filter_prep_time_in_minutes", "description": "Fetches keto recipes from the RapidAPI that fall within the specified preparation time range.", "parameters": {"prep_time_in_minutes_gt": {"description": "Minimum preparation time in minutes. Only recipes with a preparation time greater than this value will be included.", "type": "int", "default": "10"}, "prep_time_in_minutes_lt": {"description": "Maximum preparation time in minutes. Only recipes with a preparation time less than this value will be included.", "type": "int", "default": "30"}}}
{"name": "v1_nutrition", "description": "Fetches the nutrition information for a given food query using the API Ninjas Nutrition API.", "parameters": {"query": {"description": "The food query for which to extract nutrition information (e.g., \"bacon and 3 eggs\").", "type": "str", "default": "1lb brisket with fries"}}}
{"name": "search_by_title", "description": "Search for Movies or TV Shows by title, with optional filters for year, media type, and limit on the number of results.", "parameters": {"s": {"description": "The title of the Movie or TV Show to search for.", "type": "str", "default": "jaws"}, "l": {"description": "The maximum number of items to return. Accepts values from 1 to 100. Defaults to None.", "type": "int, optional", "default": ""}, "y": {"description": "The year to filter the search results (format YYYY). This will also include movies from the previous and next year. Defaults to None.", "type": "int, optional", "default": ""}, "m": {"description": "Filter by media type, either 'movie' or 'tv show'. Leave empty for both. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "fresh_potential_gems", "description": "Fetches a list of recently added cryptocurrency coins from the Crypto Gem Finder API.", "parameters": {"limit": {"description": "The maximum number of recently added coins to fetch. Defaults to '10'.", "type": "str, optional", "default": "10"}, "page": {"description": "The page number to fetch results from. Defaults to '1'.", "type": "str, optional", "default": "1"}}}
{"name": "product_fulfillment", "description": "Fetches product fulfillment information from Target's API based on provided parameters.", "parameters": {"tcin": {"description": "Target product ID.", "type": "str", "default": "51952757"}, "accept": {"description": "Content types that are acceptable for the response (default is 'application/json').", "type": "str, optional", "default": "application/json"}, "cache_control": {"description": "Cache control settings (default is 'no-cache').", "type": "str, optional", "default": "no-cache"}, "authority": {"description": "Authority hosting the API (default is 'redsky.target.com').", "type": "str, optional", "default": "redsky.target.com"}, "accept_language": {"description": "List of acceptable languages for the response (default is 'en-US,en;q=0.9').", "type": "str, optional", "default": "en-US,en;q=0.9"}, "zip": {"description": "The zipcode of the user's search location (default is '94611').", "type": "str, optional", "default": "94611"}, "state": {"description": "State code of the user's location (default is 'CA').", "type": "str, optional", "default": "CA"}, "longitude": {"description": "User's longitude information (default is '-122.200').", "type": "str, optional", "default": "-122.200"}, "store_id": {"description": "The ID of the Target store from which the fulfillment information is being retrieved (default is '3330').", "type": "str, optional", "default": "3330"}, "latitude": {"description": "User's latitude information (default is '37.820').", "type": "str, optional", "default": "37.820"}}}
{"name": "tax_rate", "description": "Retrieve the tax rate for a given zip code using the Toolbench RapidAPI service.", "parameters": {"zipcode": {"description": "The zip code for which to retrieve the tax rate.", "type": "str", "default": "90210"}}}
{"name": "fetch_manga", "description": "Fetch a list of manga from the Mangaverse API based on specified page number and genres.", "parameters": {"page": {"description": "The page number to fetch, default is '1'.", "type": "str", "default": "1"}, "genres": {"description": "A comma-separated string of genres to filter manga by, default is 'Harem,Fantasy'.", "type": "str", "default": "Harem,Fantasy"}}}
{"name": "generate_wallet", "description": "Generate a new cryptocurrency wallet for a specified blockchain.", "parameters": {"chain": {"description": "The blockchain for which to generate the wallet. Supported values are:", "type": "str, optional", "default": ""}}}
{"name": "income_statement", "description": "Fetches the income statement for a specified company using the given RapidAPI key.", "parameters": {"ticker": {"description": "The stock ticker symbol of the company. Defaults to 'AAPL'.", "type": "str", "default": "AAPL"}}}
{"name": "v1_celebrity", "description": "Fetches information about celebrities using the API Ninjas Celebrity API.", "parameters": {"name": {"description": "Name of the celebrity you wish to search for. This field is case-insensitive. Default is 'Michael Jordan'.", "type": "str, optional", "default": "Michael Jordan"}, "min_height": {"description": "Minimum height of celebrities in meters (e.g. '1.65'). Default is None.", "type": "str, optional", "default": ""}, "min_net_worth": {"description": "Minimum net worth of celebrities. Default is None.", "type": "int, optional", "default": ""}, "nationality": {"description": "Nationality of celebrities, specified as an ISO 3166 Alpha-2 country code (e.g. 'US'). Default is None.", "type": "str, optional", "default": ""}, "max_net_worth": {"description": "Maximum net worth of celebrities. Default is None.", "type": "int, optional", "default": ""}, "max_height": {"description": "Maximum height of celebrities in meters (e.g. '1.80'). Default is None.", "type": "str, optional", "default": ""}}}
{"name": "solat_time", "description": "Fetches and returns the prayer times for a given zone using the Waktu Solat API.", "parameters": {"code": {"description": "The zone code to get the prayer times for. This code can be obtained from the /solat/list endpoint of the API.", "type": "str", "default": "SWK07"}}}
{"name": "jokes", "description": "Fetches jokes from the Jokester API, optionally filtered by category.", "parameters": {"category": {"description": "Category to filter jokes by. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "title_cast_crew", "description": "Fetches and returns the cast and crew information of a given title from the Watchmode API.", "parameters": {"is_id": {"description": "The ID of the title. This can be the Watchmode ID, IMDB ID, or a TMDB type and ID combination.", "type": "str", "default": "3173903"}}}
{"name": "keto_recipes_by_difficulty", "description": "Fetches all keto recipes filtered by difficulty level.", "parameters": {"difficulty": {"description": "The difficulty level of the recipes to retrieve (Easy, Medium, or Difficult).", "type": "str", "default": "Medium"}}}
{"name": "event", "description": "Fetches the details of a single event using its ID from the Spectation Sports Events API.", "parameters": {"is_id": {"description": "The unique identifier for the event to be fetched.", "type": "int", "default": "52"}}}
{"name": "fixtures_by_series", "description": "Fetches fixtures and results for a given cricket series using the RapidAPI service.", "parameters": {"series_id": {"description": "The unique identifier for the cricket series.", "type": "int", "default": "606"}}}
{"name": "get_coupons_endpoint", "description": "Fetches daily AI-analyzed betting coupons with a high win rate from the specified endpoint.", "parameters": {"content_type": {"description": "The content type for the request header. Defaults to 'application/json'.", "type": "str", "default": "application/json"}, "connection": {"description": "The connection type for the request header. Defaults to 'keep-alive'.", "type": "str", "default": "keep-alive"}, "sort": {"description": "The sorting order for the betting coupons; use '-id' for ascending order. Defaults to '-id'.", "type": "str", "default": "-id"}}}
{"name": "menudetails", "description": "Fetch menu details using a given menu ID and language preference.", "parameters": {"is_id": {"description": "The ID of the menu whose details are to be fetched.", "type": "str", "default": "5a76c927bb5d660001e09731"}, "lang": {"description": "The language code in which the menu details should be returned.", "type": "str", "default": "zh-hans"}}}
{"name": "countiessearchinboundingbox", "description": "Fetch county boundaries within a specified bounding box in GeoJSON format.", "parameters": {"northeast": {"description": "Coordinates of the northeast corner of the bounding box (e.g., '40.81,-73.41').", "type": "str", "default": ""}, "southwest": {"description": "Coordinates of the southwest corner of the bounding box (e.g., '40.62,-74.73').", "type": "str", "default": ""}, "intersect": {"description": "Whether to include areas that intersect with the bounding box. Default is None.", "type": "bool, optional", "default": true}}}
{"name": "random_google", "description": "Returns a random place of a specified type within a given radius around the provided latitude and longitude.", "parameters": {"lat": {"description": "The latitude of the location around which to search for places.", "type": "int", "default": "49.2803703"}, "lng": {"description": "The longitude of the location around which to search for places.", "type": "int", "default": "-123.0413988"}, "type": {"description": "The type of place to search for. Default is 'cafe'.", "type": "str, optional", "default": "cafe"}, "radius": {"description": "The search radius in meters. Default is 500.", "type": "int, optional", "default": "500"}}}
{"name": "get_invite_data", "description": "Fetch detailed data for a given Discord invite code using the RapidAPI service.", "parameters": {"invite": {"description": "The Discord invite code to fetch data for.", "type": "str", "default": "minecraft"}}}
{"name": "get_coordinates", "description": "This function sends a GET request to the \"/geocode\" endpoint to obtain the geographical coordinates of a given address using the RapidAPI service.", "parameters": {"address": {"description": "The address or place to geocode. Defaults to '1600 Amphitheatre Parkway, Mountain View, CA'.", "type": "str", "default": "1600 Amphitheatre Parkway, Mountain View, CA"}}}
{"name": "get_product_s_offers", "description": "Fetches the offers for a given product from the Amazon Data Scraper API.", "parameters": {"productid": {"description": "The unique identifier for the product whose offers you want to retrieve.", "type": "str", "default": "B00K3OM3PS"}}}
{"name": "roll", "description": "Rolls a set of dice using an external API and returns the results.", "parameters": {"sides": {"description": "The number of sides on the die.", "type": "int", "default": "6"}, "count": {"description": "The number of times to roll each die. Defaults to 1.", "type": "int, optional", "default": "1"}, "advantage": {"description": "If set to True, rolls each die twice and takes the higher result. Defaults to None.", "type": "bool, optional", "default": "true"}, "modifier": {"description": "A modifier to apply to the total of each die roll. Defaults to 5.", "type": "int, optional", "default": "5"}}}
{"name": "og", "description": "Fetches all the OpenGraph and Meta tags from a given website URL using the provided API key.", "parameters": {"url": {"description": "The website URL to fetch the OpenGraph and Meta tags from. Defaults to 'https://protomol.explorarc.com/'.", "type": "str", "default": "https://protomol.explorarc.com/"}}}
{"name": "house_prices_estimate", "description": "Estimates house prices based on given criteria and returns a list of estimated prices.", "parameters": {"area": {"description": "The area for which to estimate house prices, as defined by the auto-complete API.", "type": "str", "default": "Greenwich Close, Crawley RH11"}, "property_type": {"description": "The type of property. Options are 'detached', 'flat', 'terraced', 'semi_detached'.", "type": "str, optional", "default": ""}, "page_number": {"description": "The page index for pagination. Default is 1.", "type": "int, optional", "default": "1"}, "order_by": {"description": "The attribute by which to order the results. Options are 'price_paid', 'last_sold', 'address', 'estimated_value'. Default is 'address'.", "type": "str, optional", "default": "address"}, "page_size": {"description": "The number of items per response. Maximum is 40. Default is 40.", "type": "int, optional", "default": "40"}, "ordering": {"description": "The order direction of the results. Options are 'ascending', 'descending'. Default is 'descending'.", "type": "str, optional", "default": "descending"}, "identifier": {"description": "A specific identifier from the auto-complete API to refine the search.", "type": "str, optional", "default": "west-sussex/crawley/greenwich-close"}}}
{"name": "getscreen", "description": "Fetches a screenshot of the screen in the current session for the given phone ID.", "parameters": {"phone_id": {"description": "The unique identifier of the phone whose screen session is to be captured.", "type": "str", "default": ""}}}
{"name": "contacts", "description": "Fetches the contacts list from a specified WhatsApp instance using the Maytapi API.", "parameters": {"phone_id": {"description": "The unique identifier for the phone instance in the Maytapi WhatsApp service.", "type": "str", "default": ""}}}
{"name": "redeploy", "description": "Redeploys a Docker instance of the specified phone. This function can be used to reboot the instance if the phone is experiencing unexpected problems.", "parameters": {"phone_id": {"description": "The unique identifier of the phone whose Docker instance is to be redeployed.", "type": "str", "default": ""}}}
{"name": "historical_rates", "description": "Gets historical currency exchange rates for a given date and base currency.", "parameters": {"date": {"description": "The date for which to request the exchange rates, formatted as 'YYYY-MM-DD'. Defaults to '2020-01-01'.", "type": "str", "default": "2020-01-01"}, "base": {"description": "The base currency code for the exchange rates. Defaults to 'eur'.", "type": "str", "default": "eur"}}}
{"name": "top_ranking", "description": "Fetches the top NFT collections from OpenSea based on specified criteria.", "parameters": {"sortby": {"description": "Criteria to sort the NFT collections. Default is 'ONE_HOUR_VOLUME'.", "type": "str", "default": "ONE_HOUR_VOLUME"}, "time": {"description": "Time period for ranking the collections. Default is 'ONE_HOUR'.", "type": "str", "default": "ONE_HOUR"}, "chain": {"description": "Blockchain chain to filter the collections. Default is None.", "type": "str, optional", "default": ""}, "count": {"description": "Number of collections to retrieve. Default is 100.", "type": "int", "default": "100"}}}
{"name": "v1_reversegeocoding", "description": "This function performs reverse geocoding using the API Ninjas service to obtain location information based on provided latitude and longitude coordinates.", "parameters": {"lat": {"description": "The latitude coordinate to be used for reverse geocoding.", "type": "int", "default": "47.6062"}, "lon": {"description": "The longitude coordinate to be used for reverse geocoding.", "type": "int", "default": "-122.3321"}}}
{"name": "amenities", "description": "Retrieves amenities IDs and descriptions from the Airbnb Listings API, returning up to 50 results starting from the specified offset.", "parameters": {"offset": {"description": "The index to start retrieving the amenities from.", "type": "int", "default": "0"}}}
{"name": "get_trip_plan", "description": "Generates a trip plan based on the number of days and destination provided.", "parameters": {"days": {"description": "The number of days for the trip.", "type": "int", "default": "3"}, "destination": {"description": "The destination for the trip.", "type": "str", "default": "London,UK"}}}
{"name": "airports_nonstop_routes_for_an_airport", "description": "Fetches a list of nonstop routes for a specified airport using the RapidAPI service.", "parameters": {"airportiatacode": {"description": "The IATA code for the airport.", "type": "str", "default": ""}}}
{"name": "cities", "description": "List and search over 75,000 world cities in 20 languages.", "parameters": {"limit": {"description": "Limit results to N results, default is 250.", "type": "int", "default": "250"}, "state_hasc": {"description": "Filter on the state's HASC code. List available at /v1/state.", "type": "str", "default": ""}, "timezone": {"description": "Filter results based on the timezone name. List available at /v1/timezone.", "type": "str", "default": ""}, "geonameid": {"description": "Filter results based on geonameid.", "type": "str", "default": ""}, "prefix": {"description": "Search cities by names starting with the given prefix. The default prefix is 'san fr'.", "type": "str", "default": "san fr"}, "timezone_offset": {"description": "Filter results based on the timezone offset in hours.", "type": "int", "default": ""}, "sort": {"description": "Sort results based on the specified field (e.g., population, state_code, name, timezone, state_hasc, iso_a2).", "type": "str", "default": ""}, "lang": {"description": "Language selection in ISO 639-2 letter code. Overrides Accept-Language header. Defaults to 'en'.", "type": "str", "default": "en"}, "iso_a2": {"description": "Filter results based on the 2-letter country code. Default is 'us'.", "type": "str", "default": "us"}, "name": {"description": "Search for city names that contain the specified name.", "type": "str", "default": ""}, "state_code": {"description": "Filter results based on the state's ISO-3166-2 letter code. Default is 'US-CA'.", "type": "str", "default": "US-CA"}, "fields": {"description": "Select fields to return in the result (e.g., iso_a2, state_code, timezone, timezone_offset, state_hasc, geonameid). Default fields are 'iso_a2,state_code,state_hasc,timezone,timezone_offset'.", "type": "str", "default": "iso_a2,state_code,state_hasc,timezone,timezone_offset"}, "order": {"description": "Specify the sort order, either ascending ('asc') or descending ('desc').", "type": "str", "default": ""}}}
{"name": "spac_price_targets", "description": "Fetches the latest SPAC (Special Purpose Acquisition Company) price targets from analysts, filtered by a specific SPAC symbol.", "parameters": {"symbol": {"description": "The SPAC symbol to filter the price targets by. Defaults to 'SOFI'.", "type": "str", "default": "SOFI"}}}
{"name": "coins_get_fullsize_chart", "description": "Fetches the full-size chart data for a specific cryptocurrency pair.", "parameters": {"pair_id": {"description": "The identifier of the cryptocurrency pair.", "type": "int", "default": "33"}, "pair_interval": {"description": "The interval for the chart data in seconds.", "type": "int, optional", "default": "900"}, "lang_id": {"description": "The language ID for the data. Default is 1.", "type": "int, optional", "default": "1"}, "time_utc_offset": {"description": "The time offset in UTC seconds. For example, UTC+8 corresponds to 28800 seconds. Default is 28800.", "type": "int, optional", "default": "28800"}}}
{"name": "market_auto_complete", "description": "Fetches market auto-complete suggestions based on a query term or phrase.", "parameters": {"query": {"description": "The query term or phrase for which to get auto-complete suggestions.", "type": "str", "default": "apple"}}}
{"name": "news_v2_list_by_symbol", "description": "Fetches the latest news articles associated with a given stock symbol.", "parameters": {"symbol": {"description": "The stock symbol for which to retrieve news. This is typically obtained from the auto-complete or other relevant endpoints.", "type": "str", "default": "AAPL"}, "page": {"description": "The page number for paginated results. Defaults to 1.", "type": "int, optional", "default": "1"}, "pagesize": {"description": "The number of news articles to return per page. Defaults to 30.", "type": "int, optional", "default": "30"}}}
{"name": "business_search", "description": "Search for Yelp businesses by keyword and location, with options for pagination, price range, domain, and sorting order.", "parameters": {"location": {"description": "The location to search for businesses (e.g., \"New York, NY, USA\").", "type": "str", "default": "San Francisco, CA, USA"}, "query": {"description": "The search keyword or query (e.g., \"Plumbing\", \"Chinese restaurants\").", "type": "str", "default": "Plumbers"}, "start": {"description": "The number of results to skip, mainly used for pagination. Default is 0.", "type": "int, optional", "default": "0"}, "price_range": {"description": "Specific price ranges to search for, specified as a comma-delimited list (e.g., \"$,$$\", \"$$\")", "type": "str, optional", "default": ""}, "yelp_domain": {"description": "The Yelp domain to use for the search. Default is 'yelp.com'. Supported domains include 'yelp.com', 'yelp.com.au', 'yelp.co.nz', and others.", "type": "str, optional", "default": "yelp.com"}, "sort_by": {"description": "The order to sort the search results by. Default is 'RECOMMENDED'. Allowed values are 'RECOMMENDED', 'HIGHEST_RATED', 'REVIEW_COUNT'.", "type": "str, optional", "default": ""}}}
{"name": "check_domain_info", "description": "Fetches and returns information about a given domain using the RapidAPI Domain Info service.", "parameters": {"domain": {"description": "The domain name for which information is to be retrieved.", "type": "str", "default": ""}}}
{"name": "get_subcontrol_by_control", "description": "Fetches all subcontrols or CCIs associated with a specified control.", "parameters": {"control": {"description": "The identifier of the control (e.g., \"AC-1\") for which subcontrols or CCIs are to be fetched.", "type": "str", "default": "AC-1"}}}
{"name": "country_specific_country", "description": "Fetches details for a specific country in Africa using the Africa API.", "parameters": {"country_name": {"description": "The name of the country to fetch details for.", "type": "str", "default": "kenya"}}}
{"name": "gettodaysforecast", "description": "Fetches today's surf forecast for a given spot using the Simple Surf Forecast API.", "parameters": {"spotid": {"description": "The unique identifier for the surf spot.", "type": "str", "default": ""}}}
{"name": "teamdetails", "description": "Retrieves the details of a specific basketball team using the given team ID.", "parameters": {"is_id": {"description": "The ID of the team for which details are to be retrieved.", "type": "int", "default": 3436}}}
{"name": "get_from_1337_x", "description": "Fetches torrent data for a given search topic from the 1337x website using the RapidAPI service.", "parameters": {"searchtopic": {"description": "The topic or keywords to search for torrents on 1337x.", "type": "str", "default": "cars"}}}
{"name": "get_ip_information", "description": "Fetches information about a given IP address using the Toolbench API.", "parameters": {"query": {"description": "The IP address to query information about.", "type": "str", "default": "188.68.223.26"}, "lang": {"description": "The language of the response. Default is 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "top_grossing_games", "description": "Fetches the top-grossing games chart from the Google Play Store, with support for filtering by category, language, and region.", "parameters": {"limit": {"description": "The maximum number of results to return. Allowed values are between 1 and 200. Default is 50. Note that requests with a limit value between 101-200 will be charged double (2 requests).", "type": "int, optional", "default": "50"}, "language": {"description": "The language to use, specified as a 2-letter language code according to ISO 639-1. Default is 'en'.", "type": "str, optional", "default": "en"}, "category": {"description": "The specific Google Play category to filter the chart by (e.g., 'GAME_RACING'). Default is None.", "type": "str, optional", "default": ""}, "region": {"description": "The 2-letter country code according to ISO 3166-1 to specify the region. Default is 'us'.", "type": "str, optional", "default": "us"}}}
{"name": "superfund_search", "description": "Search for Superfund sites based on provided latitude, longitude, and radius.", "parameters": {"radius": {"description": "The radius within which to search for Superfund sites.", "type": "str", "default": "2"}, "lat": {"description": "The latitude coordinate for the center of the search.", "type": "str", "default": "37.391935"}, "lng": {"description": "The longitude coordinate for the center of the search.", "type": "str", "default": "-122.079515"}}}
{"name": "query_joke_using_id", "description": "Fetches an anime joke using the provided joke ID from the RapidAPI service.", "parameters": {"is_id": {"description": "The ID of the joke to be fetched.", "type": "int", "default": "4"}}}
{"name": "get_jokes_by_specific_category", "description": "Fetches a collection of jokes from a specific category with pagination and sorting options.", "parameters": {"limit": {"description": "Number of jokes to retrieve per page.", "type": "int", "default": 100}, "page": {"description": "Page number to retrieve.", "type": "int", "default": 1}, "category": {"description": "The category of jokes to fetch.", "type": "str", "default": "Women"}, "sortby": {"description": "Sorting criteria in the format `field:order`, e.g., `score:desc` for descending order by score.", "type": "str, optional", "default": "score:desc"}}}
{"name": "getprojectsbytopic", "description": "Fetches artificial intelligence projects based on the specified topic and page number.", "parameters": {"topic": {"description": "The topic to filter AI projects.", "type": "str", "default": "machine-learning"}, "page": {"description": "The page number of the results to fetch.", "type": "int", "default": "1"}}}
{"name": "team_recent_form", "description": "Fetches and returns the recent form of a sports team using the given team ID.", "parameters": {"team_id": {"description": "The ID of the team for which the recent form is to be retrieved.", "type": "int", "default": "2817"}}}
{"name": "runner_up", "description": "Fetches the runner-up team data for the given identifying parameter from the NCAA Final Four API.", "parameters": {"identifier": {"description": "The identifier (e.g., year) to fetch the runner-up team data for.", "type": "str", "default": "1959"}}}
{"name": "getallcountry", "description": "Fetches the list of country names via an API based on the provided query parameters.", "parameters": {"limit": {"description": "The maximum number of items per page. Default is 500.", "type": "int, optional", "default": "500"}, "page": {"description": "The page number to retrieve. Default is 1.", "type": "int, optional", "default": "1"}, "order": {"description": "The order in which to sort results. Accepts 'ASC' for ascending or 'DESC' for descending. Default is 'ASC'.", "type": "str, optional", "default": "ASC"}}}
{"name": "youtube_topviews_artist_nationality", "description": "Fetches the top viewed music video by artists of the given nationality from YouTube.", "parameters": {"nationality": {"description": "The nationality of the artist.", "type": "str", "default": "vietnamese"}}}
{"name": "artist_overview", "description": "Fetches the overview of an artist from the Spotify API using RapidAPI.", "parameters": {"is_id": {"description": "The unique identifier of the artist to retrieve information for.", "type": "str", "default": "2w9zwq3AktTeYYMuhMjju8"}}}
{"name": "song_download", "description": "Downloads a song from the provided SoundCloud URL using the specified RapidAPI key.", "parameters": {"track_url": {"description": "The URL of the SoundCloud track to be downloaded.", "type": "str", "default": "https://soundcloud.com/user-977421934/the-phoenix"}}}
{"name": "get_movies_by_director", "description": "Gets a list of movies by a specified director using the IMDb API.", "parameters": {"movie_director": {"description": "The name of the director. If not provided, an empty query will be sent.", "type": "str, optional", "default": ""}}}
{"name": "rapidapigethourlyforecastbylocationname", "description": "Fetches the hourly weather forecast for a given location using the RapidAPI service.", "parameters": {"locationname": {"description": "The name of the location for which to retrieve the hourly weather forecast.", "type": "str", "default": "Berlin"}}}
{"name": "rapidapigetforecasthourlybycoordinates", "description": "Gets hourly weather forecast information for given geographical coordinates using the RapidAPI service.", "parameters": {"latitude": {"description": "The latitude of the geographical location.", "type": "int", "default": 46.95828}, "longitude": {"description": "The longitude of the geographical location.", "type": "int", "default": 10.87152}}}
{"name": "get_5_day_3_hour_forecast_data", "description": "Fetches the 5-day weather forecast data with 3-hour intervals for a specified location.", "parameters": {"q": {"description": "The location query in the format \"{city name},{country code}\". The city name and country code should be divided by a comma, and the country code should follow ISO 3166 standards. Defaults to 'dallas,us'.", "type": "str", "default": "dallas,us"}}}
{"name": "hourly_forecast_48_hours", "description": "Fetches a 48-hour weather forecast for the specified latitude and longitude coordinates.", "parameters": {"latitude": {"description": "The latitude coordinate for the forecast location.", "type": "str", "default": "-22.95"}, "longitude": {"description": "The longitude coordinate for the forecast location.", "type": "str", "default": "-43.21"}}}
{"name": "maxindex", "description": "Fetches the index of the highest value over a specified period (MAXINDEX) using the Twelve Data API.", "parameters": {"interval": {"description": "Interval between two consecutive points in the time series. Supported values: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`.", "type": "str", "default": "1min"}, "symbol": {"description": "Instrument symbol, which can be any equity, index, ETF, forex, or cryptocurrency (e.g., `AAPL`, `EUR/USD`, `ETH/BTC`).", "type": "str", "default": "AAPL"}, "time_period": {"description": "The number of data points to consider. Defaults to 9.", "type": "int, optional", "default": 9}, "series_type": {"description": "Type of series data to retrieve. Supported values: `open`, `high`, `low`, `close`. Defaults to 'close'.", "type": "str, optional", "default": "close"}, "outputsize": {"description": "The amount of data to retrieve. Default is 30 if no date parameters are set, otherwise it is set to maximum.", "type": "int, optional", "default": 30}, "format": {"description": "The format to receive the data in. Supported values: `CSV`, `JSON`. Defaults to 'json'.", "type": "str, optional", "default": "json"}}}
{"name": "news_list_top", "description": "Fetches the top news from all supported areas.", "parameters": {"symbol": {"description": "The symbol of the quote, market, etc., such as 'IMRN'. Only one is allowed at a time. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "market_get_price_chart", "description": "Fetches data to draw a price chart based on the given interval and market ID.", "parameters": {"interval": {"description": "The time interval for the price chart. Options include: 'd1', 'd3', 'ytd', 'm1', 'm3', 'm6', 'y1', 'y5'.", "type": "str", "default": "y1"}, "is_id": {"description": "The ID value obtained from the '/market/auto-complete' endpoint.", "type": "str", "default": "inmex:ind"}}}
{"name": "recitations_by_chapter_number", "description": "Fetches a list of ayah recitations for a specific Surah (chapter) based on the given chapter number and recitation ID.", "parameters": {"chapter_number": {"description": "The chapter (Surah) number for which to fetch the ayah recitations.", "type": "int", "default": ""}, "recitation_id": {"description": "The recitation ID to specify the reciter.", "type": "int", "default": ""}}}
{"name": "find_favicon", "description": "Find the favicon for a given URL using the RapidAPI favicon finder service.", "parameters": {"url": {"description": "The URL for which to find the favicon.", "type": "str", "default": "https://www.google.com/"}}}
{"name": "get_gas_price", "description": "Retrieves the best estimate for the gas price to use in a transaction on a specified blockchain network.", "parameters": {"chainid": {"description": "The ID of the blockchain network to retrieve the gas price estimate for.", "type": "int", "default": "1"}}}
{"name": "get_live_streams_livestreamid", "description": "Retrieves live stream details using the given livestream ID from the RapidAPI service.", "parameters": {"livestreamid": {"description": "The ID of the live stream to fetch details for.", "type": "str", "default": ""}}}
{"name": "capture_screenshot", "description": "Captures a screenshot of the specified website and returns the observation JSON or text from the API response.", "parameters": {"url": {"description": "The URL of the website to capture a screenshot of.", "type": "str", "default": "https://apple.com"}}}
{"name": "detection_of_plates_and_faces", "description": "Detects and blurs license plates and faces in a given image to protect personal data.", "parameters": {"image": {"description": "The URL or path to the image file where license plates and faces detection and blurring need to be applied.", "type": "str", "default": "Base64 data of image"}}}
{"name": "business_reviews", "description": "Fetches and paginates business reviews by Business ID.", "parameters": {"business_id": {"description": "Unique Business ID. Accepts google_id, business_id, and google_place_id. Examples of valid ids: `0x880fd393d427a591:0x8cba02d713a995ed`, `ChIJkaUn1JPTD4gR7ZWpE9cCuow`.", "type": "str", "default": "0x89c259b5a9bd152b:0x31453e62a3be9f76"}, "language": {"description": "Language code for the results. For a list of supported language codes see https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes. Default is 'en'.", "type": "str, optional", "default": "en"}, "fields": {"description": "A comma-separated list of review fields to include in the response. Default is None, which returns all fields.", "type": "str, optional", "default": ""}, "sort_by": {"description": "Sort order for the reviews, allowed values are `most_relevant`, `newest`, `highest_ranking`, `lowest_ranking`. Default is 'most_relevant'.", "type": "str, optional", "default": ""}, "region": {"description": "Region or country code to query Google Maps from, see https://en.wikipedia.org/wiki/List_of_ISO_3166-1_alpha-2 (Alpha-2 code). Default is 'us'.", "type": "str, optional", "default": "us"}, "limit": {"description": "Maximum number of business reviews to return (1-150). Default is 5.", "type": "int, optional", "default": "5"}, "offset": {"description": "Number of business reviews to skip for pagination. Default is None.", "type": "int, optional", "default": ""}, "query": {"description": "Filter reviews matching a text query. Default is None.", "type": "str, optional", "default": ""}}}
{"name": "expiry_date_enquiry", "description": "Queries the expiry date of a vehicle's license registration using the given registration number.", "parameters": {"rego": {"description": "The vehicle's registration number.", "type": "str", "default": "1HNT923"}}}
{"name": "tourism_allcountries", "description": "This function retrieves tourism locations and categories for a given country in Africa using the Toolbench RapidAPI.", "parameters": {"country_name": {"description": "The name of the country in Africa for which to retrieve tourism information.", "type": "str", "default": "all"}}}
{"name": "language_by_id", "description": "Fetch the popular programming language by its ID using the Toolbench RapidAPI service.", "parameters": {"is_id": {"description": "The ID of the programming language to fetch.", "type": "int", "default": ""}}}
{"name": "top_news", "description": "Fetch the top latest news articles from CoinDesk.", "parameters": {"num": {"description": "The number of news articles to fetch. By default, it is set to 5.", "type": "int, optional", "default": "5"}}}
{"name": "taobao_search_by_keyword", "description": "Search for products on Taobao using a specified keyword and return the search results.", "parameters": {"page": {"description": "The page number to retrieve from the search results.", "type": "int", "default": "1"}, "keyword": {"description": "The search keyword to use for querying products.", "type": "str", "default": "海久水瓶"}}}
{"name": "ufc_287_pereira_vs_adesanya_2_april_08_2023", "description": "Fetches the details of UFC 287: Pereira vs. Adesanya 2 held on April 08, 2023, including a range of information about each fighter.", "parameters": {"limit": {"description": "The number of results to retrieve. Defaults to None.", "type": "int, optional", "default": ""}, "offset": {"description": "The number of results to skip. Defaults to None.", "type": "int, optional", "default": ""}}}
{"name": "downloadminecraftjar", "description": "Downloads the Minecraft .jar file for a specified version.", "parameters": {"minecraftversion": {"description": "The version of Minecraft for which to download the .jar file.", "type": "str", "default": ""}}}
{"name": "get_types", "description": "Fetches available types for a specified period from the horoscopes API.", "parameters": {"period": {"description": "The time period for which to retrieve the available types (e.g., daily, weekly, monthly).", "type": "str", "default": ""}}}
{"name": "get_movie_id_by_title", "description": "Retrieves the ID of a movie or actor by its title using the Cinema API.", "parameters": {"category": {"description": "Category of the search, either 'movies' or 'actors'.", "type": "str", "default": "movies"}, "title": {"description": "The title of the movie or the name of the actor to search for.", "type": "str", "default": "Titanic"}}}
{"name": "search_user", "description": "Search for Instagram users based on a given keyword using the RapidAPI service.", "parameters": {"keyword": {"description": "The keyword to search for Instagram users.", "type": "str", "default": "insta"}}}
{"name": "similar_hashtags", "description": "Fetches related hashtags for a given keyword using the Hashtag API.", "parameters": {"keyword": {"description": "The keyword for which related hashtags are to be fetched.", "type": "str", "default": "insta"}}}
{"name": "search_for_a_product", "description": "Searches for a product by name using the RapidAPI service.", "parameters": {"q": {"description": "The product name or search query.", "type": "str", "default": "iphone"}}}
{"name": "advanced_search", "description": "Performs an advanced search for movie news articles using various filters such as sentiment, date range, type of content, and pagination options.", "parameters": {"q": {"description": "The search query term.", "type": "str", "default": "Superman"}, "sentiment": {"description": "Filter by sentiment of the articles. Defaults to 'positive'.", "type": "str, optional", "default": "postive"}, "maxdate": {"description": "The maximum date for filtering articles in 'MM/DD/YYYY' format. Defaults to '05/08/2023'.", "type": "str, optional", "default": "05/08/2023"}, "mindate": {"description": "The minimum date for filtering articles in 'MM/DD/YYYY' format. Defaults to '01/01/2023'.", "type": "str, optional", "default": "01/01/2023"}, "type": {"description": "The type of content to filter by, such as 'Article'. Defaults to 'Article'.", "type": "str, optional", "default": "Article"}, "offset": {"description": "The number of articles to skip (used for pagination). Defaults to 0.", "type": "int, optional", "default": "0"}, "limit": {"description": "The maximum number of articles to return. Defaults to 10.", "type": "int, optional", "default": "10"}}}
{"name": "titles_id", "description": "Fetches movie title details from the Movies Database API using the given IMDb ID.", "parameters": {"is_id": {"description": "The IMDb ID of the movie title (e.g., 'tt0000002').", "type": "str", "default": ""}, "info": {"description": "The type of information to retrieve (default: base-info). Options include 'base_info', 'mini_info', 'image', etc.", "type": "str, optional", "default": ""}}}
{"name": "artist_singles", "description": "Fetches singles of an artist from the Spotify API using the provided artist ID.", "parameters": {"is_id": {"description": "The Spotify artist ID. Default is '2w9zwq3AktTeYYMuhMjju8'.", "type": "str", "default": "2w9zwq3AktTeYYMuhMjju8"}, "offset": {"description": "The index of the first single to return. Default is '0'.", "type": "str", "default": "0"}, "limit": {"description": "The maximum number of singles to return. Default is '20'.", "type": "str", "default": "20"}}}
{"name": "artists_get_summary", "description": "Fetches summary information related to an artist from the Shazam API.", "parameters": {"is_id": {"description": "The value of 'artist->adamid' field returned in various Shazam API endpoints such as /search or /songs/get-details.", "type": "str", "default": "567072"}, "l": {"description": "The language code for the response. Defaults to 'en-US'.", "type": "str, optional", "default": "en-US"}}}
{"name": "get_random_joke_by_category", "description": "Fetches a random joke from a specified category using the World of Jokes API.", "parameters": {"category": {"description": "The category of joke to fetch, based on the categories available in the jokes API.", "type": "str", "default": "Political"}}}
{"name": "mileages", "description": "Fetch mileage data from the car API based on various optional filters and sorting options.", "parameters": {"make_model_id": {"description": "The ID of the make and model.", "type": "str, optional", "default": ""}, "limit": {"description": "The number of results to limit the response to.", "type": "int, optional", "default": ""}, "make_model_trim_id": {"description": "The ID of the make, model, and trim.", "type": "str, optional", "default": ""}, "trim": {"description": "The trim level of the car.", "type": "str, optional", "default": ""}, "json": {"description": "An array of URL encoded JSON conditions for complex queries.", "type": "str, optional", "default": ""}, "range_highway": {"description": "The range of highway mileage.", "type": "str, optional", "default": ""}, "sort": {"description": "The field to sort the results by. Default is 'id'.", "type": "str, optional", "default": "id"}, "direction": {"description": "The direction to sort by ('asc' or 'desc'). Default is 'asc'.", "type": "str, optional", "default": "asc"}, "range_city": {"description": "The range of city mileage.", "type": "str, optional", "default": ""}, "page": {"description": "The page number for paginated results.", "type": "int, optional", "default": ""}, "combined_mpg": {"description": "The combined miles per gallon value.", "type": "str, optional", "default": ""}, "verbose": {"description": "Include make, model and trim information in the results. Default is 'yes'.", "type": "str, optional", "default": "yes"}, "epa_highway_mpg": {"description": "The EPA highway miles per gallon value.", "type": "str, optional", "default": ""}, "epa_city_mpg": {"description": "The EPA city miles per gallon value.", "type": "str, optional", "default": ""}, "model": {"description": "The car model.", "type": "str, optional", "default": ""}, "year": {"description": "The year of the car.", "type": "str, optional", "default": ""}, "make_id": {"description": "The ID of the car make.", "type": "str, optional", "default": ""}, "make": {"description": "The car make.", "type": "str, optional", "default": ""}}}
{"name": "venuedetails", "description": "Fetches detailed information about a specific venue using a given venue ID and language.", "parameters": {"is_id": {"description": "The ID of the venue for which details are to be fetched.", "type": "str", "default": "56c467cb7b0d464811a42017"}, "lang": {"description": "The language code for the details to be retrieved in.", "type": "str", "default": "zh-hans"}}}
{"name": "explore", "description": "Fetches a list of recipes from the Worldwide Recipes API with optional pagination support.", "parameters": {"start": {"description": "The starting point for pagination. Page 1 corresponds to start=0, Page 2 to start=20, and so on.", "type": "int, optional", "default": ""}}}
{"name": "categorytournaments", "description": "Retrieves all handball tournaments by category using the given category ID.", "parameters": {"is_id": {"description": "The category ID for which you want to retrieve all tournaments.", "type": "int", "default": 71}}}
{"name": "series_list_archives", "description": "Fetch archived series from the CricBuzz API based on the specified type and optional parameters for pagination and year.", "parameters": {"type": {"description": "The type of series to fetch. Must be one of the following: 'international', 'league', 'domestic', 'women'.", "type": "str", "default": "international"}, "lastid": {"description": "For pagination purposes. Specify `None` to load the first page or provide the ID of the last item from the previous page.", "type": "int, optional", "default": ""}, "year": {"description": "The year for which the series archives are to be fetched. Defaults to `None`.", "type": "int, optional", "default": ""}}}
{"name": "v4_sports", "description": "Returns a list of available sports and tournaments using the RapidAPI Odds API.", "parameters": {"all": {"description": "When True, includes all available sports. When excluded or False, only shows recently updated (in-season) sports. Default is None.", "type": "bool, optional", "default": "true"}}}
{"name": "getmatchbywinner", "description": "Retrieves all cricket matches won by the specified team from the IPL API.", "parameters": {"winner": {"description": "The name of the team to filter matches by. Defaults to 'Kolkata Knight Riders'.", "type": "str", "default": "Kolkata Knight Riders"}}}
{"name": "get_coin_modifiers", "description": "Fetches the modifiers of a coin's supply and their balance using the CoinRanking API.", "parameters": {"uuid": {"description": "The UUID of the coin for which to request the modifiers.", "type": "str", "default": "Qwsogvtv82FCd"}, "offset": {"description": "Offset for pagination. Default is 0.", "type": "int, optional", "default": "0"}, "limit": {"description": "Limit for pagination. Default is 50. Must be in the range 0-100.", "type": "int, optional", "default": "50"}}}
{"name": "query_for_city_boundary_by_city_name", "description": "Queries the boundary information for a given city name from a specified API.", "parameters": {"name": {"description": "The name of the city for which the boundary information is to be queried.", "type": "str", "default": "toronto"}}}
{"name": "get_train_data_mrt_id_id_get", "description": "Fetch train data using MRT ID from the RapidAPI service.", "parameters": {"is_id": {"description": "The MRT ID to fetch the train data for.", "type": "str", "default": ""}}}
{"name": "get_car_versions", "description": "Get the different versions of a car model using the toolbench RapidAPI.", "parameters": {"model": {"description": "The specific model of the car.", "type": "str", "default": "chiron"}, "maker": {"description": "The manufacturer of the car.", "type": "str", "default": "bugatti"}}}
{"name": "trims", "description": "Fetch car trim details from the RapidAPI endpoint with various filter options.", "parameters": {"make_id": {"description": "Filter results by make ID.", "type": "str, optional", "default": ""}, "limit": {"description": "Limit the number of results returned.", "type": "int, optional", "default": ""}, "direction": {"description": "Order direction of the results, either 'asc' for ascending or 'desc' for descending. Default is 'asc'.", "type": "str, optional", "default": "asc"}, "sort": {"description": "The field to sort results by. Default is 'id'.", "type": "str, optional", "default": "id"}, "year": {"description": "Filter results by year.", "type": "str, optional", "default": ""}, "model": {"description": "Filter results by model.", "type": "str, optional", "default": ""}, "page": {"description": "Specify the page number for paginated results.", "type": "int, optional", "default": ""}, "trim": {"description": "Filter results by trim.", "type": "str, optional", "default": ""}, "make_model_id": {"description": "Filter results by make model ID.", "type": "str, optional", "default": ""}, "verbose": {"description": "If 'yes', includes detailed information such as year, make, model, and trim in the returned data. Default is 'yes'.", "type": "str, optional", "default": "yes"}, "make": {"description": "Filter results by make.", "type": "str, optional", "default": ""}, "json": {"description": "An array of URL encoded JSON conditions for complex queries.", "type": "str, optional", "default": ""}}}
{"name": "market_get_ipo_center", "description": "Fetches IPO center information for a specified region.", "parameters": {"regionid": {"description": "The ID of the region for which the IPO center information is to be fetched, obtained from the `/regions/list` endpoint.", "type": "int", "default": "6"}, "status": {"description": "The status filter for the IPO information. It can be one of the following: 'filing', 'pricing', or 'buying'. Default is 'filing'.", "type": "str, optional", "default": "filing"}}}
{"name": "earnings_revisions", "description": "Retrieve earnings revisions for a given stock ticker using the Toolbench RapidAPI service.", "parameters": {"ticker": {"description": "The stock ticker symbol for which to retrieve earnings revisions.", "type": "str", "default": "AAPL"}}}
{"name": "stock_balance_sheet", "description": "Retrieves the balance sheet data for a specified stock symbol using the Yahoo Finance API.", "parameters": {"symbol": {"description": "The stock symbol for which to retrieve the balance sheet data.", "type": "str", "default": "AAPL"}}}
{"name": "us_ar", "description": "Fetches current or historical gas price data for Arkansas.", "parameters": {"date": {"description": "A date string in the format 'YYYY-MM-DD' to query historical gas price data. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "years", "description": "Fetch data from a car API based on various search parameters related to years, makes, models, and trims.", "parameters": {"make_id": {"description": "The unique identifier for the make.", "type": "str, optional", "default": ""}, "make": {"description": "The name of the car make.", "type": "str, optional", "default": ""}, "year": {"description": "The model year of the car.", "type": "str, optional", "default": ""}, "json": {"description": "A JSON-encoded string containing additional query conditions.", "type": "str, optional", "default": ""}, "make_model_id": {"description": "The unique identifier for the make and model.", "type": "str, optional", "default": ""}, "model": {"description": "The model name of the car.", "type": "str, optional", "default": ""}, "trim": {"description": "The trim level of the car.", "type": "str, optional", "default": ""}}}
{"name": "v1_helicopter", "description": "Fetches a list of helicopter specifications from the API Ninjas Helicopter API that match the given parameters.", "parameters": {"max_height": {"description": "Maximum height of the helicopter in feet.", "type": "int, optional", "default": ""}, "limit": {"description": "How many results to return. Must be between 1 and 30. Default is 1.", "type": "int, optional", "default": ""}, "min_height": {"description": "Minimum height of the helicopter in feet.", "type": "int, optional", "default": ""}, "max_length": {"description": "Maximum length of the helicopter in feet.", "type": "int, optional", "default": ""}, "min_length": {"description": "Minimum length of the helicopter in feet.", "type": "int, optional", "default": ""}, "min_speed": {"description": "Minimum maximum air speed in knots.", "type": "int, optional", "default": ""}, "min_range": {"description": "Minimum range of the helicopter in nautical miles.", "type": "int, optional", "default": ""}, "max_range": {"description": "Maximum range of the helicopter in nautical miles.", "type": "int, optional", "default": ""}, "max_speed": {"description": "Maximum maximum air speed in knots.", "type": "int, optional", "default": ""}, "manufacturer": {"description": "Company that designed and built the helicopter. Default is 'Bell'.", "type": "str, optional", "default": "Bell"}, "model": {"description": "Helicopter model name. Default is '206'.", "type": "str, optional", "default": "206"}}}
{"name": "get_screenshot_version_ecoindexes_id_screenshot_get", "description": "Returns the screenshot of the webpage analysis for a given version and analysis ID, if it exists.", "parameters": {"version": {"description": "Engine version used to run the analysis (e.g., 'v0' or 'v1').", "type": "str", "default": "v1"}, "is_id": {"description": "Identifier of the analysis for which to retrieve the screenshot.", "type": "str", "default": ""}}}
{"name": "tsv1", "description": "Fetch metadata attributes for all subsets of a given dataset from the ODAM API.", "parameters": {"dataset": {"description": "The identifier for the dataset whose metadata is to be fetched.", "type": "str", "default": "frim1"}, "format": {"description": "The desired format of the response (e.g., 'tsv', 'json'). Defaults to 'tsv'.", "type": "str, optional", "default": "tsv"}}}
{"name": "review_filters_list", "description": "Fetch supported options metadata for filtering hotel reviews.", "parameters": {"hotel_id": {"description": "The unique identifier of the hotel from the properties list API.", "type": "int", "default": "1790664"}, "languagecode": {"description": "The language code for the response. Default is 'en-us'.", "type": "str, optional", "default": "en-us"}, "filter_language": {"description": "Comma-separated values of languages for filtering reviews. Default is 'en,nl'.", "type": "str, optional", "default": "en,nl"}, "filter_customer_type": {"description": "Comma-separated values of customer types to filter by. Default is 'couple,family_with_children'.", "type": "str, optional", "default": "couple,family_with_children"}, "user_sort": {"description": "Sorting preference for results. Default is 'sort_most_relevant'.", "type": "str, optional", "default": "sort_most_relevant"}}}
{"name": "games_by_category_or_tag", "description": "Fetches a list of games based on the given category or tag from the MMO Games API.", "parameters": {"category": {"description": "The category or tag of the games to fetch (e.g., \"mmorpg\", \"shooter\", \"pvp\", \"mmofps\").", "type": "str", "default": "shooter"}}}
{"name": "get_1_autocomplete", "description": "Fetch autocomplete suggestions for a given stock ticker or company name using the RapidAPI Stock Exchange service.", "parameters": {"keyword": {"description": "The stock ticker or company name to search for. Defaults to 'GOOG'.", "type": "str, optional", "default": "GOOG"}}}
{"name": "todas_as_moedas", "description": "Gets the latest exchange rate information for all currencies in a specified format.", "parameters": {"format": {"description": "Format of the response which can be 'json', 'jsonp', or 'xml'.", "type": "str", "default": ""}}}
{"name": "v1_inflation", "description": "Fetches current monthly and annual inflation percentages from the API Ninjas Inflation API endpoint.", "parameters": {"type": {"description": "Inflation indicator type. Can be either \"CPI\" (Consumer Price Index) or \"HICP\" (Harmonized Index of Consumer Prices). Defaults to \"CPI\" if not provided.", "type": "str, optional", "default": ""}}}
{"name": "map_image_get", "description": "Fetches a static map image for a specified location with given parameters such as width, height, center, and zoom level.", "parameters": {"width": {"description": "Width of the map image. Must be between 1 and 999.", "type": "int", "default": "500"}, "center": {"description": "The center coordinates of the map (latitude,longitude).", "type": "str", "default": "35.681236,139.767125"}, "zoom": {"description": "The zoom level of the map. Must be between 6 and 19.", "type": "int", "default": "15"}, "height": {"description": "Height of the map image. Must be between 1 and 999.", "type": "int", "default": "500"}, "datum": {"description": "The geodetic system to use. Defaults to 'wgs84'. Options are:", "type": "str, optional", "default": "wgs84"}, "coord_unit": {"description": "The unit of latitude and longitude in the output data. Defaults to 'degree'. Options are:", "type": "str, optional", "default": "degree"}}}
{"name": "daily_match_list_live", "description": "Fetches the list of daily live matches for a specific date within a ±7 days period.", "parameters": {"date": {"description": "The date for which to retrieve the match list. Format should be {dd/MM/yyyy}.", "type": "str", "default": "28/01/2021"}}}
{"name": "teammedia", "description": "Retrieves media information for a specific rugby team using the Rugby API.", "parameters": {"is_id": {"description": "The ID of the rugby team for which to retrieve the media.", "type": "int", "default": 4264}}}
{"name": "matches_get_leanback", "description": "Fetches leanback information for a given cricket match using the match ID.", "parameters": {"matchid": {"description": "The match ID obtained from endpoints such as …/matches/list, …/schedules/list, …/series/get-matches, …/teams/get-schedules, …/teams/get-results, or …/venues/get-matches.", "type": "int", "default": "40381"}}}
{"name": "news_search", "description": "Search for news articles that match a given keyword.", "parameters": {"keyword": {"description": "The term or phrase to search for in news articles.", "type": "str", "default": "apple"}, "pageindex": {"description": "The index of the page to retrieve. Default is 1.", "type": "int, optional", "default": "1"}, "pagesize": {"description": "The number of results per page. Maximum is 20. Default is 20.", "type": "int, optional", "default": "20"}}}
{"name": "validate", "description": "Validates a given phone number from any country using the RapidAPI phone number validation service.", "parameters": {"number": {"description": "The phone number to validate.", "type": "str", "default": "94887799"}, "country": {"description": "The ISO 3166-1 alpha-2 country code in capital letters. This is optional if `number` is in E.164 format. Defaults to 'UY'.", "type": "str, optional", "default": "UY"}}}
{"name": "get_sender_id", "description": "Returns the list of all Sender IDs that are registered for the given account to send SMS.", "parameters": {"clientid": {"description": "The Client ID associated with the account. You can obtain the Client ID at https://app.rivet.solutions/ApiDocument/ApiDocs once your account is created.", "type": "str", "default": "clientid"}, "apikey": {"description": "The API key associated with the account. You can obtain the API key at https://app.rivet.solutions/ApiDocument/ApiDocs once your account is created.", "type": "str", "default": "apikey"}}}
{"name": "sendsms", "description": "Sends an SMS message using the Rivet SMS service.", "parameters": {"senderid": {"description": "The sender ID assigned by Rivet SMS. Obtain it from https://app.rivet.solutions/Management/ManageSenderID.", "type": "str", "default": "sender id"}, "clientid": {"description": "The Rivet SMS API client ID. Obtain it from https://app.rivet.solutions/ApiDocument/ApiDocs#.", "type": "str", "default": "client id"}, "mobilenumbers": {"description": "The recipient mobile numbers in the format '971223344566'. Multiple recipients can be specified, separated by commas. Include the country code without preceding 00 or +.", "type": "str", "default": "971009900990"}, "message": {"description": "The content of the SMS message to be sent.", "type": "str", "default": "your message"}, "apikey": {"description": "The Rivet SMS API key. Obtain it from https://app.rivet.solutions/ApiDocument/ApiDocs#.", "type": "str", "default": "api key"}, "content_type": {"description": "The content type of the message. Defaults to 'application/json'.", "type": "str, optional", "default": "application/json"}, "is_unicode": {"description": "Indicates whether the message should be sent with Unicode encoding. Defaults to None.", "type": "bool, optional", "default": ""}, "scheduletime": {"description": "Specifies the scheduled time to send the message in the format 'yyyy-MM-dd HH:MM'. Defaults to None.", "type": "str, optional", "default": ""}, "groupid": {"description": "Valid group ID of the current user for group messages. Defaults to None.", "type": "str, optional", "default": ""}, "is_flash": {"description": "Indicates whether the message is a flash message. Defaults to None.", "type": "bool, optional", "default": ""}}}
{"name": "recent_unique_tournaments", "description": "Fetches the recent unique tournaments associated with a given team ID using the RapidAPI service.", "parameters": {"team_id": {"description": "The ID of the team for which recent unique tournaments are to be retrieved.", "type": "int", "default": "14486"}}}
{"name": "getuserbyid", "description": "Fetches and returns user information by user ID from a specified API.", "parameters": {"is_id": {"description": "The ID of the user to fetch information for.", "type": "str", "default": "1"}}}
{"name": "album_metadata", "description": "Fetches metadata for a specified album from the Spotify API using RapidAPI.", "parameters": {"is_id": {"description": "The Spotify album ID. Defaults to '3IBcauSj5M2A6lTeffJzdv'.", "type": "str", "default": "3IBcauSj5M2A6lTeffJzdv"}}}
{"name": "vehicles_models", "description": "Fetches a list of vehicle models for a specified vehicle make using the Carbonsutra API.", "parameters": {"vehicle_make": {"description": "The make of the vehicle to retrieve models for.", "type": "str", "default": ""}}}
{"name": "getquestionsbyexam", "description": "Fetches exam questions for a specified exam using the Tech Exams API.", "parameters": {"exam": {"description": "The exam identifier for which the questions are to be retrieved.", "type": "str", "default": "PT0-001"}}}
{"name": "get_the_awarded_books_of_a_year", "description": "Retrieves the list of awarded books for a specific year, including details such as the book's name, winning category, and cover image.", "parameters": {"year": {"description": "The year for which to retrieve the list of awarded books.", "type": "str", "default": "2021"}}}
{"name": "get_brands", "description": "Fetches cigar brands from the RapidAPI endpoint, allowing for pagination and optional search filtering.", "parameters": {"page": {"description": "The page number to retrieve for pagination.", "type": "int", "default": "1"}, "search": {"description": "A search term to filter cigar brands. Defaults to 'Dominican'.", "type": "str, optional", "default": "Dominican"}}}
{"name": "social_media_caption", "description": "Generates catchy captions for social media based on the provided name and description.", "parameters": {"name": {"description": "The name associated with the social media content.", "type": "str", "default": "Apple"}, "description": {"description": "A brief description of the social media content.", "type": "str", "default": "Apple designs, manufactures and markets smartphones, personal computers, tablets, wearables and accessories, and sells a variety of related services."}}}
{"name": "quote_get_option_fundamentals", "description": "Fetch the option fundamentals for a given stock symbol using the specified RapidAPI key.", "parameters": {"symbol": {"description": "The stock symbol for which to retrieve option fundamentals.", "type": "str", "default": "TSLA"}}}
{"name": "stock_price", "description": "Fetches the current price and details for a given public stock using the RapidAPI service.", "parameters": {"ticker": {"description": "The ticker symbol of the stock for which to retrieve the price and details.", "type": "str", "default": ""}}}
{"name": "result_statistics", "description": "Retrieves the result statistics of a specific match, including overall, home, and away filters, for the last 20 matches between the two teams.", "parameters": {"matchid": {"description": "The ID of the match to retrieve statistics for.", "type": "int", "default": "1452254"}}}
{"name": "standings", "description": "Fetches and returns the standings for a specified season and competition.", "parameters": {"season_id": {"description": "The ID of the season for which the standings are to be fetched.", "type": "int", "default": "2020"}, "comp_id": {"description": "The ID of the competition for which the standings are to be fetched.", "type": "int", "default": "1236"}}}
{"name": "recordcount", "description": "Retrieve a specified number of records from the CrossRef database using the RapidAPI service.", "parameters": {"rows": {"description": "The number of records to retrieve.", "type": "int", "default": "0"}}}
{"name": "airplanes_ordered_by_descending", "description": "Fetches all airplanes ordered by a specified field in descending order from the AirplanesDB API.", "parameters": {"ordering": {"description": "The field by which to order the airplanes in descending order.", "type": "str", "default": "-plane"}}}
{"name": "data_by_id", "description": "Fetches case data by ID from the MongoDB Wix API.", "parameters": {"is_id": {"description": "The ID of the case to be fetched.", "type": "str", "default": "61183bc9d86b1bf415412ea4"}}}
{"name": "getplatformlist", "description": "Fetches the list of platforms with their IDs and names from the API endpoint as JSON.", "parameters": {"page": {"description": "Page number to retrieve the platform list from the API.", "type": "int", "default": "0"}}}
{"name": "advanced", "description": "Fetches advanced chess puzzles based on various search criteria from an external API.", "parameters": {"number_of_puzzles": {"description": "Number of puzzles to fetch. Defaults to 1.", "type": "int, optional", "default": "1"}, "themes": {"description": "Comma-separated list of puzzle themes. Defaults to 'kingsideAttack,middlegame'.", "type": "str, optional", "default": "kingsideAttack,middlegame"}, "theme_search_type": {"description": "Specifies whether puzzles need to have all themes ('AND') or any theme ('OR'). Defaults to 'AND'.", "type": "str, optional", "default": "AND"}, "number_of_moves": {"description": "Total number of moves in the puzzles. Defaults to 4.", "type": "int, optional", "default": "4"}, "opening_variation": {"description": "The opening variation of the puzzles. Defaults to 'Kings_Gambit_Accepted_Abbazia_Defense'.", "type": "str, optional", "default": "Kings_Gambit_Accepted_Abbazia_Defense"}, "rating": {"description": "Rating of the puzzles. Defaults to '1200'.", "type": "str, optional", "default": "1200"}, "opening_family": {"description": "The opening family of the puzzles. Defaults to 'Kings_Gambit_Accepted'.", "type": "str, optional", "default": "Kings_Gambit_Accepted"}, "max_deviation": {"description": "Maximum allowable rating deviation.", "type": "int, optional", "default": ""}}}
{"name": "get_items_ids_by_query", "description": "Retrieve item IDs from the Steam market using a text query.", "parameters": {"query": {"description": "The text query used to search for items on the Steam market.", "type": "str", "default": "case"}}}
{"name": "house_prices_get_points_of_interest", "description": "Fetches the nearest points of interest for a given property using the Zoopla API.", "parameters": {"property_id": {"description": "The ID of the property for which to retrieve points of interest. This is usually obtained from the `/house-prices/estimate` endpoint.", "type": "int", "default": "27175510"}}}
{"name": "get_car_models", "description": "Fetches all car models for a specified car maker using the InfoCars API.", "parameters": {"maker": {"description": "The name of the car maker to fetch the models for.", "type": "str", "default": "Bugatti"}}}
{"name": "active_listings", "description": "Fetches active rental listings from the AirDNA API for a specified location and time period.", "parameters": {"location": {"description": "The location code for which to retrieve active rental listings.", "type": "str", "default": "santa monica"}, "start_year": {"description": "The starting year for the time period.", "type": "int", "default": "2019"}, "start_month": {"description": "The starting month for the time period.", "type": "int", "default": "5"}, "number_of_months": {"description": "The number of months from the start date for which to retrieve data.", "type": "int", "default": "36"}}}
{"name": "retrieve_active_loans_offers", "description": "Retrieves the active loan offer levels for a specified collection.", "parameters": {"collection": {"description": "The identifier of the collection for which to retrieve active loan offers.", "type": "str", "default": "0xed5af388653567af2f388e6224dc7c4b3241c544"}}}
{"name": "retrieve_a_contract", "description": "Fetch detailed information about a specified asset contract from the OpenSea API.", "parameters": {"asset_contract_address": {"description": "The address of the asset contract to be retrieved.", "type": "str", "default": "0x06012c8cf97bead5deae237070f9587f8e7a266d"}}}
{"name": "competitions", "description": "Fetches information about football competitions using the Premier League Upcoming Matches API.", "parameters": {"abbr": {"description": "Abbreviation of the league (default is 'EN_PR').", "type": "str", "default": "EN_PR"}, "name": {"description": "Name of the league (default is 'Premier League').", "type": "str", "default": "Premier League"}}}
{"name": "leaguepowerrankingrounds", "description": "Fetches the power ranking rounds for the specified tournament and season in a football league.", "parameters": {"tournamentid": {"description": "The unique ID of the tournament for which to retrieve the power ranking rounds.", "type": "int", "default": 16}, "seasonid": {"description": "The season ID for which to retrieve the power ranking rounds.", "type": "int", "default": 41087}}}
{"name": "search_wikihow", "description": "Searches for a 'how-to' question on WikiHow and returns summarized methods and steps.", "parameters": {"q": {"description": "A 'how-to' question to search on WikiHow, e.g., 'find meaning in life', 'learn any language', 'play soccer', 'change an oil filter'.", "type": "str", "default": "be thankful"}}}
{"name": "post_count", "description": "Fetches the total post count for a given hashtag using the Toolbench RapidAPI service.", "parameters": {"tag": {"description": "The hashtag for which the post count is to be fetched.", "type": "str", "default": "insta"}}}
{"name": "get_indivisual_news_source_news", "description": "Fetch news articles about climate change from a specific news source using the given newspaper ID.", "parameters": {"newspaperid": {"description": "The unique identifier of the newspaper to fetch news from.", "type": "str", "default": "guardian"}}}
{"name": "cities_v2_get_measurements", "description": "Fetches air quality and weather measurements for a specified city using its ID.", "parameters": {"is_id": {"description": "The unique identifier for the city, as returned in the /v2/auto-complete endpoint.", "type": "str", "default": "hW7vArorRd8cT9h6v"}, "x_units_distance": {"description": "Unit of measurement for distance. One of 'miles' or 'kilometer'. Defaults to 'kilometer'.", "type": "str, optional", "default": "kilometer"}, "x_units_pressure": {"description": "Unit of measurement for pressure. One of 'hg' or 'mbar'. Defaults to 'mbar'.", "type": "str, optional", "default": "mbar"}, "x_aqi_index": {"description": "Air Quality Index standard to use. One of 'us' or 'cn'. Defaults to 'us'.", "type": "str, optional", "default": "us"}, "x_units_temperature": {"description": "Unit of measurement for temperature. One of 'fahrenheit' or 'celsius'. Defaults to 'celsius'.", "type": "str, optional", "default": "celsius"}, "x_user_timezone": {"description": "Timezone to use for the user. Defaults to 'Asia/Singapore'.", "type": "str, optional", "default": "Asia/Singapore"}, "x_user_lang": {"description": "Language for response. Defaults to 'en-US'.", "type": "str, optional", "default": "en-US"}}}
{"name": "gethospitalsbyname", "description": "Fetches a list of U.S. hospitals that match the given name using the RapidAPI service.", "parameters": {"name": {"description": "The name or partial name of the hospital to search for.", "type": "str", "default": "presbyterian"}}}
{"name": "nal_query", "description": "Converts a given number to its corresponding word representation in Spanish using the Numeros-a-Letras API.", "parameters": {"num": {"description": "The number to be converted to words.", "type": "str", "default": "0"}}}
{"name": "user_likes_by_userid", "description": "Fetches all likes of a user from Twitter using the provided user ID.", "parameters": {"userid": {"description": "The userId of the Twitter user. This can be obtained by converting a username to a userId or by searching for a user and extracting the restId.", "type": "str", "default": "44196397"}, "cursor": {"description": "A cursor value for pagination. Use this to navigate to the next or previous page of results.", "type": "str, optional", "default": ""}, "count": {"description": "The number of results to return per request. Defaults to '20'.", "type": "str, optional", "default": "20"}}}
{"name": "venue_search", "description": "Searches for venues based on latitude, longitude, and optional radius using the Wiman API.", "parameters": {"latitude": {"description": "The latitude of the location to search.", "type": "str", "default": "44.484994"}, "longitude": {"description": "The longitude of the location to search.", "type": "str", "default": "11.327333"}, "radius": {"description": "The search radius in kilometers. Defaults to 1.", "type": "int, optional", "default": "1"}}}
{"name": "search_challenge", "description": "Searches for challenges on TikTok based on the given keywords.", "parameters": {"keywords": {"description": "The keywords to search for TikTok challenges.", "type": "str", "default": "Su That La"}, "cursor": {"description": "The cursor for the next page of search results. Defaults to 0.", "type": "int, optional", "default": "0"}, "count": {"description": "The number of search results to return. Defaults to 5.", "type": "int, optional", "default": "5"}}}
{"name": "jokes_random", "description": "Retrieves a random Chuck Norris joke in JSON format from the specified API.", "parameters": {"category": {"description": "Specifies the category of the random joke. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "radical_position", "description": "This function queries the Kanji Alive API using the given radical position to retrieve relevant information.", "parameters": {"rpos": {"description": "The radical position in Hiragana or Romaji.", "type": "str", "default": "hen"}}}
{"name": "getting_data", "description": "This function retrieves supermarket sales data from three different cities using the provided RapidAPI keys.", "parameters": {"x_rapidapi_key": {"description": "The RapidAPI key for accessing the `data_visualisation_` API. Defaults to 'demo'.", "type": "str", "default": "demo"}}}
{"name": "get_user_replies", "description": "Fetches the replies of a specified Twitter user.", "parameters": {"user": {"description": "The user ID of the Twitter user whose replies are to be fetched.", "type": "str", "default": "2455740283"}, "count": {"description": "The number of replies to fetch.", "type": "str", "default": "20"}, "cursor": {"description": "The pagination cursor for retrieving subsequent sets of replies. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "feeds_by_secuid", "description": "Fetches feeds from TikTok using a given secUid.", "parameters": {"schematype": {"description": "The schema type for the feeds request.", "type": "str", "default": "1"}, "username": {"description": "The username of the TikTok account.", "type": "str", "default": "therock"}, "secuid": {"description": "The security UID of the TikTok account.", "type": "str", "default": "MS4wLjABAAAAM3R2BtjzVT-uAtstkl2iugMzC6AtnpkojJbjiOdDDrdsTiTR75-8lyWJCY5VvDrZ"}}}
{"name": "domain_check", "description": "Checks the availability status of one or multiple domains using the RapidAPI service.", "parameters": {"domains": {"description": "Comma-separated list of domains to check.", "type": "str", "default": "foo.com,example.org,somefoobardomain.io"}, "domain": {"description": "A specific domain name to check in addition to the list. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "v1_passwordgenerator", "description": "Generates a random password string adhering to the specified parameters using the API Ninjas Password Generator API.", "parameters": {"exclude_special_chars": {"description": "Whether to exclude special characters (e.g., `!@#$%^&*()`). Defaults to None, meaning special characters are included.", "type": "bool, optional", "default": ""}, "exclude_numbers": {"description": "Whether to exclude numbers from the password. Defaults to None, meaning numbers are included.", "type": "bool, optional", "default": ""}, "length": {"description": "The length of the generated password. Defaults to 16 if not specified.", "type": "int, optional", "default": ""}}}
{"name": "air_quality_forecasts", "description": "Fetches hourly air quality forecast for a specified city.", "parameters": {"country": {"description": "The country where the city is located.", "type": "str", "default": "netherlands"}, "city": {"description": "The city for which the air quality forecast is required.", "type": "str", "default": "amsterdam"}, "lat": {"description": "Latitude of the city. Defaults to '52.377956'.", "type": "str, optional", "default": "52.377956"}, "lon": {"description": "Longitude of the city. Defaults to '4.897070'.", "type": "str, optional", "default": "4.897070"}}}
{"name": "free_access", "description": "Grant access to a unique URL for the Walnut Trading Dashboard using the provided API key.", "parameters": {"get_dash_url": {"description": "The URL parameter required to get access to the dashboard.", "type": "str", "default": "True"}}}
{"name": "asset", "description": "Fetches the UUID and details for all assets, with optional query parameters to filter the results.", "parameters": {"status": {"description": "The status of the assets to return. Can be 'ACTIVE' or 'INACTIVE'. Defaults to 'ACTIVE'.", "type": "str", "default": "ACTIVE"}, "type": {"description": "The type of assets to return. Can be 'CRYPTO' or 'FIAT'. Defaults to None.", "type": "str", "default": ""}, "symbol": {"description": "The ticker symbol of the assets to return (e.g., 'BTC'). Defaults to None.", "type": "str", "default": ""}}}
{"name": "markets_equities_groups", "description": "Fetches equities groups such as global-equity and countries-equity from the Seeking Alpha API based on the given category.", "parameters": {"category": {"description": "The category of equities to fetch. For example, 'global-equity' or 'countries-equity'.", "type": "str", "default": "countries-equity"}}}
{"name": "getlatestbyedinetcode", "description": "Fetch the latest securities report data for a company specified by its EDINET code using the RapidAPI service.", "parameters": {"edinet_code": {"description": "The EDINET code of the company to fetch data for.", "type": "str", "default": "E02142"}}}
{"name": "financial_balance_sheet", "description": "Fetches the balance sheet data of a company identified by the given ticker symbol.", "parameters": {"symbol": {"description": "Ticker symbol of the company to retrieve the financial balance sheet for.", "type": "str", "default": "MSFT"}, "formstyle": {"description": "Format style of the returned data ('dataframe' or other formats). Defaults to 'dataframe'.", "type": "str, optional", "default": "dataframe"}, "freq": {"description": "Frequency of the data ('Q' for quarterly or 'A' for annual). Defaults to 'Q'.", "type": "str, optional", "default": "Q"}}}
{"name": "yearly_cashflow_statements", "description": "Fetch annual cash flow statements for a given stock symbol from the Freedom Finance API.", "parameters": {"symbol": {"description": "The stock symbol for which to fetch annual cash flow statements.", "type": "str", "default": "MSFT"}}}
{"name": "repost", "description": "Reposts an article to the Telegraph platform using the Telegraph API.", "parameters": {"article_url": {"description": "URL of the article or blog post to be reposted.", "type": "str", "default": ""}, "title": {"description": "Title of the Telegraph post. Defaults to None.", "type": "str, optional", "default": ""}, "author_url": {"description": "URL of the author. Defaults to None.", "type": "str, optional", "default": ""}, "author_name": {"description": "Name of the author. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "get_city_by_filter", "description": "Fetches city data based on the given city ID through the RapidAPI service.", "parameters": {"is_id": {"description": "The city ID used to filter and retrieve city data.", "type": "int", "default": "1"}}}
{"name": "street", "description": "Fetch a unique history or touristic AI-generated text for any street around the world using the StreetNarrator API.", "parameters": {"street": {"description": "The name or identifier of the street for which the AI-generated text is required.", "type": "str", "default": "1600 Broadway, New York, NY 10019, United States"}, "topics": {"description": "Topics to focus on in the generated text, formatted as 'history:X,tourism:Y' where X and Y are weights. Defaults to 'history:1,tourism:1'.", "type": "str, optional", "default": "history:1,tourism:1"}, "temperature": {"description": "Degree of creativity of the AI's response. Defaults to '0'.", "type": "str, optional", "default": "0"}, "style": {"description": "The style of the output text. Possible values include 'audioguide'. Defaults to 'audioguide'.", "type": "str, optional", "default": "audioguide"}, "language": {"description": "The language of the generated text. Defaults to 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "flightstatistics", "description": "Fetches and returns statistics for a given flight number, with optional filtering by departure and arrival airports.", "parameters": {"flnr": {"description": "The flight number to request statistics for.", "type": "str", "default": ""}, "aptfrom": {"description": "The IATA code of the departure airport. Defaults to None.", "type": "str, optional", "default": ""}, "aptto": {"description": "The IATA code of the arrival airport. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "list_of_room_types", "description": "Returns data related to room types from the Booking.com API. This function optionally takes a room type ID and an API key to fetch specific room type details.", "parameters": {"room_type_id": {"description": "The ID of the room type to be retrieved. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "ip_geolocation", "description": "This function retrieves geolocation information for a given IP address using the Toolbench API.", "parameters": {"ip_address": {"description": "The IP address for which to retrieve geolocation data.", "type": "str", "default": "187.66.247.186"}}}
{"name": "v1_urllookup", "description": "Queries the API Ninjas URL Lookup endpoint to retrieve information about a given URL.", "parameters": {"url": {"description": "The valid URL to check. It supports schemes (e.g. http://example.com) as well as schemeless (e.g. example.com) formats.", "type": "str", "default": "https://example.com"}}}
{"name": "get_a_list_of_suburbs", "description": "Fetches all matching suburbs for the provided postcode, including state, and optionally latitude and longitude if available.", "parameters": {"postcode": {"description": "The postcode for which to find matching suburbs.", "type": "int", "default": "2000"}}}
{"name": "latest_vessel_position", "description": "Fetches the latest position of a vessel based on its MMSI using the RapidAPI service.", "parameters": {"mmsi": {"description": "The Maritime Mobile Service Identity (MMSI) of the vessel.", "type": "str", "default": "244110352"}}}
{"name": "leagues", "description": "Retrieves a list of sports leagues using the provided RapidAPI key.", "parameters": {"lang": {"description": "Language code for the response (e.g., 'en' for English).", "type": "str", "default": "en"}, "sp": {"description": "Sport identifier.", "type": "int", "default": "1"}}}
{"name": "teamnextmatches", "description": "Retrieve upcoming matches for a specific American Football team using its ID and page number.", "parameters": {"is_id": {"description": "ID of the team for which to retrieve upcoming matches.", "type": "int", "default": 4294}, "page": {"description": "Zero-based page number for pagination of results.", "type": "int", "default": ""}}}
{"name": "stock_quotes", "description": "Fetches real-time stock data for given stock symbols using the Holistic Finance Stock Data RapidAPI.", "parameters": {"symbols": {"description": "A comma-separated string of stock symbols for which to fetch the stock data.", "type": "str", "default": "MSFT, PLTR, TSLA, PG, NFLX, AAPL"}}}
{"name": "get_a_specific_movie_by_id", "description": "Fetch detailed information of a specific movie by its IMDb ID.", "parameters": {"is_id": {"description": "The IMDb ID of the specific movie to fetch.", "type": "str", "default": "top13"}}}
{"name": "get_specific_climate_change_news", "description": "Fetch specific climate change news from a given newspaper.", "parameters": {"newspaperid": {"description": "The ID of the newspaper from which to fetch climate change news.", "type": "str", "default": "guardian"}}}
{"name": "get_by_climate", "description": "Fetches plants based on the given climate of their natural habitat.", "parameters": {"climate": {"description": "The climate type to filter plants by. Defaults to 'Tropical'.", "type": "str", "default": "Tropical"}}}
{"name": "get_u_54_athlete_ranking", "description": "Fetches the under-54 athlete ranking for Taekwondo from the provided RapidAPI service.", "parameters": {"country": {"description": "The country to filter the athlete rankings. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "list_folder_contents", "description": "Retrieves the contents of a specified Github repository folder using the Git Pager API.", "parameters": {"repo": {"description": "The repository name in the format 'owner/repo'. Defaults to 'gina305/switch-code'.", "type": "str", "default": "gina305/switch-code"}, "path": {"description": "The filepath within the repository. Defaults to '/'.", "type": "str", "default": "/"}, "key": {"description": "The access token for Github API authentication.", "type": "str", "default": "REMOVED_TOKENRmbK5iIkWiuCINAk9adv12mZvUTNQn49E9xL"}}}
{"name": "label_sizes", "description": "Fetches a list of label sizes in the specified format from the RapidAPI service.", "parameters": {"format": {"description": "The paper size format. Can be either \"Letter\" for 8.5 inch by 11 inch, or \"A4\" for 210 mm by 297 mm.", "type": "str", "default": "letter"}, "shape": {"description": "The label shape. Defaults to 'square'.", "type": "str, optional", "default": "square"}, "brand": {"description": "The label manufacturer's name. Defaults to 'avery'. Possible values include \"Avery\", \"Herma\", \"Onlinelabels\", \"Uline\", \"Megastar\", and \"Sheetlabels\".", "type": "str, optional", "default": "avery"}}}
{"name": "convert_url_to_image", "description": "Converts a URL to an image by making a GET request to the Cloudlayer.io API.", "parameters": {"url": {"description": "The URL to be converted to an image.", "type": "str", "default": "https://google.com"}, "timeout": {"description": "The request timeout in milliseconds. Defaults to None.", "type": "int, optional", "default": ""}}}
{"name": "download_stream", "description": "Downloads or streams video information from YouTube using the provided RapidAPI key.", "parameters": {"is_id": {"description": "YouTube Video ID to stream or download information.", "type": "str", "default": "UxxajLWwzqY"}, "cgeo": {"description": "Country code in ISO 3166 format of the end user. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "rgb_to_hsv", "description": "Converts an RGB color code to an HSV color code using the Convexity API.", "parameters": {"r": {"description": "Red component of the RGB color (0-255).", "type": "int", "default": "127"}, "g": {"description": "Green component of the RGB color (0-255).", "type": "int", "default": "255"}, "b": {"description": "Blue component of the RGB color (0-255).", "type": "int", "default": "212"}}}
{"name": "pet_pet", "description": "Generates a 'Pet Pet' meme GIF from a given image URL using the Memeados API.", "parameters": {"image": {"description": "The URL of the image to be used for generating the meme.", "type": "str", "default": "https://i.pravatar.cc/300"}}}
{"name": "flame", "description": "Calculates the FLAMES relationship compatibility score for two given names using the Flames Love Calculator API.", "parameters": {"sname": {"description": "The second name to be used in the compatibility calculation.", "type": "str", "default": "Shefali"}, "fname": {"description": "The first name to be used in the compatibility calculation.", "type": "str", "default": "Rahul"}}}
{"name": "searchjobs", "description": "Fetches a list of job postings from the Indeed API for Sweden.", "parameters": {"location": {"description": "The city or state within Sweden to search for jobs.", "type": "str", "default": "Stockholm"}, "offset": {"description": "The starting point for pagination; must be increased by 10 to retrieve subsequent pages.", "type": "int", "default": "0"}, "keyword": {"description": "The search keyword (e.g., job title or skill).", "type": "str", "default": "python"}}}
{"name": "dribbble", "description": "Checks the availability of a given username on Dribbble using the RapidAPI service.", "parameters": {"username": {"description": "The username to check for availability on Dribbble.", "type": "str", "default": "username"}}}
{"name": "movies_get_popularity", "description": "Fetches popular movies based on location parameters such as zipcode, radius, longitude, and latitude, using the Flixster API.", "parameters": {"zipcode": {"description": "The postal code of the area to search in. Defaults to '90002'.", "type": "str, optional", "default": "90002"}, "radius": {"description": "The radius (in miles) around the given zipcode to include in the search. Defaults to 50.", "type": "int, optional", "default": "50"}, "longitude": {"description": "The geographical longitude to search movies around. Defaults to None.", "type": "int, optional", "default": ""}, "latitude": {"description": "The geographical latitude to search movies around. Defaults to None.", "type": "int, optional", "default": ""}}}
{"name": "skill_child", "description": "Fetches child skill data from an external API using provided identifiers.", "parameters": {"is_id": {"description": "The unique identifier for the desired child skill data. Defaults to 'files/198956'.", "type": "str, optional", "default": "files/198956"}}}
{"name": "pluses_and_minuses_of_the_car", "description": "Fetches the list of pluses and minuses for a specific car model using the ToolBench RapidAPI.", "parameters": {"year": {"description": "The year of manufacture of the car.", "type": "str", "default": "2012"}, "make": {"description": "The make (manufacturer) of the car.", "type": "str", "default": "bmw"}, "model": {"description": "The model of the car.", "type": "str", "default": "5 series"}}}
{"name": "get_style_json", "description": "Retrieves the style JSON for the specified map style.", "parameters": {"style": {"description": "The style identifier to retrieve the corresponding style JSON.", "type": "str", "default": "osm-bright"}}}
{"name": "staticmaps", "description": "Generates a static map image URL based on the given parameters.", "parameters": {"size": {"description": "Size of the map. Format is usually `{width}x{height}`.", "type": "str", "default": "640x480"}, "center": {"description": "Center coordinates of the map. Format is `{latitude},{longitude}`.", "type": "str", "default": "48.20835,16.3725"}, "zoom": {"description": "Zoom level of the map.", "type": "int", "default": "11"}, "bounds": {"description": "Bounding box to define the map area instead of `center` and `zoom`. Format is `{north},{east},{south},{west}`.", "type": "str, optional", "default": ""}, "geojson": {"description": "GeoJSON geometry to include on the map. Format is `{attribute}:{value}[|{attribute}:{value} ...]`.", "type": "str, optional", "default": ""}, "maptype": {"description": "Type of the map, defining its appearance. Default is 'toursprung-terrain'.", "type": "str, optional", "default": "toursprung-terrain"}, "path": {"description": "Path to include on the map. Format is `{attribute}:{value}[|{attribute}:{value} ...]`.", "type": "str, optional", "default": ""}, "delta_zoom": {"description": "Zoom level adjustment if zoom is calculated automatically.", "type": "int, optional", "default": ""}, "kml": {"description": "KML data to include on the map. Format is `{kml}?{attribute}={value}[&{attribute}={value} ...]`.", "type": "str, optional", "default": ""}, "format": {"description": "File format of the map image. Default is 'png'.", "type": "str, optional", "default": "png"}, "marker": {"description": "Marker to include on the map. Format is `{attribute}:{value}[|{attribute}:{value} ...]`.", "type": "str, optional", "default": ""}, "factor": {"description": "Image scaling factor.", "type": "str, optional", "default": ""}}}
{"name": "tournamentnextmainevents", "description": "This function retrieves the next main events for a specified MMA tournament using the Toolbench RapidAPI service.", "parameters": {"page": {"description": "Zero-based page number to retrieve.", "type": "int", "default": ""}, "tournamentid": {"description": "Unique identifier for the MMA tournament.", "type": "int", "default": 19906}}}
{"name": "competitions_list_default", "description": "Retrieves the list of most popular competitions from the TransferMarket API for a specified domain.", "parameters": {"domain": {"description": "The domain for which to list competitions. Can be one of the following: 'com', 'de', 'be', 'es', 'it', 'nl', 'pl', 'pt', 'com.tr', 'world'. Defaults to 'de'.", "type": "str, optional", "default": "de"}}}
{"name": "getwebsite", "description": "Fetch the website URL for a given company name using RapidAPI.", "parameters": {"name": {"description": "The company name for which to retrieve the website URL.", "type": "str", "default": "github"}}}
{"name": "schools_list", "description": "Fetches a list of schools around a specified geographical location.", "parameters": {"lat": {"description": "The latitude of the geographical location.", "type": "int", "default": "-37.79870933"}, "lon": {"description": "The longitude of the geographical location.", "type": "str", "default": "144.95324086"}}}
{"name": "fixtures_by_team", "description": "Fetches upcoming and in-play fixtures for a given rugby team.", "parameters": {"team_id": {"description": "The ID of the rugby team for which to fetch fixtures.", "type": "int", "default": "9317"}}}
{"name": "communes_par_code_commune", "description": "Fetch details of a commune using its code via the RapidAPI.", "parameters": {"code_com": {"description": "The code of the commune to retrieve details for.", "type": "str", "default": "98810"}}}
{"name": "zipcodesbyids", "description": "Fetches boundaries of given ZIP Codes in GeoJSON format.", "parameters": {"ids": {"description": "Comma-separated list of ZIP Code IDs. Maximum size is 200. Example: '10021,10022,10023'.", "type": "str", "default": ""}, "properties": {"description": "Comma-separated list of properties to include in the response. Default values are 'zip,centroid,aland,awater'.", "type": "str, optional", "default": "zip,centroid,aland,awater"}}}
{"name": "alerts_parameters", "description": "Fetches a list of weather alerts from the National Weather Service API, with optional filtering parameters.", "parameters": {"start": {"description": "Start time in ISO8601 format.", "type": "str, optional", "default": ""}, "end": {"description": "End time in ISO8601 format.", "type": "str, optional", "default": ""}, "status": {"description": "Event status (e.g., alert, update, cancel).", "type": "str, optional", "default": ""}, "zone_type": {"description": "Zone type (e.g., land, marine).", "type": "str, optional", "default": ""}, "active": {"description": "Active alerts indicator (1 for active, 0 for inactive).", "type": "str, optional", "default": ""}, "type": {"description": "Zone type (e.g., land, marine).", "type": "str, optional", "default": ""}, "point": {"description": "Geographic point in \"latitude,longitude\" format.", "type": "str, optional", "default": ""}, "state": {"description": "State or marine code.", "type": "str, optional", "default": ""}, "zone": {"description": "Zone ID for forecast or county.", "type": "str, optional", "default": ""}, "urgency": {"description": "Urgency of the alert (e.g., expected, immediate).", "type": "str, optional", "default": ""}, "region": {"description": "Region code.", "type": "str, optional", "default": ""}, "certainty": {"description": "Certainty of the event (e.g., likely, observed).", "type": "str, optional", "default": ""}, "severity": {"description": "Severity of the event (e.g., minor, moderate, severe).", "type": "str, optional", "default": ""}, "limit": {"description": "Limit the number of results (integer).", "type": "str, optional", "default": ""}}}
{"name": "get_train_live_status", "description": "Get the current live status of a train using its train number and the journey start day.", "parameters": {"trainno": {"description": "The train number whose live status is to be fetched.", "type": "str", "default": "19038"}, "startday": {"description": "The start day of the journey, represented as a string ranging from '0' to '4'. Defaults to '1'.", "type": "str, optional", "default": "1"}}}
{"name": "matchvotes", "description": "Fetches the votes for a specific baseball match using the given match ID.", "parameters": {"is_id": {"description": "The ID of the match for which to fetch votes.", "type": "int", "default": 9864379}}}
{"name": "locations_v2_search_deprecated", "description": "Searches for related locations and suggestions based on the provided query, locale, and currency.", "parameters": {"query": {"description": "Name of the country, city, district, place, etc., to search for.", "type": "str", "default": "new york"}, "locale": {"description": "The language code for the search results. Defaults to 'en_US'.", "type": "str, optional", "default": "en_US"}, "currency": {"description": "The currency code for the search results. Defaults to 'USD'.", "type": "str, optional", "default": "USD"}}}
{"name": "count_listings_by_market", "description": "Retrieves the count of Airbnb listings in a specified market, with optional filters for the number of bedrooms and maximum guest capacity.", "parameters": {"market": {"description": "The market or city to search for listings.", "type": "str", "default": "Tenerife"}, "bedrooms": {"description": "The number of bedrooms to filter the listings by. Defaults to 1.", "type": "int, optional", "default": "1"}, "maxguestcapacity": {"description": "The maximum guest capacity to filter the listings by. Defaults to 2.", "type": "int, optional", "default": "2"}}}
{"name": "search_b", "description": "Performs a search query using the SEO API on a secondary search engine.", "parameters": {"query": {"description": "The search query string.", "type": "str", "default": "q=coffee+shop"}}}
{"name": "fight", "description": "Fetches details of a single fight by its ID using the Spectation Sports Events API.", "parameters": {"is_id": {"description": "The ID of the fight to fetch details for.", "type": "int", "default": "728"}}}
{"name": "rip", "description": "Extracts links and information from a given URL using the Toolbench RapidAPI service.", "parameters": {"target": {"description": "The URL from which to extract links and information.", "type": "str", "default": "https://www.nytimes.com"}}}
{"name": "gera_vis_o_da_rua", "description": "Generates a street view image for a given CNPJ using the Toolbench API.", "parameters": {"cnpj": {"description": "The CNPJ (Brazilian company identifier) for which the street view image is to be generated.", "type": "str", "default": "37335118000180"}, "fov": {"description": "The field of view for the street view image. Default is None.", "type": "int, optional", "default": ""}, "height": {"description": "The height of the street view image. Default is None.", "type": "int, optional", "default": ""}, "width": {"description": "The width of the street view image. Default is None.", "type": "int, optional", "default": ""}}}
{"name": "getzipcodebycity", "description": "Fetches the zip code information for a given city using the Zillow API.", "parameters": {"city": {"description": "The name of the city for which the zip code is to be fetched.", "type": "str", "default": "Holtsville"}}}
{"name": "getsearchresults", "description": "Fetches the results from a specific YouTube influencer search using the provided search ID.", "parameters": {"is_id": {"description": "Unique identifier of the search.", "type": "str", "default": "5"}}}
{"name": "most_expensive", "description": "Retrieves the list of most expensive artworks.", "parameters": {"sort": {"description": "The criterion by which to sort the artworks. Defaults to 'usd_price'.", "type": "str", "default": "usd_price"}, "page": {"description": "The page number of the results to retrieve. Defaults to '1'.", "type": "str", "default": "1"}, "gallery": {"description": "The gallery to filter results by. Possible values include:", "type": "str, optional", "default": ""}}}
{"name": "time_zones", "description": "Retrieve all known time-zones.", "parameters": {"offset": {"description": "The zero-based offset index into the results.", "type": "str, optional", "default": ""}, "hateoasmode": {"description": "Whether to include HATEOAS-style links in the results.", "type": "bool, optional", "default": ""}, "limit": {"description": "The maximum number of results to retrieve.", "type": "int, optional", "default": ""}}}
{"name": "get_campaign_lead_from_id", "description": "Retrieve lead information from a campaign using its ID via the Fomo API.", "parameters": {"is_id": {"description": "The ID of the campaign to retrieve the lead information from.", "type": "str", "default": "Lead"}}}
{"name": "get_company_data_by_linkedin_url", "description": "Fetch company data using a given LinkedIn URL via the ToolBench RapidAPI.", "parameters": {"linkedin_url": {"description": "The LinkedIn URL of the company to retrieve data for.", "type": "str", "default": "https://www.linkedin.com/company/apple/"}}}
{"name": "business_delta", "description": "Calculates the number of business days between two given dates using the DaysAPI.", "parameters": {"second_date": {"description": "The second date in the range. Defaults to '2021-09-16'.", "type": "str, optional", "default": "2021-09-16"}, "first_date": {"description": "The first date in the range. Defaults to '2021-09-08'.", "type": "str, optional", "default": "2021-09-08"}}}
{"name": "categorize_website", "description": "Fetches and returns the top categories for a given website using the Website Categorization API.", "parameters": {"url": {"description": "The URL of the website to be categorized.", "type": "str", "default": "vercel.com"}}}
{"name": "getmoviestatus", "description": "Fetches the status of a movie using the HelioViewer API.", "parameters": {"is_id": {"description": "Unique movie identifier (provided by the response to a `queueMovie` request).", "type": "str", "default": "VXvX5"}, "format": {"description": "Desired movie format (`mp4`, `webm`, or `flv`).", "type": "str", "default": "mp4"}, "verbose": {"description": "Whether to include extra metadata in the response. Defaults to None.", "type": "bool, optional", "default": "checked"}, "callback": {"description": "Wrap the response object in a function call of your choosing. Defaults to None.", "type": "str, optional", "default": ""}, "token": {"description": "Authentication token. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "radical_stroke_number", "description": "Fetches advanced search results from the Kanji Alive API based on the radical stroke number.", "parameters": {"rs": {"description": "The radical stroke number to search for. Should be a positive integer represented as a string.", "type": "str", "default": "7"}}}
{"name": "seasonal_goal_analysis_scoring_first", "description": "Provides the scoring first goal statistics for a given match within specific minute intervals (0-10, 11-20, 21-30, etc.).", "parameters": {"matchid": {"description": "The ID of the match for which to retrieve the scoring first goal statistics.", "type": "int", "default": "1456548"}}}
{"name": "competitions_scorers", "description": "Fetches the list of current top scorers for a specified league and year.", "parameters": {"is_id": {"description": "The identifier for the league.", "type": "str", "default": "BUN"}, "year": {"description": "The year for which the top scorers are being requested. Defaults to '2021'.", "type": "str, optional", "default": "2021"}}}
{"name": "get_team_passing_data", "description": "Fetches passing data for NFL teams for a specified year and side (offense or defense).", "parameters": {"year": {"description": "The year for which the data is to be fetched. Should be between 1920 and the current year.", "type": "int", "default": "2021"}, "side": {"description": "The year for which the data is to be fetched. Should be between 1920 and the current year.", "type": "str", "default": "offense"}}}
{"name": "teamlastevents", "description": "Fetches the last events for a specific team using the MMA RapidAPI.", "parameters": {"page": {"description": "Zero-based page number to paginate through the events.", "type": "int", "default": ""}, "is_id": {"description": "The ID of the team for which the last events are to be retrieved.", "type": "int", "default": 465171}}}
{"name": "match_boxscore", "description": "Fetches the live, detailed team and player statistics for a specified basketball match using the RapidAPI service.", "parameters": {"matchid": {"description": "The ID of the basketball match for which the statistics are to be retrieved.", "type": "int", "default": "350275"}}}
{"name": "specific_skin", "description": "Retrieves details such as name, price, icon, class, and weapon for a specific Counter-Strike skin in field-tested condition (prices in USD).", "parameters": {"skin_name": {"description": "The name of the Counter-Strike skin, with underscores instead of spaces. Example: 'AK-47_Redline'.", "type": "str", "default": "AK-47_Slate"}}}
{"name": "get_user_playlists", "description": "Fetch all public playlists of a specific user from the Spotify API.", "parameters": {"user_id": {"description": "The ID of the user whose playlists are to be fetched.", "type": "str", "default": "cruilla"}}}
{"name": "list_of_districts", "description": "Fetches a list of districts from Booking.com where hotels are available, based on various optional filters.", "parameters": {"name": {"description": "The name of the district.", "type": "str, optional", "default": ""}, "country": {"description": "The country associated with the district.", "type": "str, optional", "default": ""}, "city_id": {"description": "The city ID associated with the district.", "type": "str, optional", "default": ""}, "district_id": {"description": "The district ID.", "type": "str, optional", "default": ""}, "page": {"description": "The page number for pagination purposes.", "type": "int, optional", "default": "0"}}}
{"name": "full_stock_price", "description": "Fetches the current stock price for a given symbol using the Toolbench RapidAPI.", "parameters": {"symbol": {"description": "The stock symbol to query.", "type": "str", "default": ""}}}
{"name": "stopwords", "description": "Retrieves stopwords for specified languages and categories from the RapidAPI service.", "parameters": {"langs": {"description": "Comma-separated list of language ISO codes.", "type": "str, optional", "default": ""}, "details": {"description": "Flag indicating whether to include details for each stopword.", "type": "bool, optional", "default": "0"}, "categories": {"description": "Comma-separated list of categories. Use /categories to get category IDs.", "type": "str, optional", "default": ""}}}
{"name": "calculate_grid_coordinate_points", "description": "Calculate all grid coordinate points based on a center geocoordinate point and distance arguments.", "parameters": {"radius": {"description": "The distance between coordinate points (on the same row/column in the grid). The units of the radius are determined by the `radius_units` parameter. Allowed values are 0.1-100. Default is 1.", "type": "str", "default": "1"}, "lng": {"description": "Grid center coordinate point longitude value.", "type": "str", "default": "-121.938314"}, "grid_size": {"description": "The size of the grid (e.g., 3x3, 5x5, 7x7, etc). Allowed values are 3, 5, 7, 9, 11, 13, 15.", "type": "str", "default": "3"}, "lat": {"description": "Grid center coordinate point latitude value.", "type": "str", "default": "37.341759"}, "radius_units": {"description": "Distance measurement units for the radius parameter. Allowed values are 'km' for kilometers and 'mi' for miles. Default is 'km'.", "type": "str, optional", "default": ""}}}
{"name": "cars", "description": "Fetches and filters a list of cars from the RapidAPI service.", "parameters": {"page": {"description": "The page number to retrieve.", "type": "str", "default": "0"}, "limit": {"description": "The maximum number of results to return per page.", "type": "str", "default": "10"}, "type": {"description": "Filter cars by type (e.g., SUV, sedan).", "type": "str, optional", "default": ""}, "model": {"description": "Filter cars by model.", "type": "str, optional", "default": ""}, "make": {"description": "Filter cars by make (manufacturer).", "type": "str, optional", "default": ""}, "year": {"description": "Filter cars by year of manufacture.", "type": "str, optional", "default": ""}}}
{"name": "linearregintercept", "description": "Calculates the linear regression intercept for the specified symbol and interval using the specified parameters and the Twelve Data API.", "parameters": {"symbol": {"description": "The instrument symbol (e.g., equity, index, ETF, forex, or cryptocurrency) to calculate the intercept for.", "type": "str", "default": "AAPL"}, "interval": {"description": "The interval between two consecutive data points in the time series (e.g., `1min`, `5min`, `15min`, etc.).", "type": "str", "default": "1min"}, "series_type": {"description": "The type of series to consider (e.g., `open`, `high`, `low`, `close`). Default is `close`.", "type": "str, optional", "default": "close"}, "time_period": {"description": "The period of time over which to calculate the intercept. Default is 9.", "type": "int, optional", "default": 9}, "format": {"description": "The format of the returned data (`csv` or `json`). Default is `json`.", "type": "str, optional", "default": "json"}, "outputsize": {"description": "The number of data points to retrieve. Default is 30.", "type": "int, optional", "default": 30}}}
{"name": "form5500_planname", "description": "Retrieves information about a specific plan based on the provided Employer Identification Number (EIN) using the Form 5500 API.", "parameters": {"ein": {"description": "Employer Identification Number (EIN) for the plan.", "type": "int", "default": "311334685"}}}
{"name": "ev", "description": "Fetch data from the EV API with optional pagination support by specifying the page number.", "parameters": {"page": {"description": "The page number for pagination, default is 2.", "type": "int, optional", "default": "2"}}}
{"name": "email_extractor", "description": "Extracts emails from the provided URL using the RapidAPI email scraper service.", "parameters": {"url": {"description": "The URL from which to extract emails.", "type": "str", "default": "https://en.wikipedia.org/wiki/Email"}}}
{"name": "item_by_id", "description": "Fetch an item from the Hacker News API by its unique ID.", "parameters": {"is_id": {"description": "The unique identifier of the item to retrieve.", "type": "str", "default": "10000"}}}
{"name": "author_author", "description": "Fetches all poems from Poetry DB written by a specific poet.", "parameters": {"author": {"description": "The poet's name or a part of the poet's name.", "type": "str", "default": "None"}}}
{"name": "get_user_metadata", "description": "Fetches metadata for a specified user from the Waifu API.", "parameters": {"user_id": {"description": "The unique identifier of the user whose metadata is to be fetched.", "type": "str", "default": "sample_user_id"}}}
{"name": "category", "description": "Retrieves information about a specific category from the VOD app API.", "parameters": {"name": {"description": "The name of the category to retrieve information for.", "type": "str", "default": ""}}}
{"name": "get_by_trakt_tv_id", "description": "Fetches movie or TV show information from the RapidAPI MDB List service based on a given Trakt.tv ID.", "parameters": {"t": {"description": "A valid Trakt.tv ID representing the movie or TV show.", "type": "str", "default": "457"}, "m": {"description": "The media type, either 'movie' or 'show'. Defaults to 'movie' if not specified.", "type": "str, optional", "default": ""}}}
{"name": "dad_jokes_search", "description": "Searches for dad jokes containing the given keyword using the RapidAPI Dad Jokes API.", "parameters": {"text": {"description": "The keyword to search for in the jokes. Default is 'dad'.", "type": "str", "default": "dad"}}}
{"name": "search_jokes", "description": "Search for jokes based on specified criteria.", "parameters": {"number": {"description": "The number of results to retrieve between 1 and 10. Defaults to 3.", "type": "int, optional", "default": 3}, "exclude_tags": {"description": "A comma-separated list of tags that the joke must not have. Defaults to 'nsfw'.", "type": "str, optional", "default": "nsfw"}, "max_length": {"description": "The maximum number of characters in the joke. Defaults to 200.", "type": "int, optional", "default": 200}, "include_tags": {"description": "A comma-separated list of tags that the joke must have. Defaults to 'one_liner'.", "type": "str, optional", "default": "one_liner"}, "keywords": {"description": "A comma-separated list of keywords to search for in jokes. Defaults to 'rocket'.", "type": "str, optional", "default": "rocket"}, "min_rating": {"description": "The minimum rating between 0 and 10 that the result should have. Defaults to 7.", "type": "int, optional", "default": 7}}}
{"name": "get_countrywise_city_data", "description": "Fetches a list of cities for a given country using an API, based on provided parameters.", "parameters": {"iso3": {"description": "A 3-character ISO3 country code. Default is 'IND'.", "type": "str", "default": "IND"}, "country": {"description": "The country name. Default is 'IND'.", "type": "str", "default": "IND"}, "count": {"description": "The maximum number of results to return. Default is 2.", "type": "int", "default": "2"}, "iso2": {"description": "A 2-character ISO2 country code. Default is 'IN'.", "type": "str", "default": "IN"}}}
{"name": "search_roman_god_by_name", "description": "Searches for a Roman God by name to get a description about them.", "parameters": {"god": {"description": "The name of the Roman God to search for.", "type": "str", "default": "jupiter"}}}
{"name": "whois_history_v1", "description": "Fetches the WHOIS history for a specified domain.", "parameters": {"domainname": {"description": "The domain for which historic WHOIS data is requested.", "type": "str", "default": "google.com"}, "createddateto": {"description": "Search domains created before this date. Format: \"YYYY-MM-DD\".", "type": "str, optional", "default": ""}, "createddatefrom": {"description": "Search domains created after this date. Format: \"YYYY-MM-DD\".", "type": "str, optional", "default": ""}, "outputformat": {"description": "Response output format, either \"XML\" or \"JSON\". Defaults to \"JSON\".", "type": "str, optional", "default": ""}, "expireddateto": {"description": "Search domains expired before this date. Format: \"YYYY-MM-DD\".", "type": "str, optional", "default": ""}, "updateddateto": {"description": "Search domains updated before this date. Format: \"YYYY-MM-DD\".", "type": "str, optional", "default": ""}, "mode": {"description": "Mode of operation; \"preview\" to return the number of domains (free) or \"purchase\" to return the actual domain list (limited to 10,000 and costs 50 DRS credits). Defaults to \"preview\".", "type": "str, optional", "default": ""}, "updateddatefrom": {"description": "Search domains updated after this date. Format: \"YYYY-MM-DD\".", "type": "str, optional", "default": ""}, "expireddatefrom": {"description": "Search domains expired after this date. Format: \"YYYY-MM-DD\".", "type": "str, optional", "default": ""}, "sincedate": {"description": "Search for activities detected since this date. Format: \"YYYY-MM-DD\".", "type": "str, optional", "default": ""}}}
{"name": "list_playlist_tracks_and_episodes", "description": "Lists tracks and episodes in a specified Spotify playlist.", "parameters": {"playlistid": {"description": "The ID of the playlist to list contents from.", "type": "str", "default": "5782GLkrpvN8zbJQRjMaSW"}, "offset": {"description": "The number of items to skip before starting to collect results. Defaults to `0`.", "type": "int, optional", "default": ""}, "limit": {"description": "The maximum number of items to return. Defaults to `100`.", "type": "int, optional", "default": ""}}}
{"name": "get_wisdom_quotes_by_topic", "description": "Fetches wisdom quotes related to a specific topic using the RapidAPI service.", "parameters": {"topic": {"description": "The topic to retrieve wisdom quotes about.", "type": "str", "default": "Anger"}}}
{"name": "calculate_repayment_schedule", "description": "Calculates the repayment schedule for a loan using specified parameters.", "parameters": {"installmentcount": {"description": "Number of installments for the loan repayment.", "type": "str", "default": ""}, "principalamount": {"description": "Principal amount of the loan.", "type": "str", "default": ""}, "annualinterestrate": {"description": "Annual interest rate of the loan.", "type": "str", "default": ""}, "startdate": {"description": "Start date of the loan repayment schedule.", "type": "str", "default": ""}, "repaymentinterval": {"description": "Repayment interval, defaults to monthly if not provided.", "type": "str, optional", "default": ""}}}
{"name": "forex_pairs_list", "description": "Fetches a list of available forex pairs from the Twelve Data API, with optional filters for base currency, symbol, response format, and quote currency.", "parameters": {"currency_base": {"description": "Filter the results by base currency. Defaults to 'EUR'.", "type": "str", "default": "EUR"}, "symbol": {"description": "Filter the results by symbol. Optional.", "type": "str", "default": ""}, "format": {"description": "The format of the response. Can be 'json' or 'csv'. Defaults to 'json'.", "type": "str", "default": "json"}, "currency_quote": {"description": "Filter the results by quote currency. Optional.", "type": "str", "default": ""}}}
{"name": "get_token_balance", "description": "Fetches the balance of a specific token for a given address using the PancakeSwap API.", "parameters": {"address": {"description": "The blockchain address to check the token balance for.", "type": "str", "default": "0xe9e7cea3dedca5984780bafc599bd69add087d56"}, "token": {"description": "The token identifier (contract address or symbol) to check the balance of.", "type": "str", "default": "0xe9e7cea3dedca5984780bafc599bd69add087d56"}}}
{"name": "shazam_songs_get_details", "description": "Fetches song details from the Shazam API using a given song ID.", "parameters": {"is_id": {"description": "The value of the 'id' field returned by the /search endpoint on Shazam.", "type": "str", "default": "40333609"}, "locale": {"description": "The language code (default is 'en-US').", "type": "str, optional", "default": "en-US"}}}
{"name": "france_songs", "description": "Fetch the France Songs chart information for a given date and range.", "parameters": {"date": {"description": "The date for which to retrieve the chart, formatted as YYYY-MM-DD.", "type": "str", "default": "2022-05-07"}, "range": {"description": "The range of positions to retrieve from the chart (e.g., '1-10' for top 10 songs).", "type": "str", "default": "1-10"}}}
{"name": "get_the_stock_history_by_code", "description": "Retrieves the stock history for a given stock code and date using the RapidAPI service.", "parameters": {"date": {"description": "The specific date to get the stock history for, in 'YYYY-MM-DD' format.", "type": "str", "default": "2023-02-01"}, "stockcode": {"description": "The stock code for which to retrieve the historical data.", "type": "str", "default": "GOOG"}}}
{"name": "get_airline_details", "description": "Fetch details for an airline based on its IATA code.", "parameters": {"code": {"description": "The IATA code of the airline for which details are to be fetched.", "type": "str", "default": "LH"}}}
{"name": "airportstatistics", "description": "Returns detailed airport statistics for a specified airport based on provided identifiers.", "parameters": {"ident": {"description": "The ident of the airport, as returned by /airport/search.", "type": "str, optional", "default": ""}, "localid": {"description": "Local identifiers of the airport, available mostly for the US & CA (FAA-ID). Max length is 6.", "type": "str, optional", "default": ""}, "iata": {"description": "The IATA code of the airport, must have a length of 3.", "type": "str, optional", "default": ""}, "icao": {"description": "The ICAO code of the airport, must have a length of 4.", "type": "str, optional", "default": ""}}}
{"name": "video_post_metadata", "description": "Fetch metadata for a single TikTok video post.", "parameters": {"video": {"description": "The URL of the TikTok video post. For example: 'https://www.tiktok.com/@charlidamelio/video/7137423965982592302'.", "type": "str", "default": "https://www.tiktok.com/@charlidamelio/video/7010108194051640582"}, "fresh": {"description": "If set to 1, force the return of fresh data (not cached). Defaults to 0.", "type": "int, optional", "default": "0"}}}
{"name": "shakespeare", "description": "Translates the given text to Shakespearean style English using the FunTranslations API.", "parameters": {"x_funtranslations_api_secret": {"description": "API key for the FunTranslations service. Obtain one at http://funtranslations.com/api/shakespeare.", "type": "str", "default": ""}, "text": {"description": "The text to convert to Shakespearean style English.", "type": "str", "default": "You asked Mr. Weasely to do magic!"}}}
{"name": "inn_general_director", "description": "Retrieves the general director information of a company based on its INN (tax identification number) using the Toolbench RapidAPI.", "parameters": {"inn": {"description": "The INN number of the company.", "type": "str", "default": "7736050003"}}}
{"name": "welcome", "description": "Fetches NFT-related data from the specified API using optional parameters.", "parameters": {"nft": {"description": "An optional string parameter to specify the NFT data to fetch. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "flights_list_in_boundary", "description": "Fetches a list of flights within a specified geographical bounding box and returns flight information based on various optional filters.", "parameters": {"bl_lng": {"description": "The bottom left longitude of the bounding box.", "type": "int", "default": "100.641975"}, "tr_lat": {"description": "The top right latitude of the bounding box.", "type": "int", "default": "13.771029"}, "bl_lat": {"description": "The bottom left latitude of the bounding box.", "type": "int", "default": "13.607884"}, "tr_lng": {"description": "The top right longitude of the bounding box.", "type": "int", "default": "100.861566"}, "type": {"description": "Filter by the value of the 'Code' field returned in the aircrafts/list endpoint.", "type": "str, optional", "default": ""}, "speed": {"description": "Filter by speed. The format is min,max (e.g., \"0,460\").", "type": "str, optional", "default": ""}, "airline": {"description": "Filter by the value of the 'ICAO' field returned in the airlines/list endpoint.", "type": "str, optional", "default": ""}, "altitude": {"description": "Filter by altitude. The format is min,max (e.g., \"0,48000\").", "type": "str, optional", "default": ""}, "airport": {"description": "Filter by the 'icao' field of the airport.", "type": "str, optional", "default": ""}, "reg": {"description": "Filter by registration (e.g., \"D-AIHV\").", "type": "str, optional", "default": ""}, "limit": {"description": "The maximum number of flights per response (default is 300; max is 300).", "type": "int, optional", "default": "300"}}}
{"name": "us_dc", "description": "Fetches current or historical gas price data for Washington D.C.", "parameters": {"date": {"description": "The date for which to fetch historical gas price data. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "blogs_by_category", "description": "Fetches all blogs from a given category by its ID using the RapidAPI service.", "parameters": {"category": {"description": "The ID of the category to fetch blogs from.", "type": "int", "default": "5"}}}
{"name": "subtitles", "description": "Retrieve the list of available subtitles for a given video using the YouTube API. This request uses a quota cost of 1 unit.", "parameters": {"is_id": {"description": "The ID of the video for which subtitles are being requested.", "type": "str", "default": "arj7oStGLkU"}, "x_cachebypass": {"description": "Optional cache bypass parameter.", "type": "str, optional", "default": ""}, "format": {"description": "The desired subtitle format. Options include:", "type": "str, optional", "default": ""}}}
{"name": "get_vessels_by_ship_name", "description": "Fetches vessel information based on the given ship name using the RapidAPI service.", "parameters": {"name": {"description": "The name of the ship for which to retrieve vessel information.", "type": "str", "default": "ATLAS"}}}
{"name": "shorts_sequence", "description": "Fetches a sequence of YouTube Shorts videos based on provided parameters.", "parameters": {"x_cachebypass": {"description": "Cache bypass, the value must be '1'. Defaults to None.", "type": "str, optional", "default": ""}, "lang": {"description": "Language code for localized results, e.g., 'en', 'gb', 'hi'. Defaults to None.", "type": "str, optional", "default": ""}, "geo": {"description": "ISO 3166-2 country code of the region, e.g., 'US' (default), 'UK', 'CA', 'IN'. Defaults to None.", "type": "str, optional", "default": ""}, "params": {"description": "Sequence continuation parameter, either 'sequenceContiuation' from Shorts Info Endpoint's response for WHATTOWATCH or 'continuation' from the previous request's response. Defaults to a predefined sequence continuation value.", "type": "str, optional", "default": "GhEKCzBJNkZXMkZYX2I4GAAgASoCGA9CAGIEUkRTSA%3D%3D.Cgt4QTg3Z0ltOWdScyi56NqeBg%3D%3D"}, "is_id": {"description": "If the params value is not available, a Shorts Video ID may be provided (not recommended). Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "numerology", "description": "Calculates the numerology information of a given name by making a request to the horoscope-astrology API using RapidAPI.", "parameters": {"n": {"description": "The name for which numerology information is to be calculated.", "type": "str", "default": "7"}}}
{"name": "image_convert", "description": "Convert an image to a specified format and resize it.", "parameters": {"accept": {"description": "The content type to accept in the response (default is 'image/png').", "type": "str", "default": "image/png"}, "format": {"description": "The format to convert the image to (default is 'jpeg').", "type": "str", "default": "jpeg"}, "source": {"description": "The URL of the source image to be converted.", "type": "str", "default": ""}, "height": {"description": "The desired height of the converted image (default is 300 pixels).", "type": "int", "default": "300"}, "width": {"description": "The desired width of the converted image (default is 300 pixels).", "type": "int", "default": "300"}}}
{"name": "geogrid_seach_with_ranking", "description": "Perform a full grid search and retrieve the ranking of a business at every coordinate point in the grid. The grid cells in the results are ordered left-to-right, then top-to-bottom. Additional ranking data for the business is provided based on either place ID or business name.", "parameters": {"match_value": {"description": "The search query or keyword.", "type": "str", "default": "ChIJoejvAr3Mj4ARtHrbKxtAHXI"}, "query": {"description": "The Google Place ID of the business or the business name to match in results. Use the `match_type` parameter to specify the choice.", "type": "str", "default": "web design"}, "lng": {"description": "Longitude value of the grid center coordinate point.", "type": "int", "default": "-121.938314"}, "lat": {"description": "Latitude value of the grid center coordinate point.", "type": "int", "default": "37.341759"}, "zoom": {"description": "Google Maps zoom level to use for searching each grid point. Default is 13.", "type": "int, optional", "default": "13"}, "match_type": {"description": "The type of match to perform for ranking. Either 'place_id' or 'name'. Default is 'place_id'.", "type": "str, optional", "default": "place_id"}, "distance_unit": {"description": "The unit of measurement for distance. Default is 'km'.", "type": "str, optional", "default": "km"}, "width": {"description": "The width of the grid in location points for non-square grid searches. Default is 5.", "type": "int, optional", "default": "5"}, "height": {"description": "The height of the grid in location points for non-square grid searches. Default is 5.", "type": "int, optional", "default": "5"}, "grid_size": {"description": "The size of the grid (e.g., 3x3, 5x5). Default is 5.", "type": "int, optional", "default": "5"}, "distance": {"description": "The distance between coordinate points on the same row/column in the grid. Default is 1.", "type": "int, optional", "default": "1"}}}
{"name": "exact_url_non_english", "description": "Retrieves the backlinks of a specific non-English URL using the RapidAPI service.", "parameters": {"domain": {"description": "The domain of the non-English URL for which to retrieve backlinks.", "type": "str", "default": "https://codeconia.com/2021/05/28/html-form-to-email-with-attachment-using-php/"}}}
{"name": "analysis", "description": "Analyzes the content from a given URL using the SEO Fast Audit API.", "parameters": {"url": {"description": "The URL of the website to be analyzed.", "type": "str", "default": "https://docteurseo.fr/"}}}
{"name": "retrieve_aggregated_loan_offers", "description": "Retrieves the aggregated loan offers for a specified collection using the Blur API.", "parameters": {"collection": {"description": "The name or identifier of the collection for which to retrieve aggregated loan offers.", "type": "str", "default": "0x5af0d9827e0c53e4799bb226655a1de152a425a"}}}
{"name": "market_most_actives", "description": "Fetches the most active stocks ordered by intraday trade volume using the Yahoo Finance API.", "parameters": {"start": {"description": "The start index for the request. Defaults to 0.", "type": "int, optional", "default": "0"}}}
{"name": "stock_get_stock_quote_type_data", "description": "Fetch stock quote type data for a given stock symbol and region using the specified RapidAPI key.", "parameters": {"symbol": {"description": "The ticker symbol for the stock (e.g., \"AAPL\" for Apple Inc.).", "type": "str", "default": "AAPL"}, "region": {"description": "The region code for the stock market. Default is 'US'. Allowed values are 'US', 'BR', 'AU', 'CA', 'FR', 'DE', 'HK', 'IN', 'IT', 'ES', 'GB', 'S'.", "type": "str, optional", "default": "US"}}}
{"name": "stock_v2_get_financial_details", "description": "Retrieves financial details for a given stock using the Morningstar API.", "parameters": {"performanceid": {"description": "The performance ID value obtained from the /auto-complete, /get-summary, or /get-movers endpoints.", "type": "str", "default": "0P0000OQN8"}, "datatype": {"description": "The data frequency. One of the following: 'A' for Annual or 'Q' for Quarterly. Defaults to 'A'.", "type": "str, optional", "default": "A"}, "reporttype": {"description": "The report type. One of the following: 'R' for Restated or 'A' for As originally reported. Defaults to 'A'.", "type": "str, optional", "default": "A"}, "type": {"description": "The data frequency. One of the following: 'A' for Annual or 'Q' for Quarterly. Defaults to 'A'.", "type": "str, optional", "default": "incomeStatement"}}}
{"name": "executives", "description": "Fetches information about the current composition of executives for a given stock symbol using the Holistic Finance Stock Data API.", "parameters": {"symbol": {"description": "The stock symbol for which to retrieve executive information.", "type": "str", "default": "MSFT"}}}
{"name": "ideas_get_comments", "description": "Fetches comments related to an idea post from the TradingView API.", "parameters": {"uuid": {"description": "The unique identifier of the idea post obtained from the `.../ideas/list` endpoint.", "type": "str", "default": "CRK6Iv51"}, "lang": {"description": "The language code for the comments. Defaults to 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "tweet_favoriters", "description": "Fetches the list of users who have favorited a specific tweet.", "parameters": {"is_id": {"description": "The ID of the tweet for which to fetch favoriters.", "type": "str", "default": "1485953263040188416"}, "count": {"description": "The number of results to return. Defaults to 20.", "type": "int, optional", "default": "20"}, "cursor": {"description": "The cursor for paginating through results. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "highlights", "description": "Fetches the Instagram story highlights for a given username using the Toolbench RapidAPI service.", "parameters": {"username": {"description": "The Instagram username for which to fetch story highlights. Defaults to 'kimkardashian'.", "type": "str", "default": "kimkardashian"}}}
{"name": "get_synthesize", "description": "Synthesizes the provided text using the Speakeasy API and returns the corresponding audio URL or response.", "parameters": {"text": {"description": "The text to be synthesized into speech.", "type": "str", "default": "The quick brown fox jumps over the lazy dog"}}}
{"name": "seasonal_goal_analysis_goal_minutes", "description": "Analyzes the goal statistics of the teams in a specified match, broken down into specific minute intervals (e.g., 0-10, 11-20, etc.). The data is retrieved from the Soccer Match List or Fixture API endpoints within a -+7 days period from the match date.", "parameters": {"matchid": {"description": "The ID of the match for which to retrieve goal statistics.", "type": "int", "default": "1452254"}}}
{"name": "query_for_distance_between_two_h3_indexes", "description": "Queries the distance between two H3 indexes using the VanitySoft UK Boundaries API.", "parameters": {"h3index1": {"description": "The first H3 index for the distance query.", "type": "str", "default": "8d2baad9c6f073f"}, "h3index2": {"description": "The second H3 index for the distance query.", "type": "str", "default": "8d09a6b6ed2d37f"}}}
{"name": "reverse", "description": "Performs reverse geocoding to obtain location details from longitude and latitude coordinates.", "parameters": {"lon": {"description": "The longitude of the location to be reverse geocoded.", "type": "str", "default": "16.3523667"}, "lat": {"description": "The latitude of the location to be reverse geocoded.", "type": "str", "default": "48.200702"}, "polygon": {"description": "If specified, includes polygon details in the response.", "type": "str, optional", "default": ""}, "language": {"description": "Language for the response data. Must be a valid ISO 639-1 language code.", "type": "str, optional", "default": ""}}}
{"name": "getstandardmaptile", "description": "Fetch a standard map tile with labels in the local language from OpenStreetMap.", "parameters": {"y": {"description": "Y-number of the tile.", "type": "int", "default": "3"}, "x": {"description": "X-number of the tile.", "type": "int", "default": "6"}, "z": {"description": "Zoom level (from 0 to 19).", "type": "int", "default": "3"}}}
{"name": "goal_analysis_scoring_first_in_between", "description": "Fetches the scoring first goal statistics for a match within specified minute intervals.", "parameters": {"matchid": {"description": "The ID of the match for which to fetch the scoring first goal statistics.", "type": "int", "default": "1452254"}}}
{"name": "teamtournaments", "description": "Retrieves the unique tournaments in which an Ice Hockey team has participated.", "parameters": {"is_id": {"description": "The ID of the team for which tournaments will be retrieved.", "type": "int", "default": 3682}}}
{"name": "retrieve_response", "description": "Retrieve the response from the \"Rewriter\" endpoint using a given JOB ID.", "parameters": {"job_id": {"description": "The JOB ID generated on the \"Rewriter\" endpoint.", "type": "str", "default": "1124817"}}}
{"name": "stock_information", "description": "Fetch real-time stock information for a given stock name using the Toolbench RapidAPI.", "parameters": {"name": {"description": "The name of the stock for which to retrieve information.", "type": "str", "default": "TSLA"}}}
{"name": "getesgnews", "description": "Fetch ESG (Environmental, Social, and Governance) news articles from a specified API. The results include ESG-specific topics such as SASB, UN SDGs, Modern Slavery, and Gender Equality.", "parameters": {"content_type": {"description": "The content type for the news search. Defaults to None.", "type": "str, optional", "default": ""}, "date": {"description": "The date for the news search in DD/MM/YYYY format. Defaults to None.", "type": "str, optional", "default": ""}, "companyname": {"description": "The name of the company to search for news articles. Defaults to 'Apple Inc.'.", "type": "str, optional", "default": "Apple Inc."}, "sedol": {"description": "The SEDOL (Stock Exchange Daily Official List) number to use for the news search. Defaults to None.", "type": "str, optional", "default": ""}, "isin": {"description": "The ISIN (International Securities Identification Number) to use for the news search. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "medprice", "description": "Fetches the median price (MEDPRICE) of a given financial instrument over a specified interval using the Twelve Data API.", "parameters": {"interval": {"description": "Interval between two consecutive points in the time series. Supported values are `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`.", "type": "str", "default": "1min"}, "symbol": {"description": "Instrument symbol such as equity, index, ETF, forex, or cryptocurrency. Examples include `AAPL`, `EUR/USD`, `ETH/BTC`.", "type": "str", "default": "AAPL"}, "format": {"description": "Response format. Can be `CSV` or `JSON`. Defaults to `json`.", "type": "str, optional", "default": "json"}, "outputsize": {"description": "Number of data points in the response. Defaults to `30`.", "type": "int, optional", "default": 30}}}
{"name": "kline_candlestick_data", "description": "Fetch Kline/Candlestick data from the RapidAPI crypto markets endpoint for the specified cryptocurrency symbol and interval.", "parameters": {"interval": {"description": "The interval for each candlestick (e.g., '1m', '5m', '1h').", "type": "str", "default": ""}, "symbol": {"description": "The symbol of the cryptocurrency (e.g., 'BTCUSDT').", "type": "str", "default": "BTCUSDT"}, "starttime": {"description": "The start time for the data in ISO 8601 format. Defaults to None.", "type": "str, optional", "default": ""}, "endtime": {"description": "The end time for the data in ISO 8601 format. Defaults to None.", "type": "str, optional", "default": ""}, "limit": {"description": "The number of data points to retrieve. Defaults to 500 and maximum allowed is 1000.", "type": "int, optional", "default": "500"}}}
{"name": "gera_mapa_dos_arredores", "description": "Generates a map of the surroundings for a given CNPJ (Brazilian company identifier). This function allows customization of the map through various parameters such as height, zoom, width, scale, and type.", "parameters": {"cnpj": {"description": "The CNPJ of the company to generate the map for.", "type": "str", "default": "37335118000180"}, "height": {"description": "The height of the map. Defaults to None.", "type": "int, optional", "default": ""}, "zoom": {"description": "The zoom level of the map. Defaults to None.", "type": "int, optional", "default": ""}, "width": {"description": "The width of the map. Defaults to None.", "type": "int, optional", "default": ""}, "scale": {"description": "The scale of the map. Defaults to None.", "type": "int, optional", "default": ""}, "type": {"description": "The type of the map (e.g., 'hybrid'). Defaults to 'hybrid'.", "type": "str, optional", "default": "hybrid"}}}
{"name": "retrieve_bids", "description": "Retrieve bids for a specified contract address from the Blur API.", "parameters": {"contractaddress": {"description": "The address of the contract for which to retrieve bids.", "type": "str", "default": "0x231d3559aa848bf10366fb9868590f01d34bf240"}, "is_from": {"description": "The starting index from which to retrieve bids. Defaults to None.", "type": "int, optional", "default": ""}, "take": {"description": "The number of bids to retrieve. Defaults to None.", "type": "int, optional", "default": ""}}}
{"name": "attribute_overviews", "description": "Fetches attribute overviews for a given player using the SofaScores API.", "parameters": {"player_id": {"description": "The unique identifier for the player whose attribute overviews are to be retrieved.", "type": "int", "default": "12994"}}}
{"name": "symbol_order_book_ticker", "description": "Fetches the order book ticker information for a specific cryptocurrency symbol using RapidAPI.", "parameters": {"symbol": {"description": "The symbol for the cryptocurrency (e.g., 'BTCUSDT'). Defaults to 'BTCUSDT'. If not provided, bookTickers for all symbols will be returned in an array.", "type": "str", "default": "BTCUSDT"}}}
{"name": "schedule_by_date", "description": "Fetches the event schedule for a given date and sport ID using the specified API key.", "parameters": {"date": {"description": "The date for which the event schedule is requested, in 'YYYY-MM-DD' format.", "type": "str", "default": "2022-05-11"}, "sport_id": {"description": "The ID of the sport for which the schedule is requested.", "type": "int", "default": "1"}}}
{"name": "defaultroot", "description": "Fetches cat facts from the MeowFacts API based on the provided parameters.", "parameters": {"count": {"description": "The number of cat facts to return. If not specified, a default number of facts will be returned.", "type": "int, optional", "default": ""}, "factid": {"description": "An optional ID to retrieve a specific cat fact. If not specified, random facts will be returned.", "type": "str, optional", "default": ""}, "lang": {"description": "The locale in which to retrieve the cat facts. Defaults to 'eng' (English).", "type": "str, optional", "default": "eng"}}}
{"name": "get_wisdom_quotes_by_page", "description": "Retrieves wisdom quotes from a specified page using the Toolbench RapidAPI.", "parameters": {"page": {"description": "The page number to retrieve quotes from.", "type": "str", "default": "12"}}}
{"name": "drawings_between_dates", "description": "Fetches all Cash4Life winning number sets between two specified dates.", "parameters": {"date1": {"description": "The beginning date in the format 'YYYY-MM-DD'.", "type": "str", "default": "2023-01-01"}, "date2": {"description": "The end date in the format 'YYYY-MM-DD'.", "type": "str", "default": "2023-01-05"}}}
{"name": "retrieving_a_contract", "description": "Fetches detailed information about an asset contract from the OpenSea API.", "parameters": {"asset_contract_address": {"description": "The address of the asset contract to retrieve information for.", "type": "str", "default": "0x4372f4d950d30c6f12c7228ade77d6cc019404c9"}}}
{"name": "get_jokes", "description": "Retrieve a list of jokes from an API.", "parameters": {"limit": {"description": "Number of results per request between 0 and 30. Defaults to 20.", "type": "int, optional", "default": "20"}, "page": {"description": "Current page number for paginated results. Defaults to 1.", "type": "int, optional", "default": "1"}}}
{"name": "baseball_league_rankings", "description": "Fetches and returns the baseball league standings for a given league ID.", "parameters": {"league_id": {"description": "The ID of the baseball league for which rankings are to be fetched. League IDs can be retrieved from the Baseball Live Matches endpoint.", "type": "str", "default": "41276"}}}
{"name": "shopify_store_products", "description": "Retrieve all products from a Shopify store using the specified API.", "parameters": {"page": {"description": "The page number to retrieve products from.", "type": "int", "default": "1"}, "url": {"description": "The base URL of the Shopify store.", "type": "str", "default": "https://row.gymshark.com"}}}
{"name": "v1_historicalfigures", "description": "Retrieves a list of historical figures matching the given search parameters from the API Ninjas Historical Figures API.", "parameters": {"offset": {"description": "The number of results to skip for pagination. Defaults to None.", "type": "int, optional", "default": ""}, "name": {"description": "The name of the historical figure to search for. Partial names are also accepted (e.g., \"julius\" will match \"Julius Caesar\"). Defaults to 'julius caesar'.", "type": "str, optional", "default": "julius caesar"}}}
{"name": "get_job_details", "description": "Fetch detailed job information from a given job URL, optionally including skills, using the ToolBench RapidAPI service.", "parameters": {"job_url": {"description": "The URL to the job posting.", "type": "str", "default": "https://www.linkedin.com/jobs/view/3690897280/"}, "include_skills": {"description": "Flag to include skills in the fetched details. Defaults to 'false'. Including skills will cost 1 more credit.", "type": "str, optional", "default": "false"}}}
{"name": "v1_loremipsum", "description": "Fetches lorem ipsum placeholder text from the API Ninjas Lorem Ipsum API.", "parameters": {"max_length": {"description": "Maximum character length for the returned text.", "type": "int, optional", "default": ""}, "start_with_lorem_ipsum": {"description": "Whether to begin the text with \"Lorem ipsum\". Accepts 'true' or 'false'. Defaults to 'true' if unset.", "type": "str, optional", "default": ""}, "random": {"description": "Whether to randomly generate paragraphs. Accepts 'true' or 'false'. Defaults to 'true' if unset.", "type": "str, optional", "default": ""}, "paragraphs": {"description": "Number of paragraphs to generate. Defaults to 1 if unset.", "type": "int, optional", "default": ""}}}
{"name": "ufc_fight_night_rozenstruik_vs_almeida_may_13_2023", "description": "Fetch details for UFC Fight Night: Rozenstruik vs. Almeida held on May 13, 2023.", "parameters": {"offset": {"description": "The number of records to skip before starting to return results.", "type": "int, optional", "default": ""}, "limit": {"description": "The maximum number of records to return.", "type": "int, optional", "default": ""}}}
{"name": "praise", "description": "Send a praise message for a person using HumorAPI.", "parameters": {"reason": {"description": "The reason for the praise.", "type": "str", "default": "you did it again"}, "name": {"description": "The name of the person to be praised.", "type": "str", "default": "Alex"}}}
{"name": "get_result_by_date", "description": "Fetches the draws result for a specific date from the Euro Millions API.", "parameters": {"date": {"description": "The date for which to fetch the draws result in 'YYYY-MM-DD' format.", "type": "str", "default": "2011-03-18"}}}
{"name": "video_related_contents", "description": "Fetches related video contents from YouTube using the RapidAPI service.", "parameters": {"hl": {"description": "Language code for the response (default is 'en').", "type": "str", "default": "en"}, "is_id": {"description": "The YouTube video ID for which related contents are to be fetched (default is 'kJQP7kiw5Fk').", "type": "str", "default": "kJQP7kiw5Fk"}, "gl": {"description": "Country code for the response (default is 'US').", "type": "str", "default": "US"}, "cursor": {"description": "Token for pagination to retrieve the next set of results.", "type": "str, optional", "default": ""}}}
{"name": "get_job_status", "description": "Fetch the status and results of a job from the Large Text-to-Speech service using RapidAPI.", "parameters": {"is_id": {"description": "The unique identifier of the job whose status and result need to be fetched.", "type": "str", "default": "5425b1c0-357b-47cf-a06c-69c5260ea890"}}}
{"name": "get_stream_game_name", "description": "Fetch the current game name of a Twitch stream for a given user ID.", "parameters": {"userid": {"description": "The Twitch user ID for which to fetch the current game name.", "type": "str", "default": "xqcow"}}}
{"name": "url_analysis", "description": "Analyzes the given URL using the Toolbench RapidAPI service.", "parameters": {"url": {"description": "The URL to be analyzed.", "type": "str", "default": "cleverbikes.myshopify.com"}}}
{"name": "hashtag_data_by_name", "description": "Fetches data for a specified TikTok hashtag using the given challenge name.", "parameters": {"challenge_name": {"description": "The name of the TikTok hashtag challenge to retrieve data for.", "type": "str", "default": "food"}}}
{"name": "search_users", "description": "Search for users on TikTok based on the provided keyword.", "parameters": {"keyword": {"description": "The keyword to search for users on TikTok.", "type": "str", "default": ""}}}
{"name": "get_2_year_historical_quarterly_prices", "description": "Retrieves 2-year historical quarterly prices for a given stock ticker.", "parameters": {"ticker": {"description": "The stock ticker symbol for which to retrieve historical prices.", "type": "str", "default": "AAPL"}}}
{"name": "estimates", "description": "Retrieves estimates for a specified stock symbol using the Holistic Finance API.", "parameters": {"symbol": {"description": "The stock symbol for which to retrieve estimates.", "type": "str", "default": "AAPL"}}}
{"name": "search_twitter", "description": "Search Twitter based on the specified type, count, and query criteria, with optional cursor for pagination and API key for authorization.", "parameters": {"type": {"description": "The type of search to perform (Top, Latest, Videos, Photos, or People).", "type": "str", "default": "Top"}, "count": {"description": "The number of search results to return.", "type": "str", "default": "20"}, "query": {"description": "The search query string.", "type": "str", "default": "Mr Beast"}, "cursor": {"description": "The cursor for pagination to fetch the next set of results. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "v1_category", "description": "Fetches a list of trending categories from the Tokapi Mobile API using specified query parameters.", "parameters": {"count": {"description": "Number of categories to fetch. Defaults to 10.", "type": "int", "default": 10}, "offset": {"description": "Offset for pagination. Defaults to 0.", "type": "int", "default": 0}, "region": {"description": "Region code for filtering categories. Defaults to 'US'.", "type": "str", "default": "US"}}}
{"name": "get_individual_result_by_id", "description": "Fetches individual result data by a given ID from the Robbery Data API.", "parameters": {"is_id": {"description": "The ID of the individual whose result data is to be fetched.", "type": "str", "default": "10"}}}
{"name": "check_similarity", "description": "Checks if two domains are similar using the Whois Lookup API.", "parameters": {"domain1": {"description": "The first domain to compare.", "type": "str", "default": "google.com"}, "domain2": {"description": "The second domain to compare.", "type": "str", "default": "shopify.com"}}}
{"name": "getdomaintech", "description": "Retrieves technology information for a given domain using the Runs Tech API.", "parameters": {"domain": {"description": "The domain name for which technology information is to be retrieved.", "type": "str", "default": ""}}}
{"name": "v1_animals", "description": "Queries the API Ninjas Animals API endpoint to return up to 10 results matching the input animal name.", "parameters": {"name": {"description": "The common name of the animal to search. This parameter supports partial matches (e.g., \"fox\" will match \"gray fox\" and \"red fox\").", "type": "str", "default": "cheetah"}}}
{"name": "getfeedversions", "description": "Retrieve a list of feed versions from the TransitFeeds API, optionally filtering the results based on the given parameters.", "parameters": {"feed": {"description": "The feed ID to restrict results to. Defaults to 'sfmta/60'.", "type": "str", "default": "sfmta/60"}, "page": {"description": "The page of results to return. If None, the first page is returned.", "type": "str, optional", "default": ""}}}
{"name": "live_events", "description": "Retrieves a list of ongoing live events from the specified endpoint, optionally filtered by city, genre, and location.", "parameters": {"city": {"description": "The city to filter the events by. Defaults to 'Firenze'.", "type": "str", "default": "Firenze"}, "genre": {"description": "The genre to filter the events by. Defaults to 'festival'.", "type": "str", "default": "festival"}, "location": {"description": "The location to filter the events by. Defaults to 'PIAZZA SANTA MARIA NOVELLA'.", "type": "str", "default": "PIAZZA SANTA MARIA NOVELLA"}}}
{"name": "cinemas_id_showtimes", "description": "Fetches the showtimes for a specified cinema and optionally filters by a given film.", "parameters": {"is_id": {"description": "The cinema identifier.", "type": "str", "default": ""}, "filmid": {"description": "The film identifier to filter showtimes. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "getteams", "description": "Fetches NHL team data for a given season with optional expanded information.", "parameters": {"season": {"description": "The specific season to return team data for. Defaults to 20172018.", "type": "int, optional", "default": 20172018}, "expand": {"description": "A parameter to expand the response with additional data, such as team rosters. Defaults to 'team.roster'.", "type": "str, optional", "default": "team.roster"}}}
{"name": "domain_name", "description": "Retrieves WHOIS details for the given domain name using the RapidAPI service.", "parameters": {"domain_name": {"description": "The domain name for which to retrieve the WHOIS details.", "type": "str", "default": "google.com"}}}
{"name": "domain_data", "description": "Retrieves domain information for a given website using the Website Analyze and SEO Audit Pro API.", "parameters": {"website": {"description": "The URL of the website for which to retrieve domain information.", "type": "str", "default": "getecz.com"}}}
{"name": "get_raster_tile", "description": "Retrieves a raster tile as a PNG image from a specified map style and coordinates. The tile can be used in mapping libraries like Leaflet.", "parameters": {"x": {"description": "The tile's x-coordinate.", "type": "int", "default": "0"}, "y": {"description": "The tile's y-coordinate.", "type": "int", "default": "0"}, "style_name": {"description": "The name of the map style. Options include `kurviger-liberty` and `osm-bright`.", "type": "str", "default": "kurviger-liberty"}, "z": {"description": "The zoom level of the tile.", "type": "int", "default": "0"}}}
{"name": "get_random_word", "description": "Fetches a random word based on specified criteria from the Dicolink API.", "parameters": {"verbeconjugue": {"description": "Whether to fetch a conjugated verb. Defaults to None.", "type": "bool, optional", "default": "false"}, "minlong": {"description": "Minimum length of the word. Defaults to '5'.", "type": "str, optional", "default": "5"}, "maxlong": {"description": "Maximum length of the word. Defaults to '-1' for no maximum.", "type": "str, optional", "default": "-1"}, "avecdef": {"description": "Whether to include the definition of the word. Defaults to None.", "type": "bool, optional", "default": true}}}
{"name": "lists_details", "description": "Fetches and returns the public information of a Twitter List based on the given list ID.", "parameters": {"list_id": {"description": "The ID of the Twitter List whose details are to be fetched.", "type": "str", "default": "1591033111726391297"}}}
{"name": "highlight_items", "description": "Fetches highlight items for a given highlight ID from a private Instagram API using RapidAPI.", "parameters": {"highlightid": {"description": "The ID of the highlight to fetch information for. Default is 'highlight:18064021144190483'.", "type": "str", "default": "highlight:18064021144190483"}}}
{"name": "get_channel_panels", "description": "Fetches the channel panels for a specified Twitch channel using the Twitch API.", "parameters": {"channel": {"description": "The name of the Twitch channel to retrieve panels for.", "type": "str", "default": "xQc"}}}
{"name": "stock_get_net_income", "description": "Fetches the net income of a given stock symbol from the Yahoo Finance API.", "parameters": {"symbol": {"description": "The ticker symbol of the stock (e.g., \"AAPL\" for Apple Inc.).", "type": "str", "default": "AAPL"}, "region": {"description": "The region of the stock market. Defaults to 'US'. Allowed values are 'US', 'BR', 'AU', 'CA', 'FR', 'DE', 'HK', 'IN', 'IT', 'ES', 'GB', and 'S'.", "type": "str, optional", "default": "US"}}}
{"name": "getbymonth", "description": "Fetches earning data for a specific month and year using the RapidAPI service.", "parameters": {"month": {"description": "The month for which to fetch earnings data.", "type": "str", "default": "05"}, "year": {"description": "The year for which to fetch earnings data.", "type": "str", "default": "2022"}}}
{"name": "spac_top_10_rankings", "description": "Fetches the top 10 SPAC (Special Purpose Acquisition Company) rankings based on specified criteria such as gainers, losers, and volume leaders for a given period and equity type.", "parameters": {"sortby": {"description": "Criteria to sort the rankings by. Can be 'gainers', 'losers', or 'volume'.", "type": "str", "default": "gainers"}, "period": {"description": "Time period to consider for the rankings. Can be 'daily', 'weekly', or 'monthly'.", "type": "str", "default": "daily"}, "type": {"description": "Type of SPAC equity. Can be 'common', 'unit', or 'warrant'.", "type": "str", "default": "common"}}}
{"name": "ln", "description": "Returns the natural logarithm (LN) transforms of all data points for a given financial instrument using the Twelve Data API.", "parameters": {"symbol": {"description": "The financial instrument symbol, which can be an equity, index, ETF, forex, or cryptocurrency (e.g., `AAPL`, `EUR/USD`, `ETH/BTC`, etc.).", "type": "str", "default": "AAPL"}, "interval": {"description": "The interval between two consecutive points in the time series. Supported intervals: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`.", "type": "str", "default": "1min"}, "outputsize": {"description": "The number of data points to retrieve. The default value is `30` when no date parameters are set; otherwise, it is set to the maximum available.", "type": "int, optional", "default": 30}, "format": {"description": "The output format of the data. Supported values are `CSV` and `JSON`. The default value is `JSON`.", "type": "str, optional", "default": "json"}, "series_type": {"description": "The type of data series to retrieve. Supported values are `open`, `high`, `low`, and `close`. The default value is `close`.", "type": "str, optional", "default": "close"}}}
{"name": "list_of_archive_events", "description": "Fetch a list of archived sports events using pagination.", "parameters": {"sport_id": {"description": "The ID of the sport for which to fetch archived events.", "type": "int", "default": 1}, "page_num": {"description": "The page number to fetch in the paginated results.", "type": "int", "default": 1}, "league_ids": {"description": "The ID of the league to filter results by. Defaults to None.", "type": "int, optional", "default": ""}}}
{"name": "match_team_statistics", "description": "Fetches and returns team statistics for a given football match.", "parameters": {"matchid": {"description": "The unique identifier of the match.", "type": "int", "default": "21587"}}}
{"name": "top_labels", "description": "Fetch the YEAR-END Top Labels chart information from the Billboard API.", "parameters": {"year": {"description": "The year for which to retrieve the top labels chart. Format should be YYYY. Defaults to '2022'.", "type": "str", "default": "2022"}}}
{"name": "cash_flow_statement", "description": "Retrieves the cash flow statement for a given stock in JSON format.", "parameters": {"stock": {"description": "The stock symbol to retrieve the cash flow statement for.", "type": "str", "default": "AAPL"}, "apikey": {"description": "Your API key from https://fmpcloud.io/register.", "type": "str", "default": "demo"}, "period": {"description": "The period of the statement, either 'quarter' or 'annual'. Defaults to 'quarter'.", "type": "str, optional", "default": "quarter"}}}
{"name": "get_antonyms", "description": "Fetches antonyms for a given word using the Dicolink API.", "parameters": {"mot": {"description": "The word for which to find antonyms.", "type": "str", "default": "autre"}, "limite": {"description": "The maximum number of antonyms to return. Defaults to 10.", "type": "int, optional", "default": "10"}}}
{"name": "nearby_google", "description": "Returns a JSON array of nearby places sorted by distance from the origin coordinates in ascending order.", "parameters": {"lat": {"description": "Latitude of the location to search nearby places.", "type": "int", "default": "49.283030"}, "lng": {"description": "Longitude of the location to search nearby places.", "type": "int", "default": "-123.118990"}, "type": {"description": "Type of place to search for. Default is 'cafe'. Only values from Google's /types are valid.", "type": "str, optional", "default": "cafe"}, "radius": {"description": "Search radius in meters. Default is 200. Maximum allowed is 50000.", "type": "int, optional", "default": "200"}}}
{"name": "multi_search", "description": "Performs a multi-search on Genius based on the given query, returning paginated results.", "parameters": {"q": {"description": "The search query string.", "type": "str", "default": ""}, "per_page": {"description": "The number of results to return per request. Defaults to 3.", "type": "int, optional", "default": "3"}, "page": {"description": "The number of results to return per request. Defaults to 3.", "type": "int, optional", "default": "1"}, "text_format": {"description": "The format for text bodies related to the document. Can be one or more of `dom`, `plain`, `markdown`, and `html`, separated by commas. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "girl_groups", "description": "Fetch information about K-pop girl groups based on various query parameters.", "parameters": {"q": {"description": "The search query to find specific girl groups.", "type": "str", "default": "Twice"}, "by": {"description": "The field by which to search for girl groups. Default is 'Group Name'. Possible values include:", "type": "str, optional", "default": "Group Name"}, "limit": {"description": "The maximum number of results to return. Default is to return all available results.", "type": "int, optional", "default": ""}, "offset": {"description": "The number of results to skip before starting to return results. Default is 0.", "type": "int, optional", "default": ""}}}
{"name": "year_end_hot_100_songs", "description": "Fetches the Year-End Hot 100 Songs chart for a given year from the Billboard API.", "parameters": {"year": {"description": "The year for which to retrieve the Year-End Hot 100 Songs chart.", "type": "int", "default": "2021"}, "range": {"description": "The range of chart positions to retrieve, default is '1-10'. If not specified, returns all results.", "type": "str, optional", "default": "1-10"}}}
{"name": "artist_related", "description": "Gets related artists information from the Spotify API using an artist's ID.", "parameters": {"is_id": {"description": "The unique identifier for the artist.", "type": "str", "default": "2w9zwq3AktTeYYMuhMjju8"}}}
{"name": "locations", "description": "Retrieves hierarchical geographical locations related to flights for a given locale.", "parameters": {"locale": {"description": "Locale code for the desired geographical information. Example values can be retrieved from the `Locales` endpoint.", "type": "str", "default": "en-US"}}}
{"name": "airport_search", "description": "Search for airports using the RapidAPI Flight Fare Search API.", "parameters": {"query": {"description": "The search term to use for finding airports.", "type": "str", "default": "LHR"}}}
{"name": "rental_availability", "description": "Fetches the availability information for a specific rental property using the given rental ID.", "parameters": {"rentalid": {"description": "The unique identifier of the rental property obtained from the Rental Search API in the Vacation Rentals collection.", "type": "str", "default": "VacationRentalReview-g60763-d24816619-Deluxe_Double_Queen_with_Balcony-New_York_City_New_York"}}}
{"name": "get_fare", "description": "Retrieves the fare details for a specified train number and route using the IRCTC RapidAPI service.", "parameters": {"trainno": {"description": "The train number for which the fare is to be retrieved.", "type": "int", "default": "19038"}, "tostationcode": {"description": "The station code of the destination.", "type": "str", "default": "BVI"}, "fromstationcode": {"description": "The station code of the starting station.", "type": "str", "default": "ST"}}}
{"name": "bus_trolley_locations", "description": "Retrieves the current bus and trolley locations for a specified route.", "parameters": {"route": {"description": "The route identifier for which to retrieve bus and trolley locations.", "type": "str", "default": "17"}}}
{"name": "locations_v3_search", "description": "Search for related locations and suggestions based on the provided query string using the RapidAPI 'locations/v3/search' endpoint.", "parameters": {"q": {"description": "The query string representing names of countries, cities, districts, places, etc.", "type": "str", "default": "new york"}, "langid": {"description": "The language identifier. Default is 1033.", "type": "int, optional", "default": "1033"}, "siteid": {"description": "The site identifier. Default is 300000001.", "type": "int, optional", "default": "300000001"}, "locale": {"description": "The locale code. Default is 'en_US'.", "type": "str, optional", "default": "en_US"}}}
{"name": "carbonfootprintfrommotorbike", "description": "Calculates the CO2 emissions in kilograms (Kg) from a motorbike travel based on the type of motorbike and the distance traveled.", "parameters": {"type": {"description": "The type of motorbike. Can be one of 'SmallMotorBike', 'MediumMotorBike', or 'LargeMotorBike'.", "type": "str", "default": "SmallMotorBike"}, "distance": {"description": "The distance traveled in kilometers (KM).", "type": "str", "default": "400"}}}
{"name": "fueltoco2e", "description": "Converts the given amount of fuel into CO2 equivalent in kilograms.", "parameters": {"type": {"description": "The type of fuel. Valid values are 'Petrol', 'Diesel', 'LPG'.", "type": "str", "default": "Petrol"}, "litres": {"description": "The number of liters of fuel to convert.", "type": "str", "default": "10"}}}
{"name": "properties_get_running_costs", "description": "Fetch the running costs associated with a given property listing from Zoopla API.", "parameters": {"listing_id": {"description": "The ID of the property listing returned from the /properties/list endpoint.", "type": "int", "default": "56354192"}, "category": {"description": "The category of the property. Either 'residential' or 'commercial'. Default is 'residential'.", "type": "str, optional", "default": "residential"}, "section": {"description": "The section of the property. Either 'for-sale' or 'to-rent'. Default is 'to-rent'.", "type": "str, optional", "default": "to-rent"}}}
{"name": "get_field_and_field_invite_id", "description": "Fetches the field and field invite IDs for a given document from the SignNow API.", "parameters": {"document_id": {"description": "The ID of the document for which to retrieve field and field invite IDs.", "type": "str", "default": ""}}}
{"name": "resort_view", "description": "Fetches and returns information about a specific resort using the RapidAPI service.", "parameters": {"is_id": {"description": "The ID of the resort to fetch information for.", "type": "str", "default": "whistler-blackcomb"}}}
{"name": "get_airport_details_by_code", "description": "Retrieves comprehensive information about an airport based on its IATA code using the \"Get Airport Details By Code\" API.", "parameters": {"code": {"description": "The IATA code of the airport to retrieve details for.", "type": "str", "default": "DFW"}}}
{"name": "middle_east", "description": "Retrieves a list of Middle Eastern cities sorted based on specified criteria.", "parameters": {"page": {"description": "The page number for pagination. Default is '1'.", "type": "str", "default": "1"}, "sort": {"description": "The sort order, either 'asc' for ascending or 'desc' for descending. Default is 'desc'.", "type": "str", "default": "desc"}, "sort_by": {"description": "The parameter by which to sort results, such as 'overall_score', 'internet_speed', 'temperatureC', or 'cost_for_family_in_usd'. Default is 'overall_score'.", "type": "str", "default": "overall_score"}, "size": {"description": "The number of entries per page. Default is '20'.", "type": "str", "default": "20"}}}
{"name": "get_zip_code_detail", "description": "Retrieve detailed profile and demographic data for a provided ZIP code.", "parameters": {"zip": {"description": "The ZIP code for which to retrieve detailed information.", "type": "str", "default": "10001"}}}
{"name": "veiculo_tipo", "description": "Fetches vehicle brands for the specified type of vehicle from the Veiculos API.", "parameters": {"veiculo_tipo": {"description": "The type of vehicle for which to fetch brands. Possible values are \"carros\", \"motos\", and \"caminhoes\".", "type": "str", "default": "carros"}}}
{"name": "fights", "description": "Fetches fights for either upcoming or previous events from the Spectation Sports Events API.", "parameters": {"outcome": {"description": "The outcome of the fights to filter by. Defaults to None.", "type": "str, optional", "default": ""}, "sport": {"description": "The type of sport to filter the fights by. Defaults to None.", "type": "str, optional", "default": ""}, "type": {"description": "The type of fights to fetch (e.g., 'upcoming' or 'previous'). Defaults to 'upcoming'.", "type": "str, optional", "default": "upcoming"}, "category": {"description": "The category or weight division of the fights. Defaults to None.", "type": "str, optional", "default": ""}, "event": {"description": "The ID of the event to fetch fights for. Defaults to None.", "type": "int, optional", "default": ""}, "page": {"description": "The page number of results to retrieve. Defaults to 1.", "type": "int, optional", "default": "1"}, "fighter": {"description": "The ID of the fighter to fetch fights for. Defaults to None.", "type": "int, optional", "default": ""}}}
{"name": "get_information_of_a_particular_post", "description": "Fetch information about a specific post using its post ID.", "parameters": {"postid": {"description": "The unique identifier of the post for which information is to be retrieved.", "type": "str", "default": "2796025"}}}
{"name": "alerts_active_region_region", "description": "Fetches a list of active weather alerts for a specific region from the National Weather Service API in CAP-ATOM format.", "parameters": {"region": {"description": "A valid region code for which to retrieve active alerts. Refer to the API documentation for a list of valid region codes.", "type": "str", "default": ""}}}
{"name": "realtime_weather_api", "description": "Fetches current weather information based on the provided query parameter.", "parameters": {"q": {"description": "Query parameter used to specify the location for which weather data is required. It can be in various formats such as:", "type": "str", "default": "53.1,-0.13"}}}
{"name": "getcurrentbyvaluegrowthmomentum", "description": "Fetches a list of stocks based on the specified current value, growth, and momentum criteria.", "parameters": {"momentum": {"description": "The momentum criteria for filtering stocks.", "type": "str", "default": "A"}, "growth": {"description": "The growth criteria for filtering stocks.", "type": "str", "default": "A"}, "value": {"description": "The value criteria for filtering stocks.", "type": "str", "default": "A"}}}
{"name": "teams_standings_short", "description": "Fetch the team standings based on the given team ID.", "parameters": {"timezone": {"description": "Time offset from UTC.", "type": "int", "default": "0"}, "locale": {"description": "The locale code to localize the response.", "type": "str", "default": "EN"}, "team_id": {"description": "The unique identifier for the team.", "type": "int", "default": "12633"}}}
{"name": "event_details", "description": "Fetch the details and history odds of a specified event using the Pinnacle Odds API.", "parameters": {"event_id": {"description": "The unique identifier for the event.", "type": "int", "default": 1419211461}}}
{"name": "teams_get_results", "description": "Retrieve match results for a given team ID from the Unofficial Cricbuzz API.", "parameters": {"teamid": {"description": "The unique identifier for the team whose match results are to be retrieved.", "type": "int", "default": "2"}}}
{"name": "scan_headers", "description": "Scans the headers of a web page for the given domain using the Scan Web Headers API.", "parameters": {"domain": {"description": "The domain of the web page to be scanned.", "type": "str", "default": "www.google.com"}}}
{"name": "user_followers", "description": "Fetches the follower count for a given Spotify user using the RapidAPI service.", "parameters": {"is_id": {"description": "The user ID for which to fetch the follower count.", "type": "str", "default": "nocopyrightsounds"}}}
{"name": "latest_exchange_rates", "description": "Fetches the latest exchange rate data using the provided parameters.", "parameters": {"resolution": {"description": "The frequency of updates for the exchange rates. Possible values are '1m' for minute, '1h' for hourly, and '1d' for daily updates.", "type": "str, optional", "default": ""}, "currencies": {"description": "A comma-separated list of currency codes (e.g., 'USD,EUR,AUD,GBP') to get exchange rates for. If not provided, rates for all available currencies are returned.", "type": "str, optional", "default": ""}, "base": {"description": "The base currency for the exchange rates. Defaults to 'USD'.", "type": "str, optional", "default": "USD"}}}
{"name": "currency_options", "description": "Fetches currency options data for a specified stock using the Investing Financial Stocks API.", "parameters": {"slug": {"description": "The stock identifier slug to specify the stock for which currency options are to be retrieved.", "type": "str", "default": "usd-jpy"}}}
{"name": "v1_vinlookup", "description": "Retrieves key vehicle information including manufacturer, country of origin, and model year for a given VIN using the API Ninjas VIN Lookup API.", "parameters": {"vin": {"description": "A valid Vehicle Identification Number (VIN), which must be a 17-character string.", "type": "str", "default": "JH4KA7561PC008269"}}}
{"name": "livetraffic", "description": "Retrieves information about all aircraft within a 25-nautical mile radius of the specified latitude and longitude.", "parameters": {"lat": {"description": "Latitude of the center point (-90 to 90).", "type": "int", "default": ""}, "lon": {"description": "Longitude of the center point (-180 to 180). Note: Longitude in the US is typically negative.", "type": "int", "default": ""}}}
{"name": "get_product_s_reviews", "description": "Fetches reviews for a specified product using the Amazon Data Scraper API.", "parameters": {"productid": {"description": "The unique identifier of the product whose reviews are to be fetched.", "type": "str", "default": "B00K3OM3PS"}}}
{"name": "v1_qrcode", "description": "Generates a QR code image using the API Ninjas QR Code API, based on the specified input parameters.", "parameters": {"data": {"description": "Data to encode in the QR code.", "type": "str", "default": "https://api-ninjas.com"}, "format": {"description": "Image format to return. Must be one of the following: png, jpg, jpeg, eps, svg.", "type": "str", "default": "png"}, "size": {"description": "Size of the QR code image to generate. The output will be a square image with (size x size) dimensions. Defaults to None.", "type": "int, optional", "default": ""}, "fg_color": {"description": "Foreground color of the QR code. Must be a 6-digit hex color (e.g., 00ff00 for green). Defaults to None (black).", "type": "str, optional", "default": ""}, "bg_color": {"description": "Background color of the QR code. Must be a 6-digit hex color (e.g., 00ff00 for green). Defaults to None (white).", "type": "str, optional", "default": ""}}}
{"name": "get_2_mensagens_do_chat_chat_message", "description": "Fetches chat messages from the \"compras-net\" API based on the given chat code.", "parameters": {"cod": {"description": "The chat code to fetch messages for.", "type": "int", "default": "1104281"}}}
{"name": "basic_phone_number_validation", "description": "Validates and formats a phone number using the Toolbench RapidAPI service.", "parameters": {"dialcode": {"description": "The phone number to be validated and formatted.", "type": "str", "default": "+12125551234"}, "country_code": {"description": "The ISO 3166-1 alpha-2 country code. Defaults to 'US'.", "type": "str, optional", "default": "US"}}}
{"name": "bilingual_dictionary", "description": "Queries a powerful multi-language bilingual neural translation dictionary, supporting 80+ languages, to get translations.", "parameters": {"q": {"description": "The word or comma-separated words (up to 10 words per request) to seek bilingual translations for.", "type": "str", "default": "merci, poisson, beaucoup"}, "is_from": {"description": "The ISO 639-1 language code of the source language. Supported languages include 'ar', 'az', 'be', 'bg', 'ca', 'ce', 'cs', 'cy', 'da', 'de', 'el', 'en', 'eo', 'es', 'et', 'eu', 'fa', 'fi', 'fr', 'gl', 'he', 'hi', 'hr', 'hu', 'hy', 'id', 'it', 'ja', 'ka', 'kk', 'ko', 'la', 'lt', 'lv', 'mk', 'ms', 'nl', 'nn', 'no', 'pl', 'pt', 'ro', 'ru', 'sh', 'sk', 'sl', 'sr', 'sv', 'ta', 'tg', 'th', 'tr', 'tt', 'uk', 'ur', 'uz', 'vi', 'vo', 'zh'.", "type": "str", "default": "fr"}, "to": {"description": "The ISO 639-1 language code of the target language. The same set of supported languages as `is_from`.", "type": "str", "default": "en"}}}
{"name": "exclusiveness_callerid", "description": "This function checks the exclusiveness status associated with the given `callerid` by making a request to the \"most-exclusive-api\" on RapidAPI.", "parameters": {"callerid": {"description": "A unique string identifying the requester. It should be alphanumeric with allowed characters [a-zA-Z0-9_-] and have a maximum length of 32 characters.", "type": "str", "default": ""}}}
{"name": "exists_exists_ticket_get", "description": "Checks if a ticket exists using the provided RapidAPI key.", "parameters": {"ticket": {"description": "The ticket identifier to be checked.", "type": "str", "default": ""}}}
{"name": "getstatsbyyear", "description": "Retrieves Trinidad & Tobago Covid-19 statistics by year.", "parameters": {"is_id": {"description": "The year for which the Covid-19 statistics are being requested. Must be between 2020 and the current year.", "type": "str", "default": "2020"}}}
{"name": "breweries", "description": "Fetches a list of breweries from the Open Brewery DB API based on given search criteria.", "parameters": {"by_state": {"description": "Search for breweries by state. Defaults to 'NY'.", "type": "str, optional", "default": "NY"}, "by_name": {"description": "Search for breweries by name. Defaults to 'cooper'.", "type": "str, optional", "default": "cooper"}, "by_type": {"description": "Filter breweries by type. Must be one of: 'micro', 'regional', 'brewpub', 'large', 'planning', 'bar', 'contract', 'proprietor'. Defaults to 'micro'.", "type": "str, optional", "default": "micro"}, "sort": {"description": "Sort the breweries. Use '+' for ascending order and '-' for descending order. Comma-separated values can be used to sort by multiple fields. Defaults to None.", "type": "str, optional", "default": ""}, "by_tag": {"description": "Filter breweries by tag. Must be one of: 'dog-friendly', 'patio', 'food-service', 'food-truck', 'tours'. Defaults to 'patio'.", "type": "str, optional", "default": "patio"}}}
{"name": "auto_complete_deprecated", "description": "Fetches suggestions for a given term or phrase from the Trading View API.", "parameters": {"text": {"description": "Any term or phrase for which to get suggestions.", "type": "str", "default": "tesla"}, "type": {"description": "The category of suggestions to retrieve, one of the following:", "type": "str, optional", "default": ""}, "lang": {"description": "The language code for the suggestions. Defaults to 'en'.", "type": "str, optional", "default": "en"}, "exchange": {"description": "The exchange code as provided by the Trading View API's exchanges list endpoint.", "type": "str, optional", "default": ""}}}
{"name": "youtube_topviews_year", "description": "Retrieves the top-viewed YouTube videos for a specified year or for all time.", "parameters": {"year": {"description": "The year for which to retrieve the top-viewed YouTube videos. Use an empty string to retrieve all-time top views.", "type": "str", "default": ""}}}
{"name": "billboard_hot_100", "description": "Fetch the Billboard Hot 100 chart data for a given date and range.", "parameters": {"date": {"description": "The date for which to fetch the chart data in 'YYYY-MM-DD' format.", "type": "str", "default": "2022-07-07"}, "range": {"description": "The range of chart positions to return, specified in the format 'start-end'. Default is '1-10'.", "type": "str, optional", "default": "1-10"}}}
{"name": "autocomplete_localities", "description": "Sends a GET request to the RapidAPI Autocomplete India service to fetch autocomplete suggestions for a given locality.", "parameters": {"locality": {"description": "The locality name to get autocomplete suggestions for.", "type": "str", "default": "rashtra"}}}
{"name": "get_location_infomation_by_zipcode", "description": "Fetches the location information for a given ZIP code using the Redfin API.", "parameters": {"zipcode": {"description": "The ZIP code for which to fetch the location information.", "type": "str", "default": "01003"}}}
{"name": "by_state_city", "description": "Searches for homeless shelters in a specified state and city using the provided API key.", "parameters": {"state": {"description": "Full state name (e.g., 'Washington') or abbreviation (e.g., 'WA').", "type": "str", "default": "Washington"}, "city": {"description": "City name (e.g., 'Bellevue').", "type": "str", "default": "Bellevue"}}}
{"name": "trend_id", "description": "Fetches trending topics from Twitter based on a given \"Where On Earth IDentifier\" (WOEID) using the Toolbench RapidAPI service.", "parameters": {"woeid": {"description": "The Yahoo! Where On Earth IDentifier (WOEID) for which to get trending topics.", "type": "int", "default": 2514815}}}
{"name": "provider2_live_match_id", "description": "Fetches live match details from the provider2 API for a given match ID.", "parameters": {"is_id": {"description": "The match ID for which to fetch the live details.", "type": "str", "default": ""}}}
{"name": "keywords", "description": "Fetches keywords from a given text using the AI Writer API.", "parameters": {"content_type": {"description": "The content type of the text (e.g. 'application/json').", "type": "str", "default": "application/json"}, "text": {"description": "The text from which to extract keywords.", "type": "str", "default": "Italy is in Europe"}}}
{"name": "chat_gpt_detector", "description": "Detects whether the given text was generated by an AI model using the provided RapidAPI key.", "parameters": {"text": {"description": "The text to be analyzed for AI-generated content.", "type": "str", "default": "Christmas is one of the most widely celebrated holidays in the world. It is a time of joy, love, and giving, and is traditionally celebrated on December 25th every year. The holiday has its roots in Christianity, where it commemorates the birth of Jesus Christ, but it is now celebrated by people of all religions and cultures.  Christmas is a time when families and friends come together to celebrate and enjoy each other's company. It is a time to share meals, exchange gifts, and participate in various traditions and activities. One of the most beloved traditions of Christmas is decorating a Christmas tree. This tradition originated in Germany and has since spread around the world. Families often decorate their trees with lights, ornaments, and tinsel.  Another beloved tradition is the exchange of gifts. Many people spend weeks or even months searching for the perfect gift for their loved ones. Giving and receiving gifts is a way to show love and appreciation for one another, and it is a way to bring joy to those around us.  Christmas is also a time for giving back to those in need. Many people donate their time, money, or resources to charities and organizations that help those who are less fortunate. This spirit of giving is one of the most important aspects of Christmas and helps to spread love and kindness to those who need it most.  In addition to these traditions, there are many other customs associated with Christmas. These include caroling, baking Christmas cookies, and watching Christmas movies. Each of these traditions brings a unique sense of joy and excitement to the holiday season.  In conclusion, Christmas is a time of joy, love, and giving. It is a time to come together with friends and family and celebrate the holiday season. While the holiday has its roots in Christianity, it is now celebrated by people of all cultures and religions around the world. Christmas traditions bring people together and create memories that will last a lifetime."}}}
{"name": "translation", "description": "Translates a given text from one language to another using the Ginger API.", "parameters": {"text": {"description": "The text to be translated.", "type": "str", "default": "How are you?"}, "tolanguage": {"description": "The language to which the text will be translated.", "type": "str", "default": "fr"}, "fromlanguage": {"description": "The language from which the text will be translated.", "type": "str", "default": "en"}}}
{"name": "get_token_price", "description": "Retrieves the price of a specified token using the PancakeSwap API.", "parameters": {"token": {"description": "The contract address of the token. Defaults to the address of the BUSD token.", "type": "str", "default": "0xe9e7cea3dedca5984780bafc599bd69add087d56"}}}
{"name": "get_ticker_for_specific_coin", "description": "Retrieves the ticker information for a specific cryptocurrency coin using the Coinlore API.", "parameters": {"is_id": {"description": "The ID of the specific cryptocurrency coin for which the ticker information is to be retrieved.", "type": "int", "default": "90"}}}
{"name": "getdetails", "description": "Fetch the details associated with a given Australian Business Number (ABN) from the katzion-test API.", "parameters": {"abn": {"description": "The Australian Business Number to fetch details for.", "type": "str", "default": ""}}}
{"name": "v_card_qr_code", "description": "Creates a static QR code for a vCard with specified customization options and returns the response from the API.", "parameters": {"uname": {"description": "The username for the vCard.", "type": "str", "default": "Tanisha"}, "error_correction": {"description": "The error correction level for the QR code. Defaults to 'M'.", "type": "str, optional", "default": "M"}, "data_gradient_start_color": {"description": "The start color for the data gradient. Defaults to '#000000'.", "type": "str, optional", "default": "#000000"}, "eye_color_inner": {"description": "The inner color of the QR code eyes. Defaults to '#000000'.", "type": "str, optional", "default": "#000000"}, "data_gradient_style": {"description": "The style of the data gradient. Defaults to 'None'.", "type": "str, optional", "default": "None"}, "data_gradient_end_color": {"description": "The end color for the data gradient. Defaults to '#000000'.", "type": "str, optional", "default": "#000000"}, "background_color": {"description": "The background color of the QR code. Defaults to '#FFFFFF'.", "type": "str, optional", "default": "#FFFFFF"}, "eye_color_outer": {"description": "The outer color of the QR code eyes. Defaults to '#000000'.", "type": "str, optional", "default": "#000000"}, "eye_pattern": {"description": "The pattern of the QR code eyes. Defaults to 'RECT_RECT'.", "type": "str, optional", "default": "RECT_RECT"}, "size": {"description": "The size of the QR code. Defaults to 'm'.", "type": "str, optional", "default": "m"}, "data_pattern": {"description": "The pattern of the QR code data. Defaults to 'RECT'.", "type": "str, optional", "default": "RECT"}}}
{"name": "generate_qr", "description": "Generates a QR code for a given URL using the QR Code Wizard API.", "parameters": {"url": {"description": "The URL to be encoded in the QR code.", "type": "str", "default": "www.google.com"}}}
{"name": "photo_from_given_number", "description": "Searches for a photo on the internet using the provided phone number and returns the photo in bytes if a match is found.", "parameters": {"phone": {"description": "The phone number to search for.", "type": "str", "default": "+79999999999"}}}
{"name": "get_latest_article_list", "description": "Fetches a list of the latest news articles for a specified language from the Malaysia Kini API.", "parameters": {"language": {"description": "The language code for which to fetch the latest news articles. Supported languages include English ('en'), Malay ('my'), and Chinese ('zh').", "type": "str", "default": ""}}}
{"name": "tag_search", "description": "Fetches news articles based on the provided tag from the India Today API.", "parameters": {"tag": {"description": "The tag or keyword to search for in the news articles.", "type": "str", "default": "India"}}}
{"name": "company_info", "description": "Retrieves real-time company information using the Finshorts API.", "parameters": {"q": {"description": "The query string representing the company name or ticker symbol.", "type": "str", "default": "aapl"}}}
{"name": "headphones", "description": "This function retrieves information about headphones from the Amazon API using optional brand filtering.", "parameters": {"name_brand": {"description": "The brand name to filter headphones by. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "getthelistofcountriesregistered", "description": "Fetches a list of countries registered on the ecombr.com marketplace using the provided API credentials and parameters.", "parameters": {"action": {"description": "The specific action to be executed by the API.", "type": "str", "default": "countries"}, "content_type": {"description": "The content type of the API request.", "type": "str", "default": "application/json"}, "cache_control": {"description": "The cache control settings for the API request.", "type": "str", "default": "no-cache"}, "secret": {"description": "The secret key for authenticating the API request.", "type": "str", "default": ""}, "token": {"description": "The token for validating the API request.", "type": "str", "default": ""}, "e_mail": {"description": "The email associated with the API account.", "type": "str", "default": ""}}}
{"name": "airports_direct_routes_for_an_airport", "description": "Returns a list of direct routes for a given airport using the RapidAPI service.", "parameters": {"airportiatacode": {"description": "The IATA code of the airport for which the direct routes are being queried.", "type": "str", "default": ""}}}
{"name": "get_airport_details", "description": "Fetches and returns detailed information about an airport specified by its IATA code.", "parameters": {"code": {"description": "A valid three-letter IATA airport code.", "type": "str", "default": "DFW"}}}
{"name": "v1_convert", "description": "Converts a sum of money from one currency to another using the specified conversion type and RapidAPI key.", "parameters": {"to": {"description": "The currency ID to convert to.", "type": "int", "default": "980"}, "sum": {"description": "The sum of money to convert.", "type": "int", "default": "100"}, "is_from": {"description": "The currency ID to convert from.", "type": "int", "default": "840"}, "type": {"description": "The type of conversion, defaults to 'commercial'.", "type": "str, optional", "default": "commercial"}}}
{"name": "us_ky", "description": "Fetches current or historical gas price data for Kentucky.", "parameters": {"date": {"description": "The date for which to retrieve gas price data in the format 'YYYY-MM-DD'. If not provided, current gas prices are returned.", "type": "str, optional", "default": ""}}}
{"name": "specificcolorset", "description": "Fetch a set of colors based on the input color name using the ColorMe API.", "parameters": {"colorname": {"description": "The name of the base color to generate a set of colors from (e.g., \"yellow\", \"red\").", "type": "str", "default": "yellow"}}}
{"name": "list_by_body_part", "description": "Fetch exercises based on the specified body part from the ExerciseDB API.", "parameters": {"bodypart": {"description": "The body part for which to fetch exercises (e.g., chest, legs).", "type": "str", "default": ""}}}
{"name": "ticker", "description": "Fetches financial data for a given ticker symbol using the RapidAPI service.", "parameters": {"t": {"description": "The ticker symbol for the financial instrument. Examples include 'ABNB:NASDAQ', '.DJI:INDEXDJX', 'EUR-USD', and 'BTC-USD'.", "type": "str", "default": "ABNB:NASDAQ"}, "gl": {"description": "The country code to filter the search results. Defaults to 'US'.", "type": "str, optional", "default": "US"}, "hl": {"description": "The language code to filter the search results. Defaults to 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "tvl_protocol", "description": "Fetch the Total Value Locked (TVL) for a specified DeFi protocol from the RapidAPI Toolbench.", "parameters": {"protocol": {"description": "The slug identifier for the DeFi protocol.", "type": "str", "default": ""}}}
{"name": "tema", "description": "Calculates the Triple Exponential Moving Average (TEMA) for a given financial instrument.", "parameters": {"interval": {"description": "Interval between two consecutive points in the time series. Supports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`.", "type": "str", "default": "1min"}, "symbol": {"description": "Instrument symbol, can be any equity, index, ETF, forex, or cryptocurrency (e.g., `AAPL`, `EUR/USD`, `ETH/BTC`).", "type": "str", "default": "AAPL"}, "format": {"description": "Format of the returned data, either `csv` or `json`. Defaults to `json`.", "type": "str, optional", "default": "json"}, "outputsize": {"description": "Number of data points in the result. Default is `30`.", "type": "int, optional", "default": 30}, "time_period": {"description": "Time period over which the TEMA is calculated. Default is `9`.", "type": "int, optional", "default": 9}, "series_type": {"description": "Type of price data to analyze. Supports: `open`, `high`, `low`, `close`. Default is `close`.", "type": "str, optional", "default": "close"}}}
{"name": "get_liquidity_value", "description": "Retrieves the liquidity value of a specified cryptocurrency in US Dollars.", "parameters": {"symbol": {"description": "The ticker symbol of the cryptocurrency.", "type": "str", "default": "BTC"}}}
{"name": "tiktok_url_shortener", "description": "This function shortens a TikTok URL using the ScrapTik API and allows for optional specification of device and proxy.", "parameters": {"url": {"description": "The TikTok URL to shorten.", "type": "str", "default": "https://m.tiktok.com/v/6977803984228584709.html"}, "device": {"description": "The type of device for the request. Defaults to None.", "type": "str, optional", "default": ""}, "tok_proxy": {"description": "The proxy to use for the request. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "statistics", "description": "Retrieve statistical information from wheel results over a specified duration using the Toolbench RapidAPI.", "parameters": {"duration": {"description": "The duration in hours for which the statistics are to be retrieved.", "type": "int", "default": "3"}}}
{"name": "playerdetails", "description": "Fetches the details of a specific E-Sports player by their player ID using the provided API key.", "parameters": {"is_id": {"description": "The ID of the player for which to retrieve the details.", "type": "int", "default": 1078255}}}
{"name": "players_185_225_233_110_30015", "description": "Retrieves the list of players currently online from the specified V Rising game server.", "parameters": {"ip": {"description": "The IP address of the game server.", "type": "str", "default": "185.225.233.110"}, "port": {"description": "The port number of the game server.", "type": "str", "default": "30015"}}}
{"name": "search_by_coordinates_point", "description": "Search for EV charging stations near specific geographic coordinates.", "parameters": {"lng": {"description": "Longitude of the geographic coordinates point to search nearby.", "type": "str", "default": "-121.925337"}, "lat": {"description": "Latitude of the geographic coordinates point to search nearby.", "type": "str", "default": "37.359428"}, "query": {"description": "Keyword to filter the search results by a specific query, such as 'evgo', 'tesla', or 'chargepoint'.", "type": "str, optional", "default": ""}, "min_kw": {"description": "Minimum power in kilowatts to filter the availability of connectors.", "type": "str, optional", "default": ""}, "max_kw": {"description": "Maximum power in kilowatts to filter the availability of connectors.", "type": "str, optional", "default": ""}, "limit": {"description": "Maximum number of results to return. Allowed values range from 1 to 500.", "type": "str, optional, default='20'", "default": "20"}, "available": {"description": "Filter to find EV charging stations with an available connector.", "type": "str, optional", "default": ""}, "type": {"description": "Filter to return EV charging stations with connectors of specified types, provided as a comma-delimited list, e.g., 'CHAdeMO', 'J1772,CCS'.", "type": "str, optional", "default": ""}}}
{"name": "ip_locator", "description": "Fetches geolocation information for a given IP address using RapidAPI.", "parameters": {"ip_address": {"description": "The IP address for which geolocation information is to be retrieved.", "type": "str", "default": "92.223.89.73"}, "format": {"description": "The desired output format of the response. Supported formats are .csv, .xml, and .json.", "type": "str", "default": "json"}}}
{"name": "district_detail_and_coordinates_of_specific_division", "description": "Fetches detailed information about the districts, coordinates, and upazilas of a specific division from the BDAPI.", "parameters": {"division_name": {"description": "The name of the division for which to fetch details.", "type": "str", "default": ""}}}
{"name": "suggest_region", "description": "Fetches suggested regions based on a given location using the Airdna API.", "parameters": {"location": {"description": "The location keyword to search for suggested regions.", "type": "str", "default": "santa monica"}}}
{"name": "get_by_id", "description": "Fetches information about a flower specified by its ID from the Flower API.", "parameters": {"is_id": {"description": "The ID of the flower to retrieve information about.", "type": "str", "default": "6383808bff3dde72b0fc34ab"}}}
{"name": "dna2mrna", "description": "Converts a DNA sequence into an mRNA sequence using the specified API.", "parameters": {"dna": {"description": "The DNA sequence to be transformed into an mRNA sequence.", "type": "str", "default": "TACAAAGGCTAACGTCCTAGAGCTATT"}}}
{"name": "session", "description": "Fetches the session details for a given `session_id` from the Races endpoint on the F1 Live Motorsport Data API. This includes information such as drivers' times, session weather, speed traps, and session status and is updated throughout each session.", "parameters": {"session_id": {"description": "The ID of the session for which details are being retrieved.", "type": "int", "default": "2757"}}}
{"name": "daily_predictions", "description": "Fetches daily football predictions using various filters and pagination support.", "parameters": {"league": {"description": "The league identifier for filtering predictions. Example: '1'.", "type": "str, optional", "default": ""}, "page": {"description": "The page number for pagination. Example: '1'.", "type": "str, optional", "default": "1"}, "market": {"description": "The market type for filtering predictions. Example: '1X2', 'OU25', 'bts'.", "type": "str, optional", "default": ""}, "date": {"description": "The date for filtering predictions in the format 'YYYY-MM-DD'. Example: '2022-08-13'.", "type": "str, optional", "default": ""}}}
{"name": "mapimage", "description": "Retrieves a map image with specified parameters such as coordinates, scale, size, and various display options.", "parameters": {"lonlat": {"description": "The latitude and longitude in the format \"longitude,latitude\".", "type": "str", "default": "139.767231,35.681196"}, "scale": {"description": "The map scale. Valid range is from 6 to 21.", "type": "int", "default": "16"}, "size": {"description": "The image size in the format \"width,height\" in pixels.", "type": "str", "default": "320,240"}, "icon": {"description": "Icon settings in the format \"[icon_type,longitude,latitude]|...\". Defaults to None.", "type": "str, optional", "default": ""}, "centericon": {"description": "Whether to display the center icon (on/off). Defaults to None (\"off\").", "type": "str, optional", "default": ""}, "logo": {"description": "Whether to display the brand logo (on/off). Defaults to None (\"off\").", "type": "str, optional", "default": ""}, "landmarkicon": {"description": "Whether to display landmark icons (on/off). Defaults to None (\"off\").", "type": "str, optional", "default": ""}, "format": {"description": "The output image format, either \"image/png\" or \"image/jpeg\". Defaults to \"image/png\".", "type": "str, optional", "default": ""}, "resolution": {"description": "The image resolution. \"1\" for standard size, \"2\" for double size. Defaults to \"1\".", "type": "str, optional", "default": ""}, "rotationangle": {"description": "The angle to rotate the map. Valid range is from 0 to 359 degrees. Defaults to 0.", "type": "int, optional", "default": ""}, "routeresultid": {"description": "The route result ID to display the route on the map. Defaults to None.", "type": "str, optional", "default": ""}, "routeicon": {"description": "Route icon settings, \"0\" for none, \"1\" for standard icons. Defaults to \"1\".", "type": "str, optional", "default": ""}, "scaler": {"description": "Whether to display the scale (on/off). Defaults to \"off\".", "type": "str, optional", "default": ""}, "bldgname": {"description": "Whether to display building names (on/off). Defaults to \"off\".", "type": "str, optional", "default": ""}, "contour": {"description": "Whether to display contour lines (on/off). Defaults to \"on\".", "type": "str, optional", "default": ""}, "target": {"description": "The map display content. \"1\" for background, \"2\" for notes, \"3\" for both. Defaults to \"3\".", "type": "str, optional", "default": ""}, "mapstyle": {"description": "Map design parameter in the format \"[design]_[note_size]\". Defaults to \"std_pc\".", "type": "str, optional", "default": ""}}}
{"name": "get_markets_of_coin", "description": "Fetches the top 50 markets for a given cryptocurrency coin.", "parameters": {"is_id": {"description": "The ID of the cryptocurrency coin.", "type": "int", "default": "90"}}}
{"name": "equity_earnings", "description": "Returns earnings (EPS, quarterly) history data for a given security within a specified date range.", "parameters": {"to": {"description": "The query end date (supported format is **YYYY-mm-dd**), e.g., '2020-04-17'.", "type": "str", "default": "2020-04-17"}, "is_from": {"description": "The query start date (supported format is **YYYY-mm-dd**), e.g., '2019-01-01'.", "type": "str", "default": "2019-01-01"}, "symbol": {"description": "The symbol of the asset to look for, e.g., 'AAPL' (Apple Inc), 'T' (AT&T Inc).", "type": "str", "default": "AAPL"}}}
{"name": "get_realtime_volume", "description": "Fetches the real-time trading volume of a cryptocurrency in US Dollars.", "parameters": {"symbol": {"description": "The ticker symbol of the cryptocurrency (e.g., 'BTC' for Bitcoin).", "type": "str", "default": "BTC"}}}
{"name": "stock_institution_ownership", "description": "Retrieves the institutional ownership information for a given stock symbol using the Yahoo Finance API.", "parameters": {"symbol": {"description": "The stock symbol for which to fetch institutional ownership data.", "type": "str", "default": "AAPL"}}}
{"name": "getlistbyedinetcode", "description": "Fetches all securities report data of the company specified by the given EDINET code.", "parameters": {"edinet_code": {"description": "The EDINET code of the company for which to fetch securities report data.", "type": "str", "default": "E02142"}}}
{"name": "latest_contracts_for_symbol", "description": "Retrieves the latest futures contracts for a given symbol for the next twelve months, with an optional parameter to specify a particular month.", "parameters": {"symbol": {"description": "The symbol for which to retrieve futures contracts.", "type": "str", "default": "CL"}, "month": {"description": "The month for which to return the latest contract (default is 7).", "type": "int, optional", "default": "7"}}}
{"name": "inverted_hammer", "description": "Fetches a list of stocks that have an Inverted Hammer signal from the specified page using the provided RapidAPI key.", "parameters": {"page": {"description": "The page number to retrieve. Default is 1.", "type": "int, optional", "default": "1"}}}
{"name": "product_search", "description": "Search for products in a store based on a keyword.", "parameters": {"store_id": {"description": "The ID of the store to search in.", "type": "str", "default": "1122"}, "keyword": {"description": "The keyword to search for products.", "type": "str", "default": "womens shoes"}, "offset": {"description": "The starting point for the search results. Defaults to '0'.", "type": "str, optional", "default": "0"}, "count": {"description": "The maximum number of products to return. Defaults to '25'.", "type": "str, optional", "default": "25"}}}
{"name": "entreprise_par_rid", "description": "Fetches and returns company information from New Caledonia using the provided RID.", "parameters": {"rid": {"description": "The RID of the company to look up.", "type": "str", "default": "0132720"}}}
{"name": "get_team_transfers", "description": "Retrieves all incoming and outgoing transfers for a specified team.", "parameters": {"teamid": {"description": "The identifier of the team for which to retrieve transfer data.", "type": "str", "default": "17"}}}
{"name": "game_odds_by_category_schedule", "description": "Fetches the schedule of game odds for a given sport and category from the sportsbook-odds API.", "parameters": {"category": {"description": "The category of the odds. For example, 0 for moneylines, 1 for spreads, 2 for over/under, etc.", "type": "str", "default": "0"}, "sport": {"description": "The sport for which to fetch the game odds schedule.", "type": "str", "default": "Baseball"}}}
{"name": "aliexpress_item_shipping_detail", "description": "Retrieve detailed shipping information for a specific Aliexpress item.", "parameters": {"itemid": {"description": "The Aliexpress product ID.", "type": "int", "default": "3256804591426248"}, "quantity": {"description": "The quantity of the item to consider for shipping. Defaults to 1.", "type": "int, optional", "default": "1"}, "sellerid": {"description": "The ID of the seller. Defaults to None.", "type": "str, optional", "default": ""}, "ext": {"description": "Additional parameter obtained from one of the Item Detail Endpoints for more accurate shipping options. Defaults to a predefined value.", "type": "str, optional", "default": "bVkg9vW8ihgAMt4XYtZhMB3rnoY6MGI8Sk1gfrl4IGWuBdZZb0gRv5vgI1r5DIn8Rj7mxVzOKbKpyHkmBItRm_k2dtJ1j_gHLTu5zNN9jXHeQploYHEajpnygmD_xKGbi9I_HzxO8TtoIpwdvl5ZfH6o_x5qCBy5D1cUo6t7LoDhx7UTHmFDiCHY0PpHokfJ"}, "locale": {"description": "Locale parameter for displaying titles and other content in the selected language. Defaults to None.", "type": "str, optional", "default": ""}, "region": {"description": "Region parameter to accurately get shipping costs and other promotions for a specific geographic location. Defaults to None.", "type": "str, optional", "default": ""}, "currency": {"description": "Currency parameter for displaying the product price in the selected currency. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "crimes_with_no_location", "description": "Fetches a list of crimes from a specified police force on a given date and category, where the crimes have no specified location.", "parameters": {"date": {"description": "The date of the crimes to retrieve in 'YYYY-MM' format.", "type": "str", "default": "2011-09"}, "force": {"description": "The identifier for the police force responsible for handling the crimes.", "type": "str", "default": "warwickshire"}, "category": {"description": "The category of the crimes to retrieve.", "type": "str", "default": "all-crime"}}}
{"name": "hex_to_hsv", "description": "Converts a hex color code to an HSV color code using the Convexity API.", "parameters": {"hex": {"description": "The hex color code to be converted.", "type": "str", "default": "ffffff"}}}
{"name": "ideas_get_view_count", "description": "Fetches the view count for a specific idea post from the Trading View API.", "parameters": {"uuid": {"description": "The unique identifier for an idea, as returned by the /ideas/list endpoint.", "type": "str", "default": "CRK6Iv51"}, "lang": {"description": "The language code for the response. Default is 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "assetbyid", "description": "Retrieves the details of an individual asset using its unique identifier (UUID) from the Brave New Coin API.", "parameters": {"is_id": {"description": "The unique resource identifier (UUID) of the asset to be retrieved.", "type": "str", "default": ""}}}
{"name": "get_coin_markets", "description": "Retrieve markets on different exchanges that trade a specific coin.", "parameters": {"uuid": {"description": "UUID of the coin you want to request markets for.", "type": "str", "default": "Qwsogvtv82FCd"}, "offset": {"description": "Offset for pagination. Default is 0.", "type": "int, optional", "default": "0"}, "orderby": {"description": "Index to sort results by. Default is '24hVolume'.", "type": "str, optional", "default": "24hVolume"}, "limit": {"description": "Limit on the number of results returned. Default is 50.", "type": "int, optional", "default": "50"}, "search": {"description": "Value to filter search results, e.g., exchange names, currency names, or currency symbols.", "type": "str, optional", "default": ""}, "referencecurrencyuuid": {"description": "UUID of the reference currency used to calculate the volume. Defaults to the US Dollar.", "type": "str, optional", "default": "yhjMzLPhuIDl"}, "orderdirection": {"description": "Order results in ascending ('asc') or descending ('desc') order. Default is 'desc'.", "type": "str, optional", "default": "desc"}}}
{"name": "v1getfundlatestprice", "description": "Fetches the latest price of a fund using its ISIN.", "parameters": {"isin": {"description": "The International Securities Identification Number of the fund.", "type": "str", "default": "LU0690375182"}}}
{"name": "wnba_standings", "description": "Fetches the WNBA team standings for a given year, with optional grouping.", "parameters": {"year": {"description": "The year for which the standings are to be fetched.", "type": "str", "default": "2022"}, "group": {"description": "The group name for standings, either 'league' or 'conference'. Defaults to 'league'.", "type": "str, optional", "default": ""}}}
{"name": "clubs", "description": "Retrieves information about clubs participating in the First Premier League Competition.", "parameters": {"abbr": {"description": "The abbreviation of the club. Default is 'ARS'.", "type": "str", "default": "ARS"}, "name": {"description": "The name of the club. Default is 'Arsenal'.", "type": "str", "default": "Arsenal"}}}
{"name": "recent_exchange_rates", "description": "Retrieve the latest exchange rate data between currencies.", "parameters": {"is_from": {"description": "Three-letter currency code of the currency to convert from. Defaults to 'USD'.", "type": "str", "default": "USD"}, "to": {"description": "Comma-separated list of currency codes to convert 'is_from' currency into. Defaults to 'EUR,GBP'.", "type": "str", "default": "EUR,GBP"}}}
{"name": "stock_v2_get_risk_rating_breakdown", "description": "Fetch the risk rating breakdown for a given stock performance ID.", "parameters": {"performanceid": {"description": "The performance ID of the stock to fetch the risk rating breakdown for.", "type": "str", "default": "0P0000OQN8"}}}
{"name": "feeds", "description": "Fetch recent TikTok feeds for a given user.", "parameters": {"schematype": {"description": "The type of schema to use for the query.", "type": "str", "default": "1"}, "username": {"description": "The TikTok username for which to fetch recent feeds.", "type": "str", "default": "tiktok"}}}
{"name": "get_user_highlights_tray_by_user_id", "description": "Fetches the highlight tray of a specific Instagram user identified by their user ID using the RapidAPI service.", "parameters": {"user_id": {"description": "The unique identifier of the Instagram user.", "type": "int", "default": "25025320"}}}
{"name": "comment_list", "description": "Fetches a list of comments for a specified TikTok video using the given API.", "parameters": {"aweme_id": {"description": "The ID of the TikTok video.", "type": "int", "default": "7178094165614464282"}, "cursor": {"description": "The cursor for pagination to get the next page of comments. Defaults to 0.", "type": "int, optional", "default": "0"}, "count": {"description": "The number of comments to fetch. Maximum is 30. Defaults to 20.", "type": "int, optional", "default": "20"}}}
{"name": "get_info_user", "description": "Fetch information about a TikTok user using the provided username.", "parameters": {"username": {"description": "The TikTok username for which to retrieve information.", "type": "str", "default": "tiktok"}}}
{"name": "stock_get_statistics", "description": "Retrieve statistical information for a given stock.", "parameters": {"is_id": {"description": "The ID of the stock. Use the market/auto-complete API to get the correct values.", "type": "str", "default": "aapl:us"}, "template": {"description": "Specifies the type of statistical template to use. Options include 'COMMODITY', 'CURRENCY', 'INDEX', 'INDEXFUTURE', 'RATE', and 'STOCK'. Defaults to 'STOCK'.", "type": "str, optional", "default": "STOCK"}}}
{"name": "balansheet_financials", "description": "Fetches and returns the financial data for a given company symbol using the specified RapidAPI key.", "parameters": {"symbol": {"description": "The stock ticker symbol of the company for which financial data is requested.", "type": "str", "default": ""}}}
{"name": "matchstreakodds", "description": "Fetch odds data related to streaks for a specific football match using its ID.", "parameters": {"is_id": {"description": "The ID of the match for which the streaks odds data is to be retrieved.", "type": "int", "default": 10114139}}}
{"name": "tournament_matches_by_date", "description": "Retrieves all matches for a specified tournament on a given date using the Tennis Live Data API.", "parameters": {"date": {"description": "The date for which to retrieve the matches, formatted as 'YYYY-MM-DD'.", "type": "str", "default": "2020-01-06"}, "tournament_id": {"description": "The ID of the tournament.", "type": "int", "default": "1143"}}}
{"name": "team_stats", "description": "Fetches team statistics for the NBA. By default, it provides stats for the current league year. Optionally, you can supply a specific `leagueyear` or `team` to get results for those parameters.", "parameters": {"leagueyear": {"description": "The league year for which to fetch team stats. Defaults to None, which retrieves stats for the current league year.", "type": "str, optional", "default": ""}, "team": {"description": "The team for which to fetch stats. Defaults to None, which retrieves stats for all teams.", "type": "str, optional", "default": ""}}}
{"name": "get_property_type_filters", "description": "Retrieves property type filters from the Airbnb API.", "parameters": {"languageid": {"description": "The language ID for the requested response. To get the language ID, call the `getLanguages` API.", "type": "str, optional", "default": ""}}}
{"name": "generate_a_random_word", "description": "Generates a random word by querying the RandomWordGenerator.com database using the specified API keys and generator type.", "parameters": {"api_key": {"description": "The API key for authentication with RandomWordGenerator.com. Defaults to '5w36eV0FZJu9QIPlpR18'.", "type": "str", "default": "5w36eV0FZJu9QIPlpR18"}, "generator": {"description": "The type of word generator to use. Defaults to 'words'.", "type": "str", "default": "words"}}}
{"name": "get_zip_code_info", "description": "Fetches information about a given postal code in a specified country using the Zippopotamus API.", "parameters": {"country": {"description": "The country code (e.g., 'us' for the United States).", "type": "str", "default": "us"}, "postal_code": {"description": "The postal code for which information is being fetched.", "type": "str", "default": "90210"}}}
{"name": "spac_sec_filings", "description": "Fetches the latest SPAC SEC filings, optionally filtered by a given SPAC symbol.", "parameters": {"symbol": {"description": "The SPAC symbol to filter the SEC filings by. Defaults to 'ITAC'.", "type": "str", "default": "ITAC"}}}
{"name": "user_tweets_replies_by_screen_name", "description": "Fetches the tweets and replies of a specified user by their screen name using the Twitter API.", "parameters": {"username": {"description": "The screen name of the user whose tweets and replies are to be fetched.", "type": "str", "default": "elonmusk"}, "cursor": {"description": "The cursor for pagination, if any. Defaults to None.", "type": "str, optional", "default": ""}, "limit": {"description": "The maximum number of tweets and replies to fetch. Defaults to '40'.", "type": "str, optional", "default": "40"}}}
{"name": "hashtagmedias", "description": "Fetches media related to a specific hashtag from the Instagram API using RapidAPI.", "parameters": {"hash_tag": {"description": "The hashtag to query for media.", "type": "str", "default": "cat"}, "next_cursor": {"description": "A cursor for pagination to fetch the next set of results. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "getmusiclenses", "description": "Fetches music lenses from the Snapchat API.", "parameters": {"cursor": {"description": "A string to navigate through paginated results. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "search_pins", "description": "Search for Pinterest pins based on a given keyword using the specified RapidAPI key.", "parameters": {"keyword": {"description": "The search term used to find relevant Pinterest pins.", "type": "str", "default": "nasa"}}}
{"name": "topic_topic", "description": "Fetches entries from a specific topic using the Uncovered Treasure API.", "parameters": {"topic": {"description": "The topic for which to fetch entries.", "type": "str", "default": ""}, "callback": {"description": "The optional JSONP callback function name.", "type": "str, optional", "default": ""}}}
{"name": "onyomi_reading", "description": "Fetches Kanji information based on the provided Onyomi (O-N) reading using the KanjiaLive API.", "parameters": {"on": {"description": "The Onyomi reading of the Kanji, provided in Katakana or romaji.", "type": "str", "default": "シン"}}}
{"name": "straddle", "description": "Fetches options data in straddle format for a given stock ticker using the RapidAPI service.", "parameters": {"ticker": {"description": "Stock ticker symbol for which to fetch the straddle options data.", "type": "str", "default": "msft"}}}
{"name": "webcams_list_region_region_region", "description": "Fetch a list of webcams for the specified region(s) with optional parameters for language and content detail.", "parameters": {"region": {"description": "A comma-separated list of ISO 3166-1-alpha-2 country codes and region codes separated by a dot.", "type": "str", "default": ""}, "lang": {"description": "The language code to localize the results, if available. Default is 'en'.", "type": "str, optional", "default": "en"}, "show": {"description": "Specifies the content details to include in the response. Default is 'webcams:image,location'.", "type": "str, optional", "default": "webcams:image,location"}}}
{"name": "tsv", "description": "Fetches a subset list of a dataset from the specified API along with its metadata.", "parameters": {"dataset": {"description": "The identifier of the dataset to query.", "type": "str", "default": "frim1"}, "format": {"description": "The output format of the data. Defaults to 'tsv'.", "type": "str, optional", "default": "tsv"}}}
{"name": "daily_horoscope", "description": "Fetches the daily horoscope for a given zodiac sign and day using the RapidAPI Horoscope Astrology service.", "parameters": {"sunsign": {"description": "The zodiac sign for which to fetch the horoscope. Possible values include 'aries', 'taurus', 'gemini', 'cancer', 'leo', 'virgo', 'libra', 'scorpio', 'sagittarius', 'capricorn', 'aquarius', 'pisces'.", "type": "str", "default": "libra"}, "day": {"description": "The day for which to fetch the horoscope. Possible values include 'Today', 'Yesterday', 'Tomorrow', 'Week', 'Month', 'Year'.", "type": "str", "default": "today"}}}
{"name": "retrieve_group_results", "description": "Retrieves the up-to-date results for a specified group using the Toolbench RapidAPI.", "parameters": {"group_id": {"description": "The unique ID for the group which results are to be retrieved.", "type": "str", "default": "nYrK9udUc-UGvRS2kxaPtaB-0wzeHAJzM6vlL1te6wI"}}}
{"name": "downloadscreenshot", "description": "Downloads a custom screenshot generated using the `takeScreenshot` API endpoint.", "parameters": {"is_id": {"description": "Unique screenshot identifier provided by the response to a `takeScreenshot` request.", "type": "int", "default": "3240748"}}}
{"name": "get_forecastdata_by_lat_lon", "description": "Fetches a 14-day weather forecast for a given location specified by latitude and longitude.", "parameters": {"lat": {"description": "Latitude of the location.", "type": "int", "default": "51.5"}, "lon": {"description": "Longitude of the location.", "type": "int", "default": "-0.6"}, "lang": {"description": "Language for the forecast data. Defaults to 'en'. It can be one of [en, de, nl, fr, pl, gr, it, cn, ru, cz, pt, es].", "type": "str, optional", "default": "en"}}}
{"name": "location_info", "description": "Retrieve metadata for a specified location using the Foreca Weather API.", "parameters": {"location": {"description": "The location for which to retrieve metadata.", "type": "str", "default": "101275339"}}}
{"name": "forecast_weather_api", "description": "Fetches weather forecast and alerts from a weather API.", "parameters": {"q": {"description": "Query parameter to specify the location. It can be:", "type": "str", "default": "London"}, "days": {"description": "Number of days of weather forecast required, with a default of 3 days.", "type": "int, optional", "default": "3"}, "dt": {"description": "Specific date for the forecast in 'yyyy-MM-dd' format. Must be between today and the next 10 days.", "type": "str, optional", "default": ""}, "lang": {"description": "Desired language for the 'condition:text' field in the response.", "type": "str, optional", "default": ""}}}
{"name": "validate_username", "description": "Validates an Instagram username using the Toolbench RapidAPI service.", "parameters": {"username": {"description": "The Instagram username to be validated.", "type": "str", "default": "lelepons"}}}
{"name": "full_data", "description": "Fetches data from the RapidAPI based on the provided keyword, optional full data, and API key parameters.", "parameters": {"keyword": {"description": "The keyword to search for in the API.", "type": "str", "default": "email marketing"}, "fulldata": {"description": "Optional parameter to specify the type of full data. Defaults to 'digital marketing'.", "type": "str, optional", "default": "digital marketing"}}}
{"name": "temperature_from_to_number", "description": "Converts a temperature value from one unit to another using the RapidAPI Unit Conversion API.", "parameters": {"to": {"description": "The target temperature unit.", "type": "str", "default": "celsius"}, "number": {"description": "The temperature value to be converted.", "type": "int", "default": "90"}, "is_from": {"description": "The original temperature unit.", "type": "str", "default": "fahrenheit"}}}
{"name": "query_for_city_boundary_by_name", "description": "Queries the city boundary information by the given city name using the Boundaries API.", "parameters": {"name": {"description": "The name of the city for which to query boundary information.", "type": "str", "default": "Karlsruhe"}}}
{"name": "gettimezone", "description": "Fetches the local timezone information for a specified geographic location using latitude and longitude.", "parameters": {"longitude": {"description": "The geographic longitude coordinate of the location.", "type": "int", "default": "-74.40753570369408"}, "latitude": {"description": "The geographic latitude coordinate of the location.", "type": "int", "default": "40.63380384389354"}}}
{"name": "get_from_yts", "description": "Fetches torrent data from YTS for a given search topic using RapidAPI.", "parameters": {"searchtopic": {"description": "The topic or keyword to search for on YTS.", "type": "str", "default": "cars"}}}
{"name": "forex_history_data_deprecated", "description": "Fetches historical forex data for a given currency pair using the RapidAPI service.", "parameters": {"pair_id": {"description": "The identifier for the currency pair whose historical data is to be fetched.", "type": "str", "default": "1"}}}
{"name": "playlist_videos", "description": "Fetches videos from a specified YouTube playlist using the RapidAPI service. ", "parameters": {"gl": {"description": "The geolocation code (default is 'US').", "type": "str", "default": "US"}, "cursor": {"description": "The cursor token for paginated results (default is None).", "type": "str", "default": ""}, "hl": {"description": "The language code (default is 'en').", "type": "str", "default": "en"}, "is_id": {"description": "The playlist ID (default is 'PLcirGkCPmbmFeQ1sm4wFciF03D_EroIfr').", "type": "str", "default": "PLcirGkCPmbmFeQ1sm4wFciF03D_EroIfr"}}}
{"name": "get_coverage", "description": "Retrieves cell coverage information for major US carriers (AT&T, T-Mobile, U.S. Cellular, and Verizon) based on the provided zip code.", "parameters": {"postcode": {"description": "The zip code for which to retrieve cell coverage information.", "type": "str", "default": "92101"}}}
{"name": "retrieve_specific_queue_time", "description": "Retrieve a specific queue item based on the given ID from the unofficial Efteling API.", "parameters": {"is_id": {"description": "The ID of the specific queue item to retrieve.", "type": "int", "default": "12"}}}
{"name": "getrandomsolution", "description": "Fetches a JSON data consisting of a random optimal solution for a given cube position.", "parameters": {"position": {"description": "The cube position for which to retrieve the random optimal solution.", "type": "str", "default": "GBWGYOGYRYOORWROBRWYGWBB"}}}
{"name": "companies_id_jobs", "description": "Retrieves the latest job postings for a given company identifier since a specified timestamp.", "parameters": {"is_id": {"description": "The identifier of the company.", "type": "str", "default": "DEVFCLQFW054"}, "since": {"description": "A timestamp to filter job postings. Defaults to '2017-01-01'.", "type": "str, optional", "default": "2017-01-01"}, "size": {"description": "The maximum number of job postings to return. Defaults to 100.", "type": "int, optional", "default": "100"}}}
{"name": "getpostcode", "description": "Retrieve details for a given UK postcode using the RapidAPI service.", "parameters": {"postcode": {"description": "The UK postcode to be queried.", "type": "str", "default": "SW1A2AA"}}}
{"name": "stock_get_total_revenue", "description": "Fetches the total revenue for a given stock symbol from the specified region using the Toolbench RapidAPI service.", "parameters": {"symbol": {"description": "The ticker symbol of the stock (e.g., \"AAPL\" for Apple Inc.).", "type": "str", "default": ""}, "region": {"description": "The region code to fetch the stock data from. Allowed values are 'US', 'BR', 'AU', 'CA', 'FR', 'DE', 'HK', 'IN', 'IT', 'ES', 'GB', 'S'. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "vin_decode", "description": "Decodes a given Vehicle Identification Number (VIN) using the RapidAPI VIN Decoder service.", "parameters": {"vin": {"description": "The Vehicle Identification Number to decode.", "type": "str", "default": "WBAWY32040L678750"}}}
{"name": "newspaper_company_filter_for_news", "description": "Fetches news articles from a specified newspaper company using RapidAPI.", "parameters": {"newspaperid": {"description": "The ID of the newspaper company to filter news from.", "type": "str", "default": "guardian"}}}
{"name": "cci", "description": "Fetches the Commodity Channel Index (CCI) for a given symbol at a specified interval from the Twelve Data API.", "parameters": {"symbol": {"description": "The instrument symbol, which can be any equity, index, ETF, forex, or cryptocurrency (e.g., `AAPL`, `EUR/USD`, `ETH/BTC`).", "type": "str", "default": "AAPL"}, "interval": {"description": "The interval between two consecutive points in the time series. Supported intervals are `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, and `1month`.", "type": "str", "default": "1min"}, "outputsize": {"description": "The number of data points to retrieve. The default is `30`.", "type": "int, optional", "default": 30}, "time_period": {"description": "The time period for calculating the CCI. The default is `20`.", "type": "int, optional", "default": 20}, "format": {"description": "The format of the returned data. Accepted values are `csv` or `json`. The default is `json`.", "type": "str, optional", "default": "json"}}}
{"name": "transaction", "description": "Fetches full data for a specific transaction on the Optimism blockchain.", "parameters": {"hash": {"description": "The hash of the transaction to scan.", "type": "str", "default": "0xc3f239bae81d78c344f475955801bf2a491430009f171c34a4937dc89ad88d9f"}, "network": {"description": "The network to use (mainnet or testnet). Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "specifications_by_make_model", "description": "Fetches the specifications of a motorcycle given its make and model using the Motorcycle Specs Database API.", "parameters": {"make": {"description": "The manufacturer of the motorcycle.", "type": "str", "default": "Aprilia"}, "model": {"description": "The model of the motorcycle.", "type": "str", "default": "Dorsoduro 1200"}}}
{"name": "single_airplane", "description": "Fetches details of a single airplane using its ID from the Airplane Database API.", "parameters": {"is_id": {"description": "The ID of the airplane to retrieve details for.", "type": "int", "default": "76"}}}
{"name": "consulta_estabelecimento", "description": "Queries the CNPJ for unified information from Receita Federal, Simples Nacional, and Cadastro de Contribuintes.", "parameters": {"cnpj": {"description": "The CNPJ number to be queried.", "type": "str", "default": "84447804000123"}, "maxage": {"description": "Maximum age of the cached data in days. Defaults to 30.", "type": "int, optional", "default": "30"}, "simpleshistory": {"description": "Whether to include historical data from Simples Nacional. Defaults to None.", "type": "bool, optional", "default": "false"}, "registrations": {"description": "UFs separated by commas to include information from Cadastro de Contribuintes. Use 'BR' to consider all. Defaults to 'BR'.", "type": "str, optional", "default": "BR"}, "simples": {"description": "Whether to include current data from Simples Nacional. Defaults to None.", "type": "bool, optional", "default": "true"}}}
{"name": "videocategories", "description": "Fetches video categories from the YouTube API based on provided parameters.", "parameters": {"part": {"description": "Specifies the videoCategory resource properties that the API response will include. Typically set to 'snippet'.", "type": "str", "default": "snippet"}, "is_id": {"description": "A comma-separated list of video category IDs to retrieve. Default is None.", "type": "str, optional", "default": ""}, "regioncode": {"description": "Instructs the API to return the list of video categories available in the specified country, given by an ISO 3166-1 alpha-2 country code. Default is 'US'.", "type": "str, optional", "default": "US"}, "hl": {"description": "Specifies the language that should be used for text values in the API response. Default is 'en_US'.", "type": "str, optional", "default": "en_US"}}}
{"name": "getchanneldetails", "description": "Fetch detailed information and insights about a specific YouTube channel using its ID.", "parameters": {"is_id": {"description": "The unique ID of the YouTube channel to fetch details for.", "type": "str", "default": ""}}}
{"name": "dividends", "description": "Retrieve the amount of dividends paid out for a given stock symbol within specified dates and other optional parameters.", "parameters": {"symbol": {"description": "The stock symbol for which to retrieve dividend information.", "type": "str", "default": "AAPL"}, "start_date": {"description": "The start date for the dividend data in YYYY-MM-DD format. Defaults to None.", "type": "str, optional", "default": ""}, "end_date": {"description": "The end date for the dividend data in YYYY-MM-DD format. Defaults to None.", "type": "str, optional", "default": ""}, "country": {"description": "The country of the stock exchange. Defaults to None.", "type": "str, optional", "default": ""}, "range": {"description": "The range for the dividend data. Example: '6m' for six months. Defaults to '6m'.", "type": "str, optional", "default": "6m"}, "exchange": {"description": "The stock exchange where the symbol is listed. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "mediainfo", "description": "Fetch media information from Instagram using the provided short code.", "parameters": {"short_code": {"description": "The short code of the Instagram media post.", "type": "str", "default": "CA_ifcxMjFR"}}}
{"name": "companies_id_financials_exists", "description": "Checks if financial key figures for a company with the given identifier are available and returns the list of years for which these figures are available.", "parameters": {"is_id": {"description": "The identifier of the company to check for financial data.", "type": "str", "default": "DEVFCLQFW054"}}}
{"name": "query", "description": "Queries information about an IP address using the NetDetective API.", "parameters": {"ipaddress": {"description": "The IP address to use for the query. Defaults to None, which uses the IP address of the connecting client.", "type": "str, optional", "default": ""}}}
{"name": "get_callback_url_status", "description": "Check the status of a callback URL to determine if it can receive scan results via POST requests.", "parameters": {"callback_url": {"description": "The URL to be checked for its ability to receive scan results.", "type": "str", "default": "https://my-callback-url.com"}}}
{"name": "about_channel", "description": "Fetches detailed information about a YouTube channel using its ID.", "parameters": {"is_id": {"description": "The ID of the YouTube channel for which information is being fetched.", "type": "str", "default": "UCE_M8A5yxnLfW0KghEeajjw"}}}
{"name": "year_fractions", "description": "Calculates the year fraction between two dates based on the specified day count convention using the RapidAPI service.", "parameters": {"start_date": {"description": "The start date of the period in YYYY-MM-DD format.", "type": "str", "default": "2021-03-31"}, "end_date": {"description": "The end date of the period in YYYY-MM-DD format.", "type": "str", "default": "2021-04-30"}, "dcc_types": {"description": "The day count convention to be used for the calculation (e.g., '30/360', 'ACT/360', etc.).", "type": "str", "default": "Actual360"}}}
{"name": "get_user_id_by_username", "description": "Fetch the Instagram user ID associated with a given username.", "parameters": {"username": {"description": "The Instagram username for which the user ID needs to be retrieved.", "type": "str", "default": "abdallhdev"}}}
{"name": "api_userinfo", "description": "Fetches the avatar, followers count, likes count, and videos count of a TikTok user by user ID.", "parameters": {"is_id": {"description": "The ID of the TikTok user.", "type": "str", "default": "6867450947363636225"}}}
{"name": "kunyomi_reading", "description": "Searches for kanji characters using the provided kunyomi reading.", "parameters": {"kun": {"description": "The kunyomi reading of the kanji character, specified in Hiragana or romaji.", "type": "str", "default": "oya"}}}
{"name": "single_strain", "description": "Fetches detailed information for a single strain by its ID using the Weed Strain API.", "parameters": {"is_id": {"description": "The ID of the strain for which details are to be fetched.", "type": "int", "default": "45"}}}
{"name": "city_data", "description": "Fetches a list of cities using the Toolbench RapidAPI.", "parameters": {"count": {"description": "The number of cities to retrieve. Defaults to 10. Maximum value is 1000.", "type": "int, optional", "default": "10"}}}
{"name": "get_watches_by_brand_family_model", "description": "Fetches a list of watches based on brand name, family, and model using the provided RapidAPI key.", "parameters": {"brandname": {"description": "The brand name of the watch.", "type": "str", "default": "Omega"}, "model": {"description": "The model name of the watch.", "type": "str", "default": "2005.75.00"}, "family": {"description": "The family category of the watch.", "type": "str", "default": "Aqua Terra"}}}
{"name": "image_stable_prompter", "description": "Generates a prompt for stable diffusion using an image URL via the Toolbench RapidAPI.", "parameters": {"url": {"description": "The full path of the image URL to be processed. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "random_mlem", "description": "Fetches one random mlem image in JSON format based on the given optional parameters.", "parameters": {"brightness": {"description": "Image brightness, can be 'dark' or 'bright'.", "type": "str, optional", "default": ""}, "maxheight": {"description": "Maximum height of the image.", "type": "int, optional", "default": ""}, "minwidth": {"description": "Minimum width of the image.", "type": "int, optional", "default": ""}, "minheight": {"description": "Minimum height of the image.", "type": "int, optional", "default": ""}, "tag": {"description": "Tag to filter the mlem images.", "type": "str, optional", "default": ""}, "maxwidth": {"description": "Maximum width of the image.", "type": "int, optional", "default": ""}, "orientation": {"description": "Orientation of the image, can be 'square', 'landscape', or 'portrait'.", "type": "str, optional", "default": ""}}}
{"name": "address_autosuggest", "description": "Fetches address suggestions based on a partial or complete address query using the Address Autosuggest API.", "parameters": {"query": {"description": "The partial or complete text of the address to search for suggestions.", "type": "str", "default": "Bridge"}}}
{"name": "tts", "description": "Converts given text to speech in the specified language and returns the result in .mp3 format using the RapidAPI service.", "parameters": {"text": {"description": "The text to be converted to speech.", "type": "str", "default": "hello world!"}, "lang": {"description": "Language code for the speech conversion. Defaults to 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "get_plus_one", "description": "This function takes an integer `number` and uses the RapidAPI service to get the number incremented by one.", "parameters": {"number": {"description": "The integer to be incremented.", "type": "int", "default": "15"}}}
{"name": "netherlands_songs", "description": "Fetch the Netherlands Songs chart information from the Billboard API.", "parameters": {"range": {"description": "The range of the chart to fetch.", "type": "str", "default": "1-10"}, "date": {"description": "The date of the chart in the format 'YYYY-MM-DD'.", "type": "str", "default": "2022-05-07"}}}
{"name": "get_range_of_verses", "description": "Fetches a collection of Ayahs/Verses from a specific chapter/surah of the Quran along with original Arabic text, translation, transliteration, and verse ID in JSON format using the RapidAPI service.", "parameters": {"chapterid": {"description": "The ID of the chapter/surah to retrieve.", "type": "int", "default": "63"}, "range": {"description": "The range of verses to fetch (e.g., \"1-10\").", "type": "str", "default": "1-4"}}}
{"name": "airports_by_keyword", "description": "Fetches a list of airport names and their IATA codes that match the given keyword.", "parameters": {"keyword": {"description": "A search term to match against airport names and IATA codes.", "type": "str", "default": ""}}}
{"name": "totd_tracks_by_page", "description": "Fetches the Track of the Day (TOTD) tracks from the Trackmania API by page number.", "parameters": {"page": {"description": "The page number of results to retrieve. Default is 0.", "type": "int", "default": "0"}}}
{"name": "resources_allcontries", "description": "Retrieves a list of important economic resources for a specified African country using the RapidAPI service.", "parameters": {"country_name": {"description": "The name of the African country for which to retrieve the economic resources.", "type": "str", "default": "all"}}}
{"name": "company_details", "description": "Fetch details of a company from Indeed's API.", "parameters": {"company_id": {"description": "The unique identifier of the company to fetch details for.", "type": "str", "default": "Microsoft"}, "locality": {"description": "The locality or country code for Indeed's subdomain. Default is 'us' if not provided.", "type": "str, optional", "default": ""}}}
{"name": "stock_calendar_events", "description": "Fetches calendar events for a specified stock symbol using the Yahoo Finance API.", "parameters": {"symbol": {"description": "The stock symbol for which to retrieve calendar events.", "type": "str", "default": "AAPL"}}}
{"name": "symbol", "description": "Fetches stock data for a given ticker symbol from the RapidAPI service.", "parameters": {"symbol": {"description": "The ticker symbol of the stock to retrieve data for.", "type": "str", "default": "AAPL"}}}
{"name": "getbookcoverurl", "description": "Fetches the URL of a book cover image using the provided language code and ISBN.", "parameters": {"languagecode": {"description": "The language code in which the book cover information is required.", "type": "str", "default": "en"}, "isbn": {"description": "The International Standard Book Number (ISBN) of the book.", "type": "str", "default": "9781526606198"}}}
{"name": "get_individual_news_sources", "description": "Fetches cryptocurrency news from a specific news source using the provided API key.", "parameters": {"newspaperid": {"description": "The ID of the specific news source to fetch news from.", "type": "str", "default": "CryptoNews"}}}
{"name": "getpopulationbycountrycode", "description": "Fetches the population data of a specified country using its ISO 3166-1 alpha-3 country code.", "parameters": {"countrycode": {"description": "The ISO 3166-1 alpha-3 code representing the country.", "type": "str", "default": "ESP"}}}
{"name": "search_exact_phrase_api", "description": "Searches the King James Version (KJV) of the Bible for the exact phrase supplied and returns the result.", "parameters": {"phrase": {"description": "The exact phrase to search for in the KJV Bible.", "type": "str", "default": "In the beginning"}}}
{"name": "laptops", "description": "Retrieves information about laptops from the Amazon API using optional brand name filtering.", "parameters": {"name_brand": {"description": "The brand name to filter the laptops by. If not provided, all laptop brands will be considered.", "type": "str, optional", "default": ""}}}
{"name": "stock_get_annual_avg_div_yield", "description": "Fetches the annual average dividend yield for a given stock symbol.", "parameters": {"symbol": {"description": "The ticker symbol of the stock (e.g., \"AAPL\" for Apple Inc.).", "type": "str", "default": "AAPL"}, "region": {"description": "The region code for the stock market. Default is 'US'. Allowed values are 'US', 'BR', 'AU', 'CA', 'FR', 'DE', 'HK', 'IN', 'IT', 'ES', 'GB', 'S'.", "type": "str, optional", "default": "US"}}}
{"name": "get_ios_app", "description": "Fetches a specific iOS app's details using the app ID from the iOS Store API.", "parameters": {"is_id": {"description": "The ID of the iOS app to fetch.", "type": "str", "default": "880047117"}}}
{"name": "video_search", "description": "Search for videos based on the specified criteria and return the list of matching videos.", "parameters": {"query": {"description": "The search term to be used for finding videos.", "type": "str", "default": "amateur"}, "site": {"description": "The specific site to search for videos. Defaults to None.", "type": "str, optional", "default": ""}, "timeout": {"description": "Timeout duration in milliseconds for the request. Defaults to 5000.", "type": "int, optional", "default": "5000"}, "page": {"description": "The page number for pagination. Defaults to 1.", "type": "int, optional", "default": "1"}, "filter": {"description": "Filter criteria for the search results. Defaults to None.", "type": "str, optional", "default": ""}, "quality": {"description": "Minimum quality of the videos to be searched. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "title_get_sound_tracks", "description": "Fetches the sound tracks for a specific title from the online movie database.", "parameters": {"tconst": {"description": "The title identifier, which should start with 'tt' (e.g., 'tt0944947'), typically obtained from the /title/auto-complete or /title/find endpoints.", "type": "str", "default": "tt0944947"}}}
{"name": "genderify_v3", "description": "Predict and detect the gender (male or female) based on the given name or email address using the Genderify API. Names are supported in over 160 countries.", "parameters": {"text": {"description": "The name or email address to analyze for gender prediction.", "type": "str", "default": "ayumihamasaki@gmail.com"}}}
{"name": "ranking_current", "description": "Retrieves the current ranking from the SofaScores API using the given ranking type and RapidAPI key.", "parameters": {"ranking": {"description": "The type of ranking to retrieve.", "type": "str", "default": "fifa"}}}
{"name": "nhl_picks", "description": "Retrieves the NHL PickCenter data for a specified game using the NHL API.", "parameters": {"is_id": {"description": "The ID of the NHL game for which PickCenter data is requested.", "type": "str", "default": "401458986"}}}
{"name": "telegram_channel_info", "description": "Fetch realtime information about a public Telegram Channel.", "parameters": {"channel": {"description": "The @username of the Telegram channel.", "type": "str", "default": "telegram"}}}
{"name": "ayah_recitations", "description": "Fetches the list of recitations for a specific Ayah by its key and recitation ID.", "parameters": {"recitation_id": {"description": "The ID of the recitation.", "type": "int", "default": ""}, "ayah_key": {"description": "The key of the Ayah, which is a combination of the Surah number and Ayah number (e.g., '1:1' for the first Ayah of the first Surah).", "type": "str", "default": ""}}}
{"name": "get_language_by_id", "description": "Fetches language details from the FluentMe API using a given language ID.", "parameters": {"language_id": {"description": "The unique identifier for the language to be fetched.", "type": "int", "default": ""}}}
{"name": "constructors_standings", "description": "Retrieve constructor standings for a specified F1 championship year.", "parameters": {"year": {"description": "The year of the F1 championship to retrieve standings for. Defaults to 2005.", "type": "int, optional", "default": "2005"}}}
{"name": "tour_rankings", "description": "Fetches the player rankings for a specific golf tour and season.", "parameters": {"tour_id": {"description": "The identifier for the particular golf tour.", "type": "int", "default": "2"}, "season": {"description": "The year representing the season of the golf tour.", "type": "int", "default": "2021"}}}
{"name": "v1_geocoding", "description": "Fetches geolocation information of a specified city using the API Ninjas Geocoding API.", "parameters": {"city": {"description": "The name of the city to geocode.", "type": "str", "default": "Seattle"}, "country": {"description": "The country name, 2-letter ISO country code, or 3-letter ISO country code.", "type": "str, optional", "default": ""}, "state": {"description": "The US state (for United States cities only).", "type": "str, optional", "default": ""}}}
{"name": "topic_news_by_section", "description": "Fetches news articles based on a specific section and topic.", "parameters": {"section": {"description": "The news section to search within.", "type": "str", "default": "CAQiW0NCQVNQZ29JTDIwdk1EZGpNWFlTQW1WdUdnSlZVeUlQQ0FRYUN3b0pMMjB2TURKdFpqRnVLaGtLRndvVFIwRkVSMFZVWDFORlExUkpUMDVmVGtGTlJTQUJLQUEqKggAKiYICiIgQ0JBU0Vnb0lMMjB2TURkak1YWVNBbVZ1R2dKVlV5Z0FQAVAB"}, "topic": {"description": "The topic for which to get news headlines.", "type": "str", "default": "TECHNOLOGY"}, "lang": {"description": "The language to use for the results, specified as a 2-letter language code (default is 'en').", "type": "str, optional", "default": "en"}, "country": {"description": "The country code to filter the news by country (default is 'US').", "type": "str, optional", "default": "US"}}}
{"name": "get_date_and_time_by_city", "description": "Get the current date and time for a specified city.", "parameters": {"city": {"description": "Name of the city to get the date and time for.", "type": "str", "default": "Los Angeles"}}}
{"name": "gettechdomains", "description": "Retrieve the domains that use a specific technology.", "parameters": {"tech": {"description": "The name of the technology to search for.", "type": "str", "default": "g-suite"}}}
{"name": "listar_todos", "description": "Fetch a list of all ministries and subsecretariats using the specified API.", "parameters": {"todos": {"description": "The endpoint to retrieve the list of ministries and subsecretariats.", "type": "str", "default": "ministerios"}}}
{"name": "i18nlanguages", "description": "Fetches a list of application languages that the YouTube website supports via the RapidAPI YouTube v3.11 endpoint.", "parameters": {"part": {"description": "Specifies the **i18nLanguage** resource properties that the API response will include. Set the parameter value to **snippet**.", "type": "str", "default": "snippet"}, "hl": {"description": "Specifies the language that should be used for text values in the API response. Defaults to 'en_US'.", "type": "str, optional", "default": "en_US"}}}
{"name": "get_team_win_data", "description": "Returns the win/loss data for all NFL teams for a specified year.", "parameters": {"year": {"description": "The year for which to retrieve the win/loss data. Must be between 1920 and the current year.", "type": "int", "default": "2020"}}}
{"name": "data_country", "description": "Fetch data related to sports odds based on the provided parameters.", "parameters": {"package": {"description": "The package to use in the query string.", "type": "str", "default": "4a788ec11cd42226e2fdcbd62253379c"}, "typeodds": {"description": "The type of odds (e.g., 'line', 'live').", "type": "str", "default": "line"}, "sportid": {"description": "The ID of the sport (e.g., 1, 2, 3) or 0 for all sports.", "type": "int", "default": "1"}, "langodds": {"description": "The language for the odds (e.g., 'en', 'ru', 'fr').", "type": "str", "default": "en"}, "typeparams": {"description": "The type of parameters (e.g., 'sports', 'countries', 'tournaments').", "type": "str", "default": "countries"}}}
{"name": "get_live_games", "description": "Fetches the list of all live games for a given sport along with their current status and score using the ViperScore API.", "parameters": {"sport": {"description": "The type of sport for which to retrieve live games (e.g., 'football', 'basketball').", "type": "str", "default": "football"}}}
{"name": "getweatherforecast", "description": "Fetches the weather forecast for a given location over a specified number of days.", "parameters": {"location": {"description": "The name of the city or location for which to retrieve the weather forecast.", "type": "str", "default": "London"}, "days": {"description": "The number of days of forecast data to retrieve. Defaults to 3. The range of days is from 1 to 16.", "type": "int, optional", "default": "3"}}}
{"name": "alerts", "description": "Fetches severe weather alerts for a specified location using GPS coordinates or place ID.", "parameters": {"place_id": {"description": "Identifier of a place obtained from the 'Location' endpoints. If provided, it takes precedence over lat and lon.", "type": "str, optional", "default": ""}, "lat": {"description": "Latitude of the location, with defaults to '45.74846'. This can be in formats like 12N, 12.3N, -13.4. Ignored if place_id is provided.", "type": "str, optional", "default": "45.74846"}, "lon": {"description": "Longitude of the location, with defaults to '4.84671'. This can be in formats like 12E, 12.3E, -13.4. Ignored if place_id is provided.", "type": "str, optional", "default": "4.84671"}, "language": {"description": "Language of text summaries. Supported languages are:", "type": "str, optional", "default": "en"}, "timezone": {"description": "Timezone for date fields in the response. Default is 'auto', which uses the local timezone of the location. Format follows the tzinfo database (e.g., 'Europe/Prague', 'UTC').", "type": "str, optional", "default": "auto"}}}
{"name": "related", "description": "Fetch related shows for a given show identifier using the RapidAPI service.", "parameters": {"show_slug": {"description": "The unique identifier or slug of the show for which related shows are to be fetched.", "type": "str", "default": ""}}}
{"name": "v1_dadjokes", "description": "Fetch one or more random dad jokes from the API Ninjas Dad Jokes API endpoint.", "parameters": {"limit": {"description": "The number of jokes to return. Must be a string representing a number between 1 and 10. Default is None.", "type": "str, optional", "default": ""}}}
{"name": "getcountrycode", "description": "Retrieves all available country codes using the specified API.", "parameters": {"getcountrycodes": {"description": "A flag to specify whether to retrieve country codes. Defaults to 'true'.", "type": "str", "default": "true"}}}
{"name": "actors_get_interesting_jobs", "description": "Retrieves interesting jobs for a specified actor or actress using the RapidAPI service.", "parameters": {"nconst": {"description": "The unique identifier for the actor/actress, which should start with \"nm\" (e.g., \"nm0001667\"). This can typically be found using the /actors/list-born-today or /actors/list-most-popular-celebs endpoints.", "type": "str", "default": "nm0001667"}}}
{"name": "movies_get_dvds", "description": "Fetches a list of DVDs based on the specified type of movie using the Flixster API.", "parameters": {"typemovie": {"description": "The type of movie to filter DVDs by. Can be one of the following: 'NEW_RELEASE' or 'COMING_SOON'. Default is 'NEW_RELEASE'.", "type": "str", "default": "NEW_RELEASE"}}}
{"name": "get_quotes_by_source", "description": "Fetches quotes from a given source using the Quotes API on RapidAPI.", "parameters": {"source": {"description": "The source from which to fetch quotes.", "type": "str", "default": ""}}}
{"name": "detailed_cake_recipe_by_id", "description": "This function retrieves a detailed cake recipe based on a given recipe ID from the RapidAPI service.", "parameters": {"is_id": {"description": "The ID of the cake recipe to retrieve.", "type": "str", "default": "5"}}}
{"name": "dinner_ingredient", "description": "Retrieves a random dinner recipe containing the specified ingredient.", "parameters": {"ingredient": {"description": "The ingredient which the recipe should include.", "type": "str", "default": "chicken"}}}
{"name": "icecream_ingredient", "description": "Fetches a random ice cream recipe that includes a specified ingredient.", "parameters": {"ingredient": {"description": "The specific ingredient to include in the ice cream recipe search.", "type": "str", "default": "blueberry"}}}
{"name": "token", "description": "Generates an OAuth token from the RapidAPI 'OAuth Echo' endpoint.", "parameters": {"client_secret": {"description": "The client's secret key. Defaults to None.", "type": "str, optional", "default": ""}, "client_id": {"description": "The client's ID. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "brands_detail", "description": "Fetch detailed information about a brand using the provided brand ID.", "parameters": {"is_id": {"description": "The ID of the brand to fetch details for. This value should be obtained from the brands `id` field returned in the `/search` endpoint or the `brandId` field returned in the `/products/list` or `/products/detail` endpoints.", "type": "int", "default": "158155"}}}
{"name": "draw_date_listing", "description": "Fetches a listing of Thai lottery draw dates from the RapidAPI service.", "parameters": {"page": {"description": "The page number of the results to fetch. Defaults to 1.", "type": "int, optional", "default": "1"}}}
{"name": "single_dog_breed", "description": "Fetches details of a single dog breed from the DogBreedDB API.", "parameters": {"is_id": {"description": "The ID of the dog breed to fetch details for.", "type": "int", "default": "47"}}}
{"name": "medias", "description": "Retrieves media posts from a specified Instagram user using the Instagram RapidAPI.", "parameters": {"user_id": {"description": "The ID of the Instagram user whose media posts are to be retrieved.", "type": "str", "default": "25025320"}, "batch_size": {"description": "The number of media posts to retrieve in a single batch, ranging from 1 to 50. Defaults to 20.", "type": "int, optional", "default": "20"}, "next_cursor": {"description": "The cursor for fetching the next set of media posts in pagination. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "getlivenow", "description": "Fetches live sports betting data from the specified API.", "parameters": {"skinname": {"description": "The name of the skin to filter the live data (default is 'betbiga').", "type": "str", "default": "betbiga"}}}
{"name": "premier_league_standings", "description": "Fetches the Premier League standings data for a given season using the RapidAPI Premier League Standings API.", "parameters": {"season": {"description": "The season for which the standings are to be retrieved, specified as a string (e.g., '2022'). If not provided, the current season's standings will be fetched.", "type": "str, optional", "default": ""}}}
{"name": "validate_email_address", "description": "Validate if an email address is deliverable and working using the Toolbench RapidAPI service.", "parameters": {"email": {"description": "The email address to be validated.", "type": "str", "default": "test@gmail.com"}}}
{"name": "products_id", "description": "Fetches product information from AliExpress using the given product ID and various optional filters.", "parameters": {"is_id": {"description": "The unique identifier for the product on AliExpress.", "type": "int", "default": "200000783"}, "page": {"description": "The page number for paginated results. Default is 1.", "type": "int, optional", "default": 1}, "currency": {"description": "The currency code to use for the prices.", "type": "str, optional", "default": ""}, "sort": {"description": "The sorting order for the search results.", "type": "str, optional", "default": ""}, "pricemax": {"description": "The maximum price limit for filtering. Default is 100.", "type": "int, optional", "default": 100}, "country": {"description": "The country code for filtering the products based on shipping.", "type": "str, optional", "default": ""}, "pricemin": {"description": "The minimum price limit for filtering. Default is 20.", "type": "int, optional", "default": 20}, "issale": {"description": "Filter to show only products on sale.", "type": "bool, optional", "default": 0}, "locale": {"description": "The locale code for the results.", "type": "str, optional", "default": ""}, "isfreeship": {"description": "Filter to show only products with free shipping.", "type": "bool, optional", "default": 0}, "isfavorite": {"description": "Filter to show only favorite products.", "type": "bool, optional", "default": 0}}}
{"name": "search_memes", "description": "Search for memes based on specified criteria.", "parameters": {"media_type": {"description": "The type of content to search for. Can be 'image', 'video', or specific formats such as 'jpg', 'png', 'gif', or 'mp4'. Defaults to 'image'.", "type": "str", "default": "image"}, "keywords_in_image": {"description": "Whether the keywords should be found in the meme's image. Defaults to None.", "type": "bool", "default": "false"}, "keywords": {"description": "A comma-separated list of keywords to search for. Defaults to 'rocket'.", "type": "str", "default": "rocket"}, "min_rating": {"description": "The minimum rating the results should have, between 0 and 10. Defaults to 3.", "type": "int", "default": "3"}, "number": {"description": "The number of results to retrieve, between 1 and 10. Defaults to 3.", "type": "int", "default": 3}}}
{"name": "get_play_by_play", "description": "Fetch the NHL game play-by-play data for a specified game.", "parameters": {"is_id": {"description": "The unique identifier for the NHL game.", "type": "str", "default": "401458986"}}}
{"name": "get_fuel_economy_information", "description": "Fetches fuel economy information for a specified vehicle from the official U.S. government source.", "parameters": {"model": {"description": "The vehicle model. Use the /models endpoint to get supported models for the specified make.", "type": "str", "default": "Chiron"}, "make": {"description": "The vehicle make. Use the /makes endpoint to get supported makes.", "type": "str", "default": "Bugatti"}, "year": {"description": "Model year. Currently supports model years from 1985 to 2023. Defaults to '2023'.", "type": "str, optional", "default": "2023"}}}
{"name": "nhl_schedules", "description": "Retrieves NHL schedule data for a specified date.", "parameters": {"day": {"description": "The day of the desired schedule in 'DD' format.", "type": "str", "default": "11"}, "month": {"description": "The month of the desired schedule in 'MM' format.", "type": "str", "default": "05"}, "year": {"description": "The year of the desired schedule in 'YYYY' format.", "type": "str", "default": "2022"}}}
{"name": "flag", "description": "Retrieves the flag image of a specified country using the RapidAPI service.", "parameters": {"country": {"description": "The country ISO code or the full name of the country in English.", "type": "str", "default": "Japan"}}}
{"name": "getcountrybynumber", "description": "Retrieves country information based on a phone number using the Telephone to Country API.", "parameters": {"q": {"description": "The phone number to search for the corresponding country information.", "type": "str", "default": "12136210002"}}}
{"name": "searchcnit", "description": "Fetches information related to a French vehicle identification number (CNIT) using the specified license plate and function.", "parameters": {"plate": {"description": "The vehicle license plate number to search for. Defaults to '021A13'.", "type": "str", "default": "021A13"}, "function": {"description": "The specific API function to call. Defaults to 'getktypefornumplatefrancemineplate'.", "type": "str", "default": "getktypefornumplatefrancemineplate"}}}
{"name": "video_recommendation", "description": "Fetches a list of recommended videos based on a provided YouTube video ID.", "parameters": {"video_id": {"description": "The YouTube video ID for which recommendations are to be fetched.", "type": "str", "default": "Y_AJvHdgu9A"}}}
{"name": "patreon", "description": "Check the availability of a given username on Patreon using the Toolbench RapidAPI service.", "parameters": {"username": {"description": "The username to be checked on Patreon.", "type": "str", "default": "username"}}}
{"name": "get_tiktok_video_info", "description": "Fetches detailed information about a TikTok video, including options for HD quality and no watermark.", "parameters": {"url": {"description": "The URL of the TikTok video. It can be in the format of a TikTok ID or a direct TikTok video link.", "type": "str", "default": "https://vm.tiktok.com/ZTRvK8Fn4/"}}}
{"name": "youtube_search", "description": "Searches for YouTube videos based on a keyword and various optional parameters.", "parameters": {"query": {"description": "The keyword to search for.", "type": "str", "default": "bobby lee"}, "lang": {"description": "The language code for the search results. Defaults to 'en'.", "type": "str, optional", "default": "en"}, "order_by": {"description": "The sorting order of the search results. Possible values: 'last_hour', 'today', 'this_week', 'this_month', 'this_year'. Defaults to 'this_month'.", "type": "str, optional", "default": "this_month"}, "country": {"description": "The country code for the search results. Defaults to 'us'.", "type": "str, optional", "default": "us"}}}
{"name": "currency_time_series", "description": "Retrieve forex time series data for a specified period.", "parameters": {"period": {"description": "The period for which the time series data should be returned. Valid periods include:", "type": "str", "default": ""}, "to_symbol": {"description": "A 3-letter currency code representing the target currency (ISO 4217).", "type": "str", "default": "EUR"}, "from_symbol": {"description": "A 3-letter currency code representing the base currency (ISO 4217).", "type": "str", "default": "USD"}, "language": {"description": "The language code (ISO 639-1) for the results. Default is 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "produce_mixy_words_list", "description": "Generates a list of random words based on the specified amount and difficulty level by querying the Mixy Word Guess API.", "parameters": {"amount": {"description": "The number of words to generate. Valid values are integers between 1 and 100. Default is 10.", "type": "int, optional", "default": "10"}, "difficulty": {"description": "The difficulty level of the words. Valid values are \"easy\", \"medium\", and \"hard\". Default is 'easy'.", "type": "str, optional", "default": "easy"}}}
{"name": "country_details", "description": "Fetches the details for a specific country from the GeoDB API, including information on the number of regions.", "parameters": {"countryid": {"description": "An ISO-3166 country code or WikiData id representing the country.", "type": "str", "default": "US"}, "asciimode": {"description": "If set to True, display results using ASCII characters.", "type": "bool, optional", "default": ""}, "languagecode": {"description": "The language code to display the results in the specified language.", "type": "str, optional", "default": ""}}}
{"name": "search_video_list_by_keywords", "description": "Search for videos on TikTok by specified keywords and additional filtering options.", "parameters": {"keywords": {"description": "Keywords to search videos for.", "type": "str", "default": "踊ってみた"}, "sort_type": {"description": "Criterion for sorting results. Defaults to '0'.", "type": "str, optional", "default": "0"}, "publish_time": {"description": "Time filter for when videos were posted. Defaults to '0'.", "type": "str, optional", "default": "0"}, "cursor": {"description": "Pagination cursor for navigating results. Defaults to '0'.", "type": "str, optional", "default": "0"}, "region": {"description": "ISO region code to filter results by location. Defaults to 'US'.", "type": "str, optional", "default": "US"}, "count": {"description": "Number of results to retrieve. Defaults to '10'.", "type": "str, optional", "default": "10"}}}
{"name": "movies", "description": "Fetches the basic metadata for all movies available for playback in a specific region. The results can be sorted by popularity or in alphabetical order. ", "parameters": {"limit": {"description": "Number of records to return per request. Optional, default is 5, and the maximum is 100.", "type": "int", "default": "5"}, "sources": {"description": "Filter records by source. Multiple sources can be comma-separated. Optional, default is 'netflix,hulu'. Possible values include free, tv_everywhere, subscription, purchase, and specific sources such as netflix or hulu.", "type": "str", "default": "netflix,hulu"}, "region": {"description": "Filter results by region. Optional, default is 'US'. Possible values include 'US', 'FR'.", "type": "str", "default": "US"}, "offset": {"description": "Number of records to skip. Optional, default is 0.", "type": "int", "default": "0"}, "sort": {"description": "Method to sort the records. Optional, default is 'popularity'. Possible values are 'alphabetical' and 'popularity'.", "type": "str", "default": "popularity"}}}
{"name": "brazil_songs", "description": "Fetches the Brazil Songs chart information for a given date and range.", "parameters": {"date": {"description": "The date for which to fetch the chart data, in the format 'YYYY-MM-DD'.", "type": "str", "default": "2022-05-07"}, "range": {"description": "The range of chart data to retrieve.", "type": "str", "default": "1-10"}}}
{"name": "get_2_stockdetails", "description": "Fetch detailed information about a specific stock using the StockYAPI Exchange API.", "parameters": {"keyword": {"description": "The stock ticker or keyword to search for. Default is 'GOOG'.", "type": "str", "default": "GOOG"}}}
{"name": "get_exchange_pairs", "description": "Retrieves the top 100 exchange pairs for a given exchange ID.", "parameters": {"is_id": {"description": "The ID of the exchange for which to retrieve pairs.", "type": "int", "default": "5"}}}
{"name": "models", "description": "Search for car models based on various criteria such as year, make, model, make_id, and more. The results can be customized using different parameters to limit, sort, and filter the data.", "parameters": {"limit": {"description": "The maximum number of results to return.", "type": "int, optional", "default": ""}, "make_id": {"description": "The ID of the car make to filter the results.", "type": "str, optional", "default": ""}, "year": {"description": "The year to filter the car models.", "type": "str, optional", "default": ""}, "page": {"description": "The page number for paginated results.", "type": "int, optional", "default": ""}, "sort": {"description": "The field to sort the results by. Default is 'id'.", "type": "str, optional", "default": "id"}, "make": {"description": "The car make to filter the results.", "type": "str, optional", "default": ""}, "model": {"description": "The car model to filter the results.", "type": "str, optional", "default": ""}, "direction": {"description": "The direction for sorting ('asc' or 'desc'). Default is 'asc'.", "type": "str, optional", "default": "asc"}, "verbose": {"description": "Whether to include detailed information like make, model, and trim. Default is 'yes'.", "type": "str, optional", "default": "yes"}}}
{"name": "us_al", "description": "Fetch the current or historical gas price data for Alabama.", "parameters": {"date": {"description": "The date for which to retrieve historical gas price data in the format 'YYYY-MM-DD'. If not provided, the current gas price data is fetched.", "type": "str, optional", "default": ""}}}
{"name": "racecards", "description": "Fetches the list of races for a given date from the Greyhound Racing UK API.", "parameters": {"date": {"description": "The date for which to fetch the racecards in 'YYYY-MM-DD' format. Defaults to '2021-06-05' if not provided.", "type": "str", "default": "2021-06-05"}}}
{"name": "random_profiles", "description": "Generates a list of fake user profiles given a specified size using the Toolbench RapidAPI service.", "parameters": {"size": {"description": "A string indicating the number of fake user profiles to generate. Defaults to '1'.", "type": "str", "default": "5"}}}
{"name": "comments_get", "description": "Fetch comments for a specific song from the database.", "parameters": {"artist_name": {"description": "The name of the artist.", "type": "str", "default": ""}, "lyric_title": {"description": "The title of the song, track, or lyric.", "type": "str", "default": ""}, "sm_lid": {"description": "The song's lyric ID. If provided, this bypasses `artist_name` and `lyric_title`. Defaults to None.", "type": "str, optional", "default": ""}, "parent_id": {"description": "When specified, the method will return any replies for the parent comment. Defaults to None.", "type": "str, optional", "default": ""}, "type": {"description": "The type of comments to return. Defaults to 'all'.", "type": "str, optional", "default": "all"}, "page": {"description": "The starting page of comments. Defaults to '1'.", "type": "str, optional", "default": "1"}, "page_size": {"description": "The number of comments returned per page. Defaults to '25'.", "type": "str, optional", "default": "25"}, "page_order": {"description": "The field to order the comments by (e.g., 'date' or 'rating'). Defaults to 'date'.", "type": "str, optional", "default": "date"}, "page_sort": {"description": "The order of sorting (ascending or descending, 'asc' or 'desc'). Defaults to 'asc'.", "type": "str, optional", "default": "asc"}}}
{"name": "sponge_bob", "description": "Generates a Sponge Bob meme with the given text using the Memeados API.", "parameters": {"text": {"description": "The text to be included in the Sponge Bob meme.", "type": "str", "default": "Example test"}}}
{"name": "random_skin_from_class", "description": "Fetches information about a random Counter-Strike skin from a specified class using the CS Skin API.", "parameters": {"class_name": {"description": "The class of Counter-Strike skin to retrieve, e.g., \"Rifle\".", "type": "str", "default": "Knife"}}}
{"name": "api_v1_beyblades_id", "description": "Fetches details of a Beyblade based on its ID using the Beyblade API v1.", "parameters": {"is_id": {"description": "The ID of the Beyblade to retrieve.", "type": "int", "default": ""}}}
{"name": "search_social_links", "description": "Search for social profile links based on a given query or keywords.", "parameters": {"query": {"description": "The search query or keywords to find social profile links.", "type": "str", "default": "John Smith"}, "social_networks": {"description": "A comma-delimited list of social networks to search for.", "type": "str, optional", "default": "facebook,tiktok,instagram,snapchat,twitter,youtube,linkedin,github,pinterest"}}}
{"name": "search_agents", "description": "Search for real estate agents based on various criteria such as location, price range, language, etc.", "parameters": {"location": {"description": "The city or zip code to search for agents.", "type": "str", "default": "santa monica"}, "page": {"description": "The page number of the results to retrieve. Defaults to 1.", "type": "int, optional", "default": "1"}, "price": {"description": "The price range of properties the agent deals with, formatted as 'minPrice_maxPrice'. Defaults to None.", "type": "str, optional", "default": ""}, "agentname": {"description": "The name of the agent to search for. Defaults to None.", "type": "str, optional", "default": ""}, "lang": {"description": "The language spoken by the agent. Defaults to None.", "type": "str, optional", "default": ""}, "photo": {"description": "Whether to only show agents with a photo. 1 for yes, 0 for no. Defaults to None.", "type": "bool, optional", "default": "1"}, "rating": {"description": "The rating of the agent, between 1 and 5. Defaults to None.", "type": "int, optional", "default": ""}}}
{"name": "view_item", "description": "Fetches an image and description of a catalog item based on provided credentials and identifiers.", "parameters": {"creds_datetime": {"description": "UTC iso8601 formatted datetime of the credentials.", "type": "str", "default": ""}, "creds_uuid": {"description": "GUID representing the unique user identifier.", "type": "str", "default": ""}, "creds_checksum": {"description": "Checksum of the credentials for validation.", "type": "str", "default": ""}, "socket_id": {"description": "Socket in which the item is located.", "type": "str", "default": ""}, "catalog_item_id": {"description": "Identifier of the catalog item to fetch details for.", "type": "str", "default": ""}, "format": {"description": "Format of the request, can be either 'rest' or 'restx'.", "type": "str", "default": "rest"}}}
{"name": "get_player_details", "description": "Retrieves player details based on the provided username and region.", "parameters": {"name": {"description": "The username of the player. This is case sensitive.", "type": "str", "default": "CoreJJ"}, "region": {"description": "The region of the player.", "type": "str", "default": "na"}}}
{"name": "query_by_fsa_code", "description": "Fetches geographical boundary information for a given Canadian Forward Sortation Area (FSA) code using the VanitySoft API.", "parameters": {"postal_fsa": {"description": "A Canadian Forward Sortation Area (FSA) code, e.g., \"T6H\" or \"A0A\".", "type": "str", "default": "T6H"}}}
{"name": "planet_vector_tiles", "description": "Retrieves global planet vector tiles in Protocolbuffer Binary Format (PBF) from the specified map service.", "parameters": {"y": {"description": "The y coordinate (tile row) of the map tile.", "type": "str", "default": "1"}, "x": {"description": "The x coordinate (tile column) of the map tile.", "type": "str", "default": "1"}, "z": {"description": "The zoom level of the map tile.", "type": "str", "default": "1"}}}
{"name": "movie_details", "description": "Returns detailed information about a specific movie from the YTS API, including optional data such as cast information and images.", "parameters": {"movie_id": {"description": "The YTS ID of the movie. Defaults to 10.", "type": "int, optional", "default": "10"}, "imdb_id": {"description": "The IMDB ID of the movie in YTS. Defaults to 10.", "type": "int, optional", "default": "10"}, "with_cast": {"description": "If set to True, includes additional information about the movie's cast in the response. Defaults to None.", "type": "bool, optional", "default": "false"}, "with_images": {"description": "If set to True, includes URLs of related images in the response. Defaults to None.", "type": "bool, optional", "default": "false"}}}
{"name": "extract_entities", "description": "Extracts named entities from the provided text using the specified model and RapidAPI key.", "parameters": {"text": {"description": "The text from which to extract named entities.", "type": "str", "default": "U.S. stocks rallied Thursday, with the Dow Jones Industrial Average up 2.9% in a tempestuous first half of the year."}, "model": {"description": "The model to use for named entity recognition. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "validate_card_number", "description": "Validate a credit card number and get the card type by using the Toolbench RapidAPI service.", "parameters": {"cardnumber": {"description": "The credit card number to be validated.", "type": "str", "default": "4682776017589385"}}}
{"name": "tickerdata", "description": "Fetches historical ticker data for a given period and date range from the RapidAPI service.", "parameters": {"period": {"description": "The period for which to fetch the ticker data (e.g., 'daily', 'weekly').", "type": "str", "default": "1h"}, "startdate": {"description": "The start date for the data in YYYY-MM-DD format.", "type": "str", "default": "2010-04-12T14:30"}, "tickername": {"description": "The name of the ticker for which to fetch data.", "type": "str", "default": "gold"}, "enddate": {"description": "The end date for the data in YYYY-MM-DD format.", "type": "str", "default": "2010-04-20T12:30"}}}
{"name": "get_token_forwarding_wallets", "description": "Fetches a list of token forwarding wallets from the RapidAPI Token Forwarding service.", "parameters": {"is_id": {"description": "Identifier for the token forwarding wallet. Defaults to 'dfe02338-43ae-453f-bd51-6f0ea98e4df9'.", "type": "str", "default": "dfe02338-43ae-453f-bd51-6f0ea98e4df9"}, "limit": {"description": "Maximum number of records to return. Defaults to 100.", "type": "int", "default": "100"}, "offset": {"description": "Number of records to skip from the beginning. Defaults to 0.", "type": "int", "default": "0"}}}
{"name": "get_all_coins_prices", "description": "Fetches the current price and rate change information for a specified cryptocurrency identifier.", "parameters": {"is_id": {"description": "The identifier of the cryptocurrency for which to fetch price and rate change information.", "type": "str", "default": "BTC"}}}
{"name": "video_videoid", "description": "Fetches video information and status from the video-builder API using the provided video ID and RapidAPI key.", "parameters": {"videoid": {"description": "The unique identifier for the video.", "type": "int", "default": ""}}}
{"name": "periodic_table", "description": "python", "parameters": {"all": {"description": "If provided, specifies the type of information to retrieve about all elements in the periodic table. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "random_meme", "description": "Fetches a random meme from a specified genre and type using the given RapidAPI key.", "parameters": {"genre": {"description": "The genre of the meme. Default is 'memes'. Available genres include 'anime', 'dnd', 'history', 'historyani', 'memes', 'politics', 'science', 'lotr', and 'ww2'.", "type": "str", "default": "memes"}, "type": {"description": "The type of the meme. Default is 'top'. Available types include 'top', 'hot', and 'new'.", "type": "str", "default": "top"}}}
{"name": "post_details", "description": "Fetches the details of a Reddit post using the provided post ID and RapidAPI key.", "parameters": {"post_id": {"description": "The ID of the Reddit post to retrieve details for.", "type": "str", "default": "t3_t19inj"}}}
{"name": "get_highlight_by_id", "description": "Fetches all images and videos of a specific Instagram highlight by its ID.", "parameters": {"highlightid": {"description": "The ID of the Instagram highlight.", "type": "str", "default": "highlight:18042967741398634"}}}
{"name": "search_single_postcode", "description": "Fetches the latitude and longitude coordinates for a given UK postcode using the RapidAPI service.", "parameters": {"postcode": {"description": "The postcode for which to fetch the latitude and longitude.", "type": "str", "default": "SE1 7EH"}}}
{"name": "v1_exercises", "description": "Fetch up to 10 exercises from the API Ninjas Exercises API that satisfy the given search parameters.", "parameters": {"offset": {"description": "Number of results to offset for pagination. Default is 0.", "type": "int, optional", "default": ""}, "muscle": {"description": "Muscle group targeted by the exercise. Possible values include: 'abdominals', 'abductors', 'adductors', 'biceps', 'calves', 'chest', 'forearms', 'glutes', 'hamstrings', 'lats', 'lower_back', 'middle_back', 'neck', 'quadriceps', 'traps', 'triceps'. Default is 'biceps'.", "type": "str, optional", "default": "biceps"}, "type": {"description": "Exercise type. Possible values include: 'cardio', 'olympic_weightlifting', 'plyometrics', 'powerlifting', 'strength', 'stretching', 'strongman'.", "type": "str, optional", "default": ""}, "difficulty": {"description": "Difficulty level of the exercise. Possible values include: 'beginner', 'intermediate', 'expert'.", "type": "str, optional", "default": ""}, "name": {"description": "Name of the exercise. This value can be partial (e.g., 'press' will match 'Dumbbell Bench Press').", "type": "str, optional", "default": ""}}}
{"name": "generar_fhir_id_qr", "description": "Converts a given FHIR ID into a QR code.", "parameters": {"fhir_id": {"description": "The FHIR ID to be converted into a QR code.", "type": "str", "default": "a554c619-bc73-4080-9cc9-74da38789d48"}}}
{"name": "get_gifs_by_id", "description": "Fetches multiple GIF details from Giphy by their IDs.", "parameters": {"ids": {"description": "A comma-separated string of GIF IDs.", "type": "str", "default": "feqkVgjJpYtjy,7rzbxdu0ZEXLy"}}}
{"name": "get_channel_goals", "description": "Fetches the goals for a specified Twitch channel using the provided RapidAPI key.", "parameters": {"channel": {"description": "The name of the Twitch channel for which to retrieve goals.", "type": "str", "default": "shadoune666"}}}
{"name": "get_joke_of_the_day_by_category", "description": "Fetches the joke of the day from a specified category using the World of Jokes API.", "parameters": {"category": {"description": "The category of joke to be fetched.", "type": "str", "default": "Money"}}}
{"name": "getcountriesbycontinent", "description": "Fetch data about countries in a specified continent from the RapidAPI world population service.", "parameters": {"continent": {"description": "The name of the continent for which to fetch countries' data.", "type": "str", "default": "Europe"}, "rank": {"description": "Order in which to rank countries. Can take two values:", "type": "int, optional", "default": "1"}}}
{"name": "getdirectdebitinitiationinstruction", "description": "Retrieve a direct debit initiation instruction by UETR ID.", "parameters": {"uetr": {"description": "An RFC4122 UID used as a unique Payment Instruction Identifier.", "type": "str", "default": "7dca010b-fc3b-496c-b8a4-36ffd78f674d"}}}
{"name": "temp_upload_urls", "description": "Generates temporary upload URLs for a given video on a specific account using the provided source name.", "parameters": {"source_name": {"description": "The name of the source.", "type": "str", "default": ""}, "video_id": {"description": "The unique identifier for the video.", "type": "str", "default": ""}, "account_id": {"description": "The unique identifier for the account.", "type": "str", "default": ""}}}
{"name": "get_anime_by_id", "description": "Retrieves detailed information about an anime given its unique identifier using the Toolbench RapidAPI service.", "parameters": {"is_id": {"description": "The unique identifier of the anime.", "type": "int", "default": "19"}}}
{"name": "map", "description": "Fetches a map image in WMTS format based on the given parameters.", "parameters": {"tilerow": {"description": "The WMTS tile row number (latitude direction).", "type": "int", "default": "25806"}, "tilematrix": {"description": "The tile matrix, specified in the format `[EPSG code]:[Scale value]`.", "type": "str", "default": "EPSG:3857:16"}, "tilecol": {"description": "The WMTS tile column number (longitude direction).", "type": "int", "default": "58211"}, "rotationangle": {"description": "Angle to rotate the map image. Valid range is 0 to 359, default is 0.", "type": "int, optional", "default": ""}, "mapstyle": {"description": "Design of the map. Format is `[design]_[annotation size]`, default is `std_pc`.", "type": "str, optional", "default": ""}, "landmarkicon": {"description": "Display of landmark icons. `on` for display, `off` for hide, default is `off`.", "type": "str, optional", "default": ""}, "resolution": {"description": "Resolution of the map image. Values can be `1`, `2`, or `4`, default is `1`.", "type": "str, optional", "default": ""}, "contour": {"description": "Display of contour lines. `on` for display, `off` for hide, default is `on`.", "type": "str, optional", "default": ""}, "bldgname": {"description": "Display of building names. `on` for display, `off` for hide, default is `off`.", "type": "str, optional", "default": ""}, "logo": {"description": "Display of brand logos. `on` for display, `off` for hide, default is `off`.", "type": "str, optional", "default": ""}, "target": {"description": "Display contents of the map. Values can be `1` for background only, `2` for annotations only, `3` for both, default is `3`.", "type": "str, optional", "default": ""}, "format": {"description": "Output image format. Values can be `image/png` or `image/jpeg`, default is `image/png`.", "type": "str, optional", "default": ""}}}
{"name": "query_for_postal_code_boundary_by_location", "description": "Queries the boundary of a postal code based on the given geographic coordinates.", "parameters": {"longitude": {"description": "The longitudinal coordinate of the location.", "type": "int", "default": "11.5835"}, "latitude": {"description": "The latitudinal coordinate of the location.", "type": "int", "default": "48.1633"}}}
{"name": "played", "description": "Fetches the most recently played CS:GO matches from the RapidAPI service.", "parameters": {"content_type": {"description": "The content type for the request. Default is 'application/json'.", "type": "str", "default": "application/json"}, "limit": {"description": "The number of matches to retrieve. Default is 10.", "type": "int", "default": "10"}, "page": {"description": "The page number of the results to retrieve. Default is 1.", "type": "int", "default": "1"}}}
{"name": "random_skin_from_weapon", "description": "Retrieves information for a random Counter-Strike skin from a specified weapon.", "parameters": {"weapon_name": {"description": "The name of the weapon for which to retrieve a random skin.", "type": "str", "default": "AWP"}}}
{"name": "verify_the_existence_of_email", "description": "Verifies the existence of an email address using the Email Existence Validator API.", "parameters": {"email": {"description": "The email address to verify.", "type": "str", "default": "username@example.com"}}}
{"name": "email_validate_regex", "description": "Validates an email address using the Email Validator API.", "parameters": {"email": {"description": "The email address to be validated.", "type": "str", "default": "test@gmail.com"}}}
{"name": "shows_id_episodes", "description": "Retrieve a list of episodes for a specific show from the given platform.", "parameters": {"platform": {"description": "The platform from which to retrieve the episodes (e.g., 'ios', 'android', 'androidtv', 'web').", "type": "str", "default": "ios"}, "is_id": {"description": "The ID of the show.", "type": "int", "default": "82856"}, "offset": {"description": "The number of records to skip in the results. Default is 0.", "type": "int, optional", "default": "0"}, "region": {"description": "The region to filter the episodes by (e.g., 'US', 'FR'). Default is 'US'.", "type": "str, optional", "default": "US"}, "limit": {"description": "The number of records to return per request, with a maximum of 100. Default is 25.", "type": "int, optional", "default": "25"}, "sort": {"description": "The order to sort the records by. Use 'regular' for default order or 'reverse' for most recent episodes first. Default is 'regular'.", "type": "str, optional", "default": "regular"}, "season": {"description": "The specific season for which to retrieve episodes. If not specified, episodes from all seasons will be retrieved. Default is 1.", "type": "int, optional", "default": "1"}}}
{"name": "search_author", "description": "Search for an author using the Open Library API.", "parameters": {"author": {"description": "The name of the author to search for.", "type": "str", "default": ""}}}
{"name": "ip", "description": "Fetches data for the provided IP address using the IP Geo Location and IP Reputation API.", "parameters": {"ip": {"description": "The IP address for which data is to be fetched. Defaults to '8.8.8.8'.", "type": "str", "default": "8.8.8.8"}}}
{"name": "timezone_by_id", "description": "Fetches information for a given time zone using the RapidAPI service.", "parameters": {"timezone": {"description": "The time zone to look up.", "type": "str", "default": "Afrika/Dakar"}, "fields": {"description": "A comma-separated list of fields to include in the response. Defaults to 'offset,daylights_offset,daylights,daylights_code,timezone'.", "type": "str, optional", "default": "offset,daylights_offset,daylights,daylights_code,timezone"}, "lang": {"description": "The language code for the response, following ISO 639-1 standard. Defaults to 'de'.", "type": "str, optional", "default": "de"}}}
{"name": "type_sustainability_get_product_involvement", "description": "Fetches product involvement information from the Sustainability tab for a given ETF or fund.", "parameters": {"type": {"description": "One of the following values: 'etf' or 'fund'. Specifies the type of the financial product.", "type": "str", "default": "etf"}, "securityid": {"description": "The value of the securityId field returned in the API endpoint ../market/v2/get-returns.", "type": "str", "default": "F00000O2CG"}}}
{"name": "sar", "description": "Fetches the Parabolic SAR (SAR) data for a specified financial instrument using the Twelve Data API.", "parameters": {"symbol": {"description": "The instrument symbol, which can be any equity, index, ETF, forex, or cryptocurrency (e.g., `AAPL`, `EUR/USD`, `ETH/BTC`).", "type": "str", "default": "AAPL"}, "interval": {"description": "The interval between two consecutive points in the time series. Supported values: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`.", "type": "str", "default": "1min"}, "maximum": {"description": "Maximum number of data points to retrieve.", "type": "int, optional", "default": 0.2}, "outputsize": {"description": "The size of the data to be returned, with a default of 30.", "type": "int, optional", "default": 30}, "format": {"description": "The format of the returned data. Options are `csv` or `json`. Default is `json`.", "type": "str, optional", "default": "json"}, "acceleration": {"description": "The acceleration factor used in the SAR calculation.", "type": "int, optional", "default": 0.02}}}
{"name": "macd_crossover_down", "description": "Fetches a list of stocks having a MACD crossover down signal from the provided API.", "parameters": {"page": {"description": "The page number of the results to fetch. Default is 1.", "type": "int, optional", "default": "1"}}}
{"name": "get_models_by_make_id", "description": "Fetches a list of all car models for a given car make ID using the RapidAPI Car Specs API.", "parameters": {"makeid": {"description": "The ID of the car make for which to retrieve the models.", "type": "int", "default": ""}}}
{"name": "get_individual_bitcoin_news_sources", "description": "Fetches information for a specific Bitcoin news resource from RapidAPI.", "parameters": {"newspaperid": {"description": "The unique identifier for the news resource.", "type": "str", "default": "coindesk"}}}
{"name": "matchmanagers", "description": "Retrieve the managers for a specific Ice Hockey match using the match ID.", "parameters": {"is_id": {"description": "The ID of the match for which to retrieve managers.", "type": "int", "default": 10745761}}}
{"name": "fedora_image_fedora_get", "description": "Fetches data from the Fedora image API using the given URL and RapidAPI key.", "parameters": {"url": {"description": "The URL of the image to be fetched.", "type": "str", "default": ""}}}
{"name": "retrieve_collections", "description": "Retrieve collections from the Blur API based on given criteria.", "parameters": {"pagesize": {"description": "Number of records per page. If not specified, the default is None.", "type": "int, optional", "default": ""}, "is_from": {"description": "Starting point of the records. If not specified, the default is None.", "type": "int, optional", "default": ""}, "slug": {"description": "Slug identifier for the collection. If not specified, the default is None.", "type": "str, optional", "default": ""}, "contractaddress": {"description": "Contract address of the collection. If not specified, the default is None.", "type": "str, optional", "default": ""}, "orderby": {"description": "Order in which results are returned. Either 'asc' or 'desc'. Default is 'desc'.", "type": "str, optional", "default": "desc"}, "sortby": {"description": "Field by which to sort results. Options include 'floorPrice', 'floorPriceOneDay', 'floorPriceOneWeek', 'volumeFifteenMinutes', 'volumeOneDay', 'volumeOneWeek', 'bestCollectionBid', 'totalCollectionBidValue', 'totalSupply', 'numberOwners'. Default is 'volumeOneDay'.", "type": "str, optional", "default": "volumeOneDay"}}}
{"name": "get_sign_hexagram", "description": "Fetches detailed information for a specified sign hexagram category using the Sign Hexagram API.", "parameters": {"category": {"description": "The ID of the category for which to retrieve the hexagram information.", "type": "str", "default": ""}}}
{"name": "user_post_videos", "description": "Fetches the post videos of a TikTok user using the specified parameters.", "parameters": {"count": {"description": "The number of videos to fetch, with a maximum limit of 35. Default is '10'.", "type": "str", "default": "10"}, "unique_id": {"description": "The unique identifier of the TikTok user. Default is '@tiktok'.", "type": "str", "default": "@tiktok"}, "cursor": {"description": "The cursor position for pagination. Default is '0'.", "type": "str", "default": "0"}, "user_id": {"description": "The user ID of the TikTok user. Default is '107955'.", "type": "str", "default": "107955"}}}
{"name": "searchzodiacbysign", "description": "Fetches information about a zodiac sign from the Zodiac API.", "parameters": {"sign": {"description": "The zodiac sign to search for. Ensure the first letter is capitalized.", "type": "str", "default": "Gemini"}}}
{"name": "top_posts_by_username", "description": "Fetches the top posts by a specific Reddit username within a specified time frame.", "parameters": {"username": {"description": "The Reddit username to fetch top posts for.", "type": "str", "default": "GoldenChrysus"}, "time": {"description": "The time period to consider for top posts. Allowed values are 'hour', 'day', 'week', 'month', 'year', 'all'.", "type": "str", "default": "all"}, "cursor": {"description": "A cursor for pagination to retrieve the next set of results.", "type": "str, optional", "default": ""}}}
{"name": "userinfo", "description": "Fetch user information from Instagram using the RapidAPI service.", "parameters": {"username": {"description": "The Instagram username for which to fetch information.", "type": "str", "default": "nike"}}}
{"name": "get_calculate_investment", "description": "Calculates various investment returns based on given parameters using an external API.", "parameters": {"rate": {"description": "The annual interest rate of the investment in percentage.", "type": "int", "default": "6.5"}, "principal": {"description": "The initial amount of money invested.", "type": "int", "default": "50000.00"}, "time": {"description": "The duration of the investment in months.", "type": "int", "default": "36"}, "compounding": {"description": "The frequency of compounding interest. Valid options are 'yearly', 'semi-annually', 'quarterly', and 'monthly'. Default is 'yearly'.", "type": "str, optional", "default": "yearly"}, "in_currency": {"description": "The currency of the investment. Default is 'USD'.", "type": "str, optional", "default": "USD"}, "format": {"description": "Whether to format the result. Valid options are 'yes' and 'no'. Default is 'yes'.", "type": "str, optional", "default": "yes"}, "to_currency": {"description": "The currency to convert the result into. Default is 'USD'.", "type": "str, optional", "default": "USD"}}}
{"name": "viewoverallscreeningresult", "description": "Fetches the overall screening result for a given customer and screening ID from the ClearDIL API.", "parameters": {"authorization": {"description": "Authorization token required for the API request.", "type": "str", "default": "Bearer {{accessTokenUser}}"}, "content_type": {"description": "The content type for the API request, typically 'application/json'.", "type": "str", "default": "application/json"}, "customer_a_id": {"description": "The customer ID for whom the screening result is being fetched.", "type": "str", "default": "customer_a_id"}, "screening_a_id": {"description": "The screening ID whose result is being requested.", "type": "str", "default": "screening_a_id"}}}
{"name": "get_5_latest_endpoint", "description": "Fetch the latest exchange rates for the specified currencies.", "parameters": {"symbols": {"description": "Comma-separated list of currency codes to fetch rates for.", "type": "str", "default": "EUR"}, "base": {"description": "The base currency code against which exchange rates are calculated.", "type": "str", "default": "usd"}}}
{"name": "tokens_all_market_cap", "description": "Fetches market capitalization data for tokens with optional filtering.", "parameters": {"sortfield": {"description": "The specific field to sort by.", "type": "str, optional", "default": ""}, "sorttype": {"description": "The type of sorting to apply (e.g., 'asc' for ascending, 'desc' for descending).", "type": "str, optional", "default": ""}, "stableonly": {"description": "Whether to return only stablecoins.", "type": "bool, optional", "default": ""}, "skip": {"description": "The number of records to skip for pagination.", "type": "int, optional", "default": ""}, "searchterms": {"description": "Specific search terms to filter tokens.", "type": "str, optional", "default": ""}, "take": {"description": "The number of records to take for pagination.", "type": "int, optional", "default": ""}, "chains": {"description": "Comma-separated list of specific blockchains to filter the tokens by.", "type": "str, optional", "default": ""}}}
{"name": "real_time_information", "description": "Fetches real-time information from the BART API based on the provided command and origin station.", "parameters": {"cmd": {"description": "Command parameter for the API request. Examples can be found at http://api.bart.gov/docs/overview/examples.aspx.", "type": "str", "default": "etd"}, "orig": {"description": "Specifies the station by its abbreviation. A list of station abbreviations can be found at http://api.bart.gov/docs/overview/abbrev.aspx. Use 'ALL' to get all current ETDs.", "type": "str", "default": ""}}}
{"name": "v1_randomword", "description": "Fetches a random word from the API Ninjas Random Word API.", "parameters": {"type": {"description": "The type of word to return. Possible values are 'noun', 'verb', 'adjective', 'adverb'. Defaults to 'verb'.", "type": "str", "default": "verb"}}}
{"name": "rulesets", "description": "Fetches the list of available rule sets for the specified language from the API.", "parameters": {"lang": {"description": "A 2-letter ISO 639 language code specifying the language for which the available rule sets will be provided.", "type": "str", "default": "en"}}}
{"name": "profile_image", "description": "Generates a profile image URL based on the provided user name and retrieves the image information from the RapidAPI image service.", "parameters": {"name": {"description": "The user's name or any other text to generate the profile image URL.", "type": "str", "default": ""}}}
{"name": "get_user", "description": "Retrieve information about an Instagram user.", "parameters": {"user": {"description": "The username of the Instagram user to retrieve information for.", "type": "str", "default": "cristiano"}}}
{"name": "stock_v2_get_short_interest", "description": "Fetches the short interest data for a given stock identified by its performance ID from the Morning Star API.", "parameters": {"performanceid": {"description": "The performance ID of the stock obtained from endpoints like /auto-complete, /get-summary, or /get-movers.", "type": "str", "default": "0P0000OQN8"}}}
{"name": "symbols_suggested", "description": "Fetch suggested tickers based on a given ticker slug.", "parameters": {"ticker_slug": {"description": "The ticker slug to base the suggestions on.", "type": "str", "default": "NVDA"}}}
{"name": "get_posts_from_category", "description": "Fetch posts from a specified category using the 9gag API. Optionally, provide a counter and after parameter for pagination in subsequent requests. ", "parameters": {"category": {"description": "The category of posts to fetch.", "type": "str", "default": "sports"}, "counter": {"description": "Leave blank for the first request. For subsequent requests, provide the counter received from the previous request. Defaults to None.", "type": "str, optional", "default": ""}, "after": {"description": "Leave blank for the first request. For subsequent requests, provide the after parameter received from the previous request. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "full_grid_search", "description": "Performs a full grid search and retrieves the ranking of a specific business at each coordinate point within the grid. The grid cells in the results are ordered from left to right and then top to bottom.", "parameters": {"radius": {"description": "The distance between coordinate points in the grid. The measurement units are specified by the `radius_units` parameter.", "type": "str", "default": "1"}, "lat": {"description": "The latitude value for the grid center coordinate point.", "type": "str", "default": "37.341759"}, "grid_size": {"description": "The size of the grid (e.g., 3x3, 5x5, 7x7). Allowed values are odd integers between 3 and 15.", "type": "str", "default": "3"}, "place_id": {"description": "The Google Place ID of the business to rank.", "type": "str", "default": "ChIJoejvAr3Mj4ARtHrbKxtAHXI"}, "query": {"description": "The search query or keyword.", "type": "str", "default": "web design"}, "lng": {"description": "The longitude value for the grid center coordinate point.", "type": "str", "default": "-121.938314"}, "x_user_agent": {"description": "The device type for the search. Default is `desktop`.", "type": "str, optional", "default": ""}, "zoom": {"description": "The Google Maps zoom level for the search at each grid point. Default is '13'.", "type": "str, optional", "default": "13"}, "radius_units": {"description": "The units for the `radius` parameter (e.g., 'km' for kilometers, 'mi' for miles). Default is `km`.", "type": "str, optional", "default": ""}}}
{"name": "top_property_managers", "description": "Fetches and returns information about the largest property managers for a given location from the AirDNA API.", "parameters": {"location": {"description": "The location to query for the top property managers.", "type": "str", "default": "santa monica"}}}
{"name": "reviews_list_best", "description": "Fetches the best reviews for a specific restaurant from the API.", "parameters": {"id_restaurant": {"description": "The unique identifier of the restaurant.", "type": "int", "default": "522995"}, "locale": {"description": "The language code for the reviews. Defaults to 'en_US'.", "type": "str, optional", "default": "en_US"}}}
{"name": "upc_api", "description": "Fetches food information based on a given UPC (barcode) using the Dietagram API.", "parameters": {"name": {"description": "The UPC (barcode) of the food item to search for. Default is '4019300005154'.", "type": "str", "default": "4019300005154"}}}
{"name": "locations_auto_complete_deprecated", "description": "Fetch location suggestions based on a term or phrase, with optional location-based sorting.", "parameters": {"text": {"description": "The term or phrase to search for location suggestions (e.g., city, district, country name).", "type": "str", "default": "milan"}, "latitude": {"description": "The latitude of the end user's location, used for sorting purposes. Defaults to None.", "type": "int, optional", "default": ""}, "longitude": {"description": "The longitude of the end user's location, used for sorting purposes. Defaults to None.", "type": "int, optional", "default": ""}}}
{"name": "actors_get_awards_summary", "description": "Retrieves the awards summary for a specified actor or actress using the IMDb API.", "parameters": {"nconst": {"description": "The unique identifier for the actor or actress, typically starting with \"nm\" (e.g., 'nm0001667').", "type": "str", "default": "nm0001667"}}}
{"name": "time_zone_converter", "description": "Converts a given datetime from one time zone to another, taking into account Daylight Saving Time (DST).", "parameters": {"datetime": {"description": "The date and time in ISO 8601 format.", "type": "str", "default": "2021-03-21T20:10:00"}, "from_tzname": {"description": "The source time zone name. Defaults to 'UTC'.", "type": "str, optional", "default": "UTC"}, "to_tzname": {"description": "The target time zone name. Defaults to 'UTC'.", "type": "str, optional", "default": "UTC"}}}
{"name": "recent_trades_list", "description": "Fetches the recent trades for a given cryptocurrency symbol from the RapidAPI crypto markets service.", "parameters": {"symbol": {"description": "The cryptocurrency symbol (e.g., 'BTC' for Bitcoin) for which recent trades are to be fetched.", "type": "str", "default": "BTCUSDT"}, "limit": {"description": "The number of recent trades to retrieve. Default is 500; maximum is 1000.", "type": "int, optional", "default": "500"}}}
{"name": "risk_free_rate", "description": "Fetches the risk-free rate for a specific date, duration, and geography using the Toolbench RapidAPI.", "parameters": {"duration": {"description": "Duration for which the risk-free rate is to be fetched. Supported values are '3m' (default), '5y', and '10y'.", "type": "str", "default": "3m"}, "geography": {"description": "Geography for which the risk-free rate is to be fetched. Currently, only 'US' is supported. Default is 'US'.", "type": "str", "default": "US"}, "date": {"description": "Specific date for which the risk-free rate is to be fetched in 'YYYY-MM-DD' format. Default is '2023-05-10'.", "type": "str", "default": "2023-05-10"}}}
{"name": "companies_balance_sheet_statements", "description": "Fetches the balance sheet statements of a company using the given symbol.", "parameters": {"symbol": {"description": "The symbol name of the company for which the balance sheet statements are to be fetched.", "type": "str", "default": "AAPL"}, "apikey": {"description": "The API key required for accessing the Financial Modeling Prep service.", "type": "str", "default": "rapid_api"}}}
{"name": "au_car_averages", "description": "Fetches average car price information for a given car model, year, and make using the ToolBench RapidAPI service.", "parameters": {"model": {"description": "The car model to query.", "type": "str", "default": "Golf"}, "year": {"description": "The production year of the car to query.", "type": "str", "default": "2007"}, "make": {"description": "The car make to query.", "type": "str", "default": "Volkswagen"}}}
{"name": "top_paid_ipad_apps", "description": "Gets a list of the top paid iPad apps from the specified category and country.", "parameters": {"category": {"description": "The App Store category for which to fetch the top paid iPad apps. Defaults to '6016'.", "type": "str, optional", "default": "6016"}, "country": {"description": "The country code for which to fetch the top paid iPad apps. Defaults to 'us'.", "type": "str, optional", "default": "us"}, "lang": {"description": "The language code for the response. Defaults to 'en'.", "type": "str, optional", "default": "en"}, "num": {"description": "The number of results to return. Defaults to 100.", "type": "int, optional", "default": "100"}}}
{"name": "rsi_oversold", "description": "Fetches a list of stocks that have an RSI oversold signal from the specified API endpoint.", "parameters": {"page": {"description": "The page number for pagination. Defaults to 1.", "type": "int, optional", "default": "1"}}}
{"name": "get_currency_by_name", "description": "Fetches various states of a specific currency's prices from a given API.", "parameters": {"coinid": {"description": "The identifier of the currency to fetch prices for.", "type": "str", "default": "Bitcoin"}}}
{"name": "get_coin_issuance_blockchains", "description": "Fetches the issuance blockchains for a given coin using the CoinRanking API.", "parameters": {"uuid": {"description": "UUID of the coin for which the blockchains are being requested.", "type": "str", "default": "Qwsogvtv82FCd"}, "offset": {"description": "Pagination offset. Default is 0.", "type": "int, optional", "default": "0"}, "limit": {"description": "Maximum number of results to return. Default is 50, with a valid range of 0-100.", "type": "int, optional", "default": "50"}}}
{"name": "get_the_timezones", "description": "Fetches the list of timezones from the specified RapidAPI service.", "parameters": {"page": {"description": "The page number of the results to retrieve. Defaults to '1'.", "type": "str, optional", "default": "1"}, "name": {"description": "The name filter to apply to the timezones. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "random_crypto_by_id", "description": "Retrieve a fake cryptocurrency asset by its unique identifier.", "parameters": {"is_id": {"description": "The unique identifier of the cryptocurrency asset to be retrieved.", "type": "int", "default": "1"}}}
{"name": "crypto_symbols", "description": "Returns a list of all available cryptocurrencies from the RapidAPI service.", "parameters": {"includenames": {"description": "If True, include cryptocurrency names in the response. Defaults to None.", "type": "bool, optional", "default": "true"}}}
{"name": "match_details_by_id", "description": "Retrieves match details for a given Match ID using the RapidAPI endpoint. Match IDs can be obtained through the Matches List endpoint, including live matches and those played since 1990.", "parameters": {"match_id": {"description": "The unique identifier for a specific match.", "type": "str", "default": "2022-34-INTROM"}}}
{"name": "form", "description": "Retrieve the pregame team form data for a given event using the SofaSport API.", "parameters": {"event_id": {"description": "The ID of the event for which to retrieve the team form.", "type": "int", "default": "10236820"}}}
{"name": "peer_ratio_averages", "description": "Fetches and returns an average of company peer ratios for trailing twelve months (TTM) data for a given company symbol.", "parameters": {"symbol": {"description": "The stock symbol of the company for which to fetch peer ratio averages.", "type": "str", "default": "AAPL"}}}
{"name": "sports_api", "description": "Fetches a listing of all upcoming sports events for football, cricket, and golf in JSON format using the weatherapi-com RapidAPI service.", "parameters": {"q": {"description": "The location query to search for sports events.", "type": "str", "default": "London"}}}
{"name": "astronomy_api", "description": "Fetches astronomical data including sunrise, sunset, moonrise, moonset, moon phase, and illumination in JSON format based on the provided query parameters.", "parameters": {"q": {"description": "The query parameter for retrieving data. It supports various formats such as:", "type": "str", "default": "London"}, "dt": {"description": "The date for which to retrieve the astronomical data. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "convert_rgb", "description": "Converts an RGB color code to other color codes such as Hex, HSL, and CMYK using the RapidAPI service.", "parameters": {"r": {"description": "The red component of the RGB color.", "type": "int", "default": "127"}, "g": {"description": "The green component of the RGB color.", "type": "int", "default": "255"}, "b": {"description": "The blue component of the RGB color.", "type": "int", "default": "212"}}}
{"name": "get_1_shoot_thumbnail", "description": "Generates a thumbnail image from a given URL using the Pagepeeker API. Optionally, the thumbnail can be refreshed.", "parameters": {"size": {"description": "The desired size of the thumbnail. Options are:", "type": "str", "default": "m"}, "url": {"description": "The URL from which to generate the thumbnail.", "type": "str", "default": "http://www.mashape.com/"}, "refresh": {"description": "Set to '1' to force a refresh of the thumbnail. Defaults to '1'.", "type": "str, optional", "default": "1"}}}
{"name": "feeds_list_similarities", "description": "Fetches a list of similar recipes based on the given parameters.", "parameters": {"is_id": {"description": "The unique identifier for the recipe, typically obtained from feeds/list or feeds/search API responses.", "type": "str", "default": "15-Minute-Baked-Salmon-with-Lemon-9029477"}, "limit": {"description": "The number of items to return per response.", "type": "int", "default": "18"}, "start": {"description": "The offset for items to be ignored in the response, useful for paging.", "type": "int", "default": "0"}, "apifeedtype": {"description": "The type of feed to query, generally returned in feeds/list or feeds/search API responses. Default is 'moreFrom'.", "type": "str, optional", "default": "moreFrom"}, "authorid": {"description": "The author ID, typically returned in feeds/list or feeds/search API responses. Default is 'Yummly'.", "type": "str, optional", "default": "Yummly"}}}
{"name": "evaluate_expression", "description": "Evaluates a mathematical expression using an external API and returns the result.", "parameters": {"expression": {"description": "The mathematical expression to be evaluated.", "type": "str", "default": "$950 - 10% discount"}}}
{"name": "get_continent_by_id", "description": "Fetches and returns continent information based on a given ID.", "parameters": {"is_id": {"description": "The ID of the continent to fetch information for.", "type": "str", "default": "1"}}}
{"name": "single_country", "description": "Fetch all details of a country by its ID from the PageantDB API.", "parameters": {"is_id": {"description": "The ID of the country to retrieve details for.", "type": "int", "default": "5"}}}
{"name": "star", "description": "Fetches full information about a star given its ID from the Stars API using RapidAPI.", "parameters": {"is_id": {"description": "The ID of the star to fetch information about.", "type": "str", "default": "4"}}}
{"name": "translate_to_old_english", "description": "Translates the given text to Old English using the FunTranslations API.", "parameters": {"x_funtranslations_api_secret": {"description": "API Key for accessing the FunTranslations Old English Translator.", "type": "str", "default": ""}, "text": {"description": "The text to be translated into Old English.", "type": "str", "default": "A hearty meal, a happy laughter is all we need."}}}
{"name": "driving_directions", "description": "Fetches driving directions and routes between specified source and destination coordinates using the Waze/Google API.", "parameters": {"source_coordinates": {"description": "Geographic coordinates (latitude, longitude pair) of the starting point.", "type": "str", "default": "32.0852999,34.78176759999999"}, "destination_coordinates": {"description": "Geographic coordinates (latitude, longitude pair) of the destination.", "type": "str", "default": "32.7940463,34.989571"}, "return_route_coordinates": {"description": "Whether to return the route coordinate pairs. Defaults to None.", "type": "bool, optional", "default": ""}, "arrival_timestamp": {"description": "Unix timestamp (seconds since epoch) of the desired arrival time. Defaults to None, which returns directions for the current time.", "type": "int, optional", "default": ""}}}
{"name": "v1_airports", "description": "Fetches information from the API Ninjas Airports API endpoint based on specified search criteria. At least one of the optional parameters must be provided.", "parameters": {"offset": {"description": "Number of results to offset for pagination.", "type": "int, optional", "default": ""}, "max_elevation": {"description": "Maximum airport elevation in feet.", "type": "int, optional", "default": ""}, "region": {"description": "Administrative region such as state or province within a country (e.g., California).", "type": "str, optional", "default": ""}, "min_elevation": {"description": "Minimum airport elevation in feet.", "type": "int, optional", "default": ""}, "city": {"description": "Airport city (e.g., London).", "type": "str, optional", "default": ""}, "country": {"description": "Minimum airport elevation in feet.", "type": "str, optional", "default": ""}, "timezone": {"description": "Airport timezone (e.g., Europe/London).", "type": "str, optional", "default": ""}, "name": {"description": "Airport name. This parameter supports partial matching (e.g., Heathrow will match London Heathrow Airport). Defaults to 'London Heathrow'.", "type": "str, optional", "default": "London Heathrow"}, "icao": {"description": "International Civil Aviation Organization (ICAO) 4-character airport code.", "type": "str, optional", "default": ""}, "iata": {"description": "International Air Transport Association (IATA) 3-character airport code.", "type": "str, optional", "default": ""}}}
{"name": "get_country_details", "description": "Fetch detailed information about a country using its 2-letter country code.", "parameters": {"country_code": {"description": "The 2-letter code representing the country.", "type": "str", "default": "ph"}}}
{"name": "ideas_detail", "description": "Fetches detailed information about an ideal post based on the given UUID.", "parameters": {"uuid": {"description": "The UUID of the specific post. This value is obtained from the `image_url` field returned in the `/ideas/list` endpoint.", "type": "str", "default": "CRK6Iv51"}, "lang": {"description": "The language code for the response. Defaults to 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "stock_get_daily_dividend_data", "description": "Fetch and return the daily dividend data for a given stock symbol within a specified date range.", "parameters": {"symbol": {"description": "The stock ticker symbol (e.g., 'AAPL' for Apple Inc.).", "type": "str", "default": "AAPL"}, "end_date": {"description": "The end date for the data in 'YYYY-MM-DD' format, representing the last day data will be pulled.", "type": "str", "default": "2022-03-03"}, "start_date": {"description": "The start date for the data in 'YYYY-MM-DD' format, representing the first day data will be pulled.", "type": "str", "default": "2022-03-02"}, "region": {"description": "The market region (e.g., 'US', 'BR', 'AU'). Default is 'US'.", "type": "str, optional", "default": "US"}}}
{"name": "get_city_detail", "description": "Fetch detailed information about a city using its name via the RapidAPI service.", "parameters": {"name": {"description": "The name of the city for which details are to be fetched.", "type": "str", "default": ""}}}
{"name": "get_matches_on_a_specific_date", "description": "Fetches the matches scheduled on a specific date, considering the provided UTC offset.", "parameters": {"date": {"description": "The date for which to query the matches, in the format 'YYYY-MM-DD'.", "type": "str", "default": "2022-11-22"}, "utc_offset": {"description": "The UTC offset to cater to the required timezone. Default is 8. Must be between -12 to 14.", "type": "int, optional", "default": "8"}}}
{"name": "community_post_comments", "description": "Retrieves comments for a YouTube community post using the specified cursor token.", "parameters": {"cursor": {"description": "A token used for pagination to fetch the next set of comments from the Community Post Details endpoint.", "type": "str", "default": ""}}}
{"name": "verse_verse", "description": "Fetches a biblical verse from the Uncovered Treasure API.", "parameters": {"verse": {"description": "A commonly used English name with chapter number and optionally verse number (e.g., \"1 Corinthians 1\", \"1 Corinthians 1:5\", \"James 3\"). Ranged searches are not supported.", "type": "str", "default": "Acts 21:8"}, "callback": {"description": "An optional JSONP callback function name for the API response. Default is None.", "type": "str, optional", "default": ""}}}
{"name": "getproducts", "description": "Search for products by name and retrieves newly added items from various sources.", "parameters": {"query": {"description": "The search query for the products.", "type": "str", "default": "ipone 14 256Gb"}, "page": {"description": "The page number to retrieve.", "type": "int", "default": "1"}, "country": {"description": "The country code to filter the search results. Defaults to 'countryUS'.", "type": "str, optional", "default": "countryUS"}, "location": {"description": "The location to filter the search results. Defaults to 'us'.", "type": "str, optional", "default": "us"}, "lang": {"description": "The language code to filter the search results. Defaults to 'en'.", "type": "str, optional", "default": "en"}, "period": {"description": "The period in days to filter newly added items. Defaults to None.", "type": "int, optional", "default": ""}}}
{"name": "name_to_uuid", "description": "Convert a Minecraft username to a UUID using the Toolbench RapidAPI.", "parameters": {"name": {"description": "The Minecraft username to be converted to a UUID.", "type": "str", "default": "Kara_Danvers"}}}
{"name": "alldetails_185_225_233_110_30015", "description": "Retrieves all details from a server given its IP address and port using the VRising Server Query API.", "parameters": {"ip": {"description": "The IP address of the server.", "type": "str", "default": "185.225.233.110"}, "port": {"description": "The port number of the server.", "type": "str", "default": "30015"}}}
{"name": "financial_income_statement", "description": "Fetches the financial income statement for a given company ticker symbol, formatted by the specified style and frequency.", "parameters": {"symbol": {"description": "The ticker symbol of the company to retrieve financial information for.", "type": "str", "default": "AAPL"}, "formstyle": {"description": "The format style of the returned data. Defaults to 'dataframe'.", "type": "str, optional", "default": "dataframe"}, "freq": {"description": "The frequency of the financial data, either 'A' for annual or 'Q' for quarterly. Defaults to 'Q'.", "type": "str, optional", "default": "Q"}}}
{"name": "by_location", "description": "Searches for homeless shelters based on provided geographical coordinates and radius.", "parameters": {"lat": {"description": "The latitude of the location to search nearby shelters.", "type": "str", "default": "47.630703"}, "radius": {"description": "The search radius in miles (maximum 10 miles).", "type": "str", "default": "1.4"}, "lng": {"description": "The longitude of the location to search nearby shelters.", "type": "str", "default": "-122.186370"}}}
{"name": "get_car_specs", "description": "Fetches detailed specifications for a car based on the given trim ID.", "parameters": {"trimid": {"description": "The trim ID of the car for which to retrieve specifications.", "type": "int", "default": ""}}}
{"name": "genderize", "description": "Determines the likely gender of a given name using the Genderize API.", "parameters": {"name": {"description": "The name to analyze for gender determination.", "type": "str", "default": ""}}}
{"name": "carbonfootprintfrompublictransit", "description": "Calculates the CO2 emissions in kilograms from the use of public transportation based on the distance traveled and type of transit.", "parameters": {"distance": {"description": "The distance traveled in kilometers.", "type": "str", "default": "1000"}, "type": {"description": "The type of transportation, one of: 'Taxi', 'ClassicBus', 'EcoBus', 'Coach', 'NationalTrain', 'LightRail', 'Subway', 'FerryOnFoot', 'FerryInCar'.", "type": "str", "default": "Taxi"}}}
{"name": "card", "description": "Draw a card from a regular 52-card playing deck using the RapidAPI card draw simulator.", "parameters": {"suit": {"description": "The suit of the card to draw (e.g., 'hearts', 'diamonds', 'clubs', 'spades'). Default is 'all' to allow any suit.", "type": "str", "default": "all"}, "value": {"description": "The value of the card to draw (e.g., 'A', '2', 'K'). Default is 'A'.", "type": "str", "default": "A"}}}
{"name": "specific_giveaway_details", "description": "Fetch details from a specific giveaway using the giveaway ID.", "parameters": {"is_id": {"description": "The ID of the giveaway to fetch details for.", "type": "str", "default": "525"}}}
{"name": "hex_to_rgb", "description": "Converts a hex color code to an RGB color code using the Convexity API.", "parameters": {"hex": {"description": "The hex color code to be converted.", "type": "str", "default": "ffffff"}}}
{"name": "ideal_weight", "description": "Calculate the ideal weight based on gender and height using four different well-known equations (Hamwi, Devine, Miller, Robinson).", "parameters": {"gender": {"description": "The gender of the individual ('male' or 'female').", "type": "str", "default": "male"}, "height": {"description": "The height of the individual in centimeters.", "type": "int", "default": "180"}}}
{"name": "teams_list", "description": "Fetches a list of cricket teams based on the specified type from the Cricbuzz API.", "parameters": {"type": {"description": "The type of teams to list. Valid options are `international`, `league`, `domestic`, or `women`.", "type": "str", "default": "international"}}}
{"name": "get_expressions", "description": "Fetch expressions that include a specified word from the Dicolink API.", "parameters": {"mot": {"description": "The word for which to retrieve expressions.", "type": "str", "default": "cheval"}, "limite": {"description": "The maximum number of expressions to retrieve. Defaults to '10'.", "type": "str, optional", "default": "10"}}}
{"name": "user_profile", "description": "Fetches and returns the user profile data from the Spotify API.", "parameters": {"is_id": {"description": "The user's unique Spotify ID.", "type": "str", "default": "nocopyrightsounds"}, "playlistlimit": {"description": "The maximum number of playlists to retrieve. Defaults to 10.", "type": "int, optional", "default": "10"}, "artistlimit": {"description": "The maximum number of artists to retrieve. Defaults to 10.", "type": "int, optional", "default": "10"}}}
{"name": "major_league_soccer_standings", "description": "Fetches the Major League Soccer standings for a given season using the RapidAPI service.", "parameters": {"season": {"description": "The season year for which to retrieve standings. Defaults to None, in which case the latest season's standings are fetched.", "type": "str, optional", "default": ""}}}
{"name": "ufc_fight_night_holloway_vs_allen_april_15_2023", "description": "Fetch details about UFC Fight Night: Holloway vs. Allen held on April 15, 2023.", "parameters": {"limit": {"description": "The number of records to return. Default is None.", "type": "int, optional", "default": ""}, "offset": {"description": "The number of records to skip before starting to return results. Default is None.", "type": "int, optional", "default": ""}}}
{"name": "last_year_summary", "description": "Retrieve the last year's performance summary for a given player using the RapidAPI service.", "parameters": {"player_id": {"description": "The ID of the player whose summary is to be retrieved.", "type": "int", "default": "12994"}}}
{"name": "gettalks", "description": "Retrieve information about specific TED talks based on the provided parameters.", "parameters": {"is_id": {"description": "ID of a desired specific talk.", "type": "int, optional", "default": ""}, "audio_lang": {"description": "Return talks which their audio language is the provided language. The provided value should be the language slug according to the /audio_languages endpoint.", "type": "str, optional", "default": "en"}, "speaker": {"description": "Return talks which at least one of their speakers is the provided speaker. The provided value should be the speaker slug according to the /speakers endpoint.", "type": "str, optional", "default": "yuval_noah_harari"}, "publish_date": {"description": "Return talks which were published on TED.com only on the exact provided date.", "type": "str, optional", "default": ""}, "topic": {"description": "Return talks which at least one of their topics is the provided topic. The provided value should be the topic slug according to the /topics endpoint.", "type": "str, optional", "default": "politics"}, "subtitle_lang": {"description": "Return talks which have subtitles in the provided language. The provided value should be the language slug according to the /subtitle_languages endpoint.", "type": "str, optional", "default": "he"}, "max_duration": {"description": "Return talks which their duration in seconds is at most the provided value.", "type": "int, optional", "default": ""}, "to_publish_date": {"description": "Return talks which were published on TED.com only before the provided date.", "type": "str, optional", "default": ""}, "from_publish_date": {"description": "Return talks which were published on TED.com only after the provided date.", "type": "str, optional", "default": ""}, "min_duration": {"description": "Return talks which their duration in seconds is at least the provided value.", "type": "int, optional", "default": "300"}, "record_date": {"description": "Return talks which were recorded only on the exact provided date.", "type": "str, optional", "default": ""}, "to_record_date": {"description": "Return talks which were recorded only before the provided date.", "type": "str, optional", "default": ""}, "from_record_date": {"description": "Return talks which were recorded only after the provided date.", "type": "str, optional", "default": "2017-01-01"}}}
{"name": "count", "description": "Fetches the total number of expired followers from an OnlyFans API endpoint.", "parameters": {"signstart": {"description": "The start of the signature used for authorization.", "type": "str", "default": ""}, "apptoken": {"description": "The application token.", "type": "str", "default": ""}, "signend": {"description": "The end of the signature used for authorization.", "type": "str", "default": ""}, "xbc": {"description": "The XBC token.", "type": "str", "default": ""}, "timezone": {"description": "The timezone setting.", "type": "str", "default": "America/Los_Angeles"}, "useragent": {"description": "The user agent string.", "type": "str", "default": ""}, "auth_id": {"description": "The authentication ID.", "type": "str", "default": "729369"}, "sess": {"description": "The session ID.", "type": "str", "default": ""}}}
{"name": "minmax", "description": "Retrieve the lowest and highest values over a specified period (MINMAX) for a given financial instrument.", "parameters": {"interval": {"description": "Interval between two consecutive points in the time series. Supports: '1min', '5min', '15min', '30min', '45min', '1h', '2h', '4h', '1day', '1week', '1month'.", "type": "str", "default": "1min"}, "symbol": {"description": "Instrument symbol, which can be any equity, index, ETF, forex, or cryptocurrency (e.g., 'AAPL', 'EUR/USD', 'ETH/BTC').", "type": "str", "default": "AAPL"}, "series_type": {"description": "Type of series data. Supports: 'open', 'high', 'low', 'close'. Default is 'close'.", "type": "str, optional", "default": "close"}, "outputsize": {"description": "Number of data points to return. Default is 30.", "type": "int, optional", "default": 30}, "format": {"description": "Desired format of the output. Can be 'CSV' or 'JSON'. Default is 'json'.", "type": "str, optional", "default": "json"}, "time_period": {"description": "Time period over which the minmax values are calculated. Default is 9.", "type": "int, optional", "default": 9}}}
{"name": "latest_information_for_symbol", "description": "Fetch the latest ticker information for a given symbol from the Bybit API.", "parameters": {"symbol": {"description": "The market symbol to retrieve information for.", "type": "str", "default": "BTCUSD"}}}
{"name": "live_room_bio", "description": "Fetches the biography of a live room from the provided `name` using the RapidAPI service.", "parameters": {"name": {"description": "The name of the live room for which to fetch the biography.", "type": "str", "default": "lil_eva"}}}
{"name": "competitions_get_short_info", "description": "Fetches short information about one or more competitions based on the provided IDs and domain from the TransferMarket API.", "parameters": {"ids": {"description": "The IDs of the competitions to fetch information for. Multiple IDs should be separated by commas (e.g., 'L1,L2,L3,GB1,ES1,IT1').", "type": "str", "default": "L1,L2,L3,GB1,ES1,IT1,TR1,FR1,NL1,A1,C1,MLS1"}, "domain": {"description": "The domain for the request, which can be one of 'com', 'de', 'be', 'es', 'it', 'nl', 'pl', 'pt', 'com.tr', or 'world'. Defaults to 'de'.", "type": "str, optional", "default": "de"}}}
{"name": "get_airplane_details", "description": "Fetches details of an airplane using the provided code.", "parameters": {"code": {"description": "The unique identifier of the airplane to fetch details for.", "type": "str", "default": "777"}}}
{"name": "collection", "description": "Fetches TLE (Two-Line Element) data from the TLE API based on the specified search query.", "parameters": {"search": {"description": "The search term to query the API. Defaults to 'ISS'.", "type": "str", "default": "ISS"}}}
{"name": "search_for_a_word_in_quran", "description": "Search for a given keyword in the English translation of the Quran and return the verses containing the keyword and total matches in JSON format.", "parameters": {"searchterm": {"description": "The keyword or phrase to search for in the Quran.", "type": "str", "default": "muhammad"}}}
{"name": "treeequivalent", "description": "Calculate the number of trees required to create a given weight of paper.", "parameters": {"weight": {"description": "The weight of the paper.", "type": "str", "default": "200"}, "unit": {"description": "The unit of measurement for the weight (e.g., 'kg' or 'lb').", "type": "str", "default": "kg"}}}
{"name": "get_3_fluctuation_endpoint", "description": "Fetches the percentage change in exchange rates for specified currencies over a given time period.", "parameters": {"end_date": {"description": "The end date for the time period of the fluctuation data.", "type": "str", "default": "2023-02-28"}, "base": {"description": "The base currency for which the fluctuation data is to be retrieved.", "type": "str", "default": "eur"}, "start_date": {"description": "The start date for the time period of the fluctuation data.", "type": "str", "default": "2023-01-01"}, "symbols": {"description": "Specific currencies for which the fluctuation data is to be retrieved. Defaults to 'usd'.", "type": "str, optional", "default": "usd"}}}
{"name": "license_plate_lookup", "description": "Perform a license plate lookup using the provided license plate number and state code.", "parameters": {"license_plate": {"description": "The license plate number to look up.", "type": "str", "default": "S8TAN"}, "state_code": {"description": "The state code where the license plate is registered (e.g., 'TX' for Texas).", "type": "str", "default": "AL"}}}
{"name": "get_role_ids", "description": "Retrieves details for a specific document from the signNow API.", "parameters": {"document_id": {"description": "The unique identifier for the document.", "type": "str", "default": ""}}}
{"name": "get_company_jobs_count", "description": "Retrieves the number of job openings a specified company has posted on LinkedIn.", "parameters": {"company_id": {"description": "The unique identifier of the company whose job openings count is to be retrieved.", "type": "str", "default": "162479"}}}
{"name": "email_endpoint", "description": "Queries an email bounce detection API to check the deliverability status of an email address.", "parameters": {"email_string": {"description": "The email address to be checked.", "type": "str", "default": "mike.2023@gmail.com"}}}
{"name": "disposable_domain_and_suggest_domain", "description": "Checks if the given domain is disposable and provides a suggested alternative domain.", "parameters": {"domain": {"description": "The domain to be checked.", "type": "str", "default": "domain.org"}}}
{"name": "pair_id", "description": "Fetches information of a pair using the given pair address from the Uniswap V2 API.", "parameters": {"is_id": {"description": "The address of the pair.", "type": "str", "default": "0xb011eeaab8bf0c6de75510128da95498e4b7e67f"}}}
{"name": "aliexpress_store_info", "description": "Fetches detailed store information from AliExpress using the given seller ID and optional locale, region, and currency parameters.", "parameters": {"sellerid": {"description": "The ID of the AliExpress seller whose store information is requested.", "type": "str", "default": "231651707"}, "locale": {"description": "The locale to display the titles and other content in the selected language.", "type": "str, optional", "default": ""}, "region": {"description": "The region to accurately get the shipping costs and other promo/deals for a specific geo-location.", "type": "str, optional", "default": ""}, "currency": {"description": "The currency to display the product price in the selected currency.", "type": "str, optional", "default": ""}}}
{"name": "uuidv3_generator", "description": "Generates a UUIDv3 based on the provided namespace and name using the Toolbench RapidAPI service.", "parameters": {"namespace": {"description": "The namespace to use for generating the UUIDv3. Allowed values are 'dns', 'url', 'oid', 'x500', and 'nil'.", "type": "str", "default": "nil"}, "name": {"description": "The name to use for generating the UUIDv3.", "type": "str", "default": "test"}}}
{"name": "verify_the_captcha", "description": "Verifies the given CAPTCHA using the provided uuid and Toolbench RapidAPI key.", "parameters": {"captcha": {"description": "The value of the CAPTCHA to be verified.", "type": "str", "default": "Captcha Text"}, "uuid": {"description": "The unique identifier for the CAPTCHA session.", "type": "str", "default": "UUID"}}}
{"name": "check_if_text_contains_profanity", "description": "Check if a given text contains profanity using the Purgomalum API.", "parameters": {"text": {"description": "The text to be checked for profanity.", "type": "str", "default": "This is some test input"}}}
{"name": "investor_grades", "description": "Fetches investor grades for specified cryptocurrency tokens within a date range.", "parameters": {"startdate": {"description": "The start date for the data in the format 'YYYY-MM-DD'.", "type": "str", "default": "2023-01-11"}, "enddate": {"description": "The end date for the data in the format 'YYYY-MM-DD'.", "type": "str", "default": "2023-01-10"}, "tokens": {"description": "A comma-separated list of cryptocurrency tokens for which to fetch investor grades.", "type": "str", "default": "3375, 3306"}, "limit": {"description": "The maximum number of results to return. Default is '1000'.", "type": "str, optional", "default": "1000"}}}
{"name": "calendar_events", "description": "Fetches the calendar events for a particular stock symbol using the Yahoo Finance API via RapidAPI.", "parameters": {"symbol": {"description": "The stock symbol to fetch calendar events for.", "type": "str", "default": ""}}}
{"name": "symbols_get_peers", "description": "Fetches the peer symbols of a given stock symbol using the Seeking Alpha API.", "parameters": {"symbol": {"description": "The stock symbol to query for peers. Multiple symbols can be queried by separating them with a comma (e.g. 'aapl,tsla').", "type": "str", "default": "aapl"}}}
{"name": "product_data", "description": "Fetches detailed information about a specific product from the Ecommerce Product API.", "parameters": {"product": {"description": "The name of the product to retrieve information for.", "type": "str", "default": "phone"}, "page": {"description": "The page number for paginated results. Defaults to 1.", "type": "int, optional", "default": "1"}}}
{"name": "us_ga", "description": "Fetches current or historical gas price data for Georgia.", "parameters": {"date": {"description": "The date for which to fetch historical data in the format 'YYYY-MM-DD'. If not provided, the current gas price data is returned.", "type": "str, optional", "default": ""}}}
{"name": "get_status", "description": "Retrieve the delivery status report for a given message ID using the provided API key.", "parameters": {"msg_id": {"description": "The unique identifier of the SMS message. This can be obtained by setting the parameter `JSON`, `return_msg_id` or `details` to `1` when sending the SMS via the API. It can also be retrieved from the message journal in the user area.", "type": "int", "default": ""}, "p": {"description": "The API Key for authentication.", "type": "str", "default": ""}}}
{"name": "validatetest", "description": "Validate any phone number from any country using the given RapidAPI key.", "parameters": {"number": {"description": "Phone number to be validated. This can be provided in two formats:", "type": "str", "default": "+59894887766"}, "country": {"description": "ISO 3166-1 alpha-2 code of the country in capital letters. This is optional if the number parameter starts with the + symbol. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "settag", "description": "Sets a new tag for the SMS receive service using the provided RapidAPI key.", "parameters": {"tag": {"description": "The value of the new tag, with a maximum length of 16 characters.", "type": "str", "default": ""}}}
{"name": "address", "description": "Sends a request to an address correction and geocoding API using the provided address lines and API key.", "parameters": {"addressline1": {"description": "The first line of the address.", "type": "str", "default": "506 Fourth Avenue Unit 1"}, "addressline2": {"description": "The second line of the address, typically including city, state, and zip code.", "type": "str", "default": "Asbury Prk, NJ"}}}
{"name": "getevents", "description": "Fetches data about events from the Kalshi trading API.", "parameters": {"series_ticker": {"description": "Series ticker to retrieve contracts for.", "type": "str, optional", "default": ""}, "status": {"description": "Restricts the events to those with certain statuses. Accepted values are: 'open', 'closed', 'settled'.", "type": "str, optional", "default": ""}, "cursor": {"description": "Pointer to the next page of records in the pagination. If provided, it should be the cursor string from a previous request.", "type": "str, optional", "default": ""}, "limit": {"description": "Number of results per page. Defaults to 100 if not specified.", "type": "int, optional", "default": ""}}}
{"name": "placessearchinradius", "description": "Get places within a specified radius from a given center point in GeoJSON format.", "parameters": {"latitude": {"description": "Latitude of the center of the search radius.", "type": "int", "default": ""}, "longitude": {"description": "Longitude of the center of the search radius.", "type": "int", "default": ""}, "radius": {"description": "Radius of the search area in miles (min value is 1, max value is 50).", "type": "int", "default": ""}}}
{"name": "laliga_standings", "description": "Fetches the standings for LaLiga for a given season.", "parameters": {"season": {"description": "The season to retrieve the standings for, e.g., '2022'. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "find_zip_codes_by_city", "description": "This function returns all zip codes associated with a given city. If multiple cities share the same name, zip codes for all those cities will be returned. ", "parameters": {"accept": {"description": "Requested content type.", "type": "str", "default": "application/json"}, "city": {"description": "The name of the city for which to find zip codes.", "type": "str", "default": "Wrocław"}, "x_traceid": {"description": "A trace ID that is copied to the API response header. Default is 'optional_abc123'.", "type": "str, optional", "default": "optional_abc123"}}}
{"name": "search_sex_offenders", "description": "Search for sex offenders using either GIS parameters or attribute parameters.", "parameters": {"lastname": {"description": "The last name of the sex offender to search for.", "type": "str, optional", "default": ""}, "zipcode": {"description": "The zipcode to search within.", "type": "str, optional", "default": ""}, "state": {"description": "The state to search within. Default is 'California'.", "type": "str, optional", "default": "California"}, "city": {"description": "The city to search within.", "type": "str, optional", "default": ""}, "firstname": {"description": "The first name of the sex offender to search for. Default is 'David'.", "type": "str, optional", "default": "David"}, "lat": {"description": "The latitude for GIS search. Default is 37.", "type": "int, optional", "default": "37.397568"}, "radius": {"description": "The search radius in miles for GIS search. Default is 1 mile.", "type": "int, optional", "default": "1"}, "lng": {"description": "The longitude for GIS search. Default is -122.", "type": "int, optional", "default": "-122.06492"}}}
{"name": "airport_arrivals", "description": "Fetch the flight arrivals for a specified airport on a given date, optionally filtered by carrier.", "parameters": {"airportcode": {"description": "The IATA code of the airport.", "type": "str", "default": "LHR"}, "carriercode": {"description": "The IATA code of the airline carrier. Defaults to None.", "type": "str, optional", "default": ""}, "date": {"description": "The date for which to fetch the arrivals, in the format YYYY-MM-DD. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "v1_textlanguage", "description": "Determines the language of a given text using the API Ninjas Text Language API.", "parameters": {"text": {"description": "The text for which the language needs to be identified.", "type": "str", "default": "hello world!"}}}
{"name": "word", "description": "Generates lorem ipsum text by requesting a specified number of words from the RapidAPI lorem ipsum service.", "parameters": {"amount": {"description": "The number of lorem ipsum words to generate.", "type": "int", "default": "5"}}}
{"name": "daily_sentiment", "description": "Gets the daily sentiment score for a given asset symbol and date using the SentiTrade API.", "parameters": {"symbol": {"description": "The asset ticker symbol to query.", "type": "str", "default": "BTC"}, "date": {"description": "The date for which to retrieve the sentiment score in 'YYYY-MM-DD' format.", "type": "str", "default": "2023-01-01"}}}
{"name": "convert_a_unit", "description": "Converts a unit from one measurement to another using the Unit Measurement Conversion API.", "parameters": {"fromvalue": {"description": "The value to be converted.", "type": "str", "default": "200"}, "tounit": {"description": "The unit to which the value should be converted.", "type": "str", "default": "kilogram"}, "fromunit": {"description": "The original unit of the value.", "type": "str", "default": "pound"}, "type": {"description": "The type/category of the units (e.g., length, mass).", "type": "str", "default": "weight"}}}
{"name": "captcha_generator", "description": "Generates a CAPTCHA image with optional customizations and returns the resulting data.", "parameters": {"fontname": {"description": "The font to be used for the CAPTCHA text. Supported font names are 'sora', 'noto-sans', and 'ubuntu'. Default is 'sora'.", "type": "str, optional", "default": "sora"}, "noise_number": {"description": "The amount of noise to include in the CAPTCHA image. Default is 10.", "type": "int, optional", "default": "10"}, "text": {"description": "Custom text to be used as the CAPTCHA solution. If not provided, a random text solution will be generated.", "type": "str, optional", "default": ""}}}
{"name": "query_for_ldu_boundary_by_h3index", "description": "Queries for a Local Delivery Unit (LDU) boundary by its H3 index.", "parameters": {"h3ndex": {"description": "The H3 index used to query the LDU boundary.", "type": "int", "default": "635775751926485631"}}}
{"name": "rocr", "description": "Calculates the Rate of Change Ratio (ROCR) for a given financial instrument over a specified time period.", "parameters": {"interval": {"description": "Interval between two consecutive points in the time series. Supported values include: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`.", "type": "str", "default": "1min"}, "symbol": {"description": "Instrument symbol, which can be any equity, index, ETF, forex, or cryptocurrency (e.g., `AAPL`, `EUR/USD`, `ETH/BTC`).", "type": "str", "default": "AAPL"}, "format": {"description": "The format of the output, which can either be `csv` or `json`. Default is `json`.", "type": "str, optional", "default": "json"}, "time_period": {"description": "Number of periods to go back for calculating the ROCR. Default is 9.", "type": "int, optional", "default": 9}, "series_type": {"description": "The type of price series to use in the calculation. Supported values include: `open`, `high`, `low`, `close`. Default is `close`.", "type": "str, optional", "default": "close"}, "outputsize": {"description": "Number of data points to retrieve. Default is 30.", "type": "int, optional", "default": 30}}}
{"name": "get_cci_by_number", "description": "Fetches the CCI (Control Correlation Identifier) and its definition based on a 6-digit CCI identification number using the specified RapidAPI key.", "parameters": {"cci": {"description": "A 6-digit CCI identification number.", "type": "str", "default": "000001"}}}
{"name": "video_comment_replies", "description": "Fetches the replies to a specific comment on a TikTok video using the provided API key.", "parameters": {"comment_id": {"description": "The ID of the comment for which to retrieve replies.", "type": "str", "default": "7136269575881360155"}, "video_id": {"description": "The ID of the video containing the comment.", "type": "str", "default": "7136263711043374341"}, "cursor": {"description": "Cursor for pagination to fetch additional replies. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "get_u_58_athlete_ranking", "description": "Fetches the Under-58kg athlete ranking for Taekwondo from the RapidAPI Taekwondo API.", "parameters": {"country": {"description": "The name of the country to filter the athlete rankings by. If not provided, rankings from all countries are returned.", "type": "str, optional", "default": ""}}}
{"name": "get_gas_fee_funding_wallets", "description": "Fetches gas fee funding wallet information from the RapidAPI Token Forwarding service.", "parameters": {"is_id": {"description": "The identifier used to fetch specific wallet information. Default is 'dfe02338-43ae-453f-bd51-6f0ea98e4df9'.", "type": "str, optional", "default": "dfe02338-43ae-453f-bd51-6f0ea98e4df9"}, "limit": {"description": "The maximum number of records to retrieve. Default is 100.", "type": "int, optional", "default": "100"}, "offset": {"description": "The number of records to skip before starting to return records. Default is 0.", "type": "int, optional", "default": "0"}}}
{"name": "piercing_line", "description": "Returns a list of stocks that have a Piercing Line signal from the BarPatterns API.", "parameters": {"page": {"description": "The page number for paginated results. Defaults to 1.", "type": "int", "default": "1"}}}
{"name": "get_vessel_photo", "description": "Fetch the image of a vessel using its ship ID from the Vessel Data API.", "parameters": {"shipid": {"description": "The ID of the ship for which to fetch the image.", "type": "str", "default": ""}}}
{"name": "seasonal_statistics_quarter_analysis", "description": "Fetches and returns the seasonal quarter analysis and statistics for a specific basketball team using the RapidAPI.", "parameters": {"teamid": {"description": "The ID of the team for which the analysis and statistics are to be retrieved.", "type": "int", "default": "1442"}}}
{"name": "movies_get_upcoming", "description": "Fetches a list of upcoming movies based on the specified parameters.", "parameters": {"limit": {"description": "The number of items to return, with a maximum of 100. Defaults to 100.", "type": "int, optional", "default": "100"}, "countryid": {"description": "The country identifier to filter the upcoming movies list. Defaults to 'usa'. Example values include 'afg', 'alb', 'dza', etc.", "type": "str, optional", "default": "usa"}}}
{"name": "get_by_decade", "description": "Fetches world population data for a specified decade using the RapidAPI service.", "parameters": {"decade": {"description": "The decade for which to fetch population data. Defaults to 10.", "type": "int, optional", "default": "10"}}}
{"name": "get_analysis", "description": "Fetches website traffic and key metrics for a given domain using the RapidAPI service.", "parameters": {"domain": {"description": "The domain to analyze, e.g., 'amazon.com'.", "type": "str", "default": ""}}}
{"name": "show_moves", "description": "Fetches and returns the moves of a specific character from the Marvel vs Capcom 2 API.", "parameters": {"name": {"description": "The name of the character whose moves are to be retrieved.", "type": "str", "default": "Akuma"}}}
{"name": "game", "description": "Fetch details of a specific baseball game using its game ID.", "parameters": {"gamepk": {"description": "The unique identifier for the baseball game.", "type": "str", "default": "633282"}}}
{"name": "manufacturing_year_detection", "description": "Detects the manufacturing year of the vehicle based on the provided VIN identifier using the Tesla VIN Identifier API.", "parameters": {"vin_identifier": {"description": "The Vehicle Identification Number (VIN) of the vehicle to identify the manufacturing year for.", "type": "str", "default": "0f7885c2af1a6ef9"}}}
{"name": "screenshot_endpoint", "description": "Takes a screenshot of a specified webpage URL with given dimensions.", "parameters": {"height": {"description": "The height of the screenshot in pixels.", "type": "str", "default": "1080"}, "url": {"description": "The URL of the webpage to capture.", "type": "str", "default": "https://rapidapi.com/marketplace"}, "width": {"description": "The width of the screenshot in pixels.", "type": "str", "default": "1920"}, "fullscreen": {"description": "Whether to capture the screenshot in fullscreen mode. Defaults to 'true'.", "type": "str, optional", "default": "true"}}}
{"name": "news_list_flash", "description": "Fetches a list of flash news articles using the Webull API.", "parameters": {"currentnewsid": {"description": "For paging purposes, this is the ID of the last news returned by this endpoint. Pass 0 for the first query. Defaults to 0.", "type": "int, optional", "default": "0"}, "pagesize": {"description": "For paging purposes, this parameter specifies the maximum number of news articles to return. The maximum value is 20. Defaults to 20.", "type": "int, optional", "default": "20"}}}
{"name": "get_other_position", "description": "Retrieves the open positions for a trader from the Binance futures leaderboard.", "parameters": {"encrypteduid": {"description": "The encrypted UID of the trader whose open positions are to be retrieved.", "type": "str", "default": ""}, "tradetype": {"description": "The type of trade to search for. Options are \"PERPETUAL\" (USDⓈ-M) and \"DELIVERY\" (COIN-M). Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "camelizer_get_price_chart", "description": "Fetches a price history chart of a specified product from Amazon using the Camelizer API.", "parameters": {"asin": {"description": "The ASIN (Amazon Standard Identification Number) of a product from Amazon. Example: 'B08QB93S6R'.", "type": "str", "default": ""}, "lang": {"description": "The language for the chart. One of the following: 'en', 'fr', 'de', 'it', 'es'. Default is 'en'.", "type": "str, optional", "default": "en"}, "tp": {"description": "The time period for the price history. One of the following: '1m', '3m', '6m', '1y', 'all'. Default is '3m'.", "type": "str, optional", "default": "3m"}, "w": {"description": "The width of the chart in pixels. Default is 720.", "type": "int, optional", "default": "720"}, "h": {"description": "The height of the chart in pixels. Default is 480.", "type": "int, optional", "default": "480"}, "country": {"description": "The country-specific Amazon site. One of the following: 'au', 'ca', 'fr', 'de', 'it', 'es', 'uk', 'us'. Default is 'us'.", "type": "str, optional", "default": "us"}}}
{"name": "soil_data_by_lat_lng", "description": "Fetches the latest soil data readings for a specified latitude and longitude.", "parameters": {"lng": {"description": "Longitude of the location.", "type": "int", "default": "78.96"}, "lat": {"description": "Latitude of the location.", "type": "int", "default": "20.59"}, "pollutants": {"description": "Specific pollutants to filter the data. Defaults to None.", "type": "str, optional", "default": ""}, "limit": {"description": "Maximum number of records to retrieve. Defaults to None.", "type": "int, optional", "default": ""}}}
{"name": "v1_exchangerate", "description": "Retrieves the exchange rate for a given currency pair using the API Ninjas Exchange Rate API.", "parameters": {"pair": {"description": "Currency pair to query. Must be in the form of (currency1)_(currency2) (e.g., USD_EUR).", "type": "str", "default": "USD_EUR"}}}
{"name": "discounted_cash_flow_models_dcf_s", "description": "Fetches the Discounted Cash Flow (DCF) model for a given stock symbol using MarketCI Analytics API.", "parameters": {"symbol": {"description": "The stock symbol for which to fetch the DCF model.", "type": "str", "default": "AAPL"}}}
{"name": "esg", "description": "Retrieves the Environmental, Social, and Governance (ESG) score for a given company symbol using the Yahoo Finance API.", "parameters": {"symb": {"description": "The stock symbol of the company for which the ESG score is requested.", "type": "str", "default": "tsla"}}}
{"name": "bullish_engulfing", "description": "Fetches a list of stocks exhibiting the Bullish Engulfing signal pattern.", "parameters": {"page": {"description": "The page number of results to retrieve. Defaults to 1.", "type": "int, optional", "default": "1"}}}
{"name": "series", "description": "Fetches details about a series and its episodes from the specified API.", "parameters": {"series_slug": {"description": "The unique identifier slug for the series.", "type": "str", "default": ""}, "is_id": {"description": "The ID associated with the series.", "type": "str", "default": ""}}}
{"name": "posts", "description": "Fetches posts of a creator from the Patreon API using the given parameters.", "parameters": {"creator_id": {"description": "The ID of the creator whose posts are to be fetched.", "type": "int", "default": "2416483"}, "cursor": {"description": "The cursor for pagination to the next page of results. Defaults to None.", "type": "str, optional", "default": ""}, "amount": {"description": "The number of posts to return. Defaults to 10. Maximum is 500.", "type": "int, optional", "default": "10"}}}
{"name": "get_extra_character_details", "description": "Fetch additional details about a character using the provided character ID and RapidAPI key.", "parameters": {"is_id": {"description": "The unique identifier of the character for which details are being fetched.", "type": "str", "default": ""}}}
{"name": "carrier_endpoint", "description": "Retrieves carrier information for a given phone number using the RapidAPI service.", "parameters": {"phonenumber": {"description": "The phone number for which to look up carrier information.", "type": "str", "default": ""}}}
{"name": "type_portfolio_get_asset_allocation", "description": "Retrieves the asset allocation for a specified security as displayed in the Portfolio tab.", "parameters": {"type": {"description": "The type of asset to retrieve information for. Must be either 'etf' or 'fund'.", "type": "str", "default": "etf"}, "securityid": {"description": "The security ID value returned from the market returns endpoint.", "type": "str", "default": "F00000O2CG"}}}
{"name": "get_bank_info", "description": "Fetches information about a bank using the provided routing number.", "parameters": {"routingnumber": {"description": "The routing number of the bank to lookup.", "type": "str", "default": "121000248"}, "format": {"description": "Defines the format of the response. Default value is 'json'. Possible values are 'xml' and 'json'.", "type": "str, optional", "default": "json"}, "paymenttype": {"description": "Specifies the type of payment information to retrieve. Default value is 'ach'. Possible values are 'ach' and 'wire'.", "type": "str, optional", "default": "ach"}}}
{"name": "list_user_followers", "description": "Fetches a user's followers from SoundCloud using the specified parameters.", "parameters": {"limit": {"description": "The maximum number of items to return. Defaults to None.", "type": "int, optional", "default": ""}, "offsettoken": {"description": "A string token used for pagination to get the next page of data. Defaults to None. If specified, the `user` parameter will be ignored.", "type": "str, optional", "default": ""}, "user": {"description": "The URL or ID of the SoundCloud user. Defaults to 'https://soundcloud.com/atlantic-records-uk'.", "type": "str, optional", "default": "https://soundcloud.com/atlantic-records-uk"}}}
{"name": "get_word_by_start_and_contain", "description": "This function retrieves a random word from the Random Word API that starts with the specified `start` string and contains the specified `substring`.", "parameters": {"substring": {"description": "The substring that the word must contain.", "type": "str", "default": "le"}, "start": {"description": "The starting string of the word.", "type": "str", "default": "fru"}}}
{"name": "get_characters", "description": "Retrieve a list of characters from the API, including both publicly available characters and those created by the user.", "parameters": {"page_size": {"description": "Number of characters to retrieve per page. Defaults to 25.", "type": "int, optional", "default": "25"}, "page": {"description": "Page number to retrieve. Defaults to 1.", "type": "int, optional", "default": "1"}, "private": {"description": "If True, return only the characters created by the user. If False, return all publicly available characters. If None, both types of characters are returned. Defaults to None.", "type": "bool, optional", "default": "false"}}}
{"name": "co2_emission", "description": "Fetches the carbon emissions in grams per Kilo-Watt-Hour for electricity in Germany based on the given date. Allows retrieving both the latest and historical data back to the year 2017.", "parameters": {"date": {"description": "The date for which to retrieve carbon emission data. Accepted formats include 'YYYY-MM-DD', 'MM/DD/YYYY', or Unix Timestamp (in milliseconds). Defaults to '2022-08-20'.", "type": "str, optional", "default": "2022-08-20"}}}
{"name": "caiso", "description": "Fetches standardized CAISO (California Independent System Operator) data based on specified parameters.", "parameters": {"type": {"description": "The type of data to retrieve. Must be one of \"co2\", \"fuelsource\", \"netdemand\", or \"all\". \"all\" will combine results for the three other types into a single CSV file.", "type": "str", "default": "co2"}, "enddate": {"description": "The end date for the data retrieval in the format 'YYYYMMDD'. Defaults to '20220901'.", "type": "str, optional", "default": "20220901"}, "interval": {"description": "The interval for the data points in minutes. Defaults to '30'.", "type": "str, optional", "default": "30"}, "startdate": {"description": "The start date for the data retrieval in the format 'YYYYMMDD'. Defaults to '20220101'.", "type": "str, optional", "default": "20220101"}}}
{"name": "v1_planets", "description": "Fetch a list of planets that match the specified parameters. The results are limited to a maximum of 30; use the `offset` parameter for pagination to access more results.", "parameters": {"max_period": {"description": "Maximum orbital period of the planet in Earth days.", "type": "int, optional", "default": ""}, "max_temperature": {"description": "Maximum average surface temperature of the planet in Kelvin.", "type": "int, optional", "default": ""}, "offset": {"description": "Number of results to offset for pagination.", "type": "int, optional", "default": ""}, "max_distance_light_year": {"description": "Maximum distance the planet is from Earth in light years.", "type": "int, optional", "default": ""}, "min_distance_light_year": {"description": "Minimum distance the planet is from Earth in light years.", "type": "int, optional", "default": ""}, "max_mass": {"description": "Maximum mass of the planet in Jupiters (1 Jupiter = 1.898 × 10^27 kg).", "type": "int, optional", "default": ""}, "max_semi_major_axis": {"description": "Maximum semi-major axis of the planet in astronomical units (AU).", "type": "int, optional", "default": ""}, "min_mass": {"description": "Minimum mass of the planet in Jupiters (1 Jupiter = 1.898 × 10^27 kg).", "type": "int, optional", "default": ""}, "min_semi_major_axis": {"description": "Minimum semi-major axis of the planet in astronomical units (AU).", "type": "int, optional", "default": ""}, "name": {"description": "Name of the planet. Defaults to 'Mars'.", "type": "str, optional", "default": "Mars"}, "min_temperature": {"description": "Minimum average surface temperature of the planet in Kelvin.", "type": "int, optional", "default": ""}, "max_radius": {"description": "Maximum average radius of the planet in Jupiters (1 Jupiter = 69911 km).", "type": "int, optional", "default": ""}, "min_radius": {"description": "Minimum average radius of the planet in Jupiters (1 Jupiter = 69911 km).", "type": "int, optional", "default": ""}, "min_period": {"description": "Minimum orbital period of the planet in Earth days.", "type": "int, optional", "default": ""}}}
{"name": "balance_sheet", "description": "Fetches the balance sheet of a specific company, including assets, liabilities, and shareholders’ equity, from an external API.", "parameters": {"symbol": {"description": "The stock symbol of the company.", "type": "str", "default": "AAPL"}, "exchange": {"description": "The stock exchange where the company is listed.", "type": "str, optional", "default": ""}, "country": {"description": "The country where the company is located.", "type": "str, optional", "default": ""}, "start_date": {"description": "The start date for the balance sheet data in 'YYYY-MM-DD' format.", "type": "str, optional", "default": ""}, "end_date": {"description": "The end date for the balance sheet data in 'YYYY-MM-DD' format.", "type": "str, optional", "default": ""}, "period": {"description": "The reporting period of the balance sheet data. Defaults to 'annual'.", "type": "str, optional", "default": "annual"}}}
{"name": "recommendation_trends", "description": "Fetches recommendation trends for a given stock symbol using the Yahoo Finance API on RapidAPI.", "parameters": {"symbol": {"description": "The stock ticker symbol for which to retrieve recommendation trends.", "type": "str", "default": ""}}}
{"name": "series_get_players", "description": "Fetches the list of players in a given squad for a specified series.", "parameters": {"seriesid": {"description": "The ID of the series. This value is obtained from the endpoints /series/list or /series/list-archives.", "type": "int", "default": "3718"}, "squadid": {"description": "The ID of the squad. This value is obtained from the endpoint /series/get-squads.", "type": "int", "default": "12021"}}}
{"name": "results_by_date", "description": "Fetches cricket match results for a specified date using the RapidAPI service.", "parameters": {"date": {"description": "The date for which to retrieve cricket match results, in YYYY-MM-DD format.", "type": "str", "default": "2020-09-20"}}}
{"name": "detect_offensive_message", "description": "Detects hate speech and offensive language in the provided message using the specified API key.", "parameters": {"q": {"description": "The message to be checked for offensive language.", "type": "str", "default": "son of a ***"}}}
{"name": "stock_get_fund_profile", "description": "Fetch the fund profile information for a given stock using the provided ticker ID and API key.", "parameters": {"tickerid": {"description": "The unique identifier of the stock ticker. This value can be obtained from various stock-related endpoints such as stock search or market rankings.", "type": "int", "default": "913285171"}}}
{"name": "tirto_detail", "description": "Fetch detailed information about a specific Tirto news article using its ID.", "parameters": {"is_id": {"description": "The ID of the Tirto news article to fetch details for.", "type": "int", "default": "1253421"}}}
{"name": "albums_get_details", "description": "Fetch detailed information of an album using the Shazam API.", "parameters": {"is_id": {"description": "The ID of the album. This value can be obtained from the 'id' field returned in /shazam-songs/get-details, /artists/get-albums, /artists/get-summary, /artists/get-latest-release, or from the 'albumadamid' field in /songs/v2/detect, /songs/detect endpoints.", "type": "str", "default": "850576570"}, "l": {"description": "The language code for the details. Defaults to 'en-US'.", "type": "str, optional", "default": "en-US"}}}
{"name": "read_a_link_or_token_by_its_id", "description": "Fetches the content of a link or token by its ID using the Token2Go API.", "parameters": {"is_id": {"description": "The ID of the link or token to be fetched.", "type": "str", "default": ""}, "t": {"description": "The type of content to fetch (either 'link' or 'token').", "type": "str", "default": "link"}}}
{"name": "webcams_list_bbox_ne_lat_ne_lng_sw_lat_sw_lng", "description": "Returns a list of webcams within the specified bounding box defined by the north-east and south-west coordinates.", "parameters": {"ne_lat": {"description": "North-east WGS84 latitude of the bounding box.", "type": "int", "default": ""}, "sw_lng": {"description": "South-west WGS84 longitude of the bounding box.", "type": "int", "default": ""}, "sw_lat": {"description": "South-west WGS84 latitude of the bounding box.", "type": "int", "default": ""}, "ne_lng": {"description": "North-east WGS84 longitude of the bounding box.", "type": "int", "default": ""}, "lang": {"description": "Localizes the results to the specified language, if available. Default is 'en'.", "type": "str, optional", "default": "en"}, "show": {"description": "Specifies the content to be listed in the response. Default is 'webcams:image,location'.", "type": "str, optional", "default": "webcams:image,location"}}}
{"name": "ufc_fight_night_song_vs_simon_april_28_2023", "description": "Fetches fight details for UFC Fight Night: Song vs. Simon held on April 28, 2023.", "parameters": {"offset": {"description": "The number of records to skip before starting to collect the result set. Defaults to None.", "type": "int, optional", "default": ""}, "limit": {"description": "The maximum number of records to return. Defaults to None.", "type": "int, optional", "default": ""}}}
{"name": "blockit", "description": "Detect if an IP address is associated with a proxy, Tor, hosting service, cloud service, or is a Bogon IP.", "parameters": {"ip": {"description": "The IP address to be checked.", "type": "str", "default": "34.95.185.149"}}}
{"name": "nitrous_endpoint", "description": "Sends a GET request to the Nitrous Oxide API and returns the response data.", "parameters": {"nitrous": {"description": "An optional query parameter to filter the results based on nitrous oxide levels.", "type": "str, optional", "default": ""}}}
{"name": "soil_history_data", "description": "Fetches historical soil data for a given location and date range using the Ambee API.", "parameters": {"lng": {"description": "Longitude of the location.", "type": "int", "default": "78.96"}, "lat": {"description": "Latitude of the location.", "type": "int", "default": "20.59"}, "startdate": {"description": "The start date for the soil data in 'YYYY-MM-DD' format.", "type": "str", "default": "'YYYY-MM-DD hh:mm:ss'"}, "enddate": {"description": "The end date for the soil data in 'YYYY-MM-DD' format.", "type": "str", "default": "YYYY-MM-DD hh:mm:ss''"}}}
{"name": "advance_profile", "description": "Retrieves an advanced profile from Instagram, optionally with email or phone if available.", "parameters": {"ig": {"description": "The Instagram handle of the user whose profile is to be retrieved.", "type": "str", "default": "therock"}, "response_type": {"description": "Specifies the type of response desired.", "type": "str", "default": "info"}, "corsenabled": {"description": "Specifies if CORS is enabled. Default is 'false'.", "type": "str, optional", "default": "false"}}}
{"name": "retrievepornstar", "description": "Retrieve information about a specific pornstar based on the given criteria.", "parameters": {"is_id": {"description": "A unique identifier for the pornstar.", "type": "str", "default": ""}, "ethnicity": {"description": "The ethnicity of the pornstar.", "type": "str, optional", "default": ""}, "min_weight": {"description": "The minimum weight of the pornstar.", "type": "str, optional", "default": ""}, "max_cup_size": {"description": "The maximum cup size of the pornstar.", "type": "str, optional", "default": ""}, "nationality": {"description": "The nationality of the pornstar.", "type": "str, optional", "default": ""}, "min_waist": {"description": "The minimum waist size of the pornstar.", "type": "str, optional", "default": ""}, "hair": {"description": "The hair color of the pornstar.", "type": "str, optional", "default": ""}, "max_age": {"description": "The maximum age of the pornstar.", "type": "str, optional", "default": ""}, "min_age": {"description": "The minimum age of the pornstar.", "type": "str, optional", "default": ""}, "min_cup_size": {"description": "The minimum cup size of the pornstar.", "type": "str, optional", "default": ""}, "date_of_birth": {"description": "The birth date of the pornstar.", "type": "str, optional", "default": ""}, "eyes": {"description": "The eye color of the pornstar.", "type": "str, optional", "default": ""}, "max_waist": {"description": "The maximum waist size of the pornstar.", "type": "str, optional", "default": ""}, "name": {"description": "The name of the pornstar.", "type": "str, optional", "default": ""}, "tattoos": {"description": "Whether the pornstar has tattoos.", "type": "str, optional", "default": ""}, "max_weight": {"description": "The maximum weight of the pornstar.", "type": "str, optional", "default": ""}}}
{"name": "view_sms_history", "description": "Retrieves all received SMS messages for a given phone number and country ID.", "parameters": {"number": {"description": "The phone number for which to view SMS messages.", "type": "str", "default": "79034134722"}, "countryid": {"description": "The country ID associated with the phone number.", "type": "str", "default": "7"}}}
{"name": "product", "description": "Fetch up-to-date information for a specific product from the IKEA API.", "parameters": {"countrycode": {"description": "The country code where the product is available.", "type": "str", "default": "us"}, "productid": {"description": "The unique identifier for the product.", "type": "str", "default": ""}, "languagecode": {"description": "The language code for the response. Default is 'en'.", "type": "str, optional", "default": "en"}, "store": {"description": "The specific store identifier.", "type": "str, optional", "default": ""}}}
{"name": "fetch_company_details", "description": "Fetch company details by company name using the Toolbench RapidAPI.", "parameters": {"query": {"description": "The company name to search for.", "type": "str", "default": "saharsh"}}}
{"name": "search_product", "description": "This function searches for a product using the Tokopedia API based on the given query and act parameters.", "parameters": {"query": {"description": "The search query string for the product to be searched.", "type": "str", "default": "Celana Jeans"}, "act": {"description": "The action parameter to specify the type of search.", "type": "str", "default": "search"}}}
{"name": "player_stats_by_id_and_year", "description": "Retrieves official updated statistics for a given WTA (Women's Tennis Association) player for a specified year. The data is fetched from the Ultimate Tennis API.", "parameters": {"player_id": {"description": "The unique identifier for the WTA player. The ID can be retrieved from the Official WTA Players Rankings endpoint.", "type": "str", "default": "326408"}, "year": {"description": "The year for which to retrieve the player's statistics (e.g., 2022, 2021).", "type": "str", "default": "2022"}}}
{"name": "stock_get_key_statistics_data", "description": "Gets key statistics data for a given stock symbol and region using the RapidAPI service.", "parameters": {"symbol": {"description": "The ticker symbol for the stock (e.g., 'AAPL' for Apple Inc.).", "type": "str", "default": "AAPL"}, "region": {"description": "The region for the stock market. Default is 'US'. Allowed values are 'US', 'BR', 'AU', 'CA', 'FR', 'DE', 'HK', 'IN', 'IT', 'ES', 'GB', 'S'.", "type": "str, optional", "default": "US"}}}
{"name": "get_index_price_kline", "description": "Fetches the index price kline data for a specified symbol and category within a given time range.", "parameters": {"symbol": {"description": "The symbol for which the kline data is to be fetched.", "type": "str", "default": "BTCUSDT"}, "category": {"description": "The derivatives products category. Possible values are 'linear' and 'inverse', including inverse futures.", "type": "str", "default": "linear"}, "interval": {"description": "The interval for the kline data. Possible values are '1', '3', '5', '15', '30', '60', '120', '240', '360', '720', 'D', 'M', and 'W'.", "type": "str", "default": "D"}, "end": {"description": "The end timestamp point for the query results, in milliseconds.", "type": "int", "default": "1652544000000"}, "start": {"description": "The start timestamp point for the query results, in milliseconds.", "type": "int", "default": "1652112000000"}, "limit": {"description": "The limit for the data size per page, with a maximum size of 200. Defaults to None.", "type": "int, optional", "default": ""}}}
{"name": "convert_get_symbol", "description": "Converts a specified amount from one currency to another and retrieves the symbol of the converted value.", "parameters": {"amount": {"description": "The amount of currency to convert. Defaults to '1'.", "type": "str", "default": "1"}, "to": {"description": "The target currency code. Defaults to 'USD'.", "type": "str", "default": "USD"}, "is_from": {"description": "The source currency code. Defaults to 'EUR'.", "type": "str", "default": "EUR"}}}
{"name": "searchoffers", "description": "Gets all job offers from the given parameters.", "parameters": {"keyword": {"description": "The keyword to search for job offers.", "type": "str", "default": "Secretary"}, "posted": {"description": "The time frame for when the job offers were posted (e.g., 'last 24 hours', 'last 7 days').", "type": "str", "default": ""}, "offset": {"description": "The index offset for pagination of results.", "type": "int", "default": "0"}, "location": {"description": "The location to search for job offers.", "type": "str", "default": "Frankfurt"}}}
{"name": "place_details_google", "description": "Fetches contact and opening hours information for a place using its Google Place ID.", "parameters": {"is_id": {"description": "The Google Place ID of the location to retrieve details for.", "type": "str", "default": "ChIJCxzX9tpwhlQRIFVwULOI2FM"}}}
{"name": "hot_trending_songs_powered_by_twitter", "description": "Fetch the HOT TRENDING SONGS POWERED BY TWITTER chart information for a specific date and range using the Toolbench RapidAPI key.", "parameters": {"date": {"description": "The date for which to fetch the chart information, formatted as 'YYYY-MM-DD'.", "type": "str", "default": "2021-11-06"}, "range": {"description": "The range of the chart, with a maximum value between 1-20.", "type": "str", "default": "1-10"}}}
{"name": "artist_details_single", "description": "Fetch details of a single Spotify artist using the artist's ID.", "parameters": {"artist_id": {"description": "The Spotify ID of the artist whose details are to be fetched.", "type": "str", "default": "52wBYviD0Fnactl1q7ibdT"}}}
{"name": "filter_group_giveaways", "description": "Filters and groups giveaways based on the provided platform and type, using the provided API key to make the request.", "parameters": {"platform": {"description": "The platform for which to filter the giveaways (e.g., 'pc', 'ps4', 'xbox').", "type": "str", "default": "epic-games-store.steam.android"}, "type": {"description": "The type of giveaway to filter (default is 'game.loot').", "type": "str, optional", "default": "game.loot"}}}
{"name": "range", "description": "Fetches random chess puzzles within a specified rating range.", "parameters": {"number_of_puzzles": {"description": "The number of puzzles to retrieve. Defaults to 1.", "type": "int, optional", "default": "1"}, "max_deviation": {"description": "The maximum possible rating deviation. Defaults to 100.", "type": "int, optional", "default": "100"}, "min": {"description": "The minimum rating a puzzle can have. Defaults to 1200.", "type": "int, optional", "default": "1200"}, "max": {"description": "The maximum rating a puzzle can have. Defaults to 1600.", "type": "int, optional", "default": "1600"}}}
{"name": "news_list", "description": "Fetches a list of news articles based on the specified category.", "parameters": {"is_id": {"description": "The category of news to fetch, allowable values include markets, technology, view, pursuits, politics, green, citylab, businessweek, fixed-income, hyperdrive, cryptocurrencies, wealth, latest, personalFinance, quickTake, world, industries, stocks, currencies, brexit.", "type": "str", "default": "markets"}}}
{"name": "news_get_details", "description": "This function retrieves detailed news information using the given resource ID.", "parameters": {"resid": {"description": "The value of the resId field returned from the /news/list-top endpoint, used to specify which news details to retrieve.", "type": "str", "default": ""}}}
{"name": "yearly_balance_sheets", "description": "Fetches the annual balance sheet statements for a given stock symbol using the Toolbench API.", "parameters": {"symbol": {"description": "The stock symbol for which to fetch the annual balance sheet statements.", "type": "str", "default": "MSFT"}}}
{"name": "logo", "description": "Fetches the logo of a specified company from the Twelve Data API.", "parameters": {"symbol": {"description": "The stock ticker symbol of the company.", "type": "str", "default": "AAPL"}, "country": {"description": "The country where the company is based. Defaults to None.", "type": "str, optional", "default": ""}, "exchange": {"description": "The stock exchange where the company is listed. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "stays_auto_complete", "description": "Fetches auto-complete suggestions for stays based on a given location.", "parameters": {"location": {"description": "The location for which to get auto-complete suggestions.", "type": "str", "default": "ch"}, "language_code": {"description": "The language code for the results. Defaults to 'en-us'.", "type": "str, optional", "default": "en-us"}}}
{"name": "get_video", "description": "Fetches video data using a query string from the Playphrase API.", "parameters": {"q": {"description": "The search query string.", "type": "str", "default": ""}}}
{"name": "get_movies_by_year", "description": "Fetches a list of movies released in a specified year from the IMDb API.", "parameters": {"movie_year": {"description": "The year to filter movies by. Defaults to None.", "type": "int, optional", "default": ""}}}
{"name": "business_photos", "description": "Fetches photos of a business using its unique Business Id through the RapidAPI service.", "parameters": {"business_id": {"description": "The unique identifier of the business. This can be a google_id, business_id, or google_place_id. Examples of valid IDs include `0x880fd393d427a591:0x8cba02d713a995ed` and `ChIJkaUn1JPTD4gR7ZWpE9cCuow`.", "type": "str", "default": "0x89c259b5a9bd152b:0x31453e62a3be9f76"}, "limit": {"description": "The maximum number of business photos to return. Acceptable values range from 1 to 10000. Defaults to 5.", "type": "int, optional", "default": "5"}, "fields": {"description": "A comma-separated list of photo fields to include in the response. By default, all fields are returned. Example: `type,photo_url`.", "type": "str, optional", "default": ""}, "region": {"description": "The region or country from which to query Google Maps. For a list of supported region/country codes, see https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes (Alpha-2 code). Defaults to 'us'.", "type": "str, optional", "default": "us"}}}
{"name": "search_countries_by_idd", "description": "Searches for countries using their International Direct Dialing (IDD) number.", "parameters": {"idd": {"description": "International Direct Dialing number, starting with '+'.", "type": "str", "default": 91}, "limit": {"description": "The maximum number of records to return in a single page. Defaults to 10.", "type": "int, optional", "default": 10}, "offset": {"description": "The page number from which the search should continue, zero-indexed. Defaults to 0.", "type": "int, optional", "default": 0}, "fields": {"description": "Comma-separated list of fields to filter the response. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "commune_par_nom", "description": "Fetch one or more communes by their name, with exact or partial matching.", "parameters": {"nom": {"description": "The name of the commune to search for. Defaults to 'poum'.", "type": "str, optional", "default": "poum"}}}
{"name": "get_images_by_productid_siteid_zappos_1_6pm_2", "description": "Fetch images for a given product ID and site ID from the Zappos API.", "parameters": {"siteid": {"description": "The site ID (1 for Zappos, 2 for 6pm).", "type": "int", "default": "1"}, "productid": {"description": "The product ID for which images are to be fetched.", "type": "int", "default": "8609549"}}}
{"name": "offers", "description": "This function retrieves a list of offers for a product identified by the `is_id` parameter from a price comparison API. Latitude, longitude, country, and the API key can be optionally provided to refine the search.", "parameters": {"is_id": {"description": "An identifier for the product, which can be any of the following: UPC, EAN, ISBN, GTIN, or Amazon ASIN.", "type": "str", "default": "611247373064"}, "latitude": {"description": "The latitude for the location filter. Defaults to '37.777805'.", "type": "str, optional", "default": "37.777805"}, "longitude": {"description": "The longitude for the location filter. Defaults to '-122.49493'.", "type": "str, optional", "default": "-122.49493"}, "country": {"description": "The country code for the location filter. Defaults to 'US'.", "type": "str, optional", "default": "US"}}}
{"name": "get_latest_activity_by_id", "description": "Retrieves the most recent activity associated with a given ID from the Steam Market and Store API.", "parameters": {"is_id": {"description": "The specific ID to fetch the latest activity for.", "type": "str", "default": "730---Dreams %26 Nightmares Case"}}}
{"name": "video_post_comments", "description": "Fetches comments for a specified video post from the TikTok API.", "parameters": {"video_id": {"description": "The ID of the video for which to fetch comments.", "type": "str", "default": "7137423965982592302"}, "fresh": {"description": "Set to 1 to force the API to return fresh data (not cached). Defaults to 0.", "type": "int, optional", "default": "0"}, "limit": {"description": "Number of comments to return. Defaults to 50. Maximum is 150.", "type": "int, optional", "default": "50"}, "max_cursor": {"description": "Pagination cursor for navigating through pages of comments. Defaults to 0.", "type": "int, optional", "default": "0"}}}
{"name": "generate_a_face", "description": "Generates a face image using an AI service and returns the result as a JSON object or text. It utilizes the Toolbench RapidAPI service.", "parameters": {"ai": {"description": "The AI model identifier to be used for face generation.", "type": "str", "default": "1"}}}
{"name": "headtoheadmatches", "description": "Fetches head-to-head match data for a specific E-Sports event using the provided custom ID.", "parameters": {"customid": {"description": "The custom ID of the E-Sports event for which head-to-head match data is required.", "type": "str", "default": "jTVcsXcZc"}}}
{"name": "side_dish_ingredient", "description": "Fetches a random side dish recipe containing a specific ingredient using the Toolbench RapidAPI.", "parameters": {"ingredient": {"description": "The specific ingredient to be included in the side dish recipe.", "type": "str", "default": "potato"}}}
{"name": "music_metadata", "description": "Fetch metadata for a given music track from TikTok.", "parameters": {"music": {"description": "The TikTok music URL. For example: 'https://www.tiktok.com/music/Streets-x-Kiss-it-better-7090403288818584347'.", "type": "str", "default": "https://www.tiktok.com/music/Streets-x-Kiss-it-better-7090403288818584347"}, "fresh": {"description": "Set to 1 to force the API to return fresh data instead of cached data. Defaults to 0.", "type": "int, optional", "default": "0"}}}
{"name": "get_misinformation_score_account_twitter_account_get", "description": "Retrieves the misinformation score for a given Twitter account using the Mescal API.", "parameters": {"twitter_account": {"description": "The Twitter account ID for which to retrieve the misinformation score.", "type": "str", "default": "{}"}}}
{"name": "get_channel_broadcaster_type", "description": "Fetch the broadcaster type of a Twitch channel using the given user ID.", "parameters": {"userid": {"description": "The user ID of the Twitch channel to get the broadcaster type for.", "type": "str", "default": "julie"}}}
{"name": "get_image", "description": "Retrieve an image by its file ID using the specified RapidAPI key.", "parameters": {"fileid": {"description": "The ID of the image file to retrieve.", "type": "str", "default": "639f7fda5ec4b33ef2e476b8"}}}
{"name": "states_details", "description": "Retrieves detailed information about a specific state using its ID.", "parameters": {"is_id": {"description": "The ID of the state for which to retrieve details.", "type": "str", "default": "4022"}}}
{"name": "shipping_id", "description": "Fetches shipping information from the AliExpress Unofficial API for a given shipping ID and optional parameters such as count, locale, country, and currency.", "parameters": {"is_id": {"description": "The ID of the shipping information to fetch.", "type": "int", "default": "4000886597329"}, "count": {"description": "The count of shipping records to fetch. Defaults to 1.", "type": "int, optional", "default": 1}, "locale": {"description": "Locale for the shipping information. Defaults to None.", "type": "str, optional", "default": ""}, "country": {"description": "Country for the shipping information. Defaults to None.", "type": "str, optional", "default": ""}, "currency": {"description": "Currency for the shipping information. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "event_managers", "description": "Fetch team managers by event ID using the Sofasport API.", "parameters": {"event_id": {"description": "The ID of the event for which to retrieve managers.", "type": "int", "default": "10236820"}}}
{"name": "list_of_leagues", "description": "Fetches a list of leagues for a given sport using the provided RapidAPI key.", "parameters": {"sport_id": {"description": "The ID of the sport for which to fetch the leagues.", "type": "int", "default": 1}}}
{"name": "comments", "description": "Fetch comments from a YouTube video using the provided video ID.", "parameters": {"is_id": {"description": "The YouTube video ID to fetch comments for.", "type": "str", "default": "dQw4w9WgXcQ"}, "sort_by": {"description": "Criteria to sort comments by. Options are \"top\" or \"new\". Defaults to \"top\".", "type": "str, optional", "default": "top"}}}
{"name": "get_rsi_by_pairs", "description": "Fetches the Relative Strength Index (RSI) indicator for specified trading pairs from Binance using the given timeframe.", "parameters": {"pairs": {"description": "Trading pairs to get the RSI for, quoted in USDT, BTC, ETH, or BNB, separated by commas and in uppercase.", "type": "str", "default": "BTCUSDT,ETHUSDT,LTCBTC,XRPETH"}, "timeframe": {"description": "The timeframe to calculate the RSI. Available options are:", "type": "str", "default": "1h"}}}
{"name": "eps_revisions", "description": "Fetches analysts’ revisions of a company's future quarterly and annual earnings per share (EPS) from the last week and month.", "parameters": {"symbol": {"description": "The stock symbol of the company.", "type": "str", "default": ""}, "exchange": {"description": "Filter by exchange name or mic code. Defaults to None.", "type": "str, optional", "default": ""}, "country": {"description": "Filter by country name or alpha code. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "company_cash_flow", "description": "Fetch public company's quarterly or annual cash flow information.", "parameters": {"period": {"description": "The period for which to retrieve the company's cash flow. Valid values are 'QUARTERLY' or 'ANNUAL'.", "type": "str", "default": ""}, "symbol": {"description": "The stock symbol (ticker) of the company. Examples include 'MSFT', 'AAPL', or 'MSFT:NASDAQ'.", "type": "str", "default": "AAPL:NASDAQ"}, "language": {"description": "The language to use for the results, specified as a 2-letter language code according to ISO 639-1 standards. Defaults to 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "rate_by_id", "description": "Fetches the rate for a given cryptocurrency ID using the Crypto Exchanges API.", "parameters": {"is_id": {"description": "The ID of the cryptocurrency to fetch the rate for.", "type": "str", "default": "bitcoin"}}}
{"name": "wrt_transformer", "description": "Fetches the relevance ranking of specified topics based on the given text using the Walnut Topic Transformer API.", "parameters": {"text": {"description": "The input text on which the topic relevance will be assessed.", "type": "str", "default": "My tablet is not working and I want a refund as soon as possible!"}, "topics": {"description": "A comma-separated string of topics to rank based on their relevance to the given text.", "type": "str", "default": "furniture,eletronics,books,billing,promotion,urgent,design"}}}
{"name": "spellout", "description": "Spells out a given number in the specified language using the provided rule set.", "parameters": {"data": {"description": "The number to be spelled out.", "type": "int", "default": 123}, "lang": {"description": "The 2-letter ISO 639 language code specifying the language in which the number will be spelled out. Use the `/v1/languages` endpoint to list all supported languages.", "type": "str", "default": "en"}, "ruleset": {"description": "The name of the rule set to use for spelling out the number. Use the `/v1/rulesets` endpoint to list all supported rule sets for any given language.", "type": "str", "default": "spellout-cardinal"}}}
{"name": "languagedetection", "description": "Detect the language of a given text using the specified RapidAPI key and return the detected language code.", "parameters": {"text": {"description": "The text for which the language needs to be detected.", "type": "str", "default": "How to Identify the Language of any Text"}}}
{"name": "profile_publications", "description": "Fetches publications from an Instagram profile using the RapidAPI Instagram Scraper.", "parameters": {"username": {"description": "The Instagram username to fetch publications for. Default is 'kimkardashian'.", "type": "str", "default": "kimkardashian"}, "nextmaxid": {"description": "The nextMaxId parameter for pagination in Instagram API. Default is None.", "type": "str, optional", "default": ""}}}
{"name": "v1_holidays", "description": "Fetches holidays for a given year and country using the API Ninjas Holidays endpoint.", "parameters": {"year": {"description": "Calendar year between 2010 and 2030 (inclusive). Note: not all countries are guaranteed to have data going back to 2010.", "type": "int", "default": "2021"}, "country": {"description": "Country name or ISO 3166-2 country code (preferred).", "type": "str", "default": "us"}, "type": {"description": "Holiday type filter. Possible values include:", "type": "str, optional", "default": "federal_holiday"}}}
{"name": "get_hebrew_month_and_date", "description": "Fetches the Hebrew month, date, and holidays for a given Gregorian date.", "parameters": {"datestring": {"description": "The Gregorian date in string format for which to get the Hebrew date and related information.", "type": "str", "default": "2021-03-30"}}}
{"name": "normalize", "description": "Normalizes the given email address using the RapidAPI email utilities service.", "parameters": {"email": {"description": "The email address to be normalized.", "type": "str", "default": "cognitive.camp@gmail.com"}}}
{"name": "get_an_answer_to_your_question", "description": "Fetches an answer to an Islamic question using the Islam&AI bot from the provided API.", "parameters": {"question": {"description": "The Islamic question to be answered.", "type": "str", "default": "What is Islam?"}}}
{"name": "v4_sports_sport_odds", "description": "Fetches a list of live and upcoming games for a given sport, displaying bookmaker odds for the specified regions and markets.", "parameters": {"sport": {"description": "The sport key for which to return games and odds. If `sport` is set to 'upcoming', it will return the next 8 upcoming games across all sports and any live games.", "type": "str", "default": "upcoming"}, "regions": {"description": "Comma-delimited list of regions to determine which bookmakers appear in the response. Each region will count as 1 request against the usage quota for each market.", "type": "str", "default": "us"}, "oddsformat": {"description": "Format of the returned odds. Defaults to 'decimal'.", "type": "str, optional", "default": "decimal"}, "markets": {"description": "Comma-delimited list of odds markets to return. Defaults to 'h2h,spreads'. Note that each market counts as 1 request against the usage quota.", "type": "str, optional", "default": "h2h,spreads"}, "dateformat": {"description": "Format of the returned timestamps. Can be 'iso' (ISO8601) or 'unix' timestamp (seconds since epoch). Defaults to 'iso'.", "type": "str, optional", "default": "iso"}}}
{"name": "trending", "description": "Fetches trending YouTube videos for a specific category and country using the Toolbench RapidAPI.", "parameters": {"type": {"description": "The category of trending videos. Can be 'default', 'music', 'gaming', or 'movies'. Defaults to 'gaming'.", "type": "str, optional", "default": "gaming"}, "country": {"description": "The country code for which to retrieve trending videos, e.g., 'US', 'DE', 'JP'. Defaults to 'US'.", "type": "str, optional", "default": "US"}}}
{"name": "creditcards", "description": "Fetches a specified number of credit card details in a given locale using the RapidAPI service.", "parameters": {"quantity": {"description": "The number of credit card details to retrieve.", "type": "int", "default": 100}, "locale": {"description": "The locale to use for generating credit card details (e.g., 'en_US').", "type": "str", "default": "en_US"}}}
{"name": "checker", "description": "Checks the domain details for a given URL using the Toolbench RapidAPI.", "parameters": {"url": {"description": "The URL of the domain to be checked.", "type": "str", "default": "https://rapidapi.com/"}}}
{"name": "transform_units_using_the_get_method", "description": "Converts units using the GET method of the Unit Converter API.", "parameters": {"to": {"description": "The unit to which the value will be converted. Default is 'Square mile'.", "type": "str", "default": "Square mile"}, "type": {"description": "The type of conversion (e.g., 'area', 'length'). Default is 'area'.", "type": "str", "default": "area"}, "is_from": {"description": "The unit from which the value will be converted. Default is 'Square kilometer'.", "type": "str", "default": "Square kilometer"}, "value": {"description": "The numerical value to be converted. Default is 1.", "type": "int", "default": "1"}}}
{"name": "search_company_by_name", "description": "Search for company information by name using the RapidAPI service.", "parameters": {"page": {"description": "The page number for paginated results.", "type": "int", "default": "1"}, "limit": {"description": "The maximum number of results per page.", "type": "int", "default": "10"}, "companyname": {"description": "The name of the company to search for.", "type": "str", "default": "ESK GLOBAL SERVICES LIMITED"}}}
{"name": "list_target_languages", "description": "Retrieves a paginated list of target languages from the API.", "parameters": {"page": {"description": "Return search results starting at a given page. Defaults to 1.", "type": "int, optional", "default": "1"}, "per_page": {"description": "Number of entries to be returned per page. Only values between 1 and 100 (inclusive) are allowed. Defaults to 100.", "type": "int, optional", "default": "100"}}}
{"name": "get_companies_by_sic_code", "description": "Retrieve a list of the top 100 companies related to a specified SIC code using the Toolbench RapidAPI service.", "parameters": {"sic_code": {"description": "The Standard Industrial Classification (SIC) code used to lookup companies.", "type": "int", "default": "7374"}}}
{"name": "get_ip_geolocation", "description": "Fetches the geolocation information for a given IP address using the Toolbench RapidAPI service. If no IP address is specified, it returns the geolocation information for the client's IP address.", "parameters": {"ip": {"description": "The IP address to get geolocation information for. Defaults to '206.71.50.230'.", "type": "str", "default": "206.71.50.230"}}}
{"name": "recitations_by_page_number", "description": "Fetches a list of ayah recitations for a given Madani Mushaf page.", "parameters": {"recitation_id": {"description": "The identifier for the specific recitation.", "type": "int", "default": ""}, "page_number": {"description": "The page number in the Madani Mushaf for which ayah recitations are to be fetched.", "type": "int", "default": ""}}}
{"name": "get_all_imbuements_items", "description": "Fetch all imbuement items for a specified Tibia game world using the RapidAPI endpoint.", "parameters": {"world": {"description": "The name of the Tibia game world for which to fetch imbuement items.", "type": "str", "default": "Bona"}}}
{"name": "top_players_by_royal", "description": "Fetch the top players by their royal rank from the Trackmania API.", "parameters": {"page": {"description": "The result page, each containing 50 results. Default page is `0`.", "type": "int, optional", "default": "0"}, "limit": {"description": "The number of results to return. Default limit is `50`.", "type": "int, optional", "default": "50"}}}
{"name": "bet365_upcoming_events", "description": "Retrieves upcoming sports events from Bet365 based on the given parameters.", "parameters": {"sport_id": {"description": "The ID of the sport to get upcoming events for.", "type": "int", "default": ""}, "day": {"description": "The specific day to get events for. Defaults to None.", "type": "int, optional", "default": ""}, "league_id": {"description": "The ID of the league to filter events. Defaults to None.", "type": "int, optional", "default": ""}, "page": {"description": "The page number for pagination. Defaults to None.", "type": "int, optional", "default": ""}}}
{"name": "getfavouriteschamps", "description": "Fetches the favorite champions data from the specified RapidAPI endpoint.", "parameters": {"skinname": {"description": "The skin name to include in the query parameters. Defaults to 'betbiga'.", "type": "str, optional", "default": "betbiga"}}}
{"name": "query_horses", "description": "Queries horses by name using the Horse Racing API and returns the results.", "parameters": {"name": {"description": "The name of the horse to search for. Must be a minimum of 3 characters.", "type": "str", "default": "ZANAHIYR"}}}
{"name": "get_all_family_by_brand_name", "description": "Fetches all family names associated with a given brand name from the watch database via the RapidAPI service.", "parameters": {"brandname": {"description": "The name of the brand for which to fetch family names.", "type": "str", "default": "Omega"}}}
{"name": "search_cars_locations", "description": "Searches for car rental locations by a given name using the Priceline API.", "parameters": {"name": {"description": "The name of the location to search for.", "type": "str", "default": "London"}}}
{"name": "gas_price", "description": "Fetches the current gas price for a specified blockchain using a single API call.", "parameters": {"chain": {"description": "The blockchain to get the current gas price for. Supported values are listed above. If not specified, the default value is None.", "type": "str, optional", "default": ""}}}
{"name": "get_coin_supply", "description": "Fetch the maximum, total, and circulating supply of a cryptocurrency by its UUID.", "parameters": {"uuid": {"description": "The UUID of the coin for which the supply information is requested.", "type": "str", "default": "Qwsogvtv82FCd"}}}
{"name": "type_price_get_other_fees", "description": "Fetches other fees information for a specific security type from the Morning Star API.", "parameters": {"type": {"description": "The type of security, either 'etf' or 'fund'.", "type": "str", "default": "etf"}, "securityid": {"description": "The unique identifier of the security.", "type": "str", "default": "F00000O2CG"}}}
{"name": "analyze", "description": "Analyzes the page speed of a given URL using the specified strategy and category.", "parameters": {"url": {"description": "The URL of the page to be analyzed.", "type": "str", "default": "https://google.com"}, "strategy": {"description": "The strategy to use, either 'desktop' or 'mobile'. Default is None.", "type": "str, optional", "default": ""}, "category": {"description": "The category for which to analyze, options include 'accessibility', 'best-practices', 'performance', 'seo', and 'pwa'. Default is 'performance'.", "type": "str, optional", "default": ""}}}
{"name": "video_search_api", "description": "Performs a search on the Petey Vid index using specified parameters and the Petey Vid Video Search API.", "parameters": {"q": {"description": "The query string for the search (e.g., keywords or phrases).", "type": "str", "default": "trump"}, "dur": {"description": "The duration filter for the search (e.g., 'short', 'medium', 'long'). Defaults to None.", "type": "str, optional", "default": ""}, "sort": {"description": "The sort order for the search results (e.g., 'relevance', 'date'). Defaults to None.", "type": "str, optional", "default": ""}, "media": {"description": "The media filter for the search results, typically indicating media type (default is 'Y'). Defaults to 'Y'.", "type": "str, optional", "default": "Y"}}}
{"name": "update_level", "description": "Updates the difficulty level of a specific riddle using the Riddle API.", "parameters": {"is_id": {"description": "The unique identifier of the riddle to be updated.", "type": "str", "default": "63bdef027183b71946b64ee6"}, "level": {"description": "The suggested difficulty level of the riddle. Can be \"0\" (Easy), \"1\" (Medium), or \"2\" (Hard). Defaults to \"1\".", "type": "str, optional", "default": "1"}}}
{"name": "v1_timezone", "description": "Fetches the timezone name for the specified input location using the API Ninjas Timezone API.", "parameters": {"state": {"description": "US state name or 2-letter abbreviation (for United States cities only).", "type": "str, optional", "default": ""}, "lon": {"description": "Longitude of the desired location.", "type": "str, optional", "default": ""}, "city": {"description": "City name. Defaults to 'London'.", "type": "str, optional", "default": "London"}, "lat": {"description": "Latitude of the desired location.", "type": "str, optional", "default": ""}, "country": {"description": "Country name or 2-letter country code.", "type": "str, optional", "default": ""}}}
{"name": "latest_retrieve_selected_160_symbols", "description": "Fetches the latest real-time prices for the requested metal symbols.", "parameters": {"requestedsymbols": {"description": "A string representing the metal symbols for which the prices are requested.", "type": "str", "default": "XAU,XAG,PA,PL,GBP,EUR"}}}
{"name": "prediction", "description": "Predict the next periods of a time series using given dates and values.", "parameters": {"periods": {"description": "Number of future periods to predict.", "type": "int", "default": "1"}, "values": {"description": "Historical values of the time series data in a comma-separated string.", "type": "str", "default": "[281.5,244.8,382.1]"}, "dates": {"description": "Corresponding dates of the historical values in a comma-separated string.", "type": "str", "default": "['2023-01-01', '2023-01-02', '2023-01-03'] "}}}
{"name": "get_profile_by_slug", "description": "Fetch a specific coin profile by its slug, optionally including various additional details.", "parameters": {"slug": {"description": "The slug identifier for the cryptocurrency.", "type": "str", "default": "bitcoin"}, "explorers": {"description": "If True, includes the list of blockchain explorers for the coin. Defaults to None.", "type": "bool, optional", "default": "false"}, "community": {"description": "If True, includes community metrics related to the coin. Defaults to None.", "type": "bool, optional", "default": "false"}, "repo": {"description": "If True, includes source code repository stats related to the coin. Defaults to None.", "type": "bool, optional", "default": "false"}, "contracts": {"description": "If True, includes smart contract and audit details related to the coin. Defaults to None.", "type": "bool, optional", "default": "false"}, "news": {"description": "If True, includes the latest 5 news stories related to the coin. Defaults to None.", "type": "bool, optional", "default": "false"}, "flags": {"description": "If True, includes red flags associated with the coin. Defaults to None.", "type": "bool, optional", "default": "false"}, "exchanges": {"description": "If True, includes the list of exchanges where the coin is traded. Defaults to None.", "type": "bool, optional", "default": "false"}, "links": {"description": "If True, includes links to social media profiles and project websites. Defaults to None.", "type": "bool, optional", "default": "false"}, "tags": {"description": "If True, includes tags related to the coin. Defaults to None.", "type": "bool, optional", "default": "false"}}}
{"name": "slovakia_songs", "description": "Fetches Slovakia Songs chart information for a given date range.", "parameters": {"range": {"description": "The range of songs to retrieve from the chart.", "type": "str", "default": "1-10"}, "date": {"description": "The date for which to retrieve the chart information, in the format YYYY-MM-DD.", "type": "str", "default": "2022-05-07"}}}
{"name": "suggest", "description": "Fetches autocomplete suggestions for a given search keyword using the specified API endpoint.", "parameters": {"keyword": {"description": "The partial text entered by the user for which to fetch autocomplete suggestions.", "type": "str", "default": "facebook"}, "lr": {"description": "Language region for the suggestions, e.g., 'en-US'. Defaults to 'en-US'.", "type": "str, optional", "default": "en-US"}}}
{"name": "get_humidty", "description": "Fetches the humidity data for a specified city using the Toolbench RapidAPI.", "parameters": {"city": {"description": "The name of the city to get the humidity information for.", "type": "str", "default": "New York"}}}
{"name": "latest_observations", "description": "Fetches the latest weather observations for a given location using the Foreca Weather API.", "parameters": {"location": {"description": "The location for which to fetch the latest weather observations.", "type": "str", "default": "102643743"}, "lang": {"description": "The language in which the results should be returned. Defaults to 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "view_profile_picture", "description": "Retrieve the full HD profile picture of a specified Instagram user by their username.", "parameters": {"username": {"description": "The Instagram username of the user whose profile picture is to be retrieved.", "type": "str", "default": "instagram"}}}
{"name": "title_title", "description": "Fetches all poems from Poetry DB that match the specified title.", "parameters": {"title": {"description": "The title of the poem, or part of the title, to search for in the Poetry DB.", "type": "str", "default": "Sonnet 18"}}}
{"name": "linecount_linecount", "description": "Fetches all poems from the Poetry DB with a specific number of lines.", "parameters": {"linecount": {"description": "The number of lines in each poem to be fetched.", "type": "int", "default": "14"}}}
{"name": "list_all_categories", "description": "Fetches a list of categories with various search and filter parameters.", "parameters": {"limit": {"description": "The number of records to return. Defaults to 20.", "type": "int, optional", "default": 20}, "category_group_id": {"description": "The ID of the category group.", "type": "int, optional", "default": ""}, "dir": {"description": "The direction of the ordering. Defaults to 'asc'.", "type": "str, optional", "default": "asc"}, "topic": {"description": "The active topic of the conversation for a full term search.", "type": "str, optional", "default": ""}, "page": {"description": "The page number of results to start from. Defaults to 1.", "type": "int, optional", "default": 1}, "order": {"description": "The search field to order by. Defaults to 'id'.", "type": "str, optional", "default": "id"}, "that": {"description": "The previous bot output/response to match on for a partial search.", "type": "str, optional", "default": ""}, "template": {"description": "The raw output used to generate a response for a partial search.", "type": "str, optional", "default": ""}, "pattern": {"description": "The user input to match on for a partial search. Defaults to 'test'.", "type": "str, optional", "default": "test"}, "is_id": {"description": "The ID of the category.", "type": "int, optional", "default": ""}}}
{"name": "get_single_item", "description": "Fetches a single item from the Tibia items database for a given world and item name.", "parameters": {"world": {"description": "The name of the world to search in.", "type": "str", "default": "Bona"}, "nameitem": {"description": "The name of the item to fetch.", "type": "str", "default": "Sliver"}}}
{"name": "txt", "description": "Fetches a plain text blocklist of sites for a specified game using the StopModReposts API.", "parameters": {"game": {"description": "The name of the game for which to fetch the blocklist. Defaults to 'minecraft'.", "type": "str", "default": "minecraft"}}}
{"name": "provider", "description": "Fetches data from a specified provider using the RapidAPI service.", "parameters": {"provider": {"description": "The name of the data provider.", "type": "str", "default": "name"}, "amount": {"description": "The quantity of data to fetch from the provider.", "type": "int", "default": "3"}}}
{"name": "get_individual_articles", "description": "Retrieves individual articles from a specified newspaper using the RapidAPI service.", "parameters": {"newspaperid": {"description": "The unique identifier for the newspaper from which to retrieve the articles.", "type": "str", "default": "thetimes"}}}
{"name": "get_score_by_id", "description": "Fetches a score by `score_id` from the FluentMe API, optionally scaling the score based on the given `scale` parameter.", "parameters": {"score_id": {"description": "The unique identifier of the score to fetch.", "type": "str", "default": "S38392182"}, "scale": {"description": "The maximum number of points for the recording and each word. Defaults to 90.", "type": "int, optional", "default": "90"}}}
{"name": "getcommunities", "description": "Fetches Power BI communities data for a given page using the RapidAPI service.", "parameters": {"page": {"description": "The page number of communities to retrieve.", "type": "int", "default": "1"}}}
{"name": "raceresult", "description": "Fetches the result for a specific Formula 1 race in a given season.", "parameters": {"round": {"description": "The round number or name of the race in the F1 season.", "type": "str", "default": "round"}, "year": {"description": "The year of the F1 season.", "type": "str", "default": "year"}}}
{"name": "schedules", "description": "Fetch the golf schedule for the specified organization and year.", "parameters": {"orgid": {"description": "Identifier for the golf organization. Choose '1' for PGA Tour or '2' for LIV Tour.", "type": "str", "default": ""}, "year": {"description": "The year for which the schedule is being requested.", "type": "str", "default": "2022"}}}
{"name": "bin_iin_lookup", "description": "Lookup and retrieve issuer card information using the BIN (Bank Identification Number).", "parameters": {"bin": {"description": "The first 6 digits of the credit or debit card used to identify the card issuer.", "type": "int", "default": "470886"}}}
{"name": "getmeaning", "description": "Retrieves the meaning of a given word using the Toolbench RapidAPI service.", "parameters": {"word": {"description": "The word for which to find the meaning.", "type": "str", "default": "apple"}}}
{"name": "get_token_forwarding_transactions", "description": "Fetch token forwarding transactions based on specified query parameters.", "parameters": {"updatedlt": {"description": "A timestamp to fetch transactions last updated before this time. Format: 'YYYY-MM-DD HH:MM:SS'.", "type": "str", "default": "2022-01-11 06:08:17"}, "updatedgte": {"description": "A timestamp to fetch transactions last updated after this time. Format: 'YYYY-MM-DD HH:MM:SS'.", "type": "str", "default": "2023-01-10 06:08:17"}, "is_id": {"description": "An identifier to fetch specific transactions.", "type": "str", "default": "dfe02338-43ae-453f-bd51-6f0ea98e4df9"}, "offset": {"description": "The number of items to skip before starting to collect the result set. Default is 0.", "type": "int", "default": "0"}, "limit": {"description": "The maximum number of items to return. Default is 100.", "type": "int", "default": "100"}}}
{"name": "zappos_product_detail_by_product_id", "description": "Fetches real-time product information from Zappos by product ID.", "parameters": {"product_id": {"description": "The ID of the product to be fetched.", "type": "int", "default": "9098084"}}}
{"name": "get_the_current_stock_by_exchange_code_and_stock_code", "description": "Fetch the current stock data using the given exchange code and stock code from an API.", "parameters": {"stockcode": {"description": "The stock code of the desired stock.", "type": "str", "default": "GOOG"}, "exchangecode": {"description": "The exchange code where the stock is listed.", "type": "str", "default": "NASDAQ"}}}
{"name": "key_metrics", "description": "Fetches either annual or quarterly key metrics for a single stock company.", "parameters": {"symbol": {"description": "The ticker symbol of the stock company.", "type": "str", "default": "AAPL"}, "period": {"description": "The period for which to fetch metrics, either 'annual' or 'quarterly'.", "type": "str", "default": "annual"}}}
{"name": "business_phone_search", "description": "Search for relevant businesses in the Data Axle database based on the given parameters.", "parameters": {"limit": {"description": "The maximum number of results to return.", "type": "str", "default": "20"}, "query": {"description": "The search query for finding businesses.", "type": "str", "default": "4162287300"}, "packages": {"description": "The specific data packages to include in the search.", "type": "str", "default": "standard_v1"}}}
{"name": "get_artists", "description": "Fetches information about one or more artists from the Spotify API.", "parameters": {"ids": {"description": "A comma-separated string of artist IDs for which information is to be fetched.", "type": "str", "default": "2w9zwq3AktTeYYMuhMjju8"}}}
{"name": "apgar", "description": "Makes a request to the APGAR scoring API and returns the observation result in JSON format.", "parameters": {"respirationscore": {"description": "Score for the respiratory effort.", "type": "str", "default": ""}, "skincolorscore": {"description": "Score for the baby's skin color.", "type": "str", "default": ""}, "heartrateinbpm": {"description": "Heart rate of the baby in beats per minute.", "type": "int", "default": ""}, "responsetoirritablestimuliscore": {"description": "Score for the baby's response to irritable stimuli.", "type": "str", "default": ""}, "activityscore": {"description": "Score for the baby's muscle tone and activity.", "type": "str", "default": ""}}}
{"name": "triage_virtual", "description": "Determines if a patient should be attended via virtual consultation or in-person consultation based on their ID.", "parameters": {"is_id": {"description": "The unique identifier of the patient.", "type": "str", "default": "me duele la cabeza"}}}
{"name": "github", "description": "Checks if a given GitHub username is available using the Toolbench RapidAPI service.", "parameters": {"username": {"description": "The GitHub username to check.", "type": "str", "default": "username"}}}
{"name": "generate_document_cover_letter", "description": "Generates a cover letter document based on the provided job description and personal information using the AI Resume Generator API.", "parameters": {"jobdescription": {"description": "Description of the job position. Default is \"Example Co. is looking for a Full Stack Web Developer to maintain and improve our custom web application. The solutions will require both frontend and backend skills. Our web application runs on a LEMP stack. LEMP stack experience is a bonus, but not required.\"", "type": "str", "default": "Example Co. is looking for a Full Stack Web Developer to maintain and improve our custom web application. The solutions will require both frontend and backend skills. Our web application runs on a LEMP stack. LEMP stack experience is a bonus, but not required."}, "degree": {"description": "Your degree. Default is \"Information Systems\".", "type": "str", "default": "Information Systems"}, "university": {"description": "Name of the university where you obtained your degree. Default is \"Michigan State University\".", "type": "str", "default": "Michigan State University"}, "skills": {"description": "List of relevant skills. Default is \"Networking, Web Development\".", "type": "str", "default": "Networking, Web Development"}, "jobtitle": {"description": "Title of the job you are applying for. Default is \"Full Stack Web Developer\".", "type": "str", "default": "Full Stack Web Developer"}}}
{"name": "article_page", "description": "Fetches a page of articles based on the provided page ID, with an optional limit on the number of articles returned and a specified RapidAPI key.", "parameters": {"is_id": {"description": "The ID of the page to fetch articles from.", "type": "int", "default": "1"}, "limit": {"description": "The maximum number of articles to retrieve. Defaults to 10.", "type": "int, optional", "default": "10"}}}
{"name": "ufc_fight_night_vettori_vs_cannonier_june_17_2023", "description": "Accesses information about the UFC Fight Night: Vettori vs. Cannonier held on June 17, 2023, including details like win-loss record, height, weight, reach, and age of the fighters. The function retrieves this data from the MMA Stats API.", "parameters": {"offset": {"description": "The starting point for the range of data to fetch. Defaults to None.", "type": "int, optional", "default": ""}, "limit": {"description": "The maximum number of records to fetch. Defaults to None.", "type": "int, optional", "default": ""}}}
{"name": "get_horoscope_multilingual", "description": "Fetches horoscope information in the specified language for a given sign, period, and type.", "parameters": {"language": {"description": "The language for the horoscope. Supported languages are:", "type": "str", "default": ""}, "period": {"description": "The period for which the horoscope is requested (e.g., 'daily', 'weekly').", "type": "str", "default": ""}, "sign": {"description": "The astrological sign for which the horoscope is requested (e.g., 'aries', 'taurus').", "type": "str", "default": ""}, "type": {"description": "The type of horoscope information to be fetched, depending on the period. Use the **Get Types** method to get available types for the selected period.", "type": "str", "default": "general"}}}
{"name": "pinterest", "description": "Checks the availability of a Pinterest username using the Toolbench RapidAPI service.", "parameters": {"username": {"description": "The Pinterest username to check for availability.", "type": "str", "default": "username"}}}
{"name": "gen_image", "description": "Generates an image based on specified parameters by making a request to the Thai Lottery Result Image API.", "parameters": {"date": {"description": "The date for which to generate the image. Defaults to '01062564'.", "type": "str", "default": "01062564"}, "bgimg": {"description": "The background image to use. Optional.", "type": "str", "default": ""}, "rmber": {"description": "A flag indicating whether certain elements (like numbers) should be removed. Optional.", "type": "bool", "default": "1"}}}
{"name": "options_stock", "description": "Fetch option data for a specific stock, ETF, or index.", "parameters": {"symbol": {"description": "The stock symbol to retrieve option data for. Default is 'AAPL'.", "type": "str", "default": "AAPL"}, "expiration": {"description": "The expiration date for the options in UNIX timestamp format. Default is '1705622400'.", "type": "str", "default": "1705622400"}}}
{"name": "latest_in_chosen_currency", "description": "Fetches real-time metal prices for the requested symbols in the specified currency using the RapidAPI service.", "parameters": {"requestedsymbols": {"description": "Symbols of the metals for which the prices are requested (e.g., 'gold', 'silver').", "type": "str", "default": "XAU,XAG,PA,PL,GBP,EUR"}, "requestedcurrency": {"description": "The currency in which the metal prices should be returned (e.g., 'USD', 'EUR').", "type": "str", "default": "EUR"}}}
{"name": "leagueplayersstatistics", "description": "Fetches player statistics for a specific Football league and season based on the given parameters.", "parameters": {"limit": {"description": "Number of players to include per page.", "type": "int", "default": 20}, "page": {"description": "One-based page number.", "type": "int", "default": 1}, "seasonid": {"description": "ID of the season to retrieve player statistics for.", "type": "int", "default": 36886}, "tournamentid": {"description": "Unique ID of the tournament to retrieve player statistics for.", "type": "int", "default": 7}, "minapps": {"description": "If set to True, only includes players with a minimum number of appearances.", "type": "bool, optional", "default": ""}, "order": {"description": "Sorting order of the response properties. Default is '-rating'. Prefix with '-' for descending order, leave as is for ascending.", "type": "str, optional", "default": "-rating"}, "filters": {"description": "Filters to apply, such as player position, match type, appearances, age, preferred foot, team, and nationality. See the noisy docstring for detailed filter options.", "type": "str, optional", "default": ""}, "accumulation": {"description": "Type of accumulation. Choices are 'total', 'perGame', or 'per90'. Default is 'total'.", "type": "str, optional", "default": "total"}, "group": {"description": "Statistic group to retrieve. Choices are 'summary', 'attack', 'defence', 'passing', 'goalkeeper'. Default is 'summary'.", "type": "str, optional", "default": "summary"}, "fields": {"description": "Specific fields to include, up to 6. Only used when not specifying a group. Field options include 'successfulDribblesPercentage', 'goals', 'blockedShots', etc.", "type": "str, optional", "default": ""}}}
{"name": "tournamentdetailsbyid", "description": "Retrieves tournament details using a unique tournament ID.", "parameters": {"uniquetournamentid": {"description": "The unique identifier for the tournament.", "type": "int", "default": "23"}}}
{"name": "etsy", "description": "Checks if a given username is available on Etsy using the Toolbench RapidAPI service.", "parameters": {"username": {"description": "The username to be checked for availability on Etsy.", "type": "str", "default": "username"}}}
{"name": "aliexpress_item_detail_2", "description": "Fetch detailed information for a specific AliExpress item.", "parameters": {"itemid": {"description": "The AliExpress product ID.", "type": "int", "default": "3256804591426248"}, "currency": {"description": "The currency in which to display the product price. Valid values are listed in the '**Currency List**' at the '**Base**' group endpoints.", "type": "str, optional", "default": ""}, "region": {"description": "The region to accurately get shipping costs and other promotions specific to a geographic location. Valid values are listed in the '**Country List**' at the '**Base**' group endpoints.", "type": "str, optional", "default": ""}, "locale": {"description": "The locale to display titles and other content in the selected language. Valid values are listed in the '**Locale List**' at the '**Base**' group endpoints.", "type": "str, optional", "default": ""}}}
{"name": "bestbuyproductdata", "description": "Fetches product data from Best Buy based on the search keyword and page number.", "parameters": {"keyword": {"description": "The search term to look for products, e.g., \"iphone\", \"ps5\", \"sony tv\".", "type": "str", "default": "iphone"}, "page": {"description": "The page number to retrieve, starting from 1.", "type": "int", "default": "1"}}}
{"name": "schedule_date", "description": "Fetches the baseball game schedule for a given date using the specified RapidAPI key.", "parameters": {"date": {"description": "The date in the format 'YYYY-MM-DD' for which to fetch the baseball schedule. Defaults to '2021-07-30'.", "type": "str", "default": "2021-07-30"}}}
{"name": "ip_geolocation_lookup", "description": "Fetch geolocation data for a given IPv4 address using the RapidAPI IP geolocation lookup service.", "parameters": {"ip": {"description": "The IPv4 address for which geolocation data is to be retrieved.", "type": "str", "default": "193.114.112.1"}}}
{"name": "get_the_addresses_by_ip", "description": "Fetches the address information for a given IP address using the RapidAPI service.", "parameters": {"ip": {"description": "The IP address to lookup. Default is '54.72.54.234'.", "type": "str", "default": "54.72.54.234"}}}
{"name": "search_for_region", "description": "Search for location suggestions based on a given keyword using the RapidAPI realtor16 endpoint.", "parameters": {"location": {"description": "The keyword or location name to search for suggestions.", "type": "str", "default": "santa monica"}}}
{"name": "get_quote_by_id", "description": "Fetches quote information by ID from the RapidAPI Quotes API.", "parameters": {"is_id": {"description": "The ID of the quote to retrieve.", "type": "str", "default": "10"}}}
{"name": "user_medias", "description": "Fetches media posts for a specified Instagram user.", "parameters": {"user_id": {"description": "The Instagram user ID for which to fetch media posts.", "type": "str", "default": "13460080"}, "next_max_id": {"description": "Pagination parameter for fetching the next set of media posts. Default is None.", "type": "str, optional", "default": ""}}}
{"name": "paragraph", "description": "Generates a specified amount of Lorem Ipsum paragraphs using the RapidAPI Lorem Ipsum API.", "parameters": {"amount": {"description": "The number of Lorem Ipsum paragraphs to generate. Defaults to 2.", "type": "int, optional", "default": "2"}}}
{"name": "retrieve_rewards", "description": "Retrieve the bid rewards for a specific collection using Blur API.", "parameters": {"slug": {"description": "The identifier for the specific collection to retrieve rewards for.", "type": "str", "default": "nakamigos"}}}
{"name": "generate_litecoin_wallet", "description": "Generate a BIP44 compatible Litecoin wallet using a given mnemonic phrase and a RapidAPI key.", "parameters": {"mnemonic": {"description": "A mnemonic phrase consisting of 24 words, up to 500 characters. This phrase is used to generate extended public and private keys. If not provided, a default mnemonic is used.", "type": "str", "default": "next one hip dutch manage shock glide gospel arch vacuum ski biology hood tip wall invite flame cycle file clinic head among device autumn"}}}
{"name": "crypto_convert", "description": "Converts a specified amount from one cryptocurrency to another using the RapidAPI service.", "parameters": {"is_from": {"description": "The cryptocurrency to convert from (default is 'ETH').", "type": "str, optional", "default": "ETH"}, "to": {"description": "The cryptocurrency to convert to (default is 'BTC').", "type": "str, optional", "default": "BTC"}, "amount": {"description": "The amount of cryptocurrency to convert (default is '100').", "type": "str, optional", "default": "100"}}}
{"name": "google_images", "description": "Fetches JSON data of image results from Google Images based on a query and various optional parameters.", "parameters": {"query": {"description": "The search query for the images.", "type": "str", "default": "football"}, "gl": {"description": "The country to use for the search. Defaults to 'us'.", "type": "str, optional", "default": "us"}, "hl": {"description": "The language to use for the search. Defaults to 'en_us'.", "type": "str, optional", "default": "en_us"}, "duration": {"description": "The time duration for the search (e.g., 'd' for day, 'w' for week).", "type": "str, optional", "default": ""}, "chips": {"description": "Additional search filters.", "type": "str, optional", "default": ""}, "lr": {"description": "The language restriction for the search.", "type": "str, optional", "default": ""}, "ijn": {"description": "Index of the search results page. Defaults to '0'.", "type": "str, optional", "default": "0"}, "html": {"description": "If True, returns HTML content.", "type": "str, optional", "default": ""}, "uule": {"description": "Encoded location parameters.", "type": "str, optional", "default": ""}, "device": {"description": "The device to use for the search (e.g., 'desktop', 'mobile'). Defaults to 'desktop'.", "type": "str, optional", "default": "desktop"}, "safe": {"description": "Safe search setting.", "type": "str, optional", "default": ""}, "nfpr": {"description": "Filter option for non-personal results.", "type": "str, optional", "default": ""}, "tbs": {"description": "Additional search parameters.", "type": "str, optional", "default": ""}}}
{"name": "stateusaprice", "description": "Fetches gas prices for a given state in the United States using the Toolbench RapidAPI.", "parameters": {"state": {"description": "The two-letter abbreviation of the state for which to fetch gas prices.", "type": "str", "default": "WA"}}}
{"name": "remove_profanity", "description": "Removes profanity from the provided text using the PurgoMalum web service. Optionally, custom words can be added to the profanity list, and specific fill text or characters can be used to replace profanity.", "parameters": {"text": {"description": "Input text to be processed for profanity.", "type": "str", "default": "This is some test input"}, "add": {"description": "A comma-separated list of words to add to the profanity list. Accepts letters, numbers, underscores (_), and commas (,). Maximum 10 words or 200 characters. Defaults to None.", "type": "str, optional", "default": ""}, "fill_text": {"description": "Text used to replace any words matching the profanity list. Accepts letters, numbers, underscores (_), tildes (~), exclamation points (!), dashes/hyphens (-), equal signs (=), pipes (|), single quotes ('), double quotes (\"), asterisks (*), curly brackets ({ }), square brackets ([ ]), and parentheses (). Maximum length of 20 characters. Defaults to None.", "type": "str, optional", "default": ""}, "fill_char": {"description": "Single character used to replace any words matching the profanity list, filling to the length of the word replaced. Accepts underscore (_), tilde (~), dash/hyphen (-), equal sign (=), pipe (|), and asterisk (*). Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "get_from_piratebay", "description": "Fetches search results from The Pirate Bay using the given search topic.", "parameters": {"searchtopic": {"description": "The topic to search for on The Pirate Bay.", "type": "str", "default": ""}}}
{"name": "getinfo", "description": "Fetches information about a given mobile number using the Ajith Indian Mobile Info API.", "parameters": {"mobno": {"description": "A 10-digit mobile number to fetch information for.", "type": "int", "default": "9090909090"}}}
{"name": "specs_v1_tier1", "description": "Fetch vehicle data based on specified query parameters using the RapidAPI Datamo endpoint.", "parameters": {"make": {"description": "The make of the vehicle. This parameter is required.", "type": "str", "default": "Tesla"}, "sortby": {"description": "The field to sort the results by.", "type": "str, optional", "default": ""}, "order": {"description": "The sort order of the specified field.", "type": "str, optional", "default": ""}, "model": {"description": "The model of the vehicle.", "type": "str, optional", "default": "Model 3"}, "page": {"description": "The page number of the results, starting with index 1.", "type": "int, optional", "default": ""}, "per_page": {"description": "The number of entries per page. Default is 10, with a maximum of 250.", "type": "int, optional", "default": ""}, "fields": {"description": "Specific fields to return in the results. Leave blank to return all fields.", "type": "str, optional", "default": ""}}}
{"name": "us_ca", "description": "Fetches current or historical gas price data for California.", "parameters": {"date": {"description": "Specific date for historical data in YYYY-MM-DD format. If not provided, the current gas price data is returned. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "verify", "description": "Verifies an email address by normalizing it and optionally checking SMTP and suggesting a valid domain.", "parameters": {"email": {"description": "The email address to be verified.", "type": "str", "default": "cognitive.camp@gmail.com"}, "checksmtp": {"description": "Whether to check the SMTP server on port 25. Defaults to None.", "type": "bool, optional", "default": "false"}, "suggestdomain": {"description": "Whether to suggest a valid domain if the provided one is incorrect. Defaults to None.", "type": "bool, optional", "default": "false"}}}
{"name": "get_tamil_calendar_date", "description": "Fetches the Tamil calendar date corresponding to the given English calendar date using the Yawin Indian Astrology API.", "parameters": {"date": {"description": "The English calendar date in the format 'YYYY-MM-DD'.", "type": "str", "default": "2023-04-14"}}}
{"name": "cpfobliterado", "description": "This function searches for information about an obliterated CPF (Brazilian individual taxpayer registry identification) using the provided name and CPF. It utilizes the RapidAPI service to perform the lookup.", "parameters": {"nome": {"description": "The name of the partner or administrator.", "type": "str", "default": "WERNER ROMERA SUFFERT"}, "cpf": {"description": "The obliterated CPF code.", "type": "str", "default": "***960701**"}}}
{"name": "get_sessions", "description": "Fetch a list of chat sessions and their corresponding `session_id` for a given character.", "parameters": {"character_id": {"description": "The unique identifier of the character whose sessions are being retrieved.", "type": "str", "default": "938545c6-ac0e-423b-93ba-39159fbfb866"}, "page_size": {"description": "The number of sessions to retrieve per page. Defaults to 25.", "type": "int, optional", "default": "25"}, "page": {"description": "The page number to retrieve. Defaults to 1.", "type": "int, optional", "default": "1"}}}
{"name": "registration_check", "description": "Checks vehicle registration information using the RapidAPI service.", "parameters": {"rego": {"description": "The registration number of the vehicle to be checked.", "type": "str", "default": "CC831Y"}}}
{"name": "rarity_tools", "description": "Fetches collection items data from the Rarity Tools Collection Items Endpoint using the provided slug and RapidAPI key.", "parameters": {"slug": {"description": "The unique identifier for the collection to fetch data for.", "type": "str", "default": "women-ape-yacht-club"}}}
{"name": "live_fantasy_score", "description": "Fetches the live fantasy score for a specified cricket match.", "parameters": {"matchid": {"description": "The identifier for the match to fetch live scores.", "type": "str", "default": "1192"}}}
{"name": "matches_v2_get_pregame_form", "description": "Fetch pregame form information for competitors in a specified category and event ID.", "parameters": {"category": {"description": "The sport category, must be one of the following: 'soccer', 'cricket', 'basketball', 'tennis', 'hockey'.", "type": "str", "default": "soccer"}, "eid": {"description": "The event ID, which is the value of the Eid field returned by endpoints such as .../matches/v2/list-by-league, .../matches/v2/list-by-date, .../matches/v2/list-live, or .../competitions/detail.", "type": "int", "default": "702093"}}}
{"name": "top_holders", "description": "Retrieves the top holders in each protocol by making an API request.", "parameters": {"is_id": {"description": "The protocol ID for which to retrieve the top holders.", "type": "str", "default": "curve"}, "start": {"description": "The starting index to retrieve the top holders. Defaults to '0'.", "type": "str, optional", "default": "0"}, "limit": {"description": "The maximum number of top holders to retrieve. Defaults to '10'.", "type": "str, optional", "default": "10"}}}
{"name": "dns", "description": "Fetches DNS records for a given domain using the RapidAPI domain checker service.", "parameters": {"domain": {"description": "The domain for which DNS records are to be retrieved.", "type": "str", "default": "rapidapi.com"}}}
{"name": "data", "description": "Fetches details of an Indonesian national identity card such as day, month, year, gender, and location using the Toolbench RapidAPI.", "parameters": {"is_id": {"description": "The Indonesian national identity card number to validate and fetch details for.", "type": "str", "default": "3275071201980055"}}}
{"name": "user_stories_by_pk", "description": "Fetches user stories based on the given primary key from the Instagram API.", "parameters": {"pk": {"description": "The primary key of the user for which stories are to be fetched.", "type": "int", "default": "18428658"}}}
{"name": "keyword_research_api", "description": "Fetch keyword research data from the SEO Keyword Research API via RapidAPI.", "parameters": {"keyword": {"description": "The keyword for which to perform the research.", "type": "str", "default": "email marketing"}, "country": {"description": "The country code to limit the keyword research to a specific country.", "type": "str", "default": "in"}}}
{"name": "get_mp3", "description": "Converts a YouTube video to an MP3 file, with optional cutting based on start and end times.", "parameters": {"is_id": {"description": "The unique identifier for the YouTube video.", "type": "str", "default": "UxxajLWwzqY"}, "cut": {"description": "If provided, will cut the MP3 file based on the sstart and send parameters. Defaults to None.", "type": "int, optional", "default": ""}, "sstart": {"description": "The starting point for cutting the MP3. The format must be HH:MM:SS. Defaults to None.", "type": "str, optional", "default": ""}, "send": {"description": "The ending point for cutting the MP3. The format must be HH:MM:SS. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "leaguelogoimage", "description": "Fetch the logo image for a specific Rugby league in PNG format using the given tournament ID and RapidAPI key.", "parameters": {"tournamentid": {"description": "The unique tournament ID for which to retrieve the league logo image.", "type": "int", "default": 294}}}
{"name": "section_list", "description": "Returns a list of sections from the RapidAPI sports score service.", "parameters": {"page": {"description": "Page number to retrieve. Defaults to 1.", "type": "int, optional", "default": "1"}}}
{"name": "autocomplete_cities", "description": "Fetches autocomplete suggestions for USA cities from the RapidAPI service.", "parameters": {"city": {"description": "The name or partial name of the city to autocomplete.", "type": "str", "default": "Sacr"}}}
{"name": "random_crypto", "description": "Generates a list of fake cryptocurrency assets using the Random Crypto API.", "parameters": {"size": {"description": "Number of fake cryptocurrency assets to generate. Default is 5.", "type": "int, optional", "default": "5"}}}
{"name": "web_exchange_details", "description": "Fetches detailed information about a specific exchange on a given blockchain using the RapidAPI Open DeFi endpoint.", "parameters": {"exchange_slug": {"description": "The slug representing the exchange, e.g., 'sushiswap'.", "type": "str", "default": ""}, "chain_slug": {"description": "The slug representing the blockchain, e.g., 'ethereum'.", "type": "str", "default": ""}}}
{"name": "get_latest_quote", "description": "Fetch the latest real-time quote for a given trading symbol.", "parameters": {"tradingsymbol": {"description": "The trading symbol for which to fetch the latest quote. Check the list of all supported trading symbols at [https://stockseyes.com/group/all](https://stockseyes.com/group/all).", "type": "str", "default": "RELIANCE"}}}
{"name": "get_all_restaurant_locations", "description": "Fetches a list of restaurant locations from the RapidAPI service.", "parameters": {"page": {"description": "The page number to retrieve data from.", "type": "int", "default": "0"}}}
{"name": "bullish_harami", "description": "Fetches a list of stocks exhibiting the Bullish Harami candlestick pattern from the API.", "parameters": {"page": {"description": "The page number of results to retrieve. Default is 1.", "type": "int, optional", "default": "1"}}}
{"name": "getpowerplantbyradiusandgps", "description": "Fetches information about power plants within a specified radius from given GPS coordinates.", "parameters": {"latitude": {"description": "The latitude coordinate to search around.", "type": "int", "default": "27.6"}, "longitude": {"description": "The longitude coordinate to search around.", "type": "int", "default": "78.5"}, "page_number": {"description": "The page number for paginated results. Defaults to None.", "type": "int, optional", "default": ""}, "radius_km": {"description": "The radius in kilometers to search within. Defaults to 100 km if not provided.", "type": "int, optional", "default": ""}}}
{"name": "channel_channels", "description": "Fetches data from the YouTube channel's collections or subscriptions using the RapidAPI service.", "parameters": {"is_id": {"description": "Channel ID to query. Default is 'UC-lHJZR3Gqxm24_Vd_AJ5Yw'.", "type": "str", "default": "UC-lHJZR3Gqxm24_Vd_AJ5Yw"}, "gl": {"description": "Geolocation code to filter the results by region. Default is 'US'.", "type": "str", "default": "US"}, "cursor": {"description": "Pagination token for results. Default is None.", "type": "str, optional", "default": ""}, "hl": {"description": "Language code for the results. Default is 'en'.", "type": "str", "default": "en"}, "filter": {"description": "Filter key for the type of collections. Options are 'all_collections', 'subscriptions', or a custom collection token. Default is None.", "type": "str, optional", "default": ""}}}
{"name": "searchplayer", "description": "Searches for player data using the Toolbench RapidAPI service.", "parameters": {"player_input": {"description": "The name or keyword to search for a player. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "get_cigar_average_length", "description": "Fetches the average length of cigars based on specified filters.", "parameters": {"wrapper": {"description": "The wrapper type of the cigar. Default is 'Connecticut Shade, Ecuador'.", "type": "str", "default": "Connecticut Shade, Ecuador"}, "name": {"description": "The name of the cigar. Default is 'Torpedo'.", "type": "str", "default": "Torpedo"}, "filler": {"description": "The filler type of the cigar. Default is 'Nicaragua'.", "type": "str", "default": "Nicaragua"}, "country": {"description": "The country where the cigar is made. Default is 'Nicaragua'.", "type": "str", "default": "Nicaragua"}, "color": {"description": "The color of the cigar. Default is 'Colorado Claro'.", "type": "str", "default": "Colorado Claro"}, "strength": {"description": "The strength of the cigar. Default is 'Mild-Medium'.", "type": "str", "default": "Mild-Medium"}, "brandid": {"description": "The brand ID of the cigar. Default is 13711.", "type": "int", "default": "13711"}}}
{"name": "get_country_by_fifa_code", "description": "Gets information about a country using its FIFA assigned country code from the Geography API.", "parameters": {"fifacode": {"description": "The FIFA assigned country code.", "type": "str", "default": "USA"}, "fields": {"description": "A comma-separated list of fields to filter the response. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "world_coordinate_to_income", "description": "Fetches per capita income data for a given set of geographic coordinates (longitude and latitude) using the provided API key.", "parameters": {"lon": {"description": "Longitude of the geographic coordinate.", "type": "int", "default": "0"}, "lat": {"description": "Latitude of the geographic coordinate.", "type": "int", "default": "0"}}}
{"name": "getproductbyid", "description": "Fetches specific product details by product ID from the RapidAPI endpoint.", "parameters": {"is_id": {"description": "The ID of the product to fetch.", "type": "str", "default": "1"}}}
{"name": "get_country_population", "description": "Fetch the population data for a given country using the Toolbench RapidAPI service.", "parameters": {"country": {"description": "The name of the country for which to fetch the population data.", "type": "str", "default": "Egypt"}}}
{"name": "consumers_get_reviews", "description": "Retrieve reviews for a specific consumer from the Trustpilot API.", "parameters": {"is_id": {"description": "The ID of the consumer whose reviews are to be fetched.", "type": "str", "default": "5f9c424654404f0019fb19fc"}, "includereportedreviews": {"description": "Specifies whether or not to include reported reviews. Defaults to None.", "type": "bool, optional", "default": "false"}, "perpage": {"description": "The number of items to include per page for pagination purposes. Defaults to 1.", "type": "int, optional", "default": "1"}, "page": {"description": "The number of items to include per page for pagination purposes. Defaults to 1.", "type": "int, optional", "default": "1"}}}
{"name": "get_news_from_a_specific_source", "description": "Fetch news on pollution in African countries from a specified news source.", "parameters": {"newspaperid": {"description": "The identifier of the news source to fetch pollution news from.", "type": "str", "default": "sei"}}}
{"name": "get_scrabble_score", "description": "Fetches the Scrabble score for a given word using the Dicolink API.", "parameters": {"mot": {"description": "The word for which the Scrabble score is to be retrieved.", "type": "str", "default": "cheval"}}}
{"name": "get_details_of_a_news_item", "description": "Fetches the details of a news item including the title, image, body, and other properties from the specified API using the provided parameters.", "parameters": {"is_id": {"description": "The unique identifier of the news item.", "type": "str", "default": ".196030"}, "title": {"description": "The title of the news item.", "type": "str", "default": "mai-nishikata-game-between-the-suits-manga-resumes-after-2-years"}, "date": {"description": "The publication date of the news item.", "type": "str", "default": "2023-03-17"}}}
{"name": "entertainment", "description": "Fetches entertainment news from Google News using the provided language region.", "parameters": {"lr": {"description": "Language region code in the format 'en-US'.", "type": "str", "default": "en-US"}}}
{"name": "application_details_by_id", "description": "Retrieves application details from the RapidAPI by application ID.", "parameters": {"is_id": {"description": "The application ID to fetch details for.", "type": "str", "default": "835599320"}, "country": {"description": "The country code to filter results. Defaults to 'us'.", "type": "str, optional", "default": "us"}, "lang": {"description": "The language code to filter results. Defaults to 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "v1_weather", "description": "Fetches weather information from the API Ninjas Weather API endpoint.", "parameters": {"country": {"description": "The country name.", "type": "str, optional", "default": ""}, "lon": {"description": "The longitude of the desired location. Must be supplied with the `lat` parameter.", "type": "str, optional", "default": ""}, "zip": {"description": "The 5-digit zip code (United States only).", "type": "int, optional", "default": ""}, "state": {"description": "The US state (United States only).", "type": "str, optional", "default": ""}, "city": {"description": "The city name. Defaults to 'Seattle'.", "type": "str, optional", "default": "Seattle"}, "lat": {"description": "The latitude of the desired location. Must be supplied with the `lon` parameter.", "type": "int, optional", "default": ""}}}
{"name": "get_artist_albums", "description": "Fetches and returns information about an artist's albums from the YouTube Music API.", "parameters": {"channel_id": {"description": "The unique identifier for the artist's channel.", "type": "str", "default": "UCedvOgsKFzcK3hA5taf3KoQ"}, "params": {"description": "Parameters required to fetch artist details, typically obtained from the `get_artist` function.", "type": "str", "default": "6gPgAUdxVUJXcFlCQ3BNQkNpUjVkRjl3WVdkbFgzTnVZWEJ6YUc5MFgyMTFjMmxqWDNCaFoyVmZjbVZuYVc5dVlXd1NIMDEzUzBGTWVWcENhM2h2WVhkRFJFbFBZM2h6Vms1NlR6QlNVWE5wVW1jYVNnQUFaVzRBQVVaU0FBRkdVZ0FCQUVaRmJYVnphV05mWkdWMFlXbHNYMkZ5ZEdsemRBQUJBVU1BQUFFQUFBRUJBRlZETUhZMlJuTlJTRTVmUVRGR09EWmlSbkpZWDNwb2R3QUI4dHF6cWdvR1FBRklBRkFV"}}}
{"name": "fetch_track_details", "description": "Fetches the details of a specific track using the provided track ID from the latest Spotify downloader API.", "parameters": {"track_id": {"description": "The unique identifier of the track to fetch details for.", "type": "str", "default": "2gAKyzcfFIlMYdJ2b836At"}}}
{"name": "fertility_window_get", "description": "Calculates the fertility window based on the first day of the last menstrual period and the cycle length by making a GET request to the pregnancy calculator API.", "parameters": {"menstrual_date": {"description": "The date of the first day of the last menstrual period in the format 'YYYY-MM-DD'.", "type": "str", "default": "2023-06-01"}, "cycle_length": {"description": "The length of the menstrual cycle in days.", "type": "int", "default": "28"}}}
{"name": "metric_kilograms", "description": "Calculates the BMI (Body Mass Index) of an individual using metric measurements.", "parameters": {"weight": {"description": "The weight of an individual in kilograms (kg).", "type": "int", "default": "150"}, "height": {"description": "The height of an individual in meters (m).", "type": "int", "default": "1.83"}}}
{"name": "get_city_by_id", "description": "Fetch details of a city by its ID using the RapidAPI Geography API.", "parameters": {"is_id": {"description": "The ID of the city to be fetched.", "type": "str", "default": "1796236"}}}
{"name": "simple_qr_code", "description": "Generates a simple QR code for the given link with optional color customization using the RapidAPI Toolbench service.", "parameters": {"link": {"description": "The URL that the QR code will direct to.", "type": "str", "default": "https://www.google.com/"}, "color": {"description": "The color of the QR code in hexadecimal format. Default is None, which results in the default color (#000).", "type": "str, optional", "default": ""}}}
{"name": "list_transactions", "description": "Retrieve a pageable list of transactions for a specified time period from a project.", "parameters": {"is_from": {"description": "The start date of the period to retrieve transactions for, in Unix timestamp format.", "type": "int", "default": ""}, "to": {"description": "The end date of the period to retrieve transactions for, in Unix timestamp format.", "type": "str", "default": ""}, "projectid": {"description": "The ID of the project to retrieve transactions from.", "type": "str", "default": ["undefined"]}, "pagesize": {"description": "The number of transactions to retrieve per page. Maximum value is 500.", "type": "int", "default": ["10"]}, "page": {"description": "The page number to retrieve.", "type": "int", "default": ["0"]}}}
{"name": "list_movies", "description": "List and search through all the available movies with various sorting, filtering, and ordering options.", "parameters": {"genre": {"description": "Used to filter by a given genre (default is 'all'). See http://www.imdb.com/genre/ for a full list.", "type": "str", "default": "all"}, "order_by": {"description": "Orders the results by either 'asc' (Ascending) or 'desc' (Descending) order (default is 'desc').", "type": "str", "default": "desc"}, "with_rt_ratings": {"description": "If True, includes Rotten Tomatoes ratings in the results (default is None).", "type": "bool", "default": "false"}, "sort_by": {"description": "Sorts the results by the specified value, such as 'date_added' (default is 'date_added').", "type": "str", "default": "date_added"}, "page": {"description": "The page number to retrieve, useful for pagination (default is 1).", "type": "int", "default": "1"}, "query_term": {"description": "Used for movie search, matching on: Movie Title, IMDB Code, Actor Name/IMDb, or Director Name/IMDb Code (default is '0').", "type": "str", "default": "0"}, "quality": {"description": "Used to filter by a given quality, such as '720p', '1080p', etc. (default is 'all').", "type": "str", "default": "all"}, "minimum_rating": {"description": "Filters movies by a given minimum IMDb rating (default is 0).", "type": "int", "default": "0"}, "limit": {"description": "The limit of results per page (default is 20).", "type": "int", "default": "20"}}}
{"name": "images_search", "description": "Searches for images using the Bing Search API, based on the provided keyword and optional parameters for size and page number.", "parameters": {"keyword": {"description": "The search term to find related images.", "type": "str", "default": "wallpapers"}, "size": {"description": "The size of the images to be retrieved. Default is '30'.", "type": "str, optional", "default": "30"}, "page": {"description": "The page number of the search results to retrieve. Default is '0'.", "type": "str, optional", "default": "0"}}}
{"name": "stock_symbols", "description": "Fetches and returns a list of all available stock symbols from the real-time-quotes API.", "parameters": {"includenames": {"description": "If True, includes stock names in the returned data. Defaults to None.", "type": "bool, optional", "default": "false"}}}
{"name": "web_exchanges", "description": "Retrieve and sort exchanges based on specified criteria.", "parameters": {"sort": {"description": "The sorting criteria for the output. Defaults to 'usd_volume_30d', which sorts the exchanges based on their monthly volume.", "type": "str", "default": "usd_volume_30d"}, "direction": {"description": "The sort order. Can be 'asc' for ascending or 'desc' for descending. Defaults to 'desc'.", "type": "str", "default": "desc"}, "filter_zero_volume": {"description": "If set to True, excludes exchanges with no volume in the last 30 days. Defaults to None.", "type": "bool", "default": false}, "chain_slug": {"description": "The blockchain slug (e.g., 'ethereum' for Ethereum mainnet). If provided, the function lists exchanges only for this chain. Defaults to None.", "type": "str", "default": ""}}}
{"name": "get_economic_calendar_news_over_a_period_of_time", "description": "Fetches economic calendar news within a specified time period.", "parameters": {"content_type": {"description": "The content type for the response. Default is 'application/json'.", "type": "str", "default": "application/json"}, "time_start": {"description": "The start date and time for the news fetch period in ISO 8601 format. Default is '2022-12-20 17:34:58+00:00'.", "type": "str", "default": "2022-12-20 17:34:58+00:00"}, "time_finish": {"description": "The end date and time for the news fetch period in ISO 8601 format. Default is '2023-02-13 19:34:58+00:00'.", "type": "str", "default": "2023-02-13 19:34:58+00:00"}}}
{"name": "generate_pdf", "description": "Generates a PDF by capturing a screenshot of the provided website URL with specified dimensions using the Web Capture API.", "parameters": {"width": {"description": "The width of the screenshot in pixels. Defaults to 1024.", "type": "int, optional", "default": "1024"}, "height": {"description": "The height of the screenshot in pixels. Defaults to 780.", "type": "int, optional", "default": "780"}, "url": {"description": "The URL of the website to capture. Defaults to 'https://google.com'.", "type": "str, optional", "default": "https://google.com"}}}
{"name": "get_movie_images_by_id", "description": "Fetches a complete list of images associated with a given movie ID from the Cinema API.", "parameters": {"is_id": {"description": "The movie ID for which to retrieve images.", "type": "str", "default": "tt0120338"}}}
{"name": "songs", "description": "Fetches a list of songs from JSR/JSRF using the specified parameters.", "parameters": {"limit": {"description": "The maximum number of items to return in the response. Default is '5'.", "type": "str", "default": "5"}, "sortby": {"description": "The field by which to sort the results. Possible values include fields on the document, e.g., 'name', 'stats'. Default is 'name'.", "type": "str", "default": "name"}, "orderby": {"description": "The order in which to sort the results. Possible values are 'asc' for ascending and 'desc' for descending. The `sortby` parameter must be present for this to take effect. Default is 'asc'.", "type": "str", "default": "asc"}}}
{"name": "getspecialcompetitionview", "description": "Fetches the special competition view data from the RapidAPI service.", "parameters": {"referer": {"description": "The referer URL to include in the request headers. Default is 'https://www.mozzartbet.com.co/es'.", "type": "str", "default": "https://www.mozzartbet.com.co/es"}, "host": {"description": "The host to include in the request headers. Default is 'www.mozzartbet.com.co'.", "type": "str", "default": "www.mozzartbet.com.co"}}}
{"name": "tennis_match_statistics", "description": "Fetches and returns statistics about a given tennis match identified by `match_id`.", "parameters": {"match_id": {"description": "The unique identifier for the tennis match.", "type": "str", "default": "10319698"}}}
{"name": "leagueseasoninfo", "description": "Fetches the season information of a specific Football league from the provided API.", "parameters": {"tournamentid": {"description": "The unique ID of the tournament to retrieve the season information from.", "type": "int", "default": 7}, "seasonid": {"description": "The unique ID of the season to retrieve the season information from.", "type": "int", "default": 36886}}}
{"name": "get_long_url", "description": "Retrieve the long URL from a shortened URL using the Uptosite Link Shortener API.", "parameters": {"slug": {"description": "The unique identifier for the shortened URL.", "type": "str", "default": "ntt-chrome"}}}
{"name": "hijos", "description": "Retrieves the list of children (hijos) from the Colegio Santa Ana API.", "parameters": {"authorization": {"description": "The authorization token required for accessing the API.", "type": "str", "default": "1234567890"}}}
{"name": "get_ico_calendar", "description": "Fetches the ICO (Initial Coin Offering) calendar based on the given parameters.", "parameters": {"category": {"description": "Comma-separated list of categories to filter the ICOs. For example: \"_ico_cat_gaming,_ico_cat_ecomm,_ico_cat_finance,_ico_cat_healthcare\".", "type": "str, optional", "default": ""}, "time_utc_offset": {"description": "UTC offset in seconds. For instance, UTC+8 is represented as 8 * 60 * 60 = 28800.", "type": "int, optional", "default": "28800"}, "tabname": {"description": "The status of the ICOs to retrieve. Options are 'upcoming', 'completed', or 'ongoing'. Default is 'ongoing'.", "type": "str, optional", "default": "ongoing"}, "sort": {"description": "The sorting criterion. Options are 'related_days', 'name', 'funds_raised', or 'completed'. Default is 'related_days'.", "type": "str, optional", "default": "related_days"}, "lang_id": {"description": "Language ID for the response. Default is 1.", "type": "int, optional", "default": "1"}}}
{"name": "search_a_place", "description": "Search for a place using the Busy and Popular Times API, similar to how a location is searched on Google, returning the popular times graph if available.", "parameters": {"query": {"description": "The search term for the location.", "type": "str", "default": "Walmart+8400+Coral+Way+Miami+FL+33155"}}}
{"name": "media_info", "description": "Retrieves information about a media item from the Instagram API.", "parameters": {"media_id": {"description": "The ID of the media item to retrieve information for, used as a query parameter.", "type": "str", "default": "2489189987845943833_7593209169"}, "mediaid": {"description": "The ID of the media item to retrieve information for, included in the URL path.", "type": "str", "default": "2489189987845943833_7593209169"}}}
{"name": "sentiment", "description": "Analyzes the sentiment of the given text using the VADER sentiment analysis tool through the RapidAPI platform.", "parameters": {"text": {"description": "The input text whose sentiment needs to be analyzed.", "type": "str", "default": "I really hate this!"}}}
{"name": "get_host_list_version_hosts_get", "description": "Fetch a list of hosts that ran an EcoIndex analysis, ordered by the number of requests made.", "parameters": {"version": {"description": "Engine version used to run the analysis (v0 or v1).", "type": "str", "default": "v1"}, "q": {"description": "Filter for partial host name. Defaults to None.", "type": "str, optional", "default": ""}, "date_from": {"description": "Start date for filtering elements (format: YYYY-MM-DD). Defaults to None.", "type": "str, optional", "default": ""}, "size": {"description": "Number of elements per page. Defaults to 50.", "type": "int, optional", "default": 50}, "date_to": {"description": "End date for filtering elements (format: YYYY-MM-DD). Defaults to None.", "type": "str, optional", "default": ""}, "page": {"description": "Page number to retrieve. Defaults to 1.", "type": "int, optional", "default": 1}}}
{"name": "market_data", "description": "Retrieves a list of daily stock metrics for a given ticker symbol, such as opening, closing, highest, and lowest prices.", "parameters": {"ticker": {"description": "The stock ticker symbol for which to retrieve market data.", "type": "str", "default": "TSLA"}}}
{"name": "protocols", "description": "Fetches protocol information from the \"All-in-One Crypto Swiss Knife\" RapidAPI service, optionally filtering by a search query and chain identifier.", "parameters": {"q": {"description": "Search parameter to filter the protocols. Defaults to None.", "type": "str, optional", "default": ""}, "chain_id": {"description": "Chain identifier to filter the protocols. Supported chains: \"eth\", \"bsc\", \"matic\", \"avax\", \"okt\", \"hmy\", \"heco\", \"klay\", \"op\", \"arb\", \"ftm\", \"xdai\", \"cro\", \"mobm\", \"celo\", \"aurora\", \"fuse\", \"evmos\", \"cfx\", \"kava\". Defaults to 'fuse'.", "type": "str, optional", "default": "fuse"}}}
{"name": "get_asn_by_country", "description": "Retrieves all Autonomous System Numbers (ASNs) associated with a given country.", "parameters": {"country_code": {"description": "The ISO 3166-1 alpha-2 country code (e.g., 'US', 'GB') to retrieve all ASNs for.", "type": "str", "default": "sm"}}}
{"name": "usuarios", "description": "Fetches user data from the RapidAPI Pizza Allapala service.", "parameters": {"is_id": {"description": "The user ID to fetch data for. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "appetizer_ingredient", "description": "Fetches a random appetizer recipe containing the specified ingredient using the Recipe Finder API.", "parameters": {"ingredient": {"description": "The main ingredient to include in the appetizer recipe.", "type": "str", "default": "flour"}}}
{"name": "category_tags", "description": "Fetch a list of tags for a given category ID using the toolbench_rapidapi key.", "parameters": {"is_id": {"description": "The category ID to fetch tags for.", "type": "str", "default": "1"}}}
{"name": "nhl_score_board", "description": "Fetches the NHL scoreboard data for the specified date using the NHL API.", "parameters": {"day": {"description": "The day of the desired scoreboard data.", "type": "str", "default": "11"}, "year": {"description": "The year of the desired scoreboard data.", "type": "str", "default": "2022"}, "month": {"description": "The month of the desired scoreboard data.", "type": "str", "default": "05"}, "limit": {"description": "The maximum number of results to return. Defaults to '5'.", "type": "str, optional", "default": "5"}}}
{"name": "list_of_games", "description": "Fetches a list of games that contain the given title or match the specified Steam App ID. The response includes the cheapest current deal for each game.", "parameters": {"title": {"description": "The title of the game to search for. Defaults to 'batman'.", "type": "str, optional", "default": "batman"}, "exact": {"description": "Flag to allow only exact string matches for the `title` parameter. Defaults to 0.", "type": "int, optional", "default": "0"}, "limit": {"description": "The maximum number of games to return, up to 60. Defaults to 60.", "type": "int, optional", "default": "60"}, "steamappid": {"description": "The Steam App ID of the game to search for. Defaults to None.", "type": "int, optional", "default": ""}}}
{"name": "get_all_videos", "description": "Fetches all videos associated with a specific user on Likee using the provided user ID and optional pagination parameters.", "parameters": {"uid": {"description": "The unique identifier of the user whose videos are to be fetched. Can be found using the Get User Info endpoint.", "type": "str", "default": "962176076"}, "pagesize": {"description": "The number of videos per page. Defaults to '10'.", "type": "str, optional", "default": "10"}, "count": {"description": "The total number of videos to be fetched. Defaults to '4'.", "type": "str, optional", "default": "4"}, "page": {"description": "The page number to retrieve. Defaults to '1'.", "type": "str, optional", "default": "1"}}}
{"name": "schedules_list", "description": "Fetches a list of scheduled matches based on the provided type and optional pagination information.", "parameters": {"type": {"description": "Type of schedule to fetch. One of the following: 'international', 'league', 'domestic', 'women'.", "type": "str", "default": "international"}, "lasttime": {"description": "For paging purposes. Leave empty to load the first page, or provide an Epoch timestamp value in milliseconds (e.g., 1640883600000) to load the next page.", "type": "int, optional", "default": ""}}}
{"name": "stagesubstages", "description": "Retrieve all substages of a specific Motorsport stage using the RapidAPI.", "parameters": {"stageid": {"description": "The ID of the Motorsport stage for which to retrieve all substages.", "type": "int", "default": 203648}}}
{"name": "pressure_from_to_number", "description": "This function converts a given pressure value from one unit to another using the RapidAPI Unit Conversion service.", "parameters": {"is_from": {"description": "The unit of the pressure value to be converted from.", "type": "str", "default": "pascal"}, "number": {"description": "The pressure value to be converted.", "type": "int", "default": "100"}, "to": {"description": "The unit of the pressure value to be converted to.", "type": "str", "default": "decibar"}}}
{"name": "canvas_titles_get_recommend", "description": "Retrieves similar comic recommendations from the Webtoon API.", "parameters": {"titleno": {"description": "The value of the `titleNo` field returned from the `/canvas/titles/list`, `/canvas/search`, or `/canvas/home` endpoint.", "type": "int", "default": "300138"}, "language": {"description": "The language code for the response. One of the following: 'en', 'zh-hant', 'de', 'fr', 'es', 'th', 'id'. Defaults to 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "find_zip_codes_by_city_and_district", "description": "Fetch the zip codes for a specified city and district in Poland.", "parameters": {"accept": {"description": "Requested content type.", "type": "str", "default": "application/json"}, "city": {"description": "The name of the city to search for zip codes.", "type": "str", "default": "Wrocław"}, "district": {"description": "The district within the specified city to search for zip codes.", "type": "str", "default": "Oporów"}, "x_traceid": {"description": "A trace ID that is copied to the API response header. Default is 'optional_abc123'.", "type": "str, optional", "default": "optional_abc123"}}}
{"name": "methane_endpoint", "description": "Fetches methane concentration data from the specified API endpoint using the RapidAPI service.", "parameters": {"methane": {"description": "Optional parameter to specify a particular methane concentration. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "get_train_schedule", "description": "Fetches the train schedule for a given train number using the IRCTC API.", "parameters": {"trainno": {"description": "The train number for which the schedule is to be fetched.", "type": "str", "default": "12936"}}}
{"name": "games_by_platform_category_sorted", "description": "Fetches and returns a list of games filtered by platform and category, and sorted based on a given parameter.", "parameters": {"sort_by": {"description": "Criterion to sort the games by. Defaults to 'release-date'.", "type": "str", "default": "release-date"}, "platform": {"description": "The platform to filter games by. Defaults to 'browser'.", "type": "str", "default": "browser"}, "category": {"description": "The category to filter games by. Defaults to 'mmorpg'.", "type": "str", "default": "mmorpg"}}}
{"name": "kompas_search", "description": "Performs a search on the Kompas news API using the provided parameters.", "parameters": {"limit": {"description": "The number of search results to retrieve.", "type": "int", "default": "10"}, "page": {"description": "The page number to retrieve in the paginated results.", "type": "int", "default": "1"}, "command": {"description": "The search command or keyword.", "type": "str", "default": "banjir"}}}
{"name": "stock_v3_get_profile", "description": "Fetches the company profile for a given stock using the performance ID.", "parameters": {"performanceid": {"description": "The unique identifier for the stock's performance, which can be obtained from endpoints such as `/auto-complete`, `/get-summary`, or `/get-movers`.", "type": "str", "default": "0P0000OQN8"}}}
{"name": "search_filters", "description": "Fetches the relevant job search filters and their estimated result counts based on the given query parameters. This is useful for refining search results or for analytics purposes.", "parameters": {"query": {"description": "Free-form jobs search query. It is highly recommended to include job title and location as part of the query.", "type": "str", "default": "Python developer in Texas, USA"}, "language": {"description": "Language of the results. Uses a 2-letter language code (e.g., 'en').", "type": "str, optional", "default": ""}, "country": {"description": "Country/region from which to make the query. Uses a 2-letter country code (e.g., 'us').", "type": "str, optional", "default": ""}, "categories": {"description": "Deprecated. Specifies job categories/industries as a comma-separated list of category values.", "type": "str, optional", "default": ""}, "company_types": {"description": "Specifies company types as a comma-separated list of company type values.", "type": "str, optional", "default": ""}, "job_titles": {"description": "Specifies job titles as a comma-separated list of job title values.", "type": "str, optional", "default": ""}, "job_requirements": {"description": "Specifies job requirements as a comma-separated list (e.g., 'under_3_years_experience', 'no_degree').", "type": "str, optional", "default": ""}, "radius": {"description": "Distance (in km) within which to return jobs, measured from the location specified in the query.", "type": "int, optional", "default": ""}, "employers": {"description": "Specifies employers as a comma-separated list of employer values.", "type": "str, optional", "default": ""}, "remote_jobs_only": {"description": "Whether to return only remote jobs (default is False).", "type": "bool, optional", "default": ""}, "employment_types": {"description": "Specifies employment types as a comma-separated list (e.g., 'FULLTIME', 'PARTTIME').", "type": "str, optional", "default": ""}, "date_posted": {"description": "Specifies the posting date range for job results. Possible values include 'all', 'today', '3days', 'week', 'month'.", "type": "str, optional", "default": ""}}}
{"name": "get_profile_recent_activity_time", "description": "Retrieves the time of the latest activity on a given LinkedIn profile using the Fresh LinkedIn Profile Data API.", "parameters": {"linkedin_url": {"description": "The URL of the LinkedIn profile to query.", "type": "str", "default": "https://www.linkedin.com/in/williamhgates/"}}}
{"name": "items", "description": "Fetches item details from the Codester API using the specified item ID.", "parameters": {"is_id": {"description": "The item ID for which details are to be fetched.", "type": "str", "default": "40946"}}}
{"name": "check_wordpress", "description": "Checks whether the specified URL is running WordPress using the provided User-Agent and RapidAPI key.", "parameters": {"user_agent": {"description": "The User-Agent string to include in the request headers.", "type": "str", "default": ""}, "url": {"description": "The URL of the website to check for WordPress.", "type": "str", "default": ""}}}
{"name": "autocomplete_places", "description": "Returns a list of places that match a given prefix and specified filter properties, useful for creating \"search as you type\" inputs.", "parameters": {"limit": {"description": "Maximum number of places to return. Used with `skip` to paginate results. Defaults to 10, maximum is 100.", "type": "int, optional", "default": "10"}, "skip": {"description": "Number of places to ignore before beginning to return results. Used with `limit` to paginate results. Defaults to 0.", "type": "int, optional", "default": "0"}, "language": {"description": "Specifies a language (ISO 639-1) for the localized name of the place. If unavailable, `localizedName` property will be null.", "type": "str, optional", "default": ""}, "country": {"description": "Filters places by their country ID. Multiple values can be specified, separated by commas (e.g., 'US,CA,MX'). Defaults to 'US,CA'.", "type": "str, optional", "default": "US,CA"}, "admindivision1": {"description": "Filters places by their adminDivision1 ID. Multiple values can be specified, separated by commas (e.g., 'US.CA,US.DE').", "type": "str, optional", "default": ""}, "accuracyradiuskm": {"description": "Maximum radius in kilometers from the specified coordinates (`latitude` and `longitude`) to filter places. Defaults to 100km.", "type": "int, optional", "default": ""}, "latitude": {"description": "Latitude to filter places by their location. Ignored if `longitude` is not specified.", "type": "int, optional", "default": ""}, "admindivision2": {"description": "Filters places by their adminDivision2 ID. Multiple values can be specified, separated by commas.", "type": "str, optional", "default": ""}, "q": {"description": "Query string to find places whose names start with this prefix. Defaults to 'Sea'.", "type": "str, optional", "default": "Sea"}, "longitude": {"description": "Longitude to filter places by their location. Ignored if `latitude` is not specified.", "type": "int, optional", "default": ""}, "type": {"description": "Filters places by their type. Multiple values can be specified, separated by commas. Valid types are 'CITY', 'ADMIN_DIVISION_1', 'ADMIN_DIVISION_2', and 'COUNTRY'. Defaults to 'CITY'.", "type": "str, optional", "default": "CITY"}}}
{"name": "charts_track", "description": "Fetch a list of popular songs from a specified chart using the Shazam API.", "parameters": {"listid": {"description": "The identifier for the chart list, as returned by the `/charts/list` endpoint. Defaults to `None`.", "type": "str, optional", "default": ""}, "pagesize": {"description": "The number of items to fetch per response, with a maximum of 20. Defaults to `20`.", "type": "int, optional", "default": "20"}, "startfrom": {"description": "The starting index for paging through the results. Defaults to `0`.", "type": "int, optional", "default": "0"}, "locale": {"description": "The language code for the results. Defaults to `'en-US'`.", "type": "str, optional", "default": "en-US"}}}
{"name": "get_referral_domains", "description": "Retrieves a list of referral domains for a given domain using the Toolbench RapidAPI.", "parameters": {"domain": {"description": "The domain to retrieve referral domains for.", "type": "str", "default": "getecz.com"}}}
{"name": "age_calculator", "description": "Calculates age based on the provided date and optional timezone.", "parameters": {"date": {"description": "The date of birth in one of the following formats: YYYYMMDD, YYYY-MM-DD, MMDDYYYY, MM-DD-YYYY.", "type": "str", "default": "19870630"}, "timezone": {"description": "The timezone to be considered for age calculation. Default is 'US/Eastern'. Format example: 'US/Eastern', 'US/Pacific', 'Europe/London'.", "type": "str, optional", "default": "US/Eastern"}}}
{"name": "fish_api_group", "description": "Groups available fish data based on the provided metadata property, value, and attribute using the Fish API.", "parameters": {"meta_property": {"description": "The metadata property to search for.", "type": "str", "default": "scientific_classification"}, "property_value": {"description": "The value of the metadata property that will be matched.", "type": "str", "default": "actinopterygii"}, "meta_property_attribute": {"description": "The attribute of the metadata property to be searched. Defaults to 'class'.", "type": "str, optional", "default": "class"}}}
{"name": "addresses", "description": "Fetches a list of addresses matching the search query using the RapidAPI AddressR service.", "parameters": {"q": {"description": "The search string used to query addresses.", "type": "str", "default": ""}}}
{"name": "get_feed_video_list_by_region", "description": "Fetches a list of feed videos from TikTok for a given region.", "parameters": {"region": {"description": "The region code for which to fetch the feed video list.", "type": "str", "default": "JP"}, "count": {"description": "The number of videos to fetch, with a default of '10'. Maximum of 20 videos can be fetched.", "type": "str, optional", "default": "10"}}}
{"name": "stock_sec_filings", "description": "Fetch the SEC filings for a given stock symbol from the Yahoo Finance API.", "parameters": {"symbol": {"description": "The stock symbol for which to fetch SEC filings.", "type": "str", "default": "AAPL"}}}
{"name": "keyword_search_at_coordinate_point", "description": "Fetch search results for a given query at a specified geographic coordinate point using the RapidAPI Local Rank Tracker service.", "parameters": {"lat": {"description": "Latitude of the coordinate point.", "type": "str", "default": "37.341759"}, "lng": {"description": "Longitude of the coordinate point.", "type": "str", "default": "-121.938314"}, "query": {"description": "The search query or keyword.", "type": "str", "default": "web design"}, "x_user_agent": {"description": "Device type for the search. Default is None.", "type": "str, optional", "default": ""}, "zoom": {"description": "Google Maps zoom level, ranging from 0 to 18. Default is '13'.", "type": "str, optional", "default": "13"}}}
{"name": "lottery_results_by_date_id", "description": "Fetches lottery results for a given date id from the Thai lottery API.", "parameters": {"dateid": {"description": "The date identifier for which to fetch lottery results.", "type": "str", "default": "20220316"}}}
{"name": "app_reviews", "description": "Fetches app reviews from a specified app store using various filters.", "parameters": {"app_id": {"description": "The app ID for which to get reviews.", "type": "str", "default": "com.snapchat.android"}, "device": {"description": "Only return reviews made on a specific device type. Allowed values are `PHONE`, `TABLET`, `CHROMEBOOK`. Default is `PHONE`.", "type": "str, optional", "default": ""}, "region": {"description": "The country code to use, specified as a 2-letter code (ISO 3166-1 alpha-2). Default is `us`.", "type": "str, optional", "default": "us"}, "sort_by": {"description": "How to sort the reviews in the results. Allowed values are `MOST_RELEVANT`, `NEWEST`, `RATING`. Default is `MOST_RELEVANT`.", "type": "str, optional", "default": ""}, "rating": {"description": "Only return reviews with a certain star rating. Allowed values are `ANY`, `ONE_STAR`, `TWO_STARS`, `THREE_STARS`, `FOUR_STARS`, `FIVE_STARS`. Default is `ANY`.", "type": "str, optional", "default": ""}, "limit": {"description": "Maximum number of reviews in the results. Default is 10.", "type": "int, optional", "default": "10"}, "cursor": {"description": "Specify a cursor from the previous request to get the next set of results.", "type": "str, optional", "default": ""}, "language": {"description": "The language to use, specified as a 2-letter language code (ISO 639-1 alpha-2). Default is `en`.", "type": "str, optional", "default": "en"}}}
{"name": "sha_text_hash", "description": "Hashes the input text using a specified SHA algorithm and returns the resulting hash.", "parameters": {"datastring": {"description": "The input text to be hashed.", "type": "str", "default": "enter-your-string-here"}, "mode": {"description": "The SHA algorithm to use. Valid values are 1, 256, 384, or 512.", "type": "int", "default": "256"}}}
{"name": "get_info_from_vin", "description": "Retrieves vehicle information from a VIN (Vehicle Identification Number) using the RapidAPI service.", "parameters": {"vin": {"description": "The Vehicle Identification Number to decode.", "type": "str", "default": "19UYA42601A019296"}}}
{"name": "trainers_win_rate", "description": "Fetches trainers' win rate statistics from the past specified number of days.", "parameters": {"last_days": {"description": "The number of past days to consider for the statistics. Defaults to 7 days if not specified.", "type": "int", "default": "7"}}}
{"name": "getpeoplebytopic", "description": "Fetches Azure influencers by topic from the specified page using the RapidAPI key.", "parameters": {"topic": {"description": "The topic to search for Azure influencers.", "type": "str", "default": "compute"}, "page": {"description": "The page number of search results to retrieve.", "type": "int", "default": "1"}}}
{"name": "pair_strength", "description": "Fetches the combined strength of currency pairs for a given timeframe from the Currency Quake API.", "parameters": {"timeframe": {"description": "The timeframe for which to retrieve the currency pair strength (e.g., 'h1', 'h4', 'd1', 'w1').", "type": "str", "default": "h1"}}}
{"name": "user_feed", "description": "Fetches the Instagram feed for a user.", "parameters": {"userid": {"description": "The ID of the Instagram user whose feed is to be retrieved.", "type": "int", "default": "2910436321320428760"}, "max_id": {"description": "The ID used for pagination to fetch the next page of results. Defaults to '{}'.", "type": "str, optional", "default": "{}"}}}
{"name": "market_get_compact", "description": "Fetch the most informative fields about indices, commodities, currencies, rates, and other market data.", "parameters": {"is_id": {"description": "A comma-separated string of market IDs returned from the `/market/auto-complete` endpoint.", "type": "str", "default": "adsmi:ind,aex:ind,co1:com,gc1:com"}}}
{"name": "retrieve_collection_pricing_chart", "description": "Retrieves pricing chart data for a specified collection from the Blur API.", "parameters": {"spanms": {"description": "The time span in milliseconds to retrieve the pricing data for. Default is '86400000' (24 hours).", "type": "str", "default": "86400000"}, "collectionid": {"description": "The ID of the NFT collection to retrieve data for. Default is '0xed5af388653567af2f388e6224dc7c4b3241c544'.", "type": "str", "default": "0xed5af388653567af2f388e6224dc7c4b3241c544"}, "intervalms": {"description": "The time interval in milliseconds for data points in the chart. Default is '300000' (5 minutes).", "type": "str", "default": "300000"}}}
{"name": "autocomplete_zipcodes_lite", "description": "Fetches autocomplete suggestions for USA zip codes using the provided RapidAPI key.", "parameters": {"zipcode": {"description": "The zip code for which to fetch autocomplete suggestions.", "type": "str", "default": "110"}}}
{"name": "people_id", "description": "Fetches and returns information about a person from the TVmaze API using the given person ID and RapidAPI key.", "parameters": {"is_id": {"description": "The ID of the person to retrieve information for from the TVmaze API.", "type": "int", "default": ""}}}
{"name": "tsv2", "description": "Fetches values from a specified data subset within a dataset using the ODAM RapidAPI.", "parameters": {"subset": {"description": "Identifier for the data subset.", "type": "str", "default": "samples"}, "dataset": {"description": "Identifier for the dataset.", "type": "str", "default": "frim1"}, "limit": {"description": "Limits the number of lines in the output table. Defaults to 10. A value of 0 means no limit.", "type": "int, optional", "default": 10}, "debug": {"description": "Debug status. When set to a non-zero value, debug mode is enabled. Defaults to 0.", "type": "int, optional", "default": 0}, "format": {"description": "Output format. Defaults to 'tsv'.", "type": "str, optional", "default": "tsv"}}}
{"name": "get_5_day_historical_daily_prices", "description": "Fetches 5 days of historical daily stock prices including adjusted Open, High, Low, Close prices, daily volume, dividend, and split information for a given ticker symbol.", "parameters": {"ticker": {"description": "The stock ticker symbol for which to retrieve historical data.", "type": "str", "default": "AAPL"}}}
{"name": "get_greet", "description": "Generates a greeting message based on the provided name and cringe level, using the RapidAPI greet generator.", "parameters": {"name": {"description": "The name to be included in the greeting.", "type": "str", "default": "Amir"}, "cringelevel": {"description": "The level of cringiness for the greeting.", "type": "str", "default": "5"}}}
{"name": "forex_intraday", "description": "Fetches intraday time series data (Date, Open, High, Low, Close, Volume) for a given currency pair.", "parameters": {"interval": {"description": "Time interval for the data points, e.g., `1` for 1-minute interval, `5` for 5-minute interval.", "type": "int", "default": "1"}, "symbol": {"description": "The symbol of the currency pair to query, e.g., `EUR/USD`, `EUR-USD`, or `EURUSD`.", "type": "str", "default": "EUR/USD"}, "to": {"description": "The query end date and time in the format `YYYY-mm-dd HH:MM` or just `YYYY-mm-dd`.", "type": "str", "default": "2020-04-21 10:30"}, "is_from": {"description": "The query start date and time in the format `YYYY-mm-dd HH:MM` or just `YYYY-mm-dd`.", "type": "str", "default": "2020-04-21 10:00"}}}
{"name": "check_movie_status", "description": "Check the status of a movie session using the provided VSID via the RapidAPI service.", "parameters": {"vsid": {"description": "The video session ID obtained from the Start Movie Session API call response.", "type": "str", "default": ""}}}
{"name": "get_taboo_words_from_word", "description": "Fetches a list of taboo words associated with the given word using a specified API.", "parameters": {"word": {"description": "The word for which to retrieve taboo words.", "type": "str", "default": "laptop"}, "forbiddenwordlimit": {"description": "The number of taboo words to return, defaults to 5 and has a maximum of 10.", "type": "int, optional", "default": "5"}}}
{"name": "get_transaction_v2", "description": "Fetches normalized transaction data from a specified blockchain using the provided transaction ID and API key.", "parameters": {"blockchain": {"description": "The name of the blockchain to query.", "type": "str", "default": "bitcoin"}, "txid": {"description": "The transaction ID for the desired transaction.", "type": "str", "default": "cd8ec77174e426070d0a50779232bba7312b712e2c6843d82d963d7076c61366"}}}
{"name": "followers_by_username", "description": "Fetches the followers list for a given Instagram username using the RapidAPI service.", "parameters": {"username": {"description": "The Instagram username for which to fetch the followers.", "type": "str", "default": "therock"}, "nextmaxid": {"description": "The ID to fetch the next page of results (used for pagination). Defaults to None.", "type": "str, optional", "default": ""}, "corsenabled": {"description": "A flag to enable CORS. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "fan_rating", "description": "Retrieve the fan rating for a given event using the event ID and an optional RapidAPI key.", "parameters": {"event_id": {"description": "The unique identifier for the event whose fan rating is to be retrieved.", "type": "int", "default": "10253769"}}}
{"name": "get_weekly_popular_books_by_genre", "description": "Retrieve the most popular books from the past week based on a specified genre.", "parameters": {"genre": {"description": "The genre of books to retrieve.", "type": "str", "default": "horror"}, "number_results": {"description": "The number of results to return. Defaults to 10.", "type": "int, optional", "default": "10"}}}
{"name": "fetch_business_data", "description": "Fetches business-related information associated with a given WhatsApp business account phone number using the Toolbench RapidAPI.", "parameters": {"phone": {"description": "The phone number of the WhatsApp business account for which data is being requested.", "type": "int", "default": "34655719560"}}}
{"name": "time", "description": "Retrieves the current time token from the PubNub Network.", "parameters": {"callback": {"description": "JSONP callback function name.", "type": "str", "default": "0"}}}
{"name": "weather_dataset", "description": "Fetches weather data from the Weather Dataset API using provided parameters.", "parameters": {"data": {"description": "The specific weather data to query from the API. Defaults to '1'.", "type": "str", "default": "1"}}}
{"name": "list_of_markets", "description": "Fetches a list of markets based on the provided parameters. Initially, a snapshot call should be issued followed by delta calls to capture changes since the given `since` value. This function utilizes an API to return market data based on the various filters specified in the parameters.", "parameters": {"sport_id": {"description": "The ID of the sport for which markets data is requested.", "type": "int", "default": 1}, "league_ids": {"description": "The ID of the league to filter the markets. Defaults to None.", "type": "int, optional", "default": ""}, "event_type": {"description": "The type of event, either 'prematch' or 'live'. Defaults to None.", "type": "str, optional", "default": ""}, "event_ids": {"description": "The ID of the event to filter the markets. Defaults to None.", "type": "int, optional", "default": ""}, "is_have_odds": {"description": "Indicates if only matches with open odds or future odds should be returned (True or False). Defaults to None.", "type": "bool, optional", "default": true}, "since": {"description": "The UTC timestamp since when to fetch changes. Calls return changes since the provided `since` value. Defaults to None.", "type": "int, optional", "default": ""}}}
{"name": "commonports", "description": "Fetches registered service names and transport protocol port numbers based on given parameters using the Toolbench RapidAPI service.", "parameters": {"port": {"description": "The port number to query for (default is '53').", "type": "str", "default": "53"}, "protocol": {"description": "The transport protocol to query for (default is 'tcp').", "type": "str", "default": "tcp"}, "service": {"description": "The service name to query for (default is None).", "type": "str", "default": ""}}}
{"name": "timezone_for_location", "description": "Fetch the current time for a given location and area using the World Time API.", "parameters": {"location": {"description": "The specific location for which to fetch the time (e.g., \"London\").", "type": "str", "default": "London"}, "area": {"description": "The larger area or region that the location falls within (e.g., \"Europe\").", "type": "str", "default": "Europe"}}}
{"name": "state", "description": "Fetch a list of sub-regions/states/provinces/departments of the world's countries based on specified filters.", "parameters": {"limit": {"description": "Maximum number of records to return. Default is 250.", "type": "int, optional", "default": "250"}, "iso_a2": {"description": "Two-letter country code to filter results. Default is 'us'.", "type": "str, optional", "default": "us"}, "iso_3166_2": {"description": "Subregion's ISO-3166-2 letter code to filter results.", "type": "str, optional", "default": ""}, "fields": {"description": "Comma-separated list of fields to include in the result. Default is 'iso_a2'.", "type": "str, optional", "default": "iso_a2"}, "name": {"description": "Partial name filter for states in the specified language. Default is 'tex'.", "type": "str, optional", "default": "tex"}, "lang": {"description": "ISO 639-1 language code for language selection. Overrides Accept-Language header. Default is 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "address_reverse_geocoding", "description": "Reverse geocoding to obtain address information for given coordinates.", "parameters": {"coord": {"description": "Latitude and longitude coordinates in a comma-separated format.", "type": "str", "default": "35.624822,139.742121"}, "datum": {"description": "Geodetic system of the latitude and longitude coordinates.", "type": "str, optional", "default": "wgs84"}, "coord_unit": {"description": "Unit of the latitude and longitude coordinates.", "type": "str, optional", "default": "degree"}}}
{"name": "top_artists_duo_group", "description": "Fetches the YEAR-END Top Artists - Duo/Group chart information for a given year.", "parameters": {"year": {"description": "The year for which to retrieve the chart information in the format 'YYYY'. Defaults to '2022' if not provided.", "type": "str", "default": "2022"}}}
{"name": "get_playlist", "description": "Fetches playlist details from the Spotify Data API using the provided playlist ID.", "parameters": {"is_id": {"description": "The ID of the playlist to fetch.", "type": "str", "default": "37i9dQZF1DX1ZQxccKVEtV"}}}
{"name": "growth_estimate", "description": "Retrieves growth estimate data for a given stock ticker using the Toolbench RapidAPI.", "parameters": {"ticker": {"description": "The stock ticker symbol for which the growth estimate is requested.", "type": "str", "default": "AAPL"}}}
{"name": "get_album_metadata", "description": "Fetches full metadata details of a specified album using the Spotify Scraper API.", "parameters": {"albumid": {"description": "The unique ID of the album for which metadata is to be retrieved.", "type": "str", "default": "5Otajf16kZ0zkVZWhu7LtO"}}}
{"name": "cards", "description": "This function draws multiple cards from a regular 52-card playing deck using the Card Draw Simulator API.", "parameters": {"value": {"description": "The value of the card(s) to draw (e.g., 'A', '2', '3', ... 'K'). Defaults to 'all'.", "type": "str, optional", "default": "all"}, "suit": {"description": "The suit of the card(s) to draw (e.g., '♠', '♣', '♥', '♦'). Defaults to '♠'.", "type": "str, optional", "default": "♠"}, "back": {"description": "Indicates whether to draw the back of the card. Defaults to 'false'.", "type": "str, optional", "default": "false"}, "pulls": {"description": "The number of cards to draw. Defaults to '10'.", "type": "str, optional", "default": "10"}}}
{"name": "veiculo_tipo_id_marca_id_modelo", "description": "Sends a GET request to the veiculos API to retrieve vehicle information based on the type, brand, and model provided.", "parameters": {"id_marca": {"description": "The ID of the vehicle's brand.", "type": "str", "default": "6"}, "id_modelo": {"description": "The ID of the vehicle's model.", "type": "str", "default": "43"}, "veiculo_tipo": {"description": "The type of the vehicle (e.g., car, bike).", "type": "str", "default": "carros"}}}
{"name": "sign", "description": "Fetch horoscope information for a given astrological sign using the Horoscope Astrology API.", "parameters": {"s": {"description": "The astrological sign to fetch information for. Valid options include 'aries', 'taurus', 'gemini', 'cancer', 'leo', 'virgo', 'libra', 'scorpio', 'sagittarius', 'capricorn', 'aquarius', and 'pisces'.", "type": "str", "default": "libra"}}}
{"name": "downalods_hotels", "description": "Downloads a list of hotels based on various filters and returns the response.", "parameters": {"active_mer": {"description": "Show hotels with Priceline rates.", "type": "str, optional", "default": ""}, "latitude_range_end": {"description": "Endpoint of the latitude range; requires `latitude` to have a value.", "type": "str, optional", "default": ""}, "active_smop": {"description": "Show hotels with semi-opaque rates.", "type": "str, optional", "default": ""}, "active_vmer": {"description": "Show hotels with vacation merchant rates.", "type": "str, optional", "default": ""}, "state_code": {"description": "Filter by the state code of the hotel.", "type": "str, optional", "default": ""}, "longitude_range_end": {"description": "Endpoint of the longitude range; requires `longitude` to have a value.", "type": "str, optional", "default": ""}, "active_bkg": {"description": "Show hotels with Booking rates.", "type": "str, optional", "default": ""}, "latitude": {"description": "Filter by the latitude of the hotel.", "type": "str, optional", "default": ""}, "hotelid_ppn": {"description": "Filter by PPN hotel ID.", "type": "str, optional", "default": ""}, "longitude": {"description": "Filter by the longitude of the hotel.", "type": "str, optional", "default": ""}, "property_type_ids": {"description": "Filter by property type IDs. See the Property Type Filter Guide for more details.", "type": "str, optional", "default": ""}, "cityid_ppn": {"description": "Filter by PPN city ID.", "type": "str, optional", "default": ""}, "hotel_address": {"description": "Filter by the address of the hotel.", "type": "str, optional", "default": ""}, "resume_key": {"description": "Resume results from the given ID.", "type": "str, optional", "default": ""}, "language": {"description": "Language code in the format of 'xx-XX'. For example, en-US, es-ES, fr-FR, pt-BR.", "type": "str, optional, default='fr-FR'", "default": "fr-FR"}, "limit": {"description": "Limits the number of results returned in the response.", "type": "int, optional, default=100", "default": 100}, "active_agd": {"description": "Show hotels with Agoda rates.", "type": "str, optional", "default": ""}, "country_code": {"description": "Filter by the country code of the hotel.", "type": "str, optional", "default": ""}, "changes_since": {"description": "Filter hotels that have been updated on or after this date. Must be in ISO 8601 format (YYYY-MM-DDThh:mm:ss{UTC_Offset}).", "type": "str, optional", "default": ""}}}
{"name": "getmentions", "description": "Fetches Twitter mentions for a given query using the specified parameters.", "parameters": {"query": {"description": "The search query to find mentions for (e.g., brand name, competitor).", "type": "str", "default": ""}, "period": {"description": "The time period for mentions, in days. Defaults to None.", "type": "int, optional", "default": ""}, "page": {"description": "The page number of results to retrieve. Defaults to 1.", "type": "int, optional", "default": "1"}}}
{"name": "gethardquestion", "description": "Fetches the number of hard questions solved by a specified user on LeetCode using the RapidAPI service.", "parameters": {"username": {"description": "The LeetCode username of the user whose hard question count is to be retrieved.", "type": "str", "default": "mujtabah258"}}}
{"name": "consulta_cep", "description": "Fetches information about a given CEP (Postal Code) using the RapidAPI service.", "parameters": {"cep": {"description": "The Brazilian postal code (CEP) to be queried.", "type": "str", "default": "01452922"}}}
{"name": "engines", "description": "Fetches engine information from a car API based on various query parameters.", "parameters": {"year": {"description": "The year of the vehicle.", "type": "str, optional", "default": ""}, "direction": {"description": "The direction to sort the results by, either 'asc' or 'desc'. Defaults to 'asc'.", "type": "str, optional", "default": "asc"}, "valves": {"description": "The number of valves in the engine.", "type": "str, optional", "default": ""}, "valve_timing": {"description": "The valve timing of the engine.", "type": "str, optional", "default": ""}, "fuel_type": {"description": "The fuel type of the vehicle.", "type": "str, optional", "default": ""}, "json": {"description": "A JSON string for complex queries.", "type": "str, optional", "default": ""}, "model": {"description": "The model of the vehicle.", "type": "str, optional", "default": ""}, "make": {"description": "The make of the vehicle.", "type": "str, optional", "default": ""}, "make_model_id": {"description": "The ID of the make and model.", "type": "str, optional", "default": ""}, "trim": {"description": "The trim level of the vehicle.", "type": "str, optional", "default": ""}, "cam_type": {"description": "The cam type of the engine.", "type": "str, optional", "default": ""}, "engine_type": {"description": "The type of the engine.", "type": "str, optional", "default": ""}, "make_model_trim_id": {"description": "The ID of the make, model, and trim.", "type": "str, optional", "default": ""}, "limit": {"description": "The maximum number of results to return.", "type": "int, optional", "default": ""}, "drive_type": {"description": "The drive type of the vehicle.", "type": "str, optional", "default": ""}, "verbose": {"description": "Include additional information such as make, model, and trim when 'yes'. Defaults to 'yes'.", "type": "str, optional", "default": "yes"}, "make_id": {"description": "The ID of the make.", "type": "str, optional", "default": ""}, "cylinders": {"description": "The number of cylinders in the engine.", "type": "str, optional", "default": ""}, "page": {"description": "The page number of the results.", "type": "int, optional", "default": ""}, "sort": {"description": "The field to sort the results by. Defaults to 'id'.", "type": "str, optional", "default": "id"}, "size": {"description": "The size of the engine.", "type": "str, optional", "default": ""}, "horsepower_hp": {"description": "The horsepower of the engine in HP.", "type": "str, optional", "default": ""}, "transmission": {"description": "The type of transmission in the vehicle.", "type": "str, optional", "default": ""}}}
{"name": "real_time_price", "description": "Retrieves the real-time price of the specified financial instrument.", "parameters": {"symbol": {"description": "The instrument symbol, which can be any equity, index, ETF, forex, or cryptocurrency (e.g., `AAPL`, `EUR/USD`, `ETH/BTC`).", "type": "str", "default": "AMZN"}, "format": {"description": "The format of the response. Can be 'CSV' or 'JSON'. Default is 'JSON'.", "type": "str, optional", "default": "json"}, "outputsize": {"description": "The number of data points to return. Default is 30.", "type": "int, optional", "default": 30}}}
{"name": "articles_v2_list_trending", "description": "Fetches a list of trending articles from the Seeking Alpha API within a specified date range and limits the response size.", "parameters": {"since": {"description": "Unix timestamp to filter articles from this date onwards. Use together with 'until' parameter to specify a date range.", "type": "int, optional", "default": ""}, "until": {"description": "Unix timestamp to filter articles up to this date. Use together with 'since' parameter to specify a date range.", "type": "int, optional", "default": ""}, "size": {"description": "Number of items per response (max 40). Defaults to 20.", "type": "int, optional", "default": "20"}}}
{"name": "points_point_forecast", "description": "Fetches weather forecast data for a specific geographic point using the National Weather Service API.", "parameters": {"point": {"description": "Geographic coordinate in the format 'latitude,longitude' (EPSG:4326).", "type": "str", "default": ""}}}
{"name": "by_city_name", "description": "Fetch weather data from the RapidWeather API by city name.", "parameters": {"q": {"description": "City name, state code, and country code divided by commas (e.g., \"London,UK\").", "type": "str", "default": "London,UK"}, "units": {"description": "Units of measurement. Either \"standard\", \"metric\", or \"imperial\".", "type": "str, optional", "default": ""}, "lang": {"description": "Language code to get the output in a specific language.", "type": "str, optional", "default": ""}}}
{"name": "gethomepage", "description": "Fetch limited radio station data to display on the homepage.", "parameters": {"limit": {"description": "The number of radio stations to retrieve. Default is 10.", "type": "int, optional", "default": "10"}}}
{"name": "leagues_v2_get_table", "description": "Fetches the league table data for a specified category and competition using the RapidAPI service.", "parameters": {"ccd": {"description": "The Ccd field value obtained from the .../leagues/v2/list endpoint.", "type": "str", "default": "england"}, "category": {"description": "The category of the sport. One of the following: 'soccer', 'cricket', 'basketball', 'tennis', 'hockey'.", "type": "str", "default": "soccer"}, "scd": {"description": "The Scd field value obtained from the .../leagues/v2/list endpoint.", "type": "str", "default": "premier-league"}}}
{"name": "feed_by_username", "description": "Fetches the current Instagram feed for a given username.", "parameters": {"username": {"description": "The Instagram username for which to fetch the feed.", "type": "str", "default": "therock"}, "raw": {"description": "If set to True or '1', returns the raw, unprocessed data feed. Defaults to None.", "type": "bool, optional", "default": ""}}}
{"name": "ip_address_lookup", "description": "Retrieves geolocation data for a given IP address using the Toolbench RapidAPI service.", "parameters": {"ip": {"description": "The IP address to look up.", "type": "str", "default": "98.207.254.136"}}}
{"name": "getfaqs", "description": "Fetch FAQs for a specified page from the Election 2020 Smartable API.", "parameters": {"page": {"description": "The identifier for the specific FAQ page to retrieve.", "type": "str", "default": ""}}}
{"name": "dinotest", "description": "Tests the specified endpoint using the provided RapidAPI key and returns the response.", "parameters": {"num": {"description": "The endpoint number to be tested.", "type": "str", "default": ""}}}
{"name": "public_holidays", "description": "Fetches the public holidays for a given year and country.", "parameters": {"countrycode": {"description": "The code of the country for which to fetch public holidays (e.g., 'US' for the United States).", "type": "str", "default": "US"}, "year": {"description": "The year for which to fetch public holidays.", "type": "str", "default": "2019"}}}
{"name": "count_of_days", "description": "Fetches the count of days in the current Hebrew year from a given date string or today's date.", "parameters": {"datestring": {"description": "The date for which the number of days in the current Hebrew year is to be determined.", "type": "str", "default": "2021-03-30"}}}
{"name": "search_by_url", "description": "Fetches data from a given Zillow URL using the RapidAPI key for authentication.", "parameters": {"currentpage": {"description": "The page number to retrieve. Defaults to 1.", "type": "int, optional", "default": "1"}, "url": {"description": "The Zillow URL to fetch data from. Defaults to a predefined URL for Brownsville, TX rentals.", "type": "str, optional", "default": "https://www.zillow.com/brownsville-tx/rentals/?searchQueryState=%7B%22pagination%22%3A%7B%7D%2C%22usersSearchTerm%22%3A%22Brownsville%2C%20TX%22%2C%22mapBounds%22%3A%7B%22west%22%3A-97.80795063281249%2C%22east%22%3A-96.96200336718749%2C%22south%22%3A25.648006723151287%2C%22north%22%3A26.253066850624663%7D%2C%22regionSelection%22%3A%5B%7B%22regionId%22%3A51167%2C%22regionType%22%3A6%7D%5D%2C%22isMapVisible%22%3Atrue%2C%22filterState%22%3A%7B%22ah%22%3A%7B%22value%22%3Atrue%7D%2C%22price%22%3A%7B%22min%22%3A40569%2C%22max%22%3A243413%7D%2C%22mp%22%3A%7B%22min%22%3A200%2C%22max%22%3A1200%7D%2C%22beds%22%3A%7B%22min%22%3A1%7D%2C%22cmsn%22%3A%7B%22value%22%3Afalse%7D%2C%22fr%22%3A%7B%22value%22%3Atrue%7D%2C%22fsba%22%3A%7B%22value%22%3Afalse%7D%2C%22fsbo%22%3A%7B%22value%22%3Afalse%7D%2C%22nc%22%3A%7B%22value%22%3Afalse%7D%2C%22auc%22%3A%7B%22value%22%3Afalse%7D%2C%22fore%22%3A%7B%22value%22%3Afalse%7D%2C%22sqft%22%3A%7B%22min%22%3A750%2C%22max%22%3A1500%7D%7D%2C%22isListVisible%22%3Atrue%7D"}}}
{"name": "syntax_status_syntax_ticket_get", "description": "Fetch the result of a syntax check using a provided ticket from the IFC BIM Services API via RapidAPI.", "parameters": {"ticket": {"description": "The unique identifier for the syntax check result to be retrieved.", "type": "str", "default": ""}}}
{"name": "pursuit", "description": "Performs a search for files using specified query parameters on FilePursuit and returns the search results.", "parameters": {"q": {"description": "The search query.", "type": "str", "default": ""}, "filetype": {"description": "The file extension to filter results by. Only one file extension is accepted per query.", "type": "str, optional", "default": ""}, "type": {"description": "The file extension to filter results by. Only one file extension is accepted per query.", "type": "str, optional", "default": ""}, "sort": {"description": "The sorting order of the results. Accepted values are 'sizeasc', 'sizedesc', 'dateasc', 'datedesc', 'fileasc', and 'filedesc'. By default, 'datedesc' is selected.", "type": "str, optional", "default": ""}, "start": {"description": "The starting count for pagination.", "type": "int, optional", "default": ""}}}
{"name": "three_hourly", "description": "Fetches a three-hourly weather forecast for a given location up to 14 days, with optional historical data and various configurable parameters.", "parameters": {"location": {"description": "The location for which to fetch the weather forecast.", "type": "str", "default": "102643743"}, "history": {"description": "Whether to include 24 hours of past data. Defaults to None.", "type": "bool, optional", "default": "0"}, "tz": {"description": "Time zone in the response, specified using IANA time zone database names. Defaults to 'Europe/London'.", "type": "str, optional", "default": "Europe/London"}, "dataset": {"description": "The variable set to use in the response. Defaults to 'full'.", "type": "str, optional", "default": "full"}, "tempunit": {"description": "The temperature unit in the response (e.g., 'C' for Celsius). Defaults to 'C'.", "type": "str, optional", "default": "C"}, "alt": {"description": "The altitude in meters. Defaults to 0.", "type": "int, optional", "default": "0"}, "periods": {"description": "The number of time steps in the response, with a default of 8 and a maximum of 12. Defaults to 8.", "type": "int, optional", "default": "8"}, "windunit": {"description": "The wind speed unit in the response (e.g., 'MS' for meters per second). Defaults to 'MS'.", "type": "str, optional", "default": "MS"}}}
{"name": "get_food_by_id", "description": "Fetches food information from a remote API using a given food ID.", "parameters": {"is_id": {"description": "The unique identifier of the food item to retrieve information for.", "type": "str", "default": "63c2e83b09852be5facb894a"}}}
{"name": "team_roster", "description": "Fetches and returns the roster for a specified football team using the RapidAPI service.", "parameters": {"team": {"description": "The abbreviation of the football team (e.g., BUF, NE, MIA).", "type": "str", "default": "NE"}}}
{"name": "season_episodes", "description": "Fetch episodes for a given season from the Netflix RapidAPI.", "parameters": {"ids": {"description": "Season IDs (separated by commas) for which episodes are to be fetched.", "type": "str", "default": "80077209,80117715"}, "lang": {"description": "Language code for the episodes. Defaults to 'en'.", "type": "str, optional", "default": "en"}, "limit": {"description": "The maximum number of episodes to return. Defaults to 25.", "type": "int, optional", "default": "25"}, "offset": {"description": "The offset for pagination. Defaults to 0.", "type": "int, optional", "default": "0"}}}
{"name": "get_user_favorite_videos", "description": "Fetches a list of favorite videos for a given user from the TikTok video feature summary API.", "parameters": {"cursor": {"description": "Position in the list to start fetching the videos from. Defaults to '0'.", "type": "str", "default": "0"}, "user_id": {"description": "The user ID for which to fetch favorite videos. Defaults to '6741307595983946754'.", "type": "str", "default": "6741307595983946754"}, "unique_id": {"description": "The unique identifier for the user, can be either a username or handle (e.g., 'voyagel' or '@voyagel'). Defaults to 'voyagel'.", "type": "str", "default": "voyagel"}, "count": {"description": "The number of favorite videos to fetch. Defaults to '10'.", "type": "str", "default": "10"}}}
{"name": "v1_hashtag_posts_hashtag_id", "description": "Fetches videos associated with a specific hashtag ID using the provided API key.", "parameters": {"hashtag_id": {"description": "The ID of the hashtag to search for.", "type": "str", "default": "2878999"}, "count": {"description": "The number of videos to retrieve. Defaults to 10.", "type": "int, optional", "default": 10}, "offset": {"description": "The offset for pagination. Use the 'cursor' value from a previous response where 'hasMore' is 1 for the next set of results. Defaults to 0.", "type": "int, optional", "default": 0}}}
{"name": "footballersbyclub", "description": "Fetches a list of footballers for a specified club using the Premier League Stats API.", "parameters": {"club": {"description": "The name of the football club to retrieve the list of footballers for.", "type": "str", "default": "Arsenal"}}}
{"name": "leaguemedia", "description": "Fetches media content for a specified football tournament, including images and videos.", "parameters": {"tournamentid": {"description": "The ID of the tournament for which you want to retrieve media.", "type": "int", "default": 7}}}
{"name": "areas_id", "description": "Fetches area details from the Zeus API using a given area ID.", "parameters": {"is_id": {"description": "The unique identifier for the area to fetch details for.", "type": "str", "default": "ITA"}}}
{"name": "get_specific_ayah_verse", "description": "Fetches a specific Ayah (verse) from a given chapter in the Quran, with details in JSON format.", "parameters": {"chapterid": {"description": "The chapter (Surah) number to fetch the verse from. Must be between 1 and 114.", "type": "int", "default": "38"}, "verseid": {"description": "The verse (Ayah) number to fetch within the specified chapter. Must be a valid verse number within the chapter.", "type": "int", "default": "29"}}}
{"name": "searchcountries", "description": "Search for countries based on a keyword, with support for pagination and sorting.", "parameters": {"keyword": {"description": "The search keyword to find matching countries. The search is case insensitive.", "type": "str", "default": "uni"}, "page": {"description": "The page number for pagination.", "type": "int", "default": 1}, "limit": {"description": "The maximum number of results to return per page.", "type": "int", "default": 20}, "sortby": {"description": "The sorting criteria in the format `field:order`, e.g., `name:desc`, `alpha-2:asc`. Use `asc` for ascending order and `desc` for descending order.", "type": "str", "default": "name:asc"}}}
{"name": "search_places", "description": "Fetches a list of places (either countries, cities, or administrative divisions) that match a query and can be filtered by various properties.", "parameters": {"type": {"description": "Filters places by `type`. Specifiable values are 'CITY', 'ADMIN_DIVISION_1', 'ADMIN_DIVISION_2', and 'COUNTRY'. Default is 'CITY'.", "type": "str", "default": "CITY"}, "language": {"description": "Specifies the language (ISO 639-1) to get the localized name of the place. If translation is unavailable, the \"localizedName\" property will be null.", "type": "str", "default": ""}, "skip": {"description": "Number of places to ignore before beginning to return results. Used with `limit` to paginate results. Defaults to 0.", "type": "int", "default": "0"}, "country": {"description": "Filters places by their country `id`. Multiple values can be specified, separated by commas (e.g., 'US,CA'). Default is 'US,CA'.", "type": "str", "default": "US,CA"}, "limit": {"description": "Maximum number of places to return. Used with `skip` to paginate results. Default is 10, maximum is 100.", "type": "int", "default": "10"}, "admindivision1": {"description": "Filters places by their adminDivision1 `id`. Multiple values can be specified, separated by commas (e.g., 'US.CA,US.DE').", "type": "str", "default": ""}, "admindivision2": {"description": "Filters places by their adminDivision2 `id`. Multiple values can be specified, separated by commas.", "type": "str", "default": ""}, "accuracyradiuskm": {"description": "Maximum radius (in kilometers) from the point specified by `latitude` and `longitude` to filter places located within the area. Default is 100 km.", "type": "int", "default": ""}, "latitude": {"description": "Latitude coordinate to filter places by location. Ignored if `longitude` is not specified.", "type": "int", "default": ""}, "q": {"description": "Query string to find places with a similar name. Default is 'New York'.", "type": "str", "default": "New York"}, "longitude": {"description": "Longitude coordinate to filter places by location. Ignored if `latitude` is not specified.", "type": "int", "default": ""}}}
{"name": "generatequiz", "description": "Generates a quiz based on the specified topic using the Quizy API.", "parameters": {"topic": {"description": "The topic for which the quiz needs to be generated.", "type": "str", "default": ""}}}
{"name": "get_store_info", "description": "Retrieves information on any store in Shopify using the provided RapidAPI key.", "parameters": {"page": {"description": "The page number to retrieve, defaults to None. If provided, it loads the specified page with results. Max page is 100.", "type": "str, optional", "default": ""}}}
{"name": "extract_sitemap_xml_as_json", "description": "Fetches and parses a sitemap.xml file from the given URL and returns its content in JSON format.", "parameters": {"url": {"description": "The URL of the sitemap.xml file to be fetched and parsed.", "type": "str", "default": "https://www.sitemaps.org/sitemap.xml"}, "meta": {"description": "If True, includes meta information for each URL in the sitemap. Defaults to None.", "type": "bool, optional", "default": "true"}, "breadcrumbs": {"description": "If True, includes breadcrumb information for each URL in the sitemap. Defaults to None.", "type": "bool, optional", "default": "true"}, "categories": {"description": "If True, includes category information for each URL in the sitemap. Defaults to None.", "type": "bool, optional", "default": "true"}}}
{"name": "format_number", "description": "Formats a given phone number using the Phone Validator API and returns the standardized format of the phone number.", "parameters": {"phone": {"description": "The phone number to be formatted.", "type": "int", "default": "34913353535"}}}
{"name": "trending_feed_video_posts", "description": "Fetches the current trending video posts from a social media platform using the specified API.", "parameters": {"limit": {"description": "The number of records to return in the response. Defaults to None, which returns up to 20 records.", "type": "int, optional", "default": ""}}}
{"name": "get_phone_image_ids_by_custom_id", "description": "Fetches up to 10 image IDs for a given phone using its custom ID.", "parameters": {"phonecustomid": {"description": "The custom ID of the phone for which image IDs are to be fetched.", "type": "int", "default": "103693"}}}
{"name": "get_private_keys", "description": "Fetches the private keys associated with a given firmware hash from the IoT VAS service using the provided RapidAPI key.", "parameters": {"firmware_hash": {"description": "SHA2 hash of the device firmware.", "type": "str", "default": "90e3e68e1c61850f20c50e551816d47d484d7feb46890f5bc0a0e0dab3e3ba0b"}}}
{"name": "reverse_php", "description": "Performs reverse geocoding using the specified API, longitude, and latitude.", "parameters": {"api": {"description": "Your API key for accessing the Geokeo reverse geocoding service.", "type": "str", "default": "api key from geokeo"}, "lng": {"description": "The longitude coordinate for the reverse geocoding request.", "type": "str", "default": "-73.9856"}, "lat": {"description": "The latitude coordinate for the reverse geocoding request.", "type": "str", "default": "40.74842"}}}
{"name": "search_hashtag", "description": "Fetch Instagram hashtags related to a given keyword using the Toolbench RapidAPI.", "parameters": {"keyword": {"description": "The keyword to search for associated Instagram hashtags.", "type": "str", "default": "love"}}}
{"name": "asset_markets_by_id", "description": "Retrieves asset markets information by given asset ID from the specified API.", "parameters": {"is_id": {"description": "The ID of the asset.", "type": "str", "default": "bitcoin"}}}
{"name": "tokens_all", "description": "Fetches data about tokens and optionally filters the results based on provided parameters.", "parameters": {"take": {"description": "The number of fields to retrieve.", "type": "int, optional", "default": ""}, "walletid": {"description": "Identifier for a specific wallet to filter tokens by.", "type": "str, optional", "default": ""}, "searchterms": {"description": "Terms to search for within the token data.", "type": "str, optional", "default": ""}, "chains": {"description": "Specific blockchains to filter tokens by.", "type": "str, optional", "default": ""}, "skip": {"description": "The number of fields to skip before starting to take.", "type": "int, optional", "default": ""}, "stableonly": {"description": "Whether to only include stablecoins.", "type": "bool, optional", "default": ""}, "ids": {"description": "Specific token IDs to retrieve data for.", "type": "str, optional", "default": ""}}}
{"name": "get_quotes_by_specific_category", "description": "Fetch a collection of quotes from a specific category using the World of Quotes API. It supports pagination and allows customizing the number of quotes returned per page.", "parameters": {"category": {"description": "The category of quotes to fetch.", "type": "str", "default": "age"}, "page": {"description": "The page number for pagination. Defaults to 2.", "type": "int, optional", "default": "2"}, "limit": {"description": "The maximum number of quotes to fetch per page. Defaults to 20.", "type": "int, optional", "default": "20"}}}
{"name": "teams_detail", "description": "Fetch detailed information about a specific team using its team ID.", "parameters": {"teamid": {"description": "The unique identifier of the team for which details are needed. This ID can be obtained from various endpoints like /teams/search, /matches/detail, etc.", "type": "int", "default": "38"}}}
{"name": "player_heatmap", "description": "Fetches the heatmap data for a specific player in a given season and tournament.", "parameters": {"player_id": {"description": "The unique identifier for the player.", "type": "int", "default": "12994"}, "seasons_id": {"description": "The identifier for the specific season.", "type": "int", "default": "37167"}, "unique_tournament_id": {"description": "The identifier for the specific tournament.", "type": "int", "default": "34"}}}
{"name": "select_race_based_on_id", "description": "Fetches the details of a specific race using its ID from the F1 race schedule API.", "parameters": {"is_id": {"description": "The ID of the race to fetch details for.", "type": "str", "default": "6141c76615d27e0de553b9d7"}}}
{"name": "us_de", "description": "Fetches current or historical gas price data for Delaware.", "parameters": {"date": {"description": "A specific date for querying historical gas price data. If not provided, the current gas price data is returned.", "type": "str, optional", "default": ""}}}
{"name": "businessplan", "description": "Generates a business plan for the given idea using the Business Starter API.", "parameters": {"idea": {"description": "The business idea for which the plan will be generated.", "type": "str", "default": ""}}}
{"name": "get_car_data", "description": "Fetch specifications, pictures, and average pricing of a car based on its model, year, and maker.", "parameters": {"model": {"description": "The model of the car.", "type": "str", "default": "chiron"}, "year": {"description": "The year the car was manufactured.", "type": "str", "default": "2021"}, "maker": {"description": "The manufacturer of the car.", "type": "str", "default": "bugatti"}}}
{"name": "list_playlist_videos", "description": "This function lists available videos of a given YouTube playlist. It supports pagination to retrieve multiple pages of results and ensures thumbnails are not blurred by age restrictions.", "parameters": {"nexttoken": {"description": "A string token for fetching the next page of data. If not specified, the first page of data is returned.", "type": "str, optional", "default": ""}, "playlistid": {"description": "The ID of the YouTube playlist. Defaults to 'PLeCdlPO-XhWFzEVynMsmosfdRsIZXhZi0'.", "type": "str, optional", "default": "PLeCdlPO-XhWFzEVynMsmosfdRsIZXhZi0"}, "lang": {"description": "The language code (ISO-639) for localized results. Defaults to 'en-US'. Unsupported codes will fallback to 'en-US'.", "type": "str, optional", "default": ""}}}
{"name": "profile_igtv", "description": "Fetches the IGTV channel profile information for a given Instagram username using the RapidAPI Instagram Scraper.", "parameters": {"username": {"description": "The Instagram username to fetch the IGTV profile for. Default is 'kimkardashian'.", "type": "str", "default": "kimkardashian"}, "nextmaxid": {"description": "The next max ID for pagination, if any. Default is None.", "type": "str, optional", "default": ""}}}
{"name": "retrieving_a_collection", "description": "Retrieve detailed information about a specific collection on OpenSea, including real-time statistics such as floor price.", "parameters": {"collection_slug": {"description": "The unique identifier for the collection on OpenSea.", "type": "str", "default": "ongakucraft"}}}
{"name": "emailverifications", "description": "Verifies a list of email addresses using the Fast Email Verifier API.", "parameters": {"emailsimple": {"description": "Comma-separated list of email addresses to verify. Default is 'mbavazijoshua@gmail.com,apisolution@gmail.com'.", "type": "str", "default": "mbavazijoshua@gmail.com,apisolution@gmail.com"}}}
{"name": "revise", "description": "Revise and correct the given text using a specified content type and API key.", "parameters": {"content_type": {"description": "The content type of the text to be processed.", "type": "str", "default": "application/json"}, "text": {"description": "The text to be revised and corrected.", "type": "str", "default": "I has two eye"}}}
{"name": "get_quote_of_the_day", "description": "Fetches the quote of the day from the World of Quotes API. The quote can optionally be filtered by a specific author or category.", "parameters": {"author": {"description": "The author of the quote. Defaults to None.", "type": "str, optional", "default": ""}, "category": {"description": "The category of the quote, e.g., 'inspirational'. Defaults to 'inspirational'.", "type": "str, optional", "default": "inspirational"}}}
{"name": "behence", "description": "Check the availability of a given username on Behance using the Toolbench RapidAPI service.", "parameters": {"username": {"description": "The username to check for availability on Behance.", "type": "str", "default": "username"}}}
{"name": "video_subtitles", "description": "Fetches the available subtitles for a given YouTube video using the specified RapidAPI key.", "parameters": {"video_id": {"description": "The ID of the YouTube video for which subtitles are to be fetched.", "type": "str", "default": "PuQFESk0BrA"}}}
{"name": "detailed_cocktail_recipe_by_id", "description": "Fetches a detailed cocktail recipe by its ID from the Cocktail DB API.", "parameters": {"is_id": {"description": "The ID of the cocktail to fetch the recipe for.", "type": "str", "default": "45"}}}
{"name": "lines_line", "description": "Fetches all poems from Poetry DB that contain a specific line or part of the line.", "parameters": {"line": {"description": "The line or part of a line to search for in the poems.", "type": "str", "default": "Shall I Compare Thee"}}}
{"name": "verify_an_email", "description": "Verifies a single email address using the Blaze Verify API. If a verification request takes longer than the specified timeout, retries are allowed for up to 5 minutes. The verification result is returned once available.", "parameters": {"email": {"description": "The email address to be verified.", "type": "str", "default": ""}, "accept_all": {"description": "Whether to perform an accept-all check, which can increase response time. Default is False.", "type": "bool, optional", "default": ""}, "smtp": {"description": "Whether to include the SMTP step in the verification, which can also increase response time. Default is True.", "type": "bool, optional", "default": ""}, "timeout": {"description": "The timeout in seconds to wait for a response. Minimum is 2, and maximum is 30. Default is 5.", "type": "int, optional", "default": ""}}}
{"name": "consulta_cadastro_de_contribuintes", "description": "Retrieves taxpayer registration details from the Centralized Taxpayer Registry.", "parameters": {"taxid": {"description": "The taxpayer identification number.", "type": "str", "default": "84447804000123"}, "maxage": {"description": "The maximum age of the data in days. Defaults to 30.", "type": "int, optional", "default": "30"}, "states": {"description": "Comma-separated states for including taxpayer registry information. Use 'BR' for all states. Defaults to 'BR'.", "type": "str, optional", "default": "BR"}}}
{"name": "top_backlinks", "description": "Fetches the list of top backlinks for a given domain using the Best Backlink Checker API.", "parameters": {"domain": {"description": "The domain for which to retrieve the top backlinks.", "type": "str", "default": "getecz.com"}}}
{"name": "random_bank_by_id", "description": "Fetch a random fake bank record by its ID.", "parameters": {"is_id": {"description": "The ID of the fake bank record to retrieve.", "type": "int", "default": "1"}}}
{"name": "teamimage", "description": "Fetch the image in PNG format for a given team using the MMA RapidAPI.", "parameters": {"is_id": {"description": "The ID of the team for which the image is being retrieved.", "type": "int", "default": 469994}}}
{"name": "leaderboard", "description": "Fetches leaderboard information for a given golf tournament, including player round details and live tournament status.", "parameters": {"tournament_id": {"description": "The unique identifier of the golf tournament.", "type": "int", "default": "25"}}}
{"name": "seasonal_market_statistics_points", "description": "Fetches the seasonal market points statistics for a specified basketball team.", "parameters": {"teamid": {"description": "The ID of the basketball team.", "type": "int", "default": "1442"}}}
{"name": "v1_stars", "description": "Fetches a list of stars matching specified parameters with a maximum of 30 results per request. To access more than 30 results, use the offset parameter to paginate through multiple API calls.", "parameters": {"min_distance_light_year": {"description": "Minimum distance of the star from Earth in light years.", "type": "int, optional", "default": ""}, "min_apparent_magnitude": {"description": "Minimum apparent magnitude (brightness) of the star.", "type": "int, optional", "default": ""}, "constellation": {"description": "Identifier of the constellation the star belongs to.", "type": "int, optional", "default": ""}, "max_apparent_magnitude": {"description": "Maximum apparent magnitude (brightness) of the star.", "type": "int, optional", "default": ""}, "offset": {"description": "Number of results to skip for pagination.", "type": "int, optional", "default": ""}, "name": {"description": "Name of the star. Note that many star names contain Greek characters. Default is 'vega'.", "type": "str, optional", "default": "vega"}, "max_absolute_magnitude": {"description": "Maximum absolute magnitude (brightness) of the star.", "type": "int, optional", "default": ""}, "min_absolute_magnitude": {"description": "Minimum absolute magnitude (brightness) of the star.", "type": "int, optional", "default": ""}, "max_distance_light_year": {"description": "Maximum distance of the star from Earth in light years.", "type": "int, optional", "default": ""}}}
{"name": "convert_planet_angle_to_planet_degree", "description": "Convert a planet angle to degree format using the Yawin Indian Astrology API.", "parameters": {"angle": {"description": "The planet angle string to be converted (e.g., '67.34.0').", "type": "str", "default": "67.34.0"}}}
{"name": "get_available_job_titles", "description": "Fetches available LinkedIn job titles based on a provided name using the Toolbench RapidAPI service.", "parameters": {"name": {"description": "The name or keyword to search for job titles.", "type": "str", "default": "fou"}}}
{"name": "list_top_tracks", "description": "Fetches the weekly or daily top tracks from Spotify for a specified region and date.", "parameters": {"region": {"description": "The region code in ISO 3166 alpha-2 format (e.g., 'US'). Defaults to 'global'.", "type": "str, optional", "default": ""}, "type": {"description": "The time span for the chart. Defaults to 'weekly'.", "type": "str, optional", "default": ""}, "date": {"description": "The date in 'YYYY-MM-DD' format. Leave blank to get the latest chart.", "type": "str, optional", "default": ""}}}
{"name": "ideas_get_replies", "description": "Fetch replies relating to an idea post and its comments from the trading-view API.", "parameters": {"is_id": {"description": "The ID associated with the idea.", "type": "str", "default": "9069097"}, "uuid": {"description": "The unique identifier for the idea, typically the value of the image_url field returned in the /ideas/list endpoint.", "type": "str", "default": "jfQJOSwt"}, "lang": {"description": "The language code for the response. Defaults to 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "get_country_by_id", "description": "Fetches and returns data for a single country based on its identifier.", "parameters": {"is_id": {"description": "The unique identifier for the country.", "type": "int", "default": "1"}}}
{"name": "getzipcodebycounty", "description": "Fetches the ZIP code information for a given county using the Zillow API.", "parameters": {"county": {"description": "The name of the county for which the ZIP code information is to be retrieved.", "type": "str", "default": "Hampshire"}}}
{"name": "nearby_stores", "description": "Fetches a list of stores near a specified ZIP code from the RapidAPI Target API.", "parameters": {"place": {"description": "The ZIP code or address around which to search for stores.", "type": "str", "default": "10010"}, "within": {"description": "The radius of the search area in miles. Defaults to '100'.", "type": "str, optional", "default": "100"}, "limit": {"description": "The maximum number of store results to return. Defaults to '20'.", "type": "str, optional", "default": "20"}}}
{"name": "lists_tweets", "description": "Fetches a list of tweets from a specified Twitter list using the RapidAPI service.", "parameters": {"list_id": {"description": "The unique identifier for the Twitter list.", "type": "str", "default": "1591033111726391297"}, "cursor": {"description": "The cursor to use for fetching the next page of results. Defaults to 'HBaAgLydmczz0y0AAA=='.", "type": "str, optional", "default": "HBaAgLydmczz0y0AAA=="}, "count": {"description": "The number of tweets to retrieve. Defaults to '20'.", "type": "str, optional", "default": "20"}}}
{"name": "v1_profanityfilter", "description": "Filters profanity from the given text using the API Ninjas Profanity Filter API. Returns the censored version of the text with bad words replaced by asterisks, and indicates whether the text contains profanity.", "parameters": {"text": {"description": "The input text to be filtered. Maximum 1000 characters.", "type": "str", "default": "damn it"}}}
{"name": "companies_id_data", "description": "Fetches the basic information of a company using its identifier from the German Company Data API.", "parameters": {"is_id": {"description": "The Implisense identifier of the company.", "type": "str", "default": "DEVFCLQFW054"}}}
{"name": "get_domaine", "description": "Retrieves the details of a domain using an API, specific to domains registered in New Caledonia.", "parameters": {"ext": {"description": "The domain extension, which can be one of the following:", "type": "str", "default": "NC"}, "nom": {"description": "The domain name to look up.", "type": "str", "default": "1012"}}}
{"name": "fetch_email_of_a_person", "description": "Fetch the email address of a person based on their first name, last name, and domain using the Email Finder API.", "parameters": {"first_name": {"description": "The first name of the person whose email is being fetched.", "type": "str", "default": "John"}, "domain": {"description": "The domain associated with the email address.", "type": "str", "default": "google.com"}, "last_name": {"description": "The last name of the person whose email is being fetched.", "type": "str", "default": "Doe"}}}
{"name": "u_k_songs", "description": "Fetches the U.K. Songs chart information for a specific date and range from the Billboard API.", "parameters": {"date": {"description": "The date for which the chart information is requested, in the format 'YYYY-MM-DD'.", "type": "str", "default": "2022-05-07"}, "range": {"description": "The range of the chart data to fetch.", "type": "str", "default": "1-10"}}}
{"name": "search_for_joke", "description": "Fetch a joke based on the provided search text.", "parameters": {"q": {"description": "The search query text to find jokes. Defaults to 'Did you hear about the butcher who backed'.", "type": "str", "default": "Did you hear about the butcher who backed"}}}
{"name": "soundcloud", "description": "Checks the availability of a given Soundcloud username using the RapidAPI service.", "parameters": {"username": {"description": "The Soundcloud username to check for availability.", "type": "str", "default": "username"}}}
{"name": "tweet_details", "description": "Fetch details and comments for a specific tweet using its tweet ID.", "parameters": {"tweetid": {"description": "The ID of the tweet for which details and comments are to be fetched.", "type": "str", "default": "1668868113725550592"}, "cursor": {"description": "A cursor for paginating through comments. Use the value obtained from the previous response to fetch the next page. Defaults to None.", "type": "str, optional", "default": ""}, "count": {"description": "The number of comments to fetch. Defaults to '20'.", "type": "str, optional", "default": "20"}}}
{"name": "eventdetails", "description": "Fetch information about a Mixed Martial Arts (MMA) event based on its ID.", "parameters": {"is_id": {"description": "The ID of the event to get information about.", "type": "int", "default": "11257051"}}}
{"name": "domainstatus", "description": "Retrieves the domain status to determine if it is a webmail or disposable email provider.", "parameters": {"email": {"description": "The email address to check against the domain status.", "type": "str, optional", "default": ""}, "domain": {"description": "The domain to check for its status.", "type": "str, optional", "default": ""}}}
{"name": "mediterranean_ingredient", "description": "Retrieve a random Mediterranean recipe containing a specific ingredient.", "parameters": {"ingredient": {"description": "The name of the ingredient to be used in the recipe search.", "type": "str", "default": "fish"}}}
{"name": "i18nregions", "description": "Fetches a list of content regions supported by the YouTube website.", "parameters": {"part": {"description": "Specifies the i18nRegion resource properties that the API response will include. Should be set to 'snippet'.", "type": "str", "default": "snippet"}, "hl": {"description": "Specifies the language that should be used for text values in the API response. Defaults to 'en_US'.", "type": "str, optional", "default": "en_US"}}}
{"name": "geocode_v1_json", "description": "Fetches geocoding information from the OpenCage Geocoder API.", "parameters": {"q": {"description": "A query string that can be either specific coordinates (\"latitude,longitude\") or an address.", "type": "str", "default": "Berlin"}, "key": {"description": "The API key obtained from registering at https://geocoder.opencagedata.com/.", "type": "str", "default": "OPENCAGE-API-Key"}, "language": {"description": "An IETF language tag (e.g., 'es' for Spanish or 'pt-BR' for Brazilian Portuguese). Defaults to 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "get_details_by_asn_number", "description": "Fetch details related to a given Autonomous System Number (ASN) such as IP ranges, country, organization, and CIDR.", "parameters": {"asn_number": {"description": "The ASN number for which details need to be retrieved.", "type": "int", "default": "100"}}}
{"name": "user_lookup", "description": "Fetches a detailed overview of available PeerReach data for a given Twitter user.", "parameters": {"screen_name": {"description": "The Twitter handle of the user to look up.", "type": "str", "default": "fredwilson"}}}
{"name": "get_a_specific_remote_job_by_id", "description": "Fetch detailed information about a specific remote job using its ID.", "parameters": {"is_id": {"description": "The unique identifier of the job to fetch details for.", "type": "str", "default": ""}}}
{"name": "get_company_domain", "description": "Retrieve the domain associated with a given company name using the Toolbench RapidAPI.", "parameters": {"company_name": {"description": "The name of the company whose domain is to be retrieved.", "type": "str", "default": "vercel"}}}
{"name": "levels", "description": "Fetches a list of levels from the Jet Set Radio API with options for sorting, limiting, and ordering the results.", "parameters": {"sortby": {"description": "The field by which to sort the levels. Example values include 'name' and 'stats'. Default is 'name'.", "type": "str", "default": "name"}, "limit": {"description": "The maximum number of levels to return. Default is '5'.", "type": "str", "default": "5"}, "orderby": {"description": "The order in which to sort the results. Possible values are 'asc' for ascending and 'desc' for descending. Default is 'asc'.", "type": "str", "default": "asc"}}}
{"name": "users_favorite_get", "description": "Retrieve a user's favorite items from the SongMeanings API based on the specified type.", "parameters": {"sm_uid": {"description": "The user ID for which to retrieve favorites.", "type": "str", "default": ""}, "type": {"description": "The type of favorites to retrieve; can be 'artists' or 'lyrics'. Defaults to 'lyrics'.", "type": "str, optional", "default": "lyrics"}}}
{"name": "detalhes_empresa", "description": "Retrieves detailed information about a company using its CNPJ.", "parameters": {"cnpj": {"description": "The CNPJ of the company.", "type": "str", "default": "45973106000100"}}}
{"name": "user_by_username", "description": "Fetches user data from Instagram using a given username via the Toolbench RapidAPI.", "parameters": {"username": {"description": "The Instagram username for which to fetch user data.", "type": "str", "default": ""}}}
{"name": "user_by_screen_name", "description": "Fetch user details from the Twitter API using a given screen name.", "parameters": {"username": {"description": "The screen name of the Twitter user.", "type": "str", "default": "elonmusk"}}}
{"name": "seasonal_goal_analysis_conceding_first", "description": "Retrieves statistics on the first goal conceded by teams in a specified match during different minute intervals throughout the match.", "parameters": {"matchid": {"description": "The ID of the match for which to retrieve conceding-first goal statistics.", "type": "int", "default": "1452254"}}}
{"name": "get_coin_price", "description": "Fetches the price of a specified cryptocurrency at a specific time.", "parameters": {"uuid": {"description": "UUID of the cryptocurrency for which the price is needed.", "type": "str", "default": "Qwsogvtv82FCd"}, "timestamp": {"description": "Epoch timestamp in seconds for the specific price time. Defaults to the latest price if not provided.", "type": "int, optional", "default": ""}, "referencecurrencyuuid": {"description": "UUID of the reference currency in which the price is shown. Defaults to US Dollar ('yhjMzLPhuIDl').", "type": "str, optional", "default": "yhjMzLPhuIDl"}}}
{"name": "whois_lookup", "description": "Performs a WHOIS lookup for the given domain using the Toolbench RapidAPI service and returns the data in JSON format.", "parameters": {"domain": {"description": "The domain name to be looked up.", "type": "str", "default": "facebook.com"}}}
{"name": "sizes_all_countries", "description": "Gets the size information of countries in Africa based on the specified country name.", "parameters": {"country_name": {"description": "The name of the country for which to get the size information. Use 'all' to get size information for all countries.", "type": "str", "default": "all"}}}
{"name": "markets", "description": "Retrieves the market countries supported by the service, used by suppliers to set fares based on the market (or country of purchase). The names of the markets returned are localized based on the provided locale.", "parameters": {"locale": {"description": "Locale of the request. The names of the returned markets are localized based on this parameter.", "type": "str", "default": "en-US"}}}
{"name": "serp", "description": "Fetches search engine results using the given query and optional parameters.", "parameters": {"query": {"description": "The search query to be sent to the search engine.", "type": "str", "default": "YouTube"}, "proxy": {"description": "The country to use as a proxy for the search. Defaults to 'US'.", "type": "str, optional", "default": "US"}, "max": {"description": "The maximum number of search results to return. Defaults to 10.", "type": "int, optional", "default": "10"}}}
{"name": "v1_validatephone", "description": "Validates a given phone number and returns metadata using the API Ninjas Validate Phone API.", "parameters": {"number": {"description": "The phone number to validate. If `country` is not specified, the phone number must include the 3-digit country code prefix.", "type": "str", "default": "+12065550100"}, "country": {"description": "The 2-letter ISO-3166 country code corresponding to the phone number.", "type": "str, optional", "default": ""}}}
{"name": "market_get_full", "description": "Retrieves comprehensive information about specified stock tickers using the Bloomberg Finance API.", "parameters": {"is_id": {"description": "A comma-separated string of ticker IDs corresponding to the desired stocks. These IDs are returned by the `/market/auto-complete` endpoint.", "type": "str", "default": "adsmi:ind,aex:ind,co1:com,gc1:com"}}}
{"name": "get_financial_time_series_daily", "description": "Fetches synthetic financial time series data (Date, Price Return) for a specified symbol and asset class.", "parameters": {"symbol": {"description": "The symbol identifying the financial instrument (e.g., '0001').", "type": "str", "default": "0008"}, "asset_class": {"description": "The category of the financial instrument (e.g., equity, bond, commodity, mixed).", "type": "str", "default": "equity"}, "size": {"description": "The size of the data set to return. Options are 'compact' for the most recent 252 data points, or 'full' for all available data. Defaults to 'full'.", "type": "str, optional", "default": "full"}}}
{"name": "elhighlights", "description": "Fetches football highlights from a specified API endpoint.", "parameters": {"url": {"description": "The API endpoint URL for fetching highlights. Defaults to 'https://acrtadeon.elhighlights.com/embed/0nvR19fByJZmp'.", "type": "str", "default": "https://acrtadeon.elhighlights.com/embed/0nvR19fByJZmp"}}}
{"name": "v1_caloriesburned", "description": "Fetches the number of calories burned for a given activity using the API Ninjas Calories Burned API.", "parameters": {"activity": {"description": "The name of the activity. Partial values are allowed (e.g., 'ski' will match both 'water skiing' and 'downhill skiing').", "type": "str", "default": "skiing"}, "weight": {"description": "Weight of the user in pounds (must be between 50 and 500). Defaults to None.", "type": "int, optional", "default": ""}, "duration": {"description": "Duration of the activity in minutes (must be 1 or greater). Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "list_accounts", "description": "Fetches a list of accounts from the API, optionally paginated by a specified page number.", "parameters": {"page": {"description": "The page number for paginated results. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "using_path_parameters", "description": "This function makes a request to an API endpoint to split a given text based on specified parameters and returns the response.", "parameters": {"text": {"description": "The input text to be split.", "type": "str", "default": ""}, "max_size": {"description": "The maximum size limit for the split text. Defaults to 1024.", "type": "int, optional", "default": 1024}, "delimiter": {"description": "The delimiter to be used for splitting the text. Defaults to None.", "type": "str, optional", "default": ""}, "include_variations": {"description": "Whether to include variations in the splitting process. Defaults to None.", "type": "bool, optional", "default": "true"}}}
{"name": "basketball_search", "description": "Search for basketball players, teams, and tournaments using the provided term.", "parameters": {"term": {"description": "The search term used to look for players, teams, and tournaments.", "type": "str", "default": "kevin"}}}
{"name": "stock_get_stock_earnings_data", "description": "Fetches the stock earnings data for a given symbol and region using the RapidAPI service.", "parameters": {"symbol": {"description": "The ticker symbol of the stock (e.g., \"AAPL\" for Apple Inc.).", "type": "str", "default": "AAPL"}, "region": {"description": "The region code for the stock market (default is 'US'). Allowed values include US, BR, AU, CA, FR, DE, HK, IN, IT, ES, GB, and S.", "type": "str, optional", "default": "US"}}}
{"name": "get_user_data", "description": "Fetches user data from the Discord API using a given user ID.", "parameters": {"is_id": {"description": "The ID of the user whose data is being fetched.", "type": "str", "default": "25458687581618176"}}}
{"name": "additional_title_details", "description": "Fetch additional details for a movie or TV show based on its IMDb ID.", "parameters": {"imdbid": {"description": "The IMDb ID of the movie or TV show.", "type": "str", "default": "tt7286456"}}}
{"name": "teams_get_tournaments", "description": "Retrieve the tournaments attended by a specific team.", "parameters": {"teamid": {"description": "The ID of the team for which to retrieve tournament information.", "type": "int", "default": "38"}}}
{"name": "get_quotes_by_character_name", "description": "Fetch quotes from the Anime Quotes API for a given character name.", "parameters": {"name": {"description": "The name of the character for whom to fetch quotes.", "type": "str", "default": "Naruto"}, "page": {"description": "The page number to retrieve, used for pagination. Defaults to 1.", "type": "int, optional", "default": "1"}}}
{"name": "sport_translations", "description": "Fetch sport translations for a given sport ID and language using the Pinaculo API.", "parameters": {"is_id": {"description": "The ID of the sport for which translations are to be retrieved.", "type": "int", "default": 4}, "lang": {"description": "The language code in which translations should be fetched.", "type": "str", "default": "pt-PT"}}}
{"name": "timeline", "description": "Fetches the 100 most recent articles and their keywords using the Papercliff RapidAPI.", "parameters": {"is_from": {"description": "Narrows down the results to articles published after the provided date-time in UTC. The format should be `yyyy-MM-dd'T'HH:mm`. Example value: `2022-09-18T13:45`. Date-times older than a week do not affect the result.", "type": "str, optional", "default": ""}, "terms": {"description": "Narrows down the results to articles that contain all the provided keywords. The terms should consist of one to three words separated by a dash. Example value: `election-campaign`.", "type": "str, optional", "default": ""}, "offset": {"description": "Omits a number of articles from the result.", "type": "int, optional", "default": ""}, "to": {"description": "Narrows down the results to articles published before the provided date-time in UTC. The format should be `yyyy-MM-dd'T'HH:mm`. Example value: `2022-09-18T15:30`. Date-times of the future do not affect the result.", "type": "str, optional", "default": ""}}}
{"name": "national_team_statistics", "description": "Fetch the statistics of a national team player using their player ID.", "parameters": {"player_id": {"description": "Unique identifier for the player.", "type": "int", "default": "12994"}}}
{"name": "qrcodepro", "description": "Generates a professional QR code with customizable properties and settings.", "parameters": {"text": {"description": "The text to encode into the QR code.", "type": "str", "default": "https://www.digicatech.com"}, "validate": {"description": "Whether to validate the input text. Defaults to None.", "type": "bool, optional", "default": true}, "setlabel": {"description": "Whether to set a label on the QR code. Defaults to None.", "type": "bool, optional", "default": false}, "forecolor": {"description": "The foreground color of the QR code in hexadecimal format without the # prefix. Defaults to '000000'.", "type": "str, optional", "default": "000000"}, "type": {"description": "The output file type for the QR code ('png', 'svg', or 'eps'). Defaults to 'svg'.", "type": "str, optional", "default": "svg"}, "labeltext": {"description": "The text to use as a label in the QR code. Defaults to None.", "type": "str, optional", "default": ""}, "size": {"description": "The size of the output image in pixels, with a maximum of 4000. Defaults to 150.", "type": "int, optional", "default": "150"}, "labelalign": {"description": "The alignment of the label ('left', 'right', or 'center'). Defaults to 'center'.", "type": "str, optional", "default": "center"}, "backcolor": {"description": "The background color of the QR code in hexadecimal format without the # prefix. Defaults to 'FFFFFF'.", "type": "str, optional", "default": "FFFFFF"}, "level": {"description": "The error correction level of the QR code ('L', 'M', 'Q', 'H'). Defaults to 'M'.", "type": "str, optional", "default": "M"}}}
{"name": "top_paid_apps", "description": "Fetch the top paid apps chart from Google Play, optionally filtering by category, region, and language. Results can be limited to a specified number of apps.", "parameters": {"limit": {"description": "Limit the number of results. Allowed values are between 1 and 200. Default is 50. Requests with a limit value between 101-200 will be charged double.", "type": "int", "default": "50"}, "category": {"description": "Get the chart in a specific Google Play category (e.g., 'SOCIAL'). Default is None.", "type": "str, optional", "default": ""}, "region": {"description": "The country code to use, specified as a 2-letter ISO 3166-1 alpha-2 country code. Default is 'us'.", "type": "str", "default": "us"}, "language": {"description": "The language to use, specified as a 2-letter ISO 639-1 alpha-2 language code. Default is 'en'.", "type": "str", "default": "en"}}}
{"name": "models_by_make_id", "description": "Fetch the list of motorcycle models by make ID from the Motorcycle Specs Database.", "parameters": {"is_id": {"description": "The make ID for which to fetch the model list.", "type": "str", "default": "485"}}}
{"name": "province", "description": "Fetches the average price of gas in a specific province in Canada using the Canadian Gas Prices API.", "parameters": {"province": {"description": "A valid province name in Canada. Options include Ontario, Quebec, Alberta, British Columbia, Manitoba, New Brunswick, Newfoundland and Labrador, Nova Scotia, Prince Edward Island, Saskatchewan.", "type": "str", "default": ""}}}
{"name": "get_skin_from_uuid", "description": "Fetches the Minecraft skin associated with a given UUID using the Toolbench RapidAPI.", "parameters": {"uuid": {"description": "The UUID of the Minecraft player whose skin is being fetched.", "type": "str", "default": ""}}}
{"name": "unfurl", "description": "Fetches and previews metadata for a given URL using the Unfurl API.", "parameters": {"url": {"description": "The URL to be unfurled.", "type": "str", "default": "youtube.com"}}}
{"name": "get_reel_by_shortcode", "description": "Fetch information about an Instagram reel using its shortcode.", "parameters": {"shortcode": {"description": "The unique identifier for the Instagram reel.", "type": "str", "default": "CrgVBtHr3DP"}}}
{"name": "get_profile_data", "description": "Retrieves profile data from the LinkedIn Profile Data API using a given username.", "parameters": {"username": {"description": "The LinkedIn username for which to retrieve profile data.", "type": "str", "default": "username"}}}
{"name": "g_olocaliser_les_partenaires", "description": "Fetch all partners or partners within a specified radius around a given point.", "parameters": {"nearbydistance": {"description": "Radius of the search area in meters. Default is '2000'.", "type": "str, optional", "default": "2000"}, "nearbylon": {"description": "Longitude of the center of the search area. Default is '166.448744'.", "type": "str, optional", "default": "166.448744"}, "nearbylat": {"description": "Latitude of the center of the search area. Default is '-22.302828'.", "type": "str, optional", "default": "-22.302828"}}}
{"name": "currencies", "description": "Retrieves a list of currencies from the Booking.com API.", "parameters": {"language_code": {"description": "The language code to use for the response. Defaults to 'en-us'.", "type": "str", "default": "en-us"}}}
{"name": "get_price_info_for_word_count", "description": "Returns price information for translating a given number of words between specified languages and topic using the TextKing API.", "parameters": {"words": {"description": "The number of words to translate.", "type": "int", "default": "3141"}, "source_language": {"description": "ISO 639 language code of the source language.", "type": "str", "default": "de"}, "target_language": {"description": "ISO 639 language code of the target language.", "type": "str", "default": "en"}, "topic": {"description": "A topic UUID for the translation context.", "type": "str", "default": "8576549a-097f-45b3-8c59-fb3d6a03147d"}}}
{"name": "artists_get_top_songs", "description": "Fetches the top songs of a specified artist using the Shazam API.", "parameters": {"is_id": {"description": "The unique identifier of the artist, which can be obtained from various Shazam API endpoints.", "type": "str", "default": "567072"}, "l": {"description": "The language code for the response. Defaults to 'en-US'.", "type": "str, optional", "default": "en-US"}}}
{"name": "classify", "description": "Classifies input text using the IAB taxonomy via RapidAPI and returns the confidence score and IAB classification.", "parameters": {"text": {"description": "The input text to be classified.", "type": "str", "default": "Bank of Americate all your financial and banking requirements satisfied here."}}}
{"name": "statistics_esports", "description": "Fetches esports statistics for a given event using the RapidAPI service.", "parameters": {"event_id": {"description": "The identifier for the esports event.", "type": "int", "default": "10289011"}}}
{"name": "get_tides_for_a_station", "description": "Retrieves tide information for a specified station ID on a given date using the RapidAPI NOAA Tides service.", "parameters": {"is_id": {"description": "The ID of the tide station to get information for.", "type": "str", "default": "9411340"}, "date": {"description": "The date for which to retrieve tide information in YYYYMMDD format. Defaults to '20220625'.", "type": "str, optional", "default": "20220625"}}}
{"name": "movie_suggestions", "description": "Fetches movie suggestions related to a given movie.", "parameters": {"movie_id": {"description": "The ID of the movie for which to get related suggestions. Defaults to 10.", "type": "int, optional", "default": "10"}}}
{"name": "check_phone_number", "description": "Checks whether a given phone number is a valid WhatsApp number.", "parameters": {"phone": {"description": "The WhatsApp phone number to be checked, including the country code.", "type": "int", "default": "34605797764"}}}
{"name": "download_cities", "description": "Downloads a list of cities from the Priceline API.", "parameters": {"limit": {"description": "Limits the number of results returned. Defaults to 500.", "type": "int, optional", "default": 500}, "resume_key": {"description": "Key to resume the results from a given ID. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "webcams_list_exclude_webcamid_webcamid", "description": "This function retrieves a list of webcams excluding the specified webcam IDs.", "parameters": {"webcamid": {"description": "Comma-separated list of webcam IDs to exclude from the result. At least one webcam ID must be provided.", "type": "str", "default": ""}, "lang": {"description": "Language code to localize the results, if available. Defaults to 'en'.", "type": "str, optional", "default": "en"}, "show": {"description": "Content to be included in the response. Possible values are \"webcams:image,location\". Defaults to 'webcams:image,location'.", "type": "str, optional", "default": "webcams:image,location"}}}
{"name": "search_all_players", "description": "Search for players using a given query string on the Trackmania API.", "parameters": {"search_query": {"description": "The search query used to search for players. Must be at least 4 characters long.", "type": "str", "default": "Riolu"}}}
{"name": "user_tweets", "description": "Fetches a user's tweets using the Twttr RapidAPI.", "parameters": {"twttr_proxy": {"description": "Optional proxy to use for the Twitter API request.", "type": "str, optional", "default": ""}, "twttr_session": {"description": "Optional session identifier for the Twitter API request.", "type": "str, optional", "default": ""}, "cursor": {"description": "Optional cursor for paginated results.", "type": "str, optional", "default": ""}, "user_id": {"description": "The Twitter user ID for which to fetch tweets.", "type": "str, optional", "default": ""}, "username": {"description": "The Twitter username for which to fetch tweets (default is 'elonmusk').", "type": "str, default='elonmusk'", "default": "elonmusk"}}}
{"name": "blockchain_info_summary", "description": "Fetches a basic summary of information related to the specified blockchain from the Chain49 API.", "parameters": {"blockchain": {"description": "The name of the blockchain to get information about.", "type": "str", "default": "bitcoin"}}}
{"name": "properties_list", "description": "Fetches a list of properties for sale or rent with various filters and options.", "parameters": {"operation": {"description": "Type of operation, either \"rent\" or \"sale\".", "type": "str", "default": "rent"}, "locationname": {"description": "Name of the location as returned by the auto-complete endpoint.", "type": "str", "default": "Caffarella, Roma"}, "locationid": {"description": "ID of the location as returned by the auto-complete endpoint. Should not be used with `zoiid`.", "type": "str", "default": "0-EU-IT-RM-01-001-097-09-003"}, "country": {"description": "Country code, one of \"it\", \"es\", \"pt\". Defaults to \"it\".", "type": "str, optional", "default": "it"}, "childrenallowed": {"description": "Specifies if children are allowed. Defaults to None.", "type": "bool, optional", "default": ""}, "floorheights": {"description": "Floors, separated by commas. Options: \"topFloor\", \"intermediateFloor\", \"groundFloor\". Defaults to None.", "type": "str, optional", "default": ""}, "hashousekeeper": {"description": "Indicates if a housekeeper is available. Defaults to None.", "type": "bool, optional", "default": ""}, "couplesallowed": {"description": "Specifies if couples are allowed. Defaults to None.", "type": "bool, optional", "default": ""}, "garden": {"description": "Indicates if the property has a garden. Defaults to None.", "type": "bool, optional", "default": ""}, "privatetoilet": {"description": "Indicates if the property has a private toilet. Defaults to None.", "type": "bool, optional", "default": ""}, "terrace": {"description": "Indicates if the property has a terrace. Defaults to None.", "type": "bool, optional", "default": ""}, "swimmingpool": {"description": "Indicates if the property has a swimming pool. Defaults to None.", "type": "bool, optional", "default": ""}, "privateowner": {"description": "Indicates if the owner is private. Defaults to None.", "type": "bool, optional", "default": ""}, "elevator": {"description": "Indicates if the property has an elevator. Defaults to None.", "type": "bool, optional", "default": ""}, "airconditioning": {"description": "Indicates if the property has air conditioning. Defaults to None.", "type": "bool, optional", "default": ""}, "accessible": {"description": "Specifies if the property is accessible. Defaults to None.", "type": "bool, optional", "default": ""}, "gaypartners": {"description": "Specifies if gay partners are allowed. Defaults to None.", "type": "bool, optional", "default": ""}, "distance": {"description": "Radius to look for properties within. Defaults to None.", "type": "int, optional", "default": ""}, "ispoi": {"description": "Indicates if the location is a point of interest (works only with `zoiid`). Defaults to None.", "type": "bool, optional", "default": ""}, "maxitems": {"description": "Maximum number of items per response for paging purposes. Defaults to 40.", "type": "int, optional", "default": "40"}, "zoiid": {"description": "Zone of interest ID as returned by auto-complete endpoint. Do not use with `locationid`. Defaults to None.", "type": "str, optional", "default": ""}, "locale": {"description": "Locale code, one of \"en\", \"es\", \"it\", \"pt\", \"de\", \"fr\", \"ro\", \"ru\", \"pl\", \"sv\", \"fi\", \"nb\", \"nl\". Defaults to \"en\".", "type": "str, optional", "default": "en"}, "sort": {"description": "Sorting order, either \"asc\" or \"desc\". Defaults to \"asc\".", "type": "str, optional", "default": "asc"}, "numpage": {"description": "Page index for paging purposes. Defaults to 1.", "type": "int, optional", "default": "1"}, "maxprice": {"description": "Maximum price. Defaults to None.", "type": "int, optional", "default": ""}, "minprice": {"description": "Minimum price. Defaults to None.", "type": "int, optional", "default": ""}, "shape": {"description": "Shape information as a JSON object string from the `zois/detail` endpoint. Do not use with `locationid` or `zoiid`. Defaults to None.", "type": "str, optional", "default": ""}, "propertytype": {"description": "Type of property, one of \"homes\", \"bedrooms\", \"newDevelopments\", \"offices\", \"premises\", \"garages\", \"lands\", \"storageRooms\", \"buildings\". Defaults to None.", "type": "str, optional", "default": ""}, "auction": {"description": "Auction filter, either empty or one of \"excludeAuctions\", \"onlyAuctions\". Defaults to None.", "type": "str, optional", "default": ""}, "bedtype": {"description": "Type of bed, one of \"none\", \"single\", \"double\", \"twoBeds\". Defaults to None.", "type": "str, optional", "default": ""}, "ownernotliving": {"description": "Specifies if the owner does not live in the property. Defaults to None.", "type": "bool, optional", "default": ""}, "newgender": {"description": "Gender of the new tenant, either \"male\" or \"female\". Defaults to None.", "type": "str, optional", "default": ""}, "gallery": {"description": "Indicates if the property has a gallery. Defaults to None.", "type": "bool, optional", "default": ""}, "storeroom": {"description": "Indicates if the property has a storeroom. Defaults to None.", "type": "bool, optional", "default": ""}, "builtinwardrobes": {"description": "Indicates if the property has built-in wardrobes. Defaults to None.", "type": "bool, optional", "default": ""}, "maxsize": {"description": "Maximum area size. Defaults to None.", "type": "int, optional", "default": ""}, "minsize": {"description": "Minimum area size. Defaults to None.", "type": "int, optional", "default": ""}, "garage": {"description": "Indicates if the property has a garage. Defaults to None.", "type": "bool, optional", "default": ""}, "luxury": {"description": "Indicates if the property is a luxury one. Defaults to None.", "type": "bool, optional", "default": ""}, "housemates": {"description": "Number of housemates, separated by commas (e.g., \"3,4\"). Defaults to None.", "type": "str, optional", "default": ""}, "sincedate": {"description": "Date filter, one of \"Y\", \"W\", \"M\" (Last 48 hours, Last week, Last month). Defaults to None.", "type": "str, optional", "default": ""}, "petspolicy": {"description": "Pets policy, either \"allowed\" or \"disallowed\". Defaults to None.", "type": "str, optional", "default": ""}, "showruledouts": {"description": "Indicates if ruled out properties should be shown. Defaults to None.", "type": "bool, optional", "default": ""}, "smokingpolicy": {"description": "Smoking policy, either \"allowed\" or \"disallowed\". Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "show_image", "description": "Fetch and return the image data of a flower from the API using the given flower ID.", "parameters": {"is_id": {"description": "The identifier for the specific flower.", "type": "str", "default": "6383808bff3dde72b0fc35d6"}}}
{"name": "getbookbyid", "description": "Retrieve details of a specific book using its unique ID.", "parameters": {"is_id": {"description": "The unique identifier for the book to retrieve.", "type": "str", "default": "1"}}}
{"name": "get_related_questions", "description": "Fetches related questions from Google SERP \"People Also Ask\" boxes based on a provided query.", "parameters": {"query": {"description": "The search query for which to find related questions.", "type": "str", "default": "prenatal vitamins"}, "location": {"description": "Specify the proxy location for the search. Defaults to 'us'. Supported countries include 'US', 'CA', 'IE', 'GB', 'FR', 'DE', 'SE', 'IN', 'JP', 'KR', 'SG', 'AU', 'BR'.", "type": "str, optional", "default": "us"}, "max_results": {"description": "The maximum number of related questions to fetch. Defaults to 10.", "type": "int, optional", "default": "10"}}}
{"name": "wnba_box_score", "description": "Fetches the WNBA game box score data for a specified game.", "parameters": {"is_id": {"description": "The unique identifier for the WNBA game.", "type": "str", "default": "401244185"}}}
{"name": "api_v1_beyblades", "description": "Fetches a list of Beyblades from the API with optional offset and limit parameters.", "parameters": {"offset": {"description": "The number of Beyblades to skip.", "type": "int, optional", "default": ""}, "limit": {"description": "The maximum number of Beyblades to retrieve.", "type": "int, optional", "default": ""}}}
{"name": "user_feed_video_posts", "description": "Fetches the current user feed of video posts from the social media platform.", "parameters": {"username": {"description": "The influencer's username (e.g., 'charlidamelio'). Using `sec_uid` instead of `username` will speed up the request. Default is 'amazon'.", "type": "str", "default": "amazon"}, "limit": {"description": "The number of records to return. Default is 100. The maximum number of records is 500.", "type": "int, optional", "default": ""}, "max_cursor": {"description": "Pagination cursor for fetching additional videos. Use the `max_cursor` value received from the previous request to get more videos.", "type": "int, optional", "default": ""}, "sec_uid": {"description": "A unique identifier for the user, which speeds up the request. Can be obtained from the User Information endpoint.", "type": "str, optional", "default": ""}, "country": {"description": "The country code to filter the feed.", "type": "str, optional", "default": ""}}}
{"name": "dev_to", "description": "Checks the availability of a given username on Dev.to using the Toolbench RapidAPI service.", "parameters": {"username": {"description": "The username to check for availability on Dev.to.", "type": "str", "default": "username"}}}
{"name": "leagueshotactionsareasregularseason", "description": "Retrieve the shot actions areas for a specific basketball league tournament during the regular season.", "parameters": {"tournamentid": {"description": "The unique identifier for the tournament.", "type": "int", "default": 132}, "seasonid": {"description": "The unique identifier for the season.", "type": "int", "default": 45096}}}
{"name": "daily_match_list_results", "description": "Retrieves the list of daily match results for ice hockey games from the RapidAPI service.", "parameters": {"date": {"description": "The date of the matches in the format {dd/MM/yyyy}. The match list data can only be retrieved for a period of ±7 days from the specified date.", "type": "str", "default": "28/01/2021"}}}
{"name": "random_credit_card", "description": "Generates a list of fake credit card details.", "parameters": {"size": {"description": "The number of fake credit card details to generate. Defaults to 5.", "type": "int, optional", "default": "5"}}}
{"name": "get_result_from_category", "description": "Fetches a random result from a specified category, including a main phrase and taboo words. You can control the number of taboo words returned using the `forbiddenwordlimit` parameter.", "parameters": {"category": {"description": "The category from which to fetch the result.", "type": "str", "default": "actors"}, "forbiddenwordlimit": {"description": "The number of taboo words to be returned, defaults to 5 and has a maximum of 10.", "type": "int, optional", "default": "5"}}}
{"name": "spac_calendar", "description": "Fetch important SPAC dates from the calendar API based on the specified type.", "parameters": {"type": {"description": "The type of SPAC date information desired. Available options are 'merger', 'split', 'deadline', and 'redemption'.", "type": "str", "default": "redemption"}}}
{"name": "get_new_releases", "description": "Fetch new album releases from Spotify for a specified country.", "parameters": {"country": {"description": "A standardized country code (e.g., 'US' for United States, 'CA' for Canada). Full list of supported country codes includes: AD, AE, AG, AL, AM, AO, AR, AT, AU, AZ, BA, BB, BD, BE, BF, BG, BH, BI, BJ, BN, BO, BR, BS, BT, BW, BZ, CA, CD, CG, CH, CI, CL, CM, CO, CR, CV, CW, CY, CZ, DE, DJ, DK, DM, DO, DZ, EC, EE, EG, ES, ET, FI, FJ, FM, FR, GA, GB, GD, GE, GH, GM, GN, GQ, GR, GT, GW, GY, HK, HN, HR, HT, HU, ID, IE, IL, IN, IQ, IS, IT, JM, JO, JP, KE, KG, KH, KI, KM, KN, KR, KW, KZ, LA, LB, LC, LI, LK, LR, LS, LT, LU, LV, LY, MA, MC, MD, ME, MG, MH, MK, ML, MN, MO, MR, MT, MU, MV, MW, MX, MY, MZ, NA, NE, NG, NI, NL, NO, NP, NR, NZ, OM, PA, PE, PG, PH, PK, PL, PS, PT, PW, PY, QA, RO, RS, RW, SA, SB, SC, SE, SG, SI, SK, SL, SM, SN, SR, ST, SV, SZ, TD, TG, TH, TJ, TL, TN, TO, TR, TT, TV, TW, TZ, UA, UG, US, UY, UZ, VC, VE, VN, VU, WS, XK, ZA, ZM, ZW.", "type": "str", "default": "US"}, "limit": {"description": "Maximum number of album releases to return (default is 20; maximum allowed is 50).", "type": "int, optional", "default": "20"}, "offset": {"description": "The number of items to skip before starting to collect the result set (default is 0).", "type": "int, optional", "default": "0"}}}
{"name": "rates", "description": "Fetches live currency conversion rates based on the specified parameters.", "parameters": {"output": {"description": "The output format of the response. Can be either 'JSON' or 'XML'. Default is 'JSON'.", "type": "str", "default": "JSON"}, "base": {"description": "The base currency for conversion rates. Examples include 'USD', 'GBP', or 'BTC'. Default is 'USD'.", "type": "str", "default": "USD"}}}
{"name": "get_by_common_name", "description": "Retrieves all plants that match a given common plant name using the House Plants API on RapidAPI.", "parameters": {"common_name": {"description": "Common name of the plant to search for. Default is 'coralberry'.", "type": "str", "default": "coralberry"}}}
{"name": "business_units_search_by_domain", "description": "Searches for a business unit by its domain name using the Unofficial Trust Pilot API.", "parameters": {"name": {"description": "The domain name to search for.", "type": "str", "default": "google.com"}}}
{"name": "url", "description": "Expands a shortened URL using the Free URL Un-Shortener API.", "parameters": {"url": {"description": "The shortened URL to be expanded.", "type": "str", "default": "https://bit.ly/19BiSHW"}}}
{"name": "single_cat_breed", "description": "Fetches details of a single cat breed using the provided breed ID from the Cat Breed Database API.", "parameters": {"is_id": {"description": "The ID of the cat breed to fetch details for.", "type": "int", "default": "34"}}}
{"name": "user_groups_list", "description": "Fetches a listing of all the public and private groups a user is a part of on the Steam Community platform.", "parameters": {"is_id": {"description": "The unique identifier of the user on the Steam Community platform.", "type": "str", "default": "sindex"}}}
{"name": "get_a_specific_team", "description": "Retrieves details of a specific basketball team from the Free-NBA API using the provided team ID.", "parameters": {"is_id": {"description": "The ID of the team to retrieve.", "type": "str", "default": ""}}}
{"name": "salad_ingredient", "description": "Fetches a random salad recipe that includes the specified ingredient from the API.", "parameters": {"ingredient": {"description": "The ingredient to be included in the salad recipe search.", "type": "str", "default": "cucumbers"}}}
{"name": "recipes_by_author", "description": "Fetches recipes by a given author profile from the Worldwide Recipes API.", "parameters": {"profile_name": {"description": "The name of the author's profile to fetch recipes for.", "type": "str", "default": "gonna-want-seconds"}, "q": {"description": "An optional query string to filter recipes.", "type": "str, optional", "default": ""}, "start": {"description": "The starting index for pagination (e.g., Page 1 = start: 0, Page 2 = start: 20).", "type": "int, optional", "default": ""}}}
{"name": "stock_get_asset_allocation", "description": "Fetches the asset allocation for a given stock ticker using the Webull API.", "parameters": {"tickerid": {"description": "The unique identifier for the stock ticker.", "type": "int", "default": "913285171"}}}
{"name": "banks_by_country", "description": "Fetches a list of banks for a specified country using the given RapidAPI key.", "parameters": {"country_code": {"description": "Two-letter ISO country code representing the country for which the bank list is to be retrieved.", "type": "str", "default": "AU"}}}
{"name": "dark_cloud_cover", "description": "This function retrieves a list of stocks showing the Dark Cloud Cover pattern signal from the specified page using the RapidAPI service.", "parameters": {"page": {"description": "The page number to retrieve. Defaults to 1.", "type": "int, optional", "default": "1"}}}
{"name": "is_holyday", "description": "Checks if a given date is a holyday according to the Enoch Calendar API and retrieves associated scriptures and Sabbath status.", "parameters": {"datestring": {"description": "The date string to check for holyday status.", "type": "str", "default": "2021-03-30"}}}
{"name": "get_1_3_add_working_days", "description": "Add or remove a specified number of working days to a given start date based on the specified country's working days and holidays.", "parameters": {"country_code": {"description": "The ISO country code (2 letters). For available countries and configurations, see https://api.workingdays.org/api-countries.", "type": "str", "default": "US"}, "start_date": {"description": "The start date in YYYY-MM-DD format.", "type": "str", "default": "2013-12-31"}, "increment": {"description": "The number of working days to add or remove from the start date. Can be a positive or negative integer but not zero.", "type": "int", "default": 10}, "include_start": {"description": "Whether to include the start date in the count. Defaults to True if not specified. Set to False (\"false\" or \"0\") to start the count from the next working day (or previous working day if increment is negative).", "type": "bool, optional", "default": true}, "configuration": {"description": "The name of the preset configuration to be used. Defaults to 'Federal holidays'. For available configurations, see https://api.workingdays.org/api-countries.php.", "type": "str, optional", "default": "Federal holidays"}, "profile_id": {"description": "Custom profile ID if applicable.", "type": "str, optional", "default": ""}}}
{"name": "get_hebrew_date", "description": "Fetches the Hebrew date for a given Gregorian date string using the RapidAPI service.", "parameters": {"datestring": {"description": "The Gregorian date string for which to fetch the Hebrew date.", "type": "str", "default": "2021-03-17"}}}
{"name": "scrape_contacts_from_website", "description": "Scrape emails, phone numbers, and social media profiles from the root domain of a given website.", "parameters": {"query": {"description": "The domain to scrape contact information from (e.g., 'wsgr.com'). This can be any valid URL, and the function will use its root domain for extraction.", "type": "str", "default": "wsgr.com"}, "match_email_domain": {"description": "If True, the function will only return emails that belong to the same domain as the one provided in `query`. Defaults to None.", "type": "bool, optional", "default": "true"}}}
{"name": "getgames", "description": "Retrieves Diablo 4 game data from the specified page using RapidAPI.", "parameters": {"page": {"description": "The page number of game data to retrieve.", "type": "int", "default": "1"}}}
{"name": "student_property_to_rent", "description": "Fetch student rental properties based on various search criteria.", "parameters": {"identifier": {"description": "A unique location identifier obtained from the auto-complete endpoint.", "type": "str", "default": "REGION^1036"}, "sort_by": {"description": "The criteria to sort the results by.", "type": "str, optional", "default": ""}, "page": {"description": "The page number to retrieve results from.", "type": "int, optional", "default": ""}, "max_price": {"description": "The maximum price filter for the properties.", "type": "int, optional", "default": ""}, "search_radius": {"description": "The search radius in miles from the specified location. Defaults to '0.0'.", "type": "str, optional", "default": "0.0"}, "min_price": {"description": "The minimum price filter for the properties.", "type": "int, optional", "default": ""}, "max_bedroom": {"description": "The maximum number of bedrooms filter.", "type": "int, optional", "default": ""}, "furnished_type": {"description": "The type of furnishing (comma-separated values). Examples: 'Furnished,PartFurnished,Unfurnished'.", "type": "str, optional", "default": ""}, "min_bedroom": {"description": "The minimum number of bedrooms filter.", "type": "int, optional", "default": ""}, "has_garden": {"description": "Filter to include properties with a garden.", "type": "bool, optional", "default": ""}, "added_to_site": {"description": "The date the property was added to the site.", "type": "str, optional", "default": ""}, "property_type": {"description": "The type of property (comma-separated values). Examples: 'Bungalow,StudentHalls,Detached,SemiDetached,Terraced,Flat'.", "type": "str, optional", "default": ""}, "keywords": {"description": "Keywords to filter properties (comma-separated values). Examples: 'pool, garden'.", "type": "str, optional", "default": ""}, "has_house_share": {"description": "Filter to include properties that have house sharing options.", "type": "bool, optional", "default": ""}, "has_include_let_agreed": {"description": "Filter to include properties that are let agreed.", "type": "bool, optional", "default": ""}, "has_parking": {"description": "Filter to include properties with parking.", "type": "bool, optional", "default": ""}, "do_not_show_house_share": {"description": "Filter to exclude properties with house sharing options.", "type": "bool, optional", "default": ""}}}
{"name": "phone", "description": "Fetches information about a given phone number using the phone-validation API.", "parameters": {"phone": {"description": "The phone number to be validated, should be in E.164 format.", "type": "str", "default": ""}}}
{"name": "transfers_list", "description": "Fetches a list of football player transfers based on various filter criteria.", "parameters": {"competitionid": {"description": "The ID of the competition. Should be obtained from the /search or /competitions/list endpoints. Do not use together with clubid.", "type": "str", "default": "IT1"}, "positiongroup": {"description": "The position group of the players. Possible values are 'Abwehr', 'Mittelfeld', 'Sturm'.", "type": "str, optional", "default": ""}, "limit": {"description": "The number of items per response for paging purposes. Defaults to 30.", "type": "int, optional", "default": "30"}, "maxvalue": {"description": "The maximum market value of players. Example: 151000000.", "type": "int, optional", "default": ""}, "positionid": {"description": "The position ID of the players. Possible values range from 1 to 14, each representing a specific player position.", "type": "int, optional", "default": ""}, "clubid": {"description": "The ID of the club. Should be obtained from the /search or /clubs/list-by-competition endpoints. Do not use together with competitionid.", "type": "int, optional", "default": ""}, "minvalue": {"description": "The minimum market value of players. Example: 9000000.", "type": "int, optional", "default": ""}, "offset": {"description": "The offset for paging purposes. Defaults to 0.", "type": "int, optional", "default": "0"}, "domain": {"description": "The domain for the request. Possible values are 'com', 'de', 'be', 'es', 'it', 'nl', 'pl', 'pt', 'com.tr', and 'world'. Defaults to 'de'.", "type": "str, optional", "default": "de"}}}
{"name": "zipcode", "description": "Fetches location information based on a given ZIP code using the ToolBench RapidAPI.", "parameters": {"zipcode": {"description": "The ZIP code for which to fetch location information.", "type": "str", "default": "95124"}}}
{"name": "ar_by_city_state", "description": "Fetches augmented reality (AR) data for a given city and state using the Toolbench RapidAPI.", "parameters": {"city": {"description": "The name of the city for which AR data is requested.", "type": "str", "default": "San Diego"}, "state": {"description": "The name of the state for which AR data is requested.", "type": "str", "default": "CA"}}}
{"name": "get_individual_bank", "description": "Fetches exchange rates from a specified central bank using a given bank ID and API key.", "parameters": {"bankid": {"description": "The identifier for the desired central bank (e.g., 'dkk' for Denmark National Bank, 'pln' for National Bank Of Poland, 'eur' for European Central Bank, 'usd' for USD base rate by the European Central Bank, 'sek' for Swedish Central Bank).", "type": "str", "default": "eur"}}}
{"name": "bans_esports", "description": "Fetches the esports bans for a given event using the provided event ID.", "parameters": {"event_id": {"description": "The ID of the esports event to fetch bans for.", "type": "int", "default": "10289011"}}}
{"name": "schools", "description": "Retrieves the number of schools in the tournament for a given year.", "parameters": {"identifier": {"description": "The identifier for the year of the tournament.", "type": "str", "default": "1959"}}}
{"name": "player_data", "description": "Fetches player data from the sports API using the provided player ID.", "parameters": {"player_id": {"description": "The ID of the player whose data is to be fetched.", "type": "int", "default": "12994"}}}
{"name": "profile_info", "description": "Retrieves profile information from Instagram using the Toolbench RapidAPI.", "parameters": {"username": {"description": "The Instagram username for which profile information is to be retrieved. Defaults to 'kimkardashian'.", "type": "str", "default": "kimkardashian"}}}
{"name": "location_information", "description": "Fetch Instagram location information using a location ID.", "parameters": {"locationid": {"description": "The Instagram location ID to retrieve information for.", "type": "str", "default": "331004901"}}}
{"name": "get_post_likes", "description": "Fetches the likes for a specific post on Twitter using the given post ID.", "parameters": {"count": {"description": "The number of likes to fetch.", "type": "str", "default": "40"}, "pid": {"description": "The post ID for which to fetch likes.", "type": "str", "default": "1552735248026411010"}, "cursor": {"description": "A cursor for paginating through the results. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "reviews_list", "description": "Fetches a list of reviews and feedback from users using the Yummly API.", "parameters": {"offset": {"description": "The number of items to skip before starting to collect the result set.", "type": "int", "default": "0"}, "globalid": {"description": "The value of the globalId field returned in the feeds/list and feeds/search API.", "type": "str", "default": "a8d6747a-bfaa-46a7-92fb-892e3f76b264"}, "limit": {"description": "The maximum number of items to return.", "type": "int", "default": "20"}}}
{"name": "listofallconstructorswithinaraceinayear", "description": "Fetches a list of all constructors for a specific race (round) within a given season (year).", "parameters": {"year": {"description": "The year of the Formula 1 season.", "type": "str", "default": "year"}, "round": {"description": "The specific race (round) within the season.", "type": "str", "default": "round"}}}
{"name": "artist_featuring", "description": "Fetches the artist featuring information from the Spotify API using the given artist ID.", "parameters": {"is_id": {"description": "The unique identifier for the artist.", "type": "str", "default": "2w9zwq3AktTeYYMuhMjju8"}}}
{"name": "get_session_info", "description": "Fetches session information using the provided session ID and RapidAPI key.", "parameters": {"session_id": {"description": "The unique identifier for the session.", "type": "str", "default": "1685369452715x643061726475037300"}}}
{"name": "ublacklist_txt", "description": "Fetches the ublacklist.txt data for a specified game using the StopModReposts API.", "parameters": {"game": {"description": "The name of the game to fetch the blacklist for. Defaults to 'minecraft'.", "type": "str", "default": "minecraft"}}}
{"name": "states", "description": "Fetches the list of states for a given country using the Referential DB API.", "parameters": {"countrycode": {"description": "The ISO code of the country for which to get the states.", "type": "str", "default": "US"}}}
{"name": "specific_transactions", "description": "Fetch detailed information about a specific cryptocurrency transaction using the provided hash and symbol.", "parameters": {"hash": {"description": "The transaction hash used to uniquely identify the cryptocurrency transaction.", "type": "str", "default": "ac6f1a0b388e2814f2e2036c7c81524cfae7e3432a8e503fe5d07ebb453ee310"}, "symbol": {"description": "The symbol of the cryptocurrency (e.g., BTC, ETH) for which the transaction information is to be retrieved.", "type": "str", "default": "btc"}}}
{"name": "get_7_latest", "description": "Gets the 7 latest updates for a specified stock keyword.", "parameters": {"keyword": {"description": "The stock symbol or keyword to search for. Defaults to 'GOOG'.", "type": "str", "default": "GOOG"}}}
{"name": "v1_thesaurus", "description": "Fetches synonyms and antonyms for a given word using the API Ninjas Thesaurus API.", "parameters": {"word": {"description": "The word for which to find synonyms and antonyms.", "type": "str", "default": "bright"}}}
{"name": "top_free_ipad_apps", "description": "Retrieve a list of the top free iPad apps from the App Store.", "parameters": {"country": {"description": "The country code for the App Store. Default is 'us'.", "type": "str, optional", "default": "us"}, "category": {"description": "The category ID for the apps. Default is '6016'.", "type": "str, optional", "default": "6016"}, "lang": {"description": "The language code for the results. Default is 'en'.", "type": "str, optional", "default": "en"}, "num": {"description": "The number of results to return. Default is 100.", "type": "int, optional", "default": "100"}}}
{"name": "price_all", "description": "Fetches the latest stock price from the RapidAPI service.", "parameters": {"identifier": {"description": "The stock identifier (e.g., ticker symbol) to query. If not provided, fetches a general stock price update.", "type": "str, optional", "default": ""}}}
{"name": "checkthatphone", "description": "Validates a given United States phone number and optionally checks its details like carrier look-up, line type, portability status, geoIP, and timezone using an external API service.", "parameters": {"phone": {"description": "The United States phone number to validate.", "type": "str", "default": "8182925409"}, "ip": {"description": "The IP address to associate with the request. Defaults to '172.95.90.55'.", "type": "str, optional", "default": "172.95.90.55"}}}
{"name": "events_detail", "description": "Fetches and returns all data related to a specific event identified by its UUID from the 'art-openings-italy' API.", "parameters": {"is_id": {"description": "The unique identifier for the event, following the format of a universally unique identifier (UUID).", "type": "str", "default": "55daa408-d224-4b68-8b70-8800424d3e88"}}}
{"name": "get_1_3_get_info_day", "description": "Fetch detailed information about a specific day for a given country, using provided configuration and RapidAPI key.", "parameters": {"country_code": {"description": "The ISO country code (2 letters).", "type": "str", "default": "US"}, "date": {"description": "The date to analyze, in the format YYYY-MM-DD.", "type": "str", "default": "2013-12-31"}, "configuration": {"description": "The preset configuration to be used. Default is 'Federal holidays'.", "type": "str, optional", "default": "Federal holidays"}, "profile_id": {"description": "The profile ID for the query.", "type": "str, optional", "default": ""}}}
{"name": "get_calendar_components", "description": "Fetches the calendar components to build the Hebrew month calendar for a given month and year.", "parameters": {"month": {"description": "The Hebrew month number.", "type": "int", "default": "7"}, "year": {"description": "The year for the Hebrew calendar.", "type": "int", "default": "2021"}}}
{"name": "get_current_status_for_given_flag", "description": "Fetches the current status for a given flag code using the Toolbench RapidAPI service.", "parameters": {"code": {"description": "The flag code for which the status is to be fetched.", "type": "str", "default": "WV"}}}
{"name": "convert_currency", "description": "Converts a specified amount from one currency to another using the RapidAPI currency converter.", "parameters": {"amount": {"description": "The amount of money to convert.", "type": "int", "default": "100"}, "is_from": {"description": "The source currency code.", "type": "str", "default": "USD"}, "to": {"description": "The target currency code.", "type": "str", "default": "EUR"}}}
{"name": "getportfolioinfo", "description": "Retrieves portfolio information for a given portfolio ID from the Trader Wagon API.", "parameters": {"portfolioid": {"description": "The portfolio ID of the trader.", "type": "int", "default": ""}}}
{"name": "get_author_information_by_id", "description": "Fetch a variety of information about an author using their ID.", "parameters": {"author_id": {"description": "The unique identifier of the author.", "type": "str", "default": "239579"}}}
{"name": "get_specific_insult", "description": "Fetches a specific insult using the provided insult ID and RapidAPI key.", "parameters": {"is_id": {"description": "The UUID for the specific insult to be retrieved.", "type": "str", "default": ""}}}
{"name": "mfs_list", "description": "Fetch a list of mutual funds from the Twelve Data API with various filter options.", "parameters": {"apikey": {"description": "API key for authentication. Defaults to 'demo'.", "type": "str, optional", "default": "demo"}, "performance_rating": {"description": "Filter by performance rating. Defaults to None.", "type": "str, optional", "default": ""}, "fund_type": {"description": "Filter by type of fund. Defaults to None.", "type": "str, optional", "default": ""}, "outputsize": {"description": "Specifies the number of records to return. Defaults to None.", "type": "str, optional", "default": ""}, "country": {"description": "Filter funds by country. Defaults to None.", "type": "str, optional", "default": ""}, "fund_family": {"description": "Filter by fund family. Defaults to None.", "type": "str, optional", "default": ""}, "symbol": {"description": "Filter by specific symbol. Defaults to None.", "type": "str, optional", "default": ""}, "risk_rating": {"description": "Filter by risk rating. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "airplanes_ordered_by_ascending", "description": "Fetches a list of airplanes ordered by a specified attribute in ascending order.", "parameters": {"ordering": {"description": "The attribute by which to order the airplanes (e.g., 'name', 'model').", "type": "str", "default": "plane"}}}
{"name": "get_pregame_form", "description": "Fetches pregame form information for a given game using the Viperscore API.", "parameters": {"gameid": {"description": "The unique identifier of the game for which to fetch pregame form information.", "type": "str", "default": "9831832"}}}
{"name": "liquidation_data", "description": "Fetches the summary liquidation data for the specified cryptocurrency.", "parameters": {"coin": {"description": "Name of the cryptocurrency to get detail data for. Necessary if `type` is set to 'detail'.", "type": "str, optional", "default": ""}, "type": {"description": "Type of data to retrieve. If set to 'detail', only data for the specified `coin` will be returned.", "type": "str, optional", "default": ""}}}
{"name": "steps", "description": "Fetches a random selection of WikiHow steps.", "parameters": {"count": {"description": "The number of step strings to retrieve (maximum 100).", "type": "int", "default": "3"}}}
{"name": "get_manga", "description": "Retrieves manga details using the MangaVerse API.", "parameters": {"is_id": {"description": "The ID of the manga to retrieve. Default is '647fed35c71c2c9122b318f8'.", "type": "str", "default": "647fed35c71c2c9122b318f8"}}}
{"name": "etablissement_par_ridet", "description": "Fetches and returns information about an establishment in New Caledonia based on its Ridet number.", "parameters": {"ridet": {"description": "The Ridet number of the establishment.", "type": "str", "default": "0132720001"}}}
{"name": "food_names_and_ids", "description": "Fetches food table IDs for a specified sub-table in the food database using the RapidAPI service.", "parameters": {"subtablename": {"description": "The name of the sub-table whose IDs need to be fetched. Defaults to 'Fo1_2'.", "type": "str, optional", "default": "Fo1_2"}}}
{"name": "falling_three_methods", "description": "Fetches a list of stocks having the Falling Three Methods signal from the RapidAPI BarPatterns service.", "parameters": {"page": {"description": "The page number of results to retrieve. Defaults to 1.", "type": "int, optional", "default": "1"}}}
{"name": "companies_id_people", "description": "Fetches and returns information about people associated with the company with the given identifier from the German company database using RapidAPI.", "parameters": {"is_id": {"description": "The identifier of the company whose associated people's information is to be retrieved.", "type": "str", "default": "DEVFCLQFW054"}}}
{"name": "walk_transit_and_bike_score", "description": "Retrieve the Walk, Transit, and Bike Score for a property using its Zillow property ID (zpid).", "parameters": {"zpid": {"description": "The Zillow property ID of the property. Defaults to 20485700.", "type": "int, optional", "default": "20485700"}}}
{"name": "seasonal_statistics_goals", "description": "Fetches the goal statistics of a specified team in the tournament.", "parameters": {"teamid": {"description": "The ID of the team for which to retrieve goal statistics.", "type": "int", "default": "803"}}}
{"name": "fastest_laps_result", "description": "Retrieves information about the fastest laps in a specific Formula 1 race based on the given location and year.", "parameters": {"location": {"description": "The location of the race.", "type": "str", "default": "bahrain"}, "year": {"description": "The year of the race.", "type": "int", "default": "2022"}}}
{"name": "getbycordsadv", "description": "Fetch nearby electric vehicle charging stations based on given latitude and longitude coordinates.", "parameters": {"radius": {"description": "Radius in miles within which to search for charging stations.", "type": "int", "default": "10"}, "lat": {"description": "Latitude coordinate for the search center.", "type": "int", "default": "40.733154296875"}, "lng": {"description": "Longitude coordinate for the search center.", "type": "int", "default": "-73.99571228027344"}, "access_param": {"description": "Type of access for the charging stations (e.g., 'public', 'private'). Defaults to 'public'.", "type": "str, optional", "default": "public"}, "ev_connector_type_param": {"description": "Type of EV connector (e.g., 'J1772'). Defaults to 'J1772'.", "type": "str, optional", "default": "J1772"}, "ev_network_param": {"description": "EV network providers to include in the search (e.g., 'Tesla,Tesla Destination'). Defaults to 'Tesla,Tesla Destination'.", "type": "str, optional", "default": "Tesla,Tesla Destination"}, "per_page": {"description": "Number of results to return per page. Defaults to 10.", "type": "int, optional", "default": "10"}, "page": {"description": "Number of results to return per page. Defaults to 10.", "type": "int, optional", "default": "1"}, "owner_type_param": {"description": "Type of owner for the charging stations (e.g., 'all'). Defaults to 'all'.", "type": "str, optional", "default": "all"}}}
{"name": "get_media_download_link", "description": "Fetches an Instagram media download link for a given post, TV, or reel link.", "parameters": {"link": {"description": "The URL link of the Instagram media (post, TV, or reel).", "type": "str", "default": "https://www.instagram.com/p/CqIbCzYMi5C/"}}}
{"name": "screeners_details", "description": "Fetch detailed information about a specified stock screener using the Seeking Alpha API.", "parameters": {"screener_id": {"description": "The unique identifier of the screener from the Screeners list and Screeners filters.", "type": "str", "default": "96793299"}}}
{"name": "find_by_title", "description": "Fetches movie details based on the given title from the RapidAPI service.", "parameters": {"q": {"description": "The title of the movie to search for.", "type": "str", "default": "game of thr"}}}
{"name": "get_specific_event_information", "description": "Fetch and return information for a specific event using the event identifier.", "parameters": {"eventidentifier": {"description": "Unique identifier for the event to retrieve booking information.", "type": "str", "default": ""}}}
{"name": "get_half_staff_events_for_given_flag", "description": "Fetches all half-staff events for a given flag code using the specified RapidAPI key.", "parameters": {"code": {"description": "The flag code for which to retrieve half-staff events.", "type": "str", "default": "NY"}}}
{"name": "v1_historicalevents", "description": "Fetches a list of up to 10 historical events that match the provided search parameters using API Ninjas Historical Events API.", "parameters": {"text": {"description": "Query text to search events by. Use keywords or short phrases for best match results. Defaults to 'roman empire'.", "type": "str", "default": "roman empire"}, "month": {"description": "Integer representing the month (e.g., 3 for March). Defaults to None.", "type": "int, optional", "default": ""}, "day": {"description": "Calendar day of the month. Defaults to None.", "type": "int, optional", "default": ""}, "year": {"description": "4-digit year (e.g., 1776). For BC/BCE years, use a negative integer (e.g., -351 for 351 BC). Defaults to None.", "type": "int, optional", "default": ""}, "offset": {"description": "Number of results to offset (for pagination). Defaults to None.", "type": "int, optional", "default": ""}}}
{"name": "get_hebrew_month", "description": "Fetches the Hebrew month for a given Gregorian date string using the Enoch Calendar API.", "parameters": {"datestring": {"description": "The Gregorian date in 'YYYY-MM-DD' format for which to get the Hebrew month.", "type": "str", "default": "2021-03-17"}}}
{"name": "zones_type_zoneid_forecast", "description": "Fetches the forecast data for a given zone type and zone ID using the National Weather Service API.", "parameters": {"type": {"description": "A valid zone type (e.g., public, coastal, fire).", "type": "str", "default": ""}, "zoneid": {"description": "The ID of the zone for which to fetch the forecast.", "type": "str", "default": ""}}}
{"name": "directory", "description": "Retrieves all the Local Area Codes from a given country.", "parameters": {"country": {"description": "An ISO 2-letter country code or the name of the country in English.", "type": "str", "default": "BR"}}}
{"name": "getcertdetails", "description": "Gets the certificate details of a given domain using the RapidAPI service.", "parameters": {"domainname": {"description": "The domain name for which to retrieve the certificate details.", "type": "str", "default": "google.com"}}}
{"name": "ideas_list", "description": "Fetches a list of ideas/posts with various filtering and sorting options.", "parameters": {"locale": {"description": "The language code for the ideas/posts. Default is 'en'.", "type": "str", "default": "en"}, "category": {"description": "Filter by category. Options are 'picked', 'newest', 'popular'.", "type": "str, optional", "default": ""}, "stock_country": {"description": "The country code for stock-related ideas. Only applicable if the market is 'stock'. Default is 'us'.", "type": "str", "default": "us"}, "page": {"description": "The page index for pagination. Default is 1.", "type": "int", "default": "1"}, "per_page": {"description": "The number of items per page for pagination. Default is 20.", "type": "int", "default": "20"}, "market": {"description": "The market type. Options are 'bond', 'futures', 'index', 'forex', 'bitcoin', 'stock'.", "type": "str, optional", "default": ""}, "symbol": {"description": "Filter ideas/posts related to the specified symbol (e.g., 'NASDAQ:AAPL').", "type": "str, optional", "default": ""}, "sort": {"description": "Sorting option. Options are 'latest_popular', 'recent', 'picked_time'. Default is 'latest_popular'.", "type": "str", "default": "latest_popular"}}}
{"name": "recent", "description": "Fetches recent arrests from the specified source using the JailBase API.", "parameters": {"source_id": {"description": "The ID of the specific organization to search. Use 'az-mcso' for testing. The full list of source IDs can be found at http://www.jailbase.com/api/#sources_list.", "type": "str", "default": ""}, "page": {"description": "The page number to return, with only 10 records returned per page. Refer to total_records, current_page, and next_page values in the results for pagination details.", "type": "int, optional", "default": ""}, "json_callback": {"description": "The function name to use for JSONP responses.", "type": "str, optional", "default": ""}}}
{"name": "services", "description": "Fetch a list of professional sellers for a specified service category from the Fiverr Pro Services API.", "parameters": {"category_name": {"description": "The name of the service category to fetch professional sellers for.", "type": "str", "default": "Graphics  & Design: Logo Design"}, "page": {"description": "The page number of results to return. Default is 10.", "type": "int, optional", "default": "10"}}}
{"name": "getlenscreators", "description": "Fetches Lens creators from the Snapchat API using the provided parameters.", "parameters": {"cursor": {"description": "A cursor indicating the starting point for fetching Lens creators. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "hashtag_metadata_information_v2", "description": "Fetch metadata information for a given hashtag using the V2 endpoint.", "parameters": {"hashtag": {"description": "The name of the hashtag to retrieve metadata for. For example: **summer**", "type": "str", "default": "summer"}}}
{"name": "rising_popular_posts", "description": "Fetches rising popular posts from a specified Reddit API endpoint.", "parameters": {"cursor": {"description": "A string to paginate through results. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "global_players_statistics", "description": "Fetch global statistics about tennis players based on the given season, category, and surface using the Ultimate Tennis RapidAPI.", "parameters": {"season": {"description": "The season to select. Pass the year (e.g., 2022, 2021) or 'all' for all-time rankings. The first year supported is 1991.", "type": "str", "default": "all"}, "category": {"description": "The statistical category to retrieve. Available options include 'aces', '1stserve', 'returngameswon', 'breakpointsconverted', 'returnpointswon2ndserve', 'returnpointswon1stserve', '1stservepointswon', '2ndservepointswon', 'servicegameswon', 'breakpointsaved'.", "type": "str", "default": "aces"}, "surface": {"description": "The surface type for the statistics. Available options are 'clay', 'grass', 'hard', or 'all' for all surfaces.", "type": "str", "default": "all"}}}
{"name": "ufc_fight_night_dern_vs_hill_may_20_2023", "description": "Fetch details of UFC Fight Night: Dern vs. Hill held on May 20, 2023.", "parameters": {"offset": {"description": "The starting point within the collection of resource results.", "type": "int, optional", "default": ""}, "limit": {"description": "The number of resources to return from the collection.", "type": "int, optional", "default": ""}}}
{"name": "real_time_user_search", "description": "Perform a real-time search for social media influencers based on a given keyword.", "parameters": {"keyword": {"description": "The search keyword. For example: 'amazon'.", "type": "str", "default": "amazon"}, "skip": {"description": "The number of records to skip in the search results. Useful for paginating results.", "type": "int, optional", "default": ""}, "limit": {"description": "The maximum number of records to return. Default is 30, and the maximum allowed value is 30.", "type": "int, optional", "default": "30"}}}
{"name": "music_info", "description": "Retrieve music information using a given music ID from the TikTok API.", "parameters": {"music_id": {"description": "The ID of the music track to retrieve information for.", "type": "str", "default": "6761543137128089601"}}}
{"name": "list_top_artists", "description": "Fetches the top artists from Spotify based on the specified criteria.", "parameters": {"type": {"description": "Time span for the chart, either `weekly` or `daily`. Defaults to `weekly`.", "type": "str, optional", "default": ""}, "date": {"description": "Date for the chart in `YYYY-MM-DD` format. Leave blank to get the latest chart.", "type": "str, optional", "default": ""}, "region": {"description": "Region code in ISO 3166 alpha-2 format (e.g., `US`). Defaults to `global`.", "type": "str, optional", "default": ""}}}
{"name": "stock_get_histories", "description": "Fetches historical stock market data for a given performance ID.", "parameters": {"performanceid": {"description": "The PerformanceId field retrieved from the /market/auto-complete or /market/get-summary APIs.", "type": "str", "default": "0P00001GJH"}}}
{"name": "bookrestaurant", "description": "Books a restaurant based on the provided criteria using the RapidAPI CamRest API.", "parameters": {"pricerange": {"description": "The desired price range for the restaurant.", "type": "str", "default": "moderate"}, "area": {"description": "The area in which to search for the restaurant.", "type": "str", "default": "elarea"}, "food": {"description": "The type of food preferred, default is 'spanish'.", "type": "str, optional", "default": "spanish"}, "restaurantname": {"description": "The name of the restaurant, default is 'McDonalds'.", "type": "str, optional", "default": "McDonalds"}}}
{"name": "obtener_cp", "description": "Fetches the list of postal codes based on the provided postal code.", "parameters": {"cp": {"description": "The postal code for which to fetch the corresponding list of postal codes.", "type": "int", "default": "64720"}}}
{"name": "get_place_by_my_ip", "description": "Fetches the geographical location related to the IP address of the requester.", "parameters": {"language": {"description": "Specifies the language (ISO 639-1) code to localize the name of the place. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "trending_games", "description": "python", "parameters": {"pagesize": {"description": "The number of results to return per page. Defaults to '20'.", "type": "str", "default": "20"}, "page": {"description": "The page number to retrieve. Defaults to '1'.", "type": "str", "default": "1"}}}
{"name": "get_date_and_time_by_timezone", "description": "Gets the current date and time for a specified timezone using the Location and Time API.", "parameters": {"timezone": {"description": "The timezone for which to retrieve the date and time.", "type": "str", "default": "America/Los_Angeles"}}}
{"name": "birthday", "description": "Fetches detailed information about a given birthday date using the DateClock API.", "parameters": {"date": {"description": "The birthday date in 'YYYY-MM-DD' format.", "type": "str", "default": "1993-12-24"}}}
{"name": "get_channel_leaderboards", "description": "Fetches the leaderboards for a specified Twitch channel using the provided RapidAPI key.", "parameters": {"channel": {"description": "The name of the Twitch channel to get leaderboards for. Defaults to 'shadoune666'.", "type": "str", "default": "shadoune666"}}}
{"name": "validate_cnpj", "description": "Validate a CNPJ number using the Toolbench RapidAPI service, ignoring certain characters such as ., -, and /.", "parameters": {"n": {"description": "The CNPJ number to be validated.", "type": "str", "default": "11.111.111/1111-80"}}}
{"name": "retrieve_trait_offers", "description": "Retrieve trait offers for a specified collection from the OpenSea API.", "parameters": {"slug": {"description": "The slug identifier for the collection on OpenSea.", "type": "str", "default": "cool-cats-nft"}, "value": {"description": "The value of the trait to filter by. Defaults to 'classy_1'.", "type": "str, optional", "default": "classy_1"}, "type": {"description": "The type of trait to filter by. Defaults to 'tier'.", "type": "str, optional", "default": "tier"}}}
{"name": "get_predictions_performance_statistics", "description": "Fetches the predictions performance statistics for a given query by making a request to the Daily Betting Tips API.", "parameters": {"q": {"description": "The query string to filter the predictions by date. The date format should be \"dd.MM.yyyy\".", "type": "str", "default": "23.12.2020"}, "connection": {"description": "The connection type for the request. Defaults to 'keep-alive'.", "type": "str, optional", "default": "keep-alive"}, "content_type": {"description": "The content type for the request. Defaults to 'application/json'.", "type": "str, optional", "default": "application/json"}}}
{"name": "get_movie_reviews_by_id", "description": "Fetches a complete list of movie reviews associated with a given movie ID.", "parameters": {"is_id": {"description": "The movie ID for which reviews need to be fetched. The ID can be obtained from the Get Movie By ID endpoint.", "type": "str", "default": "tt0120338"}}}
{"name": "title_title_abs", "description": "Retrieves all poems with a specific title using the Thundercomb Poetry DB API.", "parameters": {"title": {"description": "The exact title of the poem.", "type": "str", "default": "Sonnet 18: Shall I compare thee to a summer's day?"}}}
{"name": "job", "description": "Search for job opportunities based on a provided query string.", "parameters": {"query": {"description": "A URL-encoded query string specifying the position title and optionally the location. Refer to https://moz.com/blog/the-ultimate-guide-to-the-google-search-parameters for more information on query encoding.", "type": "str", "default": "q=nurse+practitioner"}}}
{"name": "get_schema_by_name", "description": "Fetches and returns the schema details for a given schema name from the MongoDB Wix API.", "parameters": {"schemaname": {"description": "The name of the schema for which details are to be fetched.", "type": "str", "default": "car"}}}
{"name": "get_random_quotes", "description": "Fetches multiple random quotes from a specified category or from multiple categories if 'all' is specified.", "parameters": {"count": {"description": "The number of random quotes to retrieve.", "type": "int", "default": "2"}, "category": {"description": "The category from which to fetch quotes. Use 'all' to fetch from multiple categories.", "type": "str", "default": "all"}}}
{"name": "v4_sports_sport_scores", "description": "Returns a list of live and upcoming games for a given sport, including scores for live and recently completed games.", "parameters": {"sport": {"description": "The sport for which to return games and scores.", "type": "str", "default": "americanfootball_nfl"}, "daysfrom": {"description": "The number of days in the past from which to return completed games. Valid values are integers from 1 to 3. Defaults to 3.", "type": "int, optional", "default": 3}}}
{"name": "top_grossing_ipad_apps", "description": "Fetch a list of the top-grossing iPad apps from the RapidAPI App Store.", "parameters": {"country": {"description": "The country code (e.g., 'us' for the United States). Default is 'us'.", "type": "str", "default": "us"}, "lang": {"description": "The language code (e.g., 'en' for English). Default is 'en'.", "type": "str", "default": "en"}, "category": {"description": "The category ID for the apps. Default is '6016'.", "type": "str", "default": "6016"}, "num": {"description": "The number of top-grossing apps to retrieve. Default is 100.", "type": "int", "default": "100"}}}
{"name": "top_free_mac_apps", "description": "Fetches a list of the top free Mac apps from the RapidAPI App Store.", "parameters": {"lang": {"description": "The language for the app descriptions. Default is 'en'.", "type": "str", "default": "en"}, "category": {"description": "The category ID for the apps. Default is '6016'.", "type": "str", "default": "6016"}, "country": {"description": "The country code for the App Store. Default is 'us'.", "type": "str", "default": "us"}, "num": {"description": "The number of results to return. Default is 100. Maximum is 200.", "type": "int", "default": "100"}}}
{"name": "stations", "description": "Retrieves a list of weather stations and their metadata, optionally filtered by parameters such as limit and states. If no parameters are provided, all stations are returned. The function only returns active stations.", "parameters": {"limit": {"description": "Limit the number of results.", "type": "int, optional", "default": ""}, "states": {"description": "Filter results by states (by abbreviation).", "type": "str, optional", "default": ""}}}
{"name": "stars_get_image", "description": "Gets image links displaying the star rating.", "parameters": {"stars": {"description": "The star rating, an integer between 1 and 5.", "type": "int", "default": "2"}}}
{"name": "leaguelogo", "description": "Retrieves the logo image for an American Football league, given its unique tournament ID. The image is returned in PNG format.", "parameters": {"tournamentid": {"description": "The unique tournament ID of the league whose logo is to be retrieved.", "type": "int", "default": 9464}}}
{"name": "get_product_reviews", "description": "Retrieves reviews for a specific product associated with a given app key from Yotpo.", "parameters": {"count": {"description": "The number of reviews to fetch.", "type": "str", "default": "3"}, "page": {"description": "The page number to fetch reviews from.", "type": "str", "default": "1"}, "app_key": {"description": "The application key assigned after signing up with Yotpo (www.yotpo.com).", "type": "str", "default": "B02uug6tF2uEA0Denhj0c9PV73y5PEOuKFmTCGb1"}, "domain_key": {"description": "The unique identifier of the product.", "type": "str", "default": "92431514"}}}
{"name": "get_vehicule_info2", "description": "Fetch vehicle information using the PLAQUE IMMATRICULATION API.", "parameters": {"immatriculation": {"description": "The vehicle registration number to query. Defaults to 'AA-123-BC'.", "type": "str, optional", "default": "AA-123-BC"}, "token": {"description": "The API token for authentication. Defaults to 'TokenDemoRapidapi'.", "type": "str, optional", "default": "TokenDemoRapidapi"}, "host_name": {"description": "The API host name. Defaults to 'https://apiplaqueimmatriculation.com'.", "type": "str, optional", "default": "https://apiplaqueimmatriculation.com"}}}
{"name": "search_properties_for_sale", "description": "Searches for properties for sale in a specified location using various filtering criteria.", "parameters": {"location": {"description": "The location to search for properties (e.g., Address, School, City, Zip, or Neighborhood).", "type": "str", "default": "santa monica"}, "beds_min": {"description": "Minimum number of bedrooms.", "type": "int, optional", "default": ""}, "baths_max": {"description": "Maximum number of bathrooms.", "type": "int, optional", "default": ""}, "year_built_max": {"description": "Maximum year the property was built.", "type": "int, optional", "default": ""}, "year_built_min": {"description": "Minimum year the property was built.", "type": "int, optional", "default": ""}, "list_date_min": {"description": "Minimum listing date (formatted as 'YYYY-MM-DD').", "type": "str, optional", "default": ""}, "open_house_max": {"description": "Maximum open house date (formatted as 'YYYY-MM-DD').", "type": "str, optional", "default": ""}, "has_tour": {"description": "Whether the property has a virtual tour.", "type": "bool, optional", "default": ""}, "list_price_min": {"description": "Minimum listing price.", "type": "int, optional", "default": ""}, "hoa_fee_optional_max": {"description": "Maximum optional HOA fee.", "type": "int, optional", "default": ""}, "list_date_max": {"description": "Maximum listing date (formatted as 'YYYY-MM-DD').", "type": "str, optional", "default": ""}, "list_price_max": {"description": "Maximum listing price.", "type": "int, optional", "default": ""}, "baths_min": {"description": "Minimum number of bathrooms.", "type": "int, optional", "default": ""}, "open_house_min": {"description": "Minimum open house date (formatted as 'YYYY-MM-DD').", "type": "str, optional", "default": ""}, "type": {"description": "Property type as a comma-separated string (default is 'single_family,condos'). Possible values:", "type": "str, optional", "default": "single_family,condos"}, "sort": {"description": "Sort properties by specified criteria. Possible values:", "type": "str, optional", "default": ""}, "beds_max": {"description": "Maximum number of bedrooms.", "type": "int, optional", "default": ""}, "page": {"description": "Page number for paginated results.", "type": "int, optional", "default": ""}, "lot_sqft_min": {"description": "Minimum lot square footage.", "type": "int, optional", "default": ""}, "lot_sqft_max": {"description": "Maximum lot square footage.", "type": "int, optional", "default": ""}, "hoa_fee_optional_min": {"description": "Minimum optional HOA fee.", "type": "int, optional", "default": ""}, "sqft_max": {"description": "Maximum lot square footage.", "type": "int, optional", "default": ""}, "sqft_min": {"description": "Minimum lot square footage.", "type": "int, optional", "default": ""}}}
{"name": "list_of_all_countries", "description": "Retrieves a list of all countries, optionally in a specified language.", "parameters": {"lang": {"description": "The language code (e.g., 'en', 'fr', 'de') to retrieve country names in a specific language. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "historical_weather", "description": "Fetch historical weather data for a specific date and location within the past 8 years.", "parameters": {"date": {"description": "The UTC day of the data in the past in `YYYY-MM-DD` format.", "type": "str", "default": "2021-08-24"}, "lat": {"description": "Latitude in the following format: `12N`, `12.3N`, `12.3`, `13S`, `13.2S`, `-13.4`. If not provided, `place_id` must be specified. Default is '37.81021'.", "type": "str, optional", "default": "37.81021"}, "place_id": {"description": "Identifier of a place. If not provided, `lat` and `lon` must be specified. Default is None.", "type": "str, optional", "default": ""}, "units": {"description": "Unit system to be used. Available values are:", "type": "str, optional", "default": "auto"}, "lon": {"description": "Longitude in the following format: `12E`, `12.3E`, `12.3`, `13W`, `13.2W`, `-13.4`. If not provided, `place_id` must be specified. Default is '-122.42282'.", "type": "str, optional", "default": "-122.42282"}}}
{"name": "graffiti_tags", "description": "Fetches and returns a list of graffiti tags based on provided sorting and limiting parameters from the Jet Set Radio API.", "parameters": {"orderby": {"description": "Determines the order of the returned tags. Possible values are 'asc' for ascending and 'desc' for descending. Default is 'asc'.", "type": "str", "default": "asc"}, "limit": {"description": "Limits the number of items returned in the response. Default is '5'.", "type": "str", "default": "5"}, "sortby": {"description": "Specifies the field by which the tags will be sorted. Examples include 'name' and 'stats'. Default is 'name'.", "type": "str", "default": "name"}}}
{"name": "fetch_chapters", "description": "Fetches the list of chapters for a given manga ID from the Mangaverse API.", "parameters": {"is_id": {"description": "The ID of the manga for which chapters need to be fetched. Defaults to '6486b7547ae7cb74845df856'.", "type": "str, optional", "default": "6486b7547ae7cb74845df856"}}}
{"name": "get_6_timeseries_endpoint", "description": "Fetches historical exchange rates for specified currencies over a given time period.", "parameters": {"end_date": {"description": "The end date for the timeseries data in 'YYYY-MM-DD' format.", "type": "str", "default": "2023-02-02"}, "start_date": {"description": "The start date for the timeseries data in 'YYYY-MM-DD' format.", "type": "str", "default": "2023-01-01"}, "base": {"description": "The base currency code (default is 'usd').", "type": "str, optional", "default": "usd"}, "symbols": {"description": "The target currency code(s) (default is 'eur').", "type": "str, optional", "default": "eur"}}}
{"name": "qr_code_image_copy", "description": "Generates a QR code image from the given URL using the QR Code API.", "parameters": {"url": {"description": "The URL to be encoded as a QR code.", "type": "str", "default": "www.duckduckgo.com"}}}
{"name": "fetch_by_type", "description": "Fetches records from the RapidAPI endpoint based on the specified type and limit.", "parameters": {"type": {"description": "The type of records to fetch. Refer to the API documentation for accepted types.", "type": "str", "default": "Forest"}, "limit": {"description": "The number of records to fetch.", "type": "int", "default": "5"}}}
{"name": "query_for_hexagon_by_h3index", "description": "Queries a boundary for a given H3 index from the VanitySoft UK Boundaries API.", "parameters": {"h3index": {"description": "The H3 index identifier for the hexagon to query.", "type": "int", "default": "635177333670728575"}}}
{"name": "get_6_daily", "description": "Fetches daily stock data for a given keyword from a specified start date using the Toolbench RapidAPI.", "parameters": {"startdate": {"description": "The start date for the stock data in 'YYYY-MM-DD' format. Defaults to '2023-02-01'.", "type": "str", "default": "2023-02-01"}, "keyword": {"description": "The stock symbol or keyword to query. Defaults to 'GOOG'.", "type": "str", "default": "GOOG"}}}
{"name": "business_units_get_web_links", "description": "Fetches web links of a business unit using the TrustPilot API.", "parameters": {"is_id": {"description": "The unique identifier of the business unit, obtained from the /business-units/search or /business-units/search-by-domain endpoint.", "type": "str", "default": "46a7e93b000064000500918b"}, "locale": {"description": "The locale code for the response. Defaults to 'en-US'.", "type": "str, optional", "default": "en-US"}}}
{"name": "feeds_list", "description": "Fetches a list of feeds from the Yummly API based on the given parameters for pagination and optional category tag.", "parameters": {"start": {"description": "The offset of items to be skipped in the response for paging.", "type": "int", "default": "0"}, "limit": {"description": "The number of items to be returned per response.", "type": "int", "default": "24"}, "tag": {"description": "The value representing a specific category/tag to filter the feeds list. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "mensajes", "description": "This function fetches messages from the Colegio Santa Ana API.", "parameters": {"authorization": {"description": "The authorization token required for the API request.", "type": "str", "default": "1234567890"}}}
{"name": "pagesjaunes", "description": "This function extracts data from the \"Pages Jaunes\" (Yellow Pages) for a given location and keyword.", "parameters": {"pjpage": {"description": "The page number to retrieve.", "type": "int", "default": "1"}, "pjlocation": {"description": "The location to search within \"Pages Jaunes\".", "type": "str", "default": "Paris"}, "pjkeyword": {"description": "The keyword to search for in \"Pages Jaunes\".", "type": "str", "default": "Restaurant"}}}
{"name": "live_players_rankings", "description": "Retrieves live tennis rankings for a given number of players, including position, points, and information about the last match played in the current active tournament.", "parameters": {"n_player": {"description": "The number of players for which to retrieve the live rankings, with a maximum of 500.", "type": "str", "default": "50"}}}
{"name": "profile_stories", "description": "Fetch the Instagram stories for a specific profile using the provided RapidAPI key.", "parameters": {"username": {"description": "The Instagram username for which to fetch stories. Defaults to 'kimkardashian'.", "type": "str", "default": "kimkardashian"}}}
{"name": "top_grossing_ios_apps", "description": "Fetch a list of the top grossing iOS apps from a specified country and category.", "parameters": {"country": {"description": "The country code for the App Store (default is 'us').", "type": "str, optional", "default": "us"}, "category": {"description": "The category ID for the apps (default is '6016').", "type": "str, optional", "default": "6016"}, "lang": {"description": "The language code for the app descriptions (default is 'en').", "type": "str, optional", "default": "en"}, "num": {"description": "The number of results to return (default is 100).", "type": "int, optional", "default": "100"}}}
{"name": "check_email", "description": "Validates an email address using the RapidAPI Email Checker and Validator service.", "parameters": {"email": {"description": "The email address to validate.", "type": "str", "default": "marod29733@lubde.com"}}}
{"name": "retrieve_buy_sell_informations_by_id", "description": "Retrieve the latest Buy/Sell orders placed on the Steam Store for a given item ID.", "parameters": {"is_id": {"description": "The item ID for which to retrieve the buy/sell orders.", "type": "str", "default": "730---Dreams %26 Nightmares Case"}}}
{"name": "get_4d_results", "description": "Fetches the 4D lottery results for a specific date and company.", "parameters": {"version": {"description": "The version of the 4D results API to use.", "type": "str", "default": "v1"}, "date": {"description": "The date for which the 4D results are to be fetched, in YYYY-MM-DD format.", "type": "str", "default": "2020-01-29"}, "company": {"description": "The lottery company for which the results are to be fetched. Options include:", "type": "str", "default": ""}}}
{"name": "airqualityhealthindex", "description": "Calculate the official air quality health index (AQHI) based on key air pollutant concentrations.", "parameters": {"o3": {"description": "The ground-level ozone (O3) concentration in parts per billion (ppb).", "type": "str", "default": "10"}, "no2": {"description": "The nitrogen dioxide (NO2) concentration in parts per billion (ppb).", "type": "str", "default": "10"}, "pm": {"description": "The fine particulate matter (PM2.5) concentration in micrograms per cubic meter (µg/m³).", "type": "str", "default": "10"}}}
{"name": "get_standings", "description": "Fetches the standings for a given tournament from the League of Legends Esports API.", "parameters": {"tournamentid": {"description": "The ID of the tournament for which standings are to be fetched.", "type": "str", "default": "103556720421148036"}}}
{"name": "user", "description": "Retrieves a user profile from the Moodring API using the provided user ID.", "parameters": {"userid": {"description": "The unique identifier of the user to be retrieved.", "type": "str", "default": "1"}}}
{"name": "retrieve_data", "description": "Retrieve data from the Cameroon news API with optional query parameters.", "parameters": {"rank": {"description": "The ranking criteria for the news data. Default is None.", "type": "str, optional", "default": ""}, "page": {"description": "The page number to retrieve for the data. Default is None.", "type": "str, optional", "default": ""}, "search": {"description": "A search key to filter the news data. Default is None.", "type": "str, optional", "default": ""}}}
{"name": "get_a_conversation", "description": "Fetch details of a specific conversation using its ID.", "parameters": {"is_id": {"description": "The ID of the conversation to retrieve.", "type": "int", "default": ""}}}
{"name": "history_prices", "description": "Fetches historical stock prices including Date, Open, High, Low, Close, Adj Close, and Volume for a given stock symbol over a specified range.", "parameters": {"range": {"description": "The time period for which to fetch stock prices. Choices are ['1y', '5y', 'max']. Defaults to '1y'.", "type": "str", "default": "1y"}, "symbol": {"description": "The ticker symbol of the company. Defaults to 'TSLA'.", "type": "str", "default": "TSLA"}}}
{"name": "clubs_get_header_info", "description": "Fetches the header information of a club using the TransferMarket API.", "parameters": {"is_id": {"description": "The ID of the club to fetch header information for.", "type": "int", "default": "631"}, "domain": {"description": "The domain to use for the API request. Defaults to 'de'. Possible values include 'com', 'de', 'be', 'es', 'it', 'nl', 'pl', 'pt', 'com.tr', and 'world'.", "type": "str, optional", "default": "de"}}}
{"name": "ticker_changes", "description": "Fetches ticker values and price changes for a specified market and symbol using the RapidAPI service.", "parameters": {"market": {"description": "The market to query. Possible values include 'global' and 'local'.", "type": "str", "default": "local"}, "symbol": {"description": "The trading pair symbol to query. Possible values include 'ETH<fiat>', where <fiat> is a valid ISO currency code (e.g., 'ETHUSD').", "type": "str", "default": "ETHUSD"}}}
{"name": "get_new_hashtags", "description": "Fetches 1000 newly generated Instagram hashtags based on the specified page number.", "parameters": {"page": {"description": "The page number for the hashtag query, ranging from 0 to 9.", "type": "str", "default": "0"}}}
{"name": "get_episode_downloadable_audio", "description": "Fetches the full details of a given podcast episode. Provides a downloadable URL of the full audio if available.", "parameters": {"episodeid": {"description": "The unique identifier for the podcast episode.", "type": "str", "default": "3LEK1k9KaFRLAmPwMbj3o9"}}}
{"name": "get_nba_betting_odds", "description": "Fetch NBA betting lines and odds from various online sportsbooks such as Fanduel, BetRivers, BetMGM, Caesars, and PointsBet.", "parameters": {"gameid": {"description": "The unique identifier for a specific game. Defaults to None.", "type": "str, optional", "default": ""}, "gamedate": {"description": "The date for which to retrieve betting odds, in the format YYYYMMDD. Defaults to '20230304'.", "type": "str, optional", "default": "20230304"}}}
{"name": "stock_quote_price", "description": "Fetches the real-time stock price for a given stock symbol using the Financial Modeling Prep API.", "parameters": {"symbol": {"description": "The stock symbol for which to fetch the real-time price.", "type": "str", "default": "AAPL"}, "apikey": {"description": "The API key for authenticating with the Financial Modeling Prep API. Default is 'rapidapi'.", "type": "str", "default": "rapidapi"}}}
{"name": "competitions_matches", "description": "Retrieves the current matches for a specified league and season using the Zeus API.", "parameters": {"is_id": {"description": "The identifier for the league.", "type": "str", "default": "LI1"}, "year": {"description": "The season year to retrieve matches for. Defaults to '2021'.", "type": "str, optional", "default": "2021"}, "round": {"description": "The round number of the matches to retrieve. Defaults to '24'.", "type": "str, optional", "default": "24"}}}
{"name": "show_movie", "description": "Retrieves information about a specific movie show using the RapidAPI service.", "parameters": {"show_slug": {"description": "The slug identifier for the show.", "type": "str", "default": ""}, "is_id": {"description": "The ID of the specific video of the show.", "type": "str", "default": ""}}}
{"name": "lyrics_get", "description": "Fetches lyrics and related data for a specific song using the SongMeanings API.", "parameters": {"sm_lid": {"description": "SongMeanings Lyric ID. When specified, this parameter will bypass any other lyric identification parameters.", "type": "str", "default": ""}, "lyric_title": {"description": "The title of the song or track.", "type": "str", "default": ""}, "artist_name": {"description": "The name of the artist.", "type": "str", "default": ""}, "format": {"description": "The desired output format (either 'xml' or 'json').", "type": "str", "default": ""}, "spotify_id": {"description": "The Spotify ID of the song. If specified, a match will attempt to be made via this ID. The API will also require `lyric_title` and `artist_name` as backup attempts if this parameter is used. Defaults to None.", "type": "str, optional", "default": ""}, "count": {"description": "Used to track and report any offline cached views of lyrics. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "hin_decoder_return_json", "description": "Decodes a Hull Identification Number (HIN) using the Toolbench RapidAPI and returns the decoded data in JSON format.", "parameters": {"hin": {"description": "The Hull Identification Number to be decoded.", "type": "str", "default": "MVIPK003G607"}}}
{"name": "web_pdf", "description": "Takes a webpage URL and returns a snapshot based on the specified accept headers.", "parameters": {"accept": {"description": "The format in which the snapshot is to be returned (e.g., image/png, application/pdf).", "type": "str", "default": "image/pdf"}, "source": {"description": "The URL of the webpage to snapshot.", "type": "str", "default": "https://www.msn.com"}}}
{"name": "search_for_a_item", "description": "Searches for an item in a League of Legends database based on given criteria.", "parameters": {"champsynergy": {"description": "The champion synergy to filter items by.", "type": "str, optional", "default": ""}, "itemsynergy": {"description": "The item synergy to filter items by.", "type": "str, optional", "default": ""}, "price": {"description": "The price category to filter items by.", "type": "str, optional", "default": ""}, "name": {"description": "The name of the item to search for. Defaults to 'sword'.", "type": "str, optional", "default": "sword"}}}
{"name": "get_detailed_response", "description": "Fetches detailed information for a given movie from the Advanced Movie Search API using the provided RapidAPI key.", "parameters": {"movie_id": {"description": "The unique identifier for the movie whose details are to be fetched.", "type": "int", "default": "399566"}}}
{"name": "get_zip_code_in_mexico", "description": "Fetches and returns data for a given zip code in Mexico using the Toolbench RapidAPI.", "parameters": {"zipcode": {"description": "The Mexican zip code to retrieve data for.", "type": "str", "default": "32390"}}}
{"name": "loading_speed_data", "description": "Retrieves the loading speed data of a specified website using the RapidAPI service.", "parameters": {"website": {"description": "The URL of the website for which the loading speed data is being requested.", "type": "str", "default": "getecz.com"}}}
{"name": "get_a_language", "description": "Retrieve information about a programming language using Judge0 API.", "parameters": {"is_id": {"description": "The ID of the programming language to retrieve information for.", "type": "str", "default": "52"}}}
{"name": "getmaptilewithspanishlabels", "description": "Downloads a raster map tile with Spanish labels from MapTiles API.", "parameters": {"z": {"description": "Zoom level, ranging from 0 to 19.", "type": "int", "default": "3"}, "x": {"description": "X-coordinate of the tile.", "type": "int", "default": "4"}, "y": {"description": "Y-coordinate of the tile.", "type": "int", "default": "2"}}}
{"name": "place_properties", "description": "Retrieves detailed information about a place using its unique identifier (xid) via the OpenTripMap API.", "parameters": {"xid": {"description": "Unique identifier of the place in OpenTripMap.", "type": "str", "default": ""}, "lang": {"description": "Two-letter language code (ISO 639-1), e.g., 'en' for English, 'ru' for Russian.", "type": "str", "default": ""}}}
{"name": "swap_id", "description": "Fetch the information of a Swap from the given Swap ID using the Uniswap V2 API.", "parameters": {"is_id": {"description": "The ID of the Swap to fetch information for.", "type": "str", "default": "0xd259f882f051c3ef49a6f79e0a634be47ff643513c418ca753c93dcca8d4d675-0"}}}
{"name": "stock_get_dividend_yield", "description": "Fetches the dividend yield for a given stock symbol from the specified region using the RapidAPI service.", "parameters": {"symbol": {"description": "The ticker symbol of the stock (e.g., \"AAPL\" for Apple Inc.).", "type": "str", "default": "AAPL"}, "region": {"description": "The region code for the stock market (default is 'US'). Allowed values are 'US', 'BR', 'AU', 'CA', 'FR', 'DE', 'HK', 'IN', 'IT', 'ES', 'GB', and 'S'.", "type": "str, optional", "default": "US"}}}
{"name": "email_format", "description": "Validates the format of an email using the RapidAPI email-checkup service.", "parameters": {"email": {"description": "The email address to be validated.", "type": "str", "default": "test@yahoo.com"}}}
{"name": "fetch_information", "description": "Fetches information based on IP, ASN, CIDR (IPv4 & IPv6), or organization name using the RapidAPI ASN Lookup service.", "parameters": {"ip": {"description": "IP address to lookup. Defaults to None.", "type": "str, optional", "default": ""}, "asn": {"description": "Autonomous System Number to lookup. Defaults to 'AS32934'.", "type": "str, optional", "default": "AS32934"}, "cidr": {"description": "CIDR notation for IP address range to lookup. Defaults to None.", "type": "str, optional", "default": ""}, "orgname": {"description": "Organization name to lookup. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "top_comments_by_username", "description": "Fetches the top comments by a specific Reddit username within a given time frame.", "parameters": {"time": {"description": "The time frame for which to fetch top comments. Choices include 'hour', 'day', 'week', 'month', 'year', or 'all'.", "type": "str", "default": "year"}, "username": {"description": "The Reddit username for which to fetch the top comments.", "type": "str", "default": "GoldenChrysus"}, "cursor": {"description": "A cursor for pagination to fetch the next set of results. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "fetch_images", "description": "Fetches images from the Mangaverse API based on the provided chapter ID.", "parameters": {"is_id": {"description": "The chapter ID to fetch images for. Defaults to '6486b7937ae7cb74845df888' if not provided.", "type": "str", "default": "6486b7937ae7cb74845df888"}}}
{"name": "coins_get_analysis", "description": "Fetches expert analysis opinion for a specific cryptocurrency pair from the Investing Cryptocurrency Markets API.", "parameters": {"pair_id": {"description": "The identifier for the cryptocurrency pair. This value can be obtained from endpoints like coins/list, coins/search, and coins/list-pairs.", "type": "int", "default": "1057391"}, "time_utc_offset": {"description": "The UTC offset in seconds, e.g., UTC+8 hours is 28800 seconds. Default is 28800 (UTC+8).", "type": "int, optional", "default": "28800"}, "lang_id": {"description": "The language identifier, as returned from the get-meta-data endpoint. Default is 1.", "type": "int, optional", "default": "1"}, "page": {"description": "The page number for pagination. Default is 1.", "type": "int, optional", "default": "1"}}}
{"name": "trending_music_gaming_news_movies", "description": "Fetches trending videos based on the specified type and region using the Cheap YouTube API on RapidAPI.", "parameters": {"type": {"description": "The category of videos to fetch. Options include \"music\", \"gaming\", \"news\", and \"movies\". Defaults to 'gaming'.", "type": "str", "default": "gaming"}, "region": {"description": "The ISO 3166 country code specifying the region. Defaults to 'US'.", "type": "str", "default": "US"}}}
{"name": "about", "description": "Fetches metadata from the AresPass API and returns it in the specified format.", "parameters": {"outputformat": {"description": "The format of the returned metadata. Allowed values are 'json', 'xml', and 'yaml'. Default is 'xml'.", "type": "str, optional", "default": ""}}}
{"name": "date_converter_timezone", "description": "Converts a given date to a specified timezone using the DateClock API and returns the response.", "parameters": {"format": {"description": "Specifies the format of the output date. Defaults to None.", "type": "str, optional", "default": ""}, "date": {"description": "The date to be converted. Defaults to '7 Days Ago'.", "type": "str, optional", "default": "7 Days Ago"}, "tz": {"description": "The target timezone for the date conversion. Defaults to 'UTC+8'.", "type": "str, optional", "default": "UTC+8"}}}
{"name": "uuid_to_name", "description": "Convert a Minecraft UUID to a player name using the Toolbench API.", "parameters": {"uuid": {"description": "The Minecraft UUID you want to convert to a player name.", "type": "str", "default": "069a79f444e94726a5befca90e38aaf5"}}}
{"name": "user_friends_list", "description": "Retrieve a full listing of in-game, online, and offline friends of a user from the Steam community using RapidAPI.", "parameters": {"is_id": {"description": "The user's Steam ID for whom the friends list is to be retrieved.", "type": "str", "default": "sindex"}}}
{"name": "singleoffer", "description": "Fetch a single offer by its ID from the external API.", "parameters": {"is_id": {"description": "The ID of the offer to be retrieved.", "type": "str", "default": "1874583655"}}}
{"name": "purgequeue", "description": "Clears the send message queue for a given phone ID using the Maytapi WhatsApp API.", "parameters": {"phone_id": {"description": "The ID of the phone whose message queue is to be purged.", "type": "str", "default": ""}}}
{"name": "get_imbuements_for_lich_shroud_death_protection", "description": "Fetches all imbuements for the Lich Shroud (Death Protection) from the Tibia items API.", "parameters": {"world": {"description": "The name of the Tibia world for which to fetch the imbuements.", "type": "str", "default": "Adra"}}}
{"name": "get_all_scores", "description": "Retrieve a paginated list of all scores from the API.", "parameters": {"page": {"description": "The page number to retrieve. Defaults to 1.", "type": "int, optional", "default": "1"}, "per_page": {"description": "The number of scores per page. Defaults to 3.", "type": "int, optional", "default": "3"}}}
{"name": "phone_number_information", "description": "Fetches public information about a given phone number from a specified API.", "parameters": {"phone": {"description": "The phone number for which public information is to be fetched.", "type": "str", "default": "+79999999999"}, "captchasid": {"description": "The captcha session ID to be included in the query, if available.", "type": "str, optional", "default": ""}, "vkhash": {"description": "The vkHash to be included in the query, if available.", "type": "str, optional", "default": ""}, "captcha": {"description": "The captcha response to be included in the query, if available.", "type": "str, optional", "default": ""}}}
{"name": "rapidapigetforecastsummarybycoordinates", "description": "Fetches the weather forecast summary for the given geographical coordinates using RapidAPI.", "parameters": {"longitude": {"description": "The longitude of the geographical location for which to get the forecast summary.", "type": "int", "default": 10.87152}, "latitude": {"description": "The latitude of the geographical location for which to get the forecast summary.", "type": "int", "default": 46.95828}}}
{"name": "list_of_periods", "description": "Retrieve a list of periods for a given sport ID from the Pinnacle Odds API.", "parameters": {"sport_id": {"description": "The ID of the sport for which to retrieve the periods.", "type": "int", "default": 1}}}
{"name": "articles", "description": "Fetches articles from a specified newspaper using the RapidAPI service.", "parameters": {"newspaper_id": {"description": "The ID of the newspaper from which to fetch articles.", "type": "str", "default": "nytimes"}}}
{"name": "listing_availability", "description": "Retrieve listing availability and stay length rules for a specified month and year from the Airbnb API.", "parameters": {"year": {"description": "The year for which to retrieve listing availability.", "type": "int", "default": "2024"}, "is_id": {"description": "The unique identifier for the listing.", "type": "str", "default": "619966061834034729"}, "month": {"description": "The month for which to retrieve listing availability.", "type": "int", "default": "1"}}}
{"name": "ufc_fight_night_pavlovich_vs_blaydes_april_22_2023", "description": "Fetch details for UFC Fight Night: Pavlovich vs. Blaydes held on April 22, 2023, including information about fighters and fight results.", "parameters": {"offset": {"description": "The number of items to skip before starting to collect the result set. Defaults to None.", "type": "int, optional", "default": ""}, "limit": {"description": "The number of items to return. Defaults to None.", "type": "int, optional", "default": ""}}}
{"name": "qualifying_results", "description": "Retrieve the qualifying results for a specific Formula 1 race based on the given year and location.", "parameters": {"year": {"description": "The year of the race.", "type": "int", "default": "2014"}, "location": {"description": "The location of the race.", "type": "str", "default": "austria"}}}
{"name": "getmatchesbycity", "description": "Fetches all the cricket matches held in a specified city using the IPL API.", "parameters": {"city": {"description": "The name of the city to filter the cricket matches by.", "type": "str", "default": "Kolkata"}}}
{"name": "eventlineups", "description": "Fetches the lineups for a specific E-Sports event using the provided event ID and RapidAPI key.", "parameters": {"is_id": {"description": "The ID of the E-Sports event for which the lineups are to be retrieved.", "type": "int", "default": 10945127}}}
{"name": "get_schedule", "description": "Retrieves the schedule for specified League of Legends leagues using the provided RapidAPI key.", "parameters": {"leagueid": {"description": "A string containing league IDs separated by '%2C' to filter schedules for multiple leagues.", "type": "str", "default": "98767991299243165%2C99332500638116286%2C98767991302996019"}}}
{"name": "gs1code128", "description": "Generates a GS1-128 barcode based on provided data and company prefix, with optional lot and quantity information.", "parameters": {"data": {"description": "The input data to encode into the barcode.", "type": "str", "default": "0123456789"}, "company_prefix": {"description": "The company prefix required for generating the barcode.", "type": "str", "default": "0123456"}, "lot": {"description": "The lot number to include in the barcode. Defaults to 'AB123'.", "type": "str, optional", "default": "AB123"}, "qty": {"description": "The quantity to include in the barcode. Defaults to '100'.", "type": "str, optional", "default": "100"}}}
{"name": "google_maps_data_id", "description": "Fetches the JSON results of the data ID for a specific place using the Google Maps API via RapidAPI.", "parameters": {"query": {"description": "The query string used to search for the place.", "type": "str", "default": "Statue Of Liberty"}, "gl": {"description": "The geographical location from which to execute the query. Defaults to 'us'.", "type": "str, optional", "default": "us"}}}
{"name": "subtitlelist", "description": "Fetches a list of subtitles for a given YouTube video.", "parameters": {"videoid": {"description": "The unique identifier for the YouTube video.", "type": "str", "default": "JY-_GRi56KQ"}, "locale": {"description": "The locale for the subtitles. Defaults to 'EN'.", "type": "str, optional", "default": "EN"}}}
{"name": "get_country_info", "description": "Fetches country information based on specified criteria.", "parameters": {"value": {"description": "The value to query by, such as an ISO code (e.g., 'DE') or a country name (e.g., 'Germany'). Defaults to 'DE'.", "type": "str, optional", "default": "DE"}, "param": {"description": "The parameter type for the query, such as 'ISO' for ISO codes or 'countryName' for country names. Defaults to 'ISO'.", "type": "str, optional", "default": "ISO"}}}
{"name": "channel_videos_playlists", "description": "Retrieve videos or playlists from a YouTube channel using the channel ID.", "parameters": {"channelid": {"description": "The ID of the YouTube channel to fetch videos or playlists from.", "type": "str", "default": "UCAuUUnT6oDeKwE6v1NGQxug"}, "part": {"description": "The part parameter specifies a comma-separated list of one or more video resource properties that the API response will include.", "type": "str", "default": "id,snippet"}, "x_cachebypass": {"description": "Cache bypass parameter. The value must be '1' to bypass the cache.", "type": "str, optional", "default": ""}, "type": {"description": "The type of resource to fetch. Acceptable values are 'video', 'playlist'.", "type": "str, optional", "default": ""}, "order": {"description": "The parameter to sort the results. Default is 'date'. Acceptable values are:", "type": "str, optional", "default": ""}}}
{"name": "artis_info", "description": "Fetches and returns album information for an artist based on the given parameters.", "parameters": {"num": {"description": "Number of albums to fetch information for.", "type": "int", "default": "6"}, "lang": {"description": "Language code for the response data.", "type": "str", "default": "id"}, "index": {"description": "Index position from which to start fetching the album data.", "type": "int", "default": "0"}, "country": {"description": "Country code for the artist.", "type": "str", "default": "id"}, "is_id": {"description": "ID of the artist whose albums information is to be fetched.", "type": "str", "default": "K0wfT9L1dhOcY3%2BWa%2BQY%2BA%3D%3D"}}}
{"name": "echo", "description": "Sends an echo request to the OAuth Echo API and returns the response.", "parameters": {"authorization": {"description": "The client's access token. Defaults to None.", "type": "str, optional", "default": ""}, "msg": {"description": "A message to be echoed by the API. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "qr_code_endpoint", "description": "Generates a QR code for a given URL using the Toolbench RapidAPI service.", "parameters": {"url": {"description": "The URL to be encoded in the QR code. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "get_year_fact", "description": "Fetch a fact about a given year from the Numbers API.", "parameters": {"year": {"description": "The year for which to retrieve the fact.", "type": "str", "default": "1492"}, "fragment": {"description": "If 'True', returns the fact as a fragment that can be easily included as part of a larger sentence. Defaults to 'True'.", "type": "str, optional", "default": true}, "json": {"description": "If 'True', returns the result in JSON format instead of plaintext. Defaults to 'True'.", "type": "str, optional", "default": true}}}
{"name": "get_hillshading_tile", "description": "Fetches a hillshading raster tile as a PNG.", "parameters": {"x": {"description": "The x coordinate of the tile.", "type": "int", "default": "756"}, "version": {"description": "The version of the hillshading tile, either 'v1' or 'v2'.", "type": "str", "default": "v2"}, "z": {"description": "The zoom level of the tile.", "type": "int", "default": "11"}, "y": {"description": "The y coordinate of the tile.", "type": "int", "default": "805"}}}
{"name": "listing_details", "description": "Retrieve listing details from Airbnb using the specified listing ID.", "parameters": {"is_id": {"description": "The listing ID to retrieve the details for.", "type": "str", "default": "619966061834034729"}}}
{"name": "leagueoveralltopplayers", "description": "Fetches the overall top players for a specific handball tournament and season.", "parameters": {"tournamentid": {"description": "The unique ID of the handball tournament for which the top players are to be retrieved.", "type": "int", "default": 149}, "seasonid": {"description": "The ID of the season for which the top players are to be retrieved.", "type": "int", "default": 42967}}}
{"name": "traveling_salesman", "description": "Solves the Traveling Salesman Problem (TSP) using the specified profile and set of coordinates, leveraging the mymappi API.", "parameters": {"coordinates": {"description": "The coordinates of the waypoints to visit, formatted as a string.", "type": "str", "default": "40.427772,-3.714630;40.407348,-3.710520;40.461178,-3.676533;40.441933,-3.650275;40.434914,-3.697337;40.451737,-3.683682"}, "apikey": {"description": "The API key for accessing the mymappi service.", "type": "str", "default": "YOUR_API_KEY"}, "profile": {"description": "The transportation profile to use (e.g., driving, walking, cycling).", "type": "str", "default": "car"}, "overview": {"description": "Specifies the level of detail in the returned route geometry. Default is 'simplified'.", "type": "str, optional", "default": "simplified"}, "roundtrip": {"description": "Determines whether the route should be a roundtrip. Default is None.", "type": "bool, optional", "default": false}, "destination": {"description": "Specifies the destination waypoint. Default is 'any'.", "type": "str, optional", "default": "any"}, "source": {"description": "Specifies the source waypoint. Default is 'any'.", "type": "str, optional", "default": "any"}, "geometries": {"description": "The geometry format for the route. Default is 'polyline'.", "type": "str, optional", "default": "polyline"}, "steps": {"description": "Whether or not to include step-by-step directions. Default is None.", "type": "bool, optional", "default": true}}}
{"name": "following_by_pk", "description": "Fetches the Instagram following list for a given user by their primary key (PK). ", "parameters": {"pk": {"description": "The primary key of the Instagram user whose following list is to be fetched.", "type": "str", "default": "232192182"}, "corsenabled": {"description": "Enables Cross-Origin Resource Sharing (CORS). Defaults to 'false'.", "type": "str, optional", "default": "false"}, "nextmaxid": {"description": "The maximum ID for pagination to fetch subsequent pages of the following list. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "leagueoverallpergametopplayers", "description": "Retrieves the best players in a basketball league per game for a specific tournament and season.", "parameters": {"tournamentid": {"description": "The unique identifier for the tournament to retrieve the league's best players.", "type": "int", "default": 132}, "seasonid": {"description": "The unique identifier for the season to retrieve the league's best players.", "type": "int", "default": 45096}}}
{"name": "marketdata", "description": "Fetches regional electricity price forecast based on a provided German zip code.", "parameters": {"zip": {"description": "The postal code in Germany for which to retrieve the electricity price forecast.", "type": "str", "default": "69256"}}}
{"name": "aliexpress_item_detail_simple", "description": "Fetches and returns the details of a single item from AliExpress.", "parameters": {"itemid": {"description": "The AliExpress product ID.", "type": "int", "default": "3256804591426248"}, "locale": {"description": "The locale to display the titles and other content in the selected language. Only supported values from AliExpress are accepted.", "type": "str, optional", "default": ""}, "currency": {"description": "The currency to display the product price. Only supported values from AliExpress are accepted.", "type": "str, optional", "default": ""}, "region": {"description": "The region to accurately get the shipping costs and other promotions for a specific geo-location. Only supported values from AliExpress are accepted.", "type": "str, optional", "default": ""}}}
{"name": "get_user_follower_list", "description": "Fetches the follower list for a specified user from the TikTok API.", "parameters": {"user_id": {"description": "The ID of the user whose followers are to be fetched.", "type": "str", "default": "107955"}, "count": {"description": "The number of followers to retrieve, with a maximum of 200. Defaults to '50'.", "type": "str, optional", "default": "50"}, "time": {"description": "A timestamp indicating the starting point for the followers list. If there are more followers to retrieve, this value should be updated. Defaults to '0'.", "type": "str, optional", "default": "0"}}}
{"name": "house_prices_get_sales_history", "description": "Retrieve the sales history for a given property using the Zoopla API.", "parameters": {"property_id": {"description": "The identifier for the property for which to retrieve the sales history.", "type": "int", "default": "27175510"}}}
{"name": "downloader", "description": "This function searches for MP3 music using the given keywords and returns the results from the specified page.", "parameters": {"keywords": {"description": "The search keywords for finding MP3 music.", "type": "str", "default": "Ella Baila Sola "}, "page": {"description": "The page number of the search results to retrieve. Defaults to '1'.", "type": "str, optional", "default": "1"}}}
{"name": "placessearchinboundingbox", "description": "Searches for places within a bounding box defined by the northeast and southwest coordinates in GeoJSON format.", "parameters": {"northeast": {"description": "Coordinates of the north-east corner of the bounding box, provided as a string in the format 'latitude,longitude'.", "type": "str", "default": ""}, "southwest": {"description": "Coordinates of the south-west corner of the bounding box, provided as a string in the format 'latitude,longitude'.", "type": "str", "default": ""}, "intersect": {"description": "Whether to include areas that intersect with the bounding box. Defaults to None.", "type": "bool, optional", "default": true}}}
{"name": "account_transaction_count", "description": "Retrieves the number of transactions performed by a specified address on the Binance Smart Chain.", "parameters": {"address": {"description": "The blockchain address to be scanned.", "type": "str", "default": "0x0000000000000000000000000000000000000123"}, "network": {"description": "The network to use, either 'mainnet' or 'testnet'. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "address_code", "description": "Fetches and returns address information based on the provided address code and other optional parameters.", "parameters": {"code": {"description": "Address code. Can be specified multiple times, separated by a period.", "type": "str", "default": "13101001"}, "coord_unit": {"description": "The unit of latitude and longitude included in the output data. Options are 'degree' (default, decimal system of degrees) or 'millisec' (milliseconds).", "type": "str, optional", "default": "degree"}, "datum": {"description": "Geodetic system of latitude and longitude. Options are 'wgs84' (default, World Geodetic System) or 'tokyo' (Old Japan Geodetic System).", "type": "str, optional", "default": "wgs84"}}}
{"name": "gettspmatches", "description": "Retrieves TSP match data from the Betsports API.", "parameters": {"cookie": {"description": "Cookie string for the request headers, default is 'i18next=es;'.", "type": "str", "default": "i18next=es;"}, "host": {"description": "Host string for the request headers, default is 'www.mozzartbet.com.co'.", "type": "str", "default": "www.mozzartbet.com.co"}, "referer": {"description": "Referer string for the request headers, default is 'https://www.mozzartbet.com.co/es'.", "type": "str", "default": "https://www.mozzartbet.com.co/es"}}}
{"name": "constructor_standings", "description": "Fetches the constructor standings for a given Formula 1 season.", "parameters": {"season_id": {"description": "The ID of the Formula 1 season for which to get the constructor standings.", "type": "int", "default": "2020"}}}
{"name": "get_names", "description": "Fetch a random list of Indian names based on specified criteria.", "parameters": {"first": {"description": "If True, include first names in the result. Defaults to None.", "type": "bool, optional", "default": "true"}, "gender": {"description": "Specify the gender for names ('male' or 'female'). Defaults to 'male'.", "type": "str, optional", "default": "male"}, "last": {"description": "If True, include last names in the result. Defaults to None.", "type": "bool, optional", "default": "true"}, "number": {"description": "The number of names to fetch. Defaults to 5.", "type": "int, optional", "default": "5"}}}
{"name": "get_chapter", "description": "Fetches and returns a specific chapter from the Bible given the book name and various optional parameters.", "parameters": {"book_name": {"description": "The name of the book from the Bible (e.g., 'Genesis', 'Job').", "type": "str", "default": "genesis"}, "uppercase_mode": {"description": "If True, the text will be returned in uppercase. Defaults to None.", "type": "bool, optional", "default": "false"}, "text_mode": {"description": "The mode of text to return. Defaults to 'vowels'.", "type": "str, optional", "default": "vowels"}, "chapter": {"description": "The specific chapter number to fetch. Defaults to 1.", "type": "int, optional", "default": "1"}}}
{"name": "group_profile", "description": "Fetches the profile information of a Steam community group using the provided group ID.", "parameters": {"is_id": {"description": "The identifier of the Steam community group.", "type": "str", "default": "l4d"}}}
{"name": "nhl_team_players", "description": "Fetches the roster information for a specific NHL team using the RapidAPI endpoint.", "parameters": {"teamid": {"description": "The unique identifier for the NHL team whose roster information is to be fetched.", "type": "str", "default": "17"}}}
{"name": "canvas_episodes_get_info", "description": "Retrieves episode information and photo links from the Webtoon API.", "parameters": {"episodeno": {"description": "The ID of the episode as returned from the `.../canvas/episodes/list` endpoint.", "type": "int", "default": "1"}, "titleno": {"description": "The ID of the title as returned from the `.../canvas/titles/list` or `.../canvas/search` endpoint.", "type": "int", "default": "300138"}, "language": {"description": "The language code for the response. Default is 'en'. Accepted values are {'en', 'zh-hant', 'de', 'fr', 'es', 'th', 'id'}.", "type": "str, optional", "default": "en"}}}
{"name": "get_free_games", "description": "Fetches the current list of free games from the Epic Games Store based on the specified locale and country.", "parameters": {"locale": {"description": "The locale code for the desired language (e.g., 'en-US').", "type": "str", "default": "en"}, "country": {"description": "The country code to filter the games (e.g., 'US').", "type": "str", "default": "US"}}}
{"name": "riddle_by_keyword", "description": "Fetches one random riddle based on a given keyword using the Toolbench RapidAPI service.", "parameters": {"keyword": {"description": "The subject or keyword to get a riddle for.", "type": "str", "default": "cat"}}}
{"name": "get_all_match_play_today_by_competitions", "description": "Retrieve all matches that are scheduled to be played today for a given competition by its ID.", "parameters": {"competition_id": {"description": "The ID of the competition for which to retrieve today's matches.", "type": "int", "default": "23943"}}}
{"name": "nhl_standings", "description": "Retrieves the NHL standings for a specified year and group.", "parameters": {"year": {"description": "The year for which the NHL standings are to be retrieved.", "type": "str", "default": "2022"}, "group": {"description": "The group by which to filter the standings. Acceptable values are 'league', 'conference', and 'division'. Defaults to 'league' if not specified.", "type": "str, optional", "default": ""}}}
{"name": "user_stories_by_username", "description": "Fetch all stories of an Instagram account given its username.", "parameters": {"username": {"description": "The Instagram username for which to retrieve stories.", "type": "str", "default": "kimkardashian"}}}
{"name": "get_verses_by_bookname", "description": "Fetches a range of verses from a specified book and chapter in the Bible using the RapidAPI service.", "parameters": {"chapterid": {"description": "The ID of the chapter to extract verses from.", "type": "int", "default": "3"}, "bookname": {"description": "The name of the book in the Bible.", "type": "str", "default": "Revelation"}, "versestart": {"description": "The starting verse number.", "type": "int", "default": "7"}, "verseend": {"description": "The ending verse number.", "type": "int", "default": "11"}}}
{"name": "ip_netblock_v2", "description": "Fetch exhaustive information on IP range (v2) by using various filters like ASN, limit, organization, output format, mask, and IP. The function communicates with an external API to obtain the required data.", "parameters": {"asn": {"description": "Get ranges by Autonomous System Number (ASN). Default is None.", "type": "str, optional", "default": ""}, "limit": {"description": "Max count of returned records. Acceptable values: 1 - 1000. Default is 100 if not specified.", "type": "str, optional", "default": ""}, "org": {"description": "Find IP Netblocks containing specified search terms in their netblock or organization fields. Default is None.", "type": "str, optional", "default": ""}, "outputformat": {"description": "Response output format. Acceptable values are 'XML' or 'JSON'. Defaults to 'JSON' if not specified.", "type": "str, optional", "default": ""}, "mask": {"description": "Get ranges by CIDR. Acceptable values: 0 - 128 (0 - 32 for IPv4). Default is 128 if not specified.", "type": "str, optional", "default": ""}, "ip": {"description": "Get ranges by IPv4/IPv6 address or by CIDR. Default is '8.8.8.8'.", "type": "str, optional", "default": "8.8.8.8"}}}
{"name": "production_years_by_model_id", "description": "Retrieves the production years for a motorcycle model based on its model ID from the Motorcycle Specs Database API.", "parameters": {"modelid": {"description": "The unique identifier of the motorcycle model.", "type": "str", "default": "15894"}}}
{"name": "points_point", "description": "Fetches forecast information for a given geographical point from the National Weather Service.", "parameters": {"point": {"description": "Latitude and longitude in the format 'EPSG:4326 latitude, EPSG:4326 longitude'.", "type": "str", "default": ""}}}
{"name": "hourly", "description": "Fetch hourly weather forecast for a specified location over the next 5 days using AI technology.", "parameters": {"lon": {"description": "Longitude in formats like '12E', '12.3E', or '-13.4'. This parameter is optional if `place_id` is provided.", "type": "str", "default": "-122.42282"}, "lat": {"description": "Latitude in formats like '12N', '12.3N', or '-13.4'. This parameter is optional if `place_id` is provided.", "type": "str", "default": "37.81021"}, "language": {"description": "Language for the text summaries. Options are 'en' (English), 'es' (Spanish), 'fr' (French), 'de' (German), 'pl' (Polish), 'cs' (Czech).", "type": "str", "default": "en"}, "place_id": {"description": "Identifier of a place. If provided, it overrides `lat` and `lon`.", "type": "str, optional", "default": ""}, "units": {"description": "Unit system to be used. Options are 'auto', 'metric', 'us', 'uk', 'ca'. Default is 'auto'.", "type": "str", "default": "auto"}, "timezone": {"description": "Timezone for the date fields. Can be a tzinfo database string like 'Europe/Prague', 'UTC', or 'auto' to use the local timezone of the location. Default is 'auto'.", "type": "str", "default": "auto"}}}
{"name": "matchincidents", "description": "Fetches incidents for a specific Rugby match using the provided RapidAPI key.", "parameters": {"is_id": {"description": "The ID of the Rugby match for which to fetch incidents.", "type": "int", "default": 9945302}}}
{"name": "case_record", "description": "This function retrieves a document list for a given claim ID using the Toolbench RapidAPI service.", "parameters": {"claimid": {"description": "The unique identifier for the claim. Defaults to 'dd61c35e-3edd-ea11-a813-000d3a795762'.", "type": "str", "default": "dd61c35e-3edd-ea11-a813-000d3a795762"}}}
{"name": "fx", "description": "Converts a specified `amount` of currency from one type to another using the ForexGo API, with an optional historical date.", "parameters": {"amount": {"description": "The amount of currency to be converted.", "type": "int", "default": "10"}, "is_from": {"description": "The source currency code (e.g., 'USD', 'EUR').", "type": "str", "default": "EUR"}, "to": {"description": "The target currency code to convert to.", "type": "str", "default": "USD"}, "date": {"description": "The date for historical conversion rates in ISO format (YYYY-MM-DDTHH:mm:ss.sssZ). Defaults to None for real-time rates.", "type": "str, optional", "default": ""}}}
{"name": "gedetailedtinsiders", "description": "Fetch detailed insider trading information for a given stock ticker.", "parameters": {"ticker": {"description": "The stock ticker symbol for which to fetch insider trading details.", "type": "str", "default": "BRK.A"}}}
{"name": "fetch_movies", "description": "Fetch a list of movies from 2000 to 2019 based on the selected genre and year using the specified RapidAPI key.", "parameters": {"year": {"description": "The year for which to fetch movies. Should be between 2000 and 2019.", "type": "str", "default": "2018"}, "genre": {"description": "The genre of the movies to fetch.", "type": "str", "default": "Comedy"}}}
{"name": "api_nutrition_data", "description": "Fetches nutritional analysis for a given unstructured food text input.", "parameters": {"ingr": {"description": "The unstructured food text (usually an ingredient line) to be analyzed.", "type": "str", "default": ""}, "nutrition_type": {"description": "Specifies the context for the food item. Defaults to 'cooking'.", "type": "str, optional", "default": "cooking"}}}
{"name": "year_end_billboard_global_200", "description": "Fetches the Year-End Billboard Global 200 chart for a specified year.", "parameters": {"year": {"description": "The year for which to retrieve the Year-End Billboard Global 200 chart.", "type": "int", "default": "2021"}, "range": {"description": "The range of results to return (e.g., '1-10'). Defaults to '1-10'. If not specified, returns all results.", "type": "str, optional", "default": "1-10"}}}
{"name": "get_the_forecast", "description": "Fetches the weather forecast for the specified city using the RapidAPI Cloud Cast service.", "parameters": {"city": {"description": "The name of the city for which to retrieve the weather forecast.", "type": "str", "default": "New York"}}}
{"name": "ocean_conditions_closest_to_latitude_longitude", "description": "Search for current and predicted ocean conditions closest to a specified latitude and longitude.", "parameters": {"latitude": {"description": "The latitude coordinate of the location.", "type": "int", "default": "52.8"}, "longitude": {"description": "The longitude coordinate of the location.", "type": "int", "default": "-4.07"}}}
{"name": "locations_v2_list", "description": "Fetch a list of locations from the specified Google place ID and additional geolocation parameters using the RapidAPI service.", "parameters": {"google_place_id": {"description": "The Google Place ID representing a specific location.", "type": "str", "default": "ChIJu46S-ZZhLxMROG5lkwZ3D7k"}, "geo_text": {"description": "The text description of the geographical location. Defaults to 'Roma, Metropolitan City of Rome, Italy'.", "type": "str, optional", "default": "Roma, Metropolitan City of Rome, Italy"}, "geo_ref": {"description": "A boolean flag for additional geolocation referencing. Defaults to None.", "type": "bool, optional", "default": "false"}, "geo_type": {"description": "The type of geographical entity (e.g., 'locality'). Defaults to 'locality'.", "type": "str, optional", "default": "locality"}}}
{"name": "feeds_auto_complete", "description": "Fetches auto-complete suggestions for food names or ingredients from the Yummly API.", "parameters": {"q": {"description": "The food name or ingredient to get auto-complete suggestions for.", "type": "str", "default": "chicken soup"}}}
{"name": "download_zip", "description": "Downloads a ZIP file of images from a specified collection using the provided RapidAPI key.", "parameters": {"collectionid": {"description": "The ID of the image collection to download.", "type": "str", "default": ""}}}
{"name": "cake_ingredient", "description": "Fetches a cake recipe containing a specified ingredient from the Recipe Finder API.", "parameters": {"ingredient": {"description": "The specific ingredient to be included in the cake recipe.", "type": "str", "default": "lime"}}}
{"name": "area_flag", "description": "Fetch the flag image URL for a given area ID using the Soccerway API.", "parameters": {"area_uid": {"description": "The unique identifier for the area.", "type": "str", "default": "1fk5l4hkqk12i7zske6mcqju6"}}}
{"name": "news_from_individual_source", "description": "Fetches the latest news articles from a specified F1 news source using the RapidAPI.", "parameters": {"sourceid": {"description": "Identifier of the F1 news source (e.g., skyf1, BBCF1, WTF1, autosport).", "type": "str", "default": "f1"}}}
{"name": "ministerio_espec_fico", "description": "Fetches information for a single ministry from the specified API.", "parameters": {"nombre": {"description": "The name of the ministry to fetch data for.", "type": "str", "default": "Ministerio de Educación"}}}
{"name": "search_related_sites", "description": "Finds sites related to a specified URL using the Advanced SERP Operators API.", "parameters": {"website": {"description": "The URL of the website for which to find related sites.", "type": "str", "default": "facebook.com"}, "location": {"description": "The proxy location for the search. Supported countries are 'US', 'CA', 'IE', 'GB', 'FR', 'DE', 'SE', 'IN', 'JP', 'KR', 'SG', 'AU', 'BR'. Defaults to 'us'.", "type": "str, optional", "default": "us"}, "max_results": {"description": "The maximum number of related sites to return. Defaults to 10.", "type": "int, optional", "default": "10"}}}
{"name": "get_individual_news_from_source_news", "description": "Fetches news about climate change from a specified news source.", "parameters": {"newspaperid": {"description": "The ID of the newspaper from which to fetch news.", "type": "str", "default": "guardian"}}}
{"name": "politicians", "description": "Fetches a list of politicians' data based on given filters.", "parameters": {"offset": {"description": "The starting point in the list of results. Defaults to None.", "type": "int, optional", "default": ""}, "limit": {"description": "The maximum number of results to return. Defaults to None.", "type": "int, optional", "default": ""}, "active": {"description": "Filter for active politicians. Defaults to None.", "type": "bool, optional", "default": ""}, "province": {"description": "Filter politicians by province. Defaults to None.", "type": "str, optional", "default": ""}, "municipality": {"description": "Filter politicians by municipality. Defaults to None.", "type": "str, optional", "default": ""}, "level_of_government": {"description": "Filter politicians by level of government (e.g., federal, provincial, municipal). Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "consulta_por_cnpj", "description": "Fetches data and information for a given CNPJ.", "parameters": {"cnpj": {"description": "The CNPJ number to be queried.", "type": "str", "default": "15754475000140"}}}
{"name": "jokes_search", "description": "Conducts a free text search for jokes based on the provided query.", "parameters": {"query": {"description": "The search term used to filter jokes.", "type": "str", "default": ""}}}
{"name": "matchstatistics", "description": "Returns statistics for a specific ice hockey match, including player statistics and other relevant data.", "parameters": {"is_id": {"description": "The ID of the match for which you want to retrieve statistics.", "type": "int", "default": 10745680}}}
{"name": "show_character", "description": "Fetch details about a character and their traits from the Marvel vs. Capcom 2 API.", "parameters": {"name": {"description": "The name of the character to retrieve information about.", "type": "str", "default": "Cabel"}}}
{"name": "playerimage", "description": "Fetches the PNG image of an American Football player using their player ID.", "parameters": {"is_id": {"description": "The ID of the American Football player for which the image is to be retrieved.", "type": "int", "default": 853680}}}
{"name": "query_for_city_names_by_state", "description": "This function queries a list of city names for a given state from the RapidAPI \"Boundaries\" service.", "parameters": {"state": {"description": "The name of the state to query for city names.", "type": "str", "default": "berlin"}}}
{"name": "resources_per_country", "description": "Fetches a list of the most important resources that an African country relies on to sustain its economy.", "parameters": {"country_name": {"description": "The name of the African country to fetch resources for.", "type": "str", "default": "kenya"}}}
{"name": "stock_v2_get_mini_chart_realtime_data", "description": "Fetch realtime mini chart data for a given stock performance ID from the Morningstar API.", "parameters": {"performanceid": {"description": "The performance ID of the stock for which realtime mini chart data is requested. This value can be obtained from the /auto-complete, /get-summary, or /get-movers endpoints.", "type": "str", "default": "0P0000OQN8"}}}
{"name": "matches_v2_get_commentary", "description": "Fetches the commentary for a match using the provided match ID.", "parameters": {"eid": {"description": "The match ID obtained from the .../matches/v2/list-by-league, .../matches/v2/list-by-date, .../matches/v2/list-live, or .../competitions/detail endpoints.", "type": "int", "default": "702193"}}}
{"name": "get_all_channel_infos", "description": "Fetches the channel information for a given Twitch user by their username or ID.", "parameters": {"userid": {"description": "The username or ID of the Twitch user whose channel information is to be retrieved.", "type": "str", "default": "samueletienne"}}}
{"name": "search_gifs", "description": "Search for gifs based on a query using the Humor API.", "parameters": {"query": {"description": "The search query to find matching gifs.", "type": "str", "default": "cat"}, "number": {"description": "The number of results to retrieve, between 1 and 10. Defaults to 3.", "type": "int, optional", "default": 3}}}
{"name": "get_username_by_user_id", "description": "Fetches the Instagram username associated with a given user ID using the specified RapidAPI key.", "parameters": {"is_id": {"description": "The Instagram user ID.", "type": "int", "default": "18527"}}}
{"name": "locationsuggestions", "description": "Fetches location suggestions using the Zillow API based on the provided location query.", "parameters": {"location": {"description": "The location query string. This can be a state, county, neighborhood, city, street name, or zip code.", "type": "str", "default": "Brownsville, TX"}}}
{"name": "stations_stationid", "description": "Fetch metadata about a specified weather station using the station ID.", "parameters": {"stationid": {"description": "The ID of the weather station.", "type": "str", "default": ""}}}
{"name": "retrieve_tokens", "description": "Retrieve a set of NFTs based on the specified collection slug using the Blur API.", "parameters": {"slug": {"description": "The identifier for the specific NFT collection.", "type": "str", "default": "artgobblers"}}}
{"name": "greatest_of_all_time_songs_of_the_summer", "description": "Fetches the Greatest of All Time Songs of the Summer chart from the Billboard API.", "parameters": {"range": {"description": "The range of songs to retrieve. Default is '1-10'.", "type": "str, optional", "default": "1-10"}}}
{"name": "list_all_platforms", "description": "Fetches a list of platforms from the \"Is This Coin A Scam\" API based on various search criteria.", "parameters": {"symbol": {"description": "Search all platform symbols. Wildcard searches can be performed using the * character (e.g., symbol=*TH). Multiple items can be searched at once by sending a comma-separated list (e.g., symbol=TOK,*TH). Default is 'ETH'.", "type": "str, optional", "default": "ETH"}, "limit": {"description": "Limit the number of records returned. Default is 10.", "type": "int, optional", "default": 10}, "name": {"description": "Search all platform names. Wildcard searches can be performed using the * character (e.g., name=*platform). Multiple items can be searched at once by sending a comma-separated list (e.g., name=ethereum,*token). Default is 'ethereum'.", "type": "str, optional", "default": "ethereum"}, "page": {"description": "The page number to start from. Default is 10.", "type": "int, optional", "default": 10}, "slug": {"description": "Search all platform slugs. Wildcard searches can be performed using the * character (e.g., slug=*token). Multiple items can be searched at once by sending a comma-separated list (e.g., slug=ethereum,*token). Default is 'ethereum'.", "type": "str, optional", "default": "ethereum"}}}
{"name": "coins_get_overview", "description": "Fetches overview information of a specific cryptocurrency pair from the RapidAPI cryptocurrency market service.", "parameters": {"pair_id": {"description": "The identifier for the cryptocurrency pair, obtained from endpoints like coins/list, coins/search, etc.", "type": "int", "default": "33"}, "time_utc_offset": {"description": "UTC offset in seconds. Defaults to 28800 (UTC+8).", "type": "int, optional", "default": "28800"}, "lang_id": {"description": "Language identifier for the response, typically obtained from /get-meta-data endpoint. Defaults to 1.", "type": "int, optional", "default": "1"}}}
{"name": "get_airports", "description": "Retrieves data of airports based on various filtering parameters and sorting options from an external API. It returns data from over 28,000 airports in the database.", "parameters": {"lid": {"description": "U.S. FAA Location Identifier (12,566 entries), or an empty string.", "type": "str, optional", "default": ""}, "sortby": {"description": "Sort results by a property value. Possible values are: 'iata', 'icao', 'name', 'city', 'subd', 'country', 'tz', 'lid', and 'elevation'. Default is 'iata'.", "type": "str, optional", "default": "iata"}, "name": {"description": "Filter results by name. The value should be sent as comma-separated. For example, for 'Zabrat Airport', send 'Zabrat,Airport'. Default is 'Ishigaki,Airport'.", "type": "str, optional", "default": "Ishigaki,Airport"}, "limit": {"description": "Limit to n results. Default is 50.", "type": "int, optional", "default": "50"}, "elevationover": {"description": "Filter airports with an MSL elevation, or highest point of the landing area in feet, over this value. Default is 50.", "type": "int, optional", "default": "50"}, "country": {"description": "ISO 3166-1 alpha-2 country code (plus XK for Kosovo). Default is 'JP'.", "type": "str, optional", "default": "JP"}, "city": {"description": "Filter results by city. The value should be sent as comma-separated. For example, for 'Zakynthos Island', send 'Zakynthos,Island'. Default is 'Ishigaki'.", "type": "str, optional", "default": "Ishigaki"}, "skip": {"description": "Skip first n results. Default is 0.", "type": "int, optional", "default": "0"}, "sortbyorder": {"description": "Specify the sorting order. Possible values are 'asc' and 'desc'. Default is 'desc'.", "type": "str, optional", "default": "desc"}, "elevationunder": {"description": "Filter airports with an MSL elevation, or highest point of the landing area in feet, under this value. Default is 2000.", "type": "int, optional", "default": "2000"}, "tz": {"description": "Timezone expressed as a tz database name (IANA-compliant) or an empty string for Antarctica. Default is 'Asia/Tokyo'.", "type": "str, optional", "default": "Asia/Tokyo"}, "icao": {"description": "Filter results by ICAO code. Default is 'ROIG'.", "type": "str, optional", "default": "ROIG"}, "subd": {"description": "Filter results by subdivision (e.g., state, province, region, etc.). The value should be sent as comma-separated. For example, for 'Newfoundland and Labrador', send 'Newfoundland,and,Labrador'. Default is 'Okinawa'.", "type": "str, optional", "default": "Okinawa"}, "iata": {"description": "Filter results by IATA code. Default is 'ISG'.", "type": "str, optional", "default": "ISG"}}}
{"name": "get_specific_player", "description": "Retrieves information for a specific player from the NBA API using their player ID.", "parameters": {"is_id": {"description": "The ID of the player to retrieve.", "type": "int", "default": ""}}}
{"name": "get_by_tvdb_id", "description": "Fetches TV Show information from the MDB List API using the given TVDB ID.", "parameters": {"tv": {"description": "The TVDB ID of the TV Show to fetch information for.", "type": "int", "default": "273181"}}}
{"name": "listallcountries", "description": "Retrieves a list of all countries from the API with optional pagination and sorting.", "parameters": {"page": {"description": "Page number to retrieve. Defaults to 1.", "type": "int, optional", "default": 1}, "sortby": {"description": "Sorting criteria in the format `field:order`, e.g., `name:asc` or `name:desc`. Defaults to 'name:asc'.", "type": "str, optional", "default": "name:asc"}, "limit": {"description": "Maximum number of results per page. Defaults to 200.", "type": "int, optional", "default": 200}}}
{"name": "emailverifier", "description": "Verify the deliverability of an email address using the Tomba API.", "parameters": {"email": {"description": "The email address to be verified.", "type": "str", "default": "b.mohamed@tomba.io"}}}
{"name": "search_books", "description": "Search for books on Project Gutenberg using a given search term and return the search results as JSON or text.", "parameters": {"term": {"description": "The search term to use for finding books.", "type": "str", "default": "shakespeare"}}}
{"name": "get_tile_json", "description": "Returns the tile JSON for the given style type from the Mapilion Vector and Raster Map Tiles API. ", "parameters": {"type": {"description": "Style type for the tile JSON to be retrieved.", "type": "str", "default": "v3"}}}
{"name": "eventgames", "description": "Fetches games associated with a specific E-Sports event using the event ID and RapidAPI key.", "parameters": {"is_id": {"description": "The ID of the E-Sports event for which to retrieve game details.", "type": "int", "default": 10945127}}}
{"name": "get_a_specific_quote", "description": "Fetches a specific quote using the provided quote ID.", "parameters": {"is_id": {"description": "The ID of the quote to fetch.", "type": "str", "default": "4"}}}
{"name": "crops_list", "description": "Fetches a list of crops grown in Spain, allowing filtering through multiple query string parameters.", "parameters": {"subcategory": {"description": "Optional. The subcategory of the crop. Default is 'De invierno'.", "type": "str", "default": "De invierno"}, "family": {"description": "Optional. The family of the crop. Default is 'Poaceae'.", "type": "str", "default": "Poaceae"}, "commonname": {"description": "Optional. The common name of the crop. Default is 'Trigo'.", "type": "str", "default": "Trigo"}, "speciename": {"description": "Optional. The species name of the crop. Default is 'Triticum'.", "type": "str", "default": "Triticum"}, "consistency": {"description": "Optional. The consistency of the crop. Default is 'herbácea'.", "type": "str", "default": "herbácea"}, "cropcycle": {"description": "Optional. The crop cycle of the crop. Default is 'anual'.", "type": "str", "default": "anual"}, "fruittype": {"description": "Optional. The type of fruit of the crop. Default is 'cariopsis'.", "type": "str", "default": "cariopsis"}, "category": {"description": "Optional. The subcategory of the crop. Default is 'De invierno'.", "type": "str", "default": "Cereales de grano"}}}
{"name": "address_inclusion", "description": "Determines whether the given geographical coordinates (latitude and longitude) fall within the range specified by an address code.", "parameters": {"code": {"description": "Address code(s). Multiple codes can be specified, separated by a period.", "type": "str", "default": "13"}, "coord": {"description": "Geographical coordinates in latitude and longitude format.", "type": "str", "default": "35.664159,139.718117"}, "datum": {"description": "Geodetic system of the provided geographical coordinates. Defaults to 'wgs84'. Accepted values are 'wgs84' (World Geodetic System) and 'tokyo' (Old Japan Geodetic System).", "type": "str, optional", "default": "wgs84"}}}
{"name": "search_api", "description": "Searches for location information using the World Weather Online API.", "parameters": {"q": {"description": "The query value for the location search.", "type": "str", "default": "london"}, "format": {"description": "The format of the response. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "find_places", "description": "Searches for places by name to obtain a place_id for use with Weather Forecast Endpoints and retrieves detailed geographical information (e.g., country, region, elevation, timezone) for a given location.", "parameters": {"text": {"description": "Name of the place to search.", "type": "str", "default": "fishermans wharf"}, "language": {"description": "Language in which the place names will be returned. Available options include:", "type": "str, optional", "default": "en"}}}
{"name": "show_all_series", "description": "Fetches and returns all series information for a given show slug from the VOD App RapidAPI.", "parameters": {"show_slug": {"description": "The unique identifier for the show.", "type": "str", "default": ""}}}
{"name": "get_manga_by_id", "description": "Fetches Manga information by its ID from the Anime, Manga, and Novels API.", "parameters": {"is_id": {"description": "The ID of the Manga to fetch information for.", "type": "int", "default": "3674"}}}
{"name": "generate_cc_number", "description": "Generates a fake credit card number using the specified brand and API key.", "parameters": {"brand": {"description": "The desired card brand (e.g., 'Visa', 'MasterCard'). Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "search_tweet", "description": "Searches for tweets based on a given query string using the Twitter Pack API.", "parameters": {"q": {"description": "The query string to search for in tweets.", "type": "str", "default": "elon musk"}, "cursor": {"description": "The cursor string to paginate through results. Defaults to 'scroll:thGAVUV0VFVBaegLaxgNKXty0WloC2kd7Tl7ctEnEVzId6FYCJehgEVVNFUjUBFQAVAAA='.", "type": "str, optional", "default": "scroll:thGAVUV0VFVBaegLaxgNKXty0WloC2kd7Tl7ctEnEVzId6FYCJehgEVVNFUjUBFQAVAAA="}, "count": {"description": "The number of tweets to retrieve. Defaults to 10.", "type": "int, optional", "default": "10"}}}
{"name": "trends", "description": "Fetches the latest charts data from YouTube Music for a specified country. The charts include top songs, top videos, top artists, and top trending videos. For the US, it has an additional Genres section with some genre-specific charts.", "parameters": {"country": {"description": "ISO 3166-1 alpha-2 country code to specify the region for which to fetch the trending charts.", "type": "str", "default": "de"}}}
{"name": "hin_decoder_return_html", "description": "Decodes a Hull Identification Number (HIN) for a boat using the HIN decoder API and returns the result as either JSON or HTML.", "parameters": {"hin": {"description": "The Hull Identification Number to be decoded.", "type": "str", "default": "MVIPK003G607"}, "usertable": {"description": "If set to '1', the function returns an HTML table instead of JSON. Defaults to '1'.", "type": "str, optional", "default": "1"}}}
{"name": "team_streaks", "description": "Fetches the streak data (winning, drawing, losing, etc.) of the two teams participating in a specific soccer match.", "parameters": {"matchid": {"description": "The ID of the match for which streak data is to be retrieved.", "type": "int", "default": "1452254"}}}
{"name": "vin_decoder_extended", "description": "Decodes the VIN (Vehicle Identification Number) and returns detailed information about the vehicle.", "parameters": {"vin": {"description": "The Vehicle Identification Number (VIN) to decode. Must be 17 characters long.", "type": "str", "default": "5YJ3E1EA6PF384836"}}}
{"name": "api_v1_fastings", "description": "Fetches a list of sunnah fastings based on provided filters.", "parameters": {"day": {"description": "Day of the month to filter the fastings.", "type": "int, optional", "default": ""}, "year": {"description": "Year to filter the fastings.", "type": "int, optional", "default": ""}, "month": {"description": "Month to filter the fastings.", "type": "int, optional", "default": ""}, "category_id": {"description": "Category ID to filter the fastings.", "type": "int, optional", "default": ""}, "type_id": {"description": "Type ID to filter the fastings.", "type": "int, optional", "default": ""}}}
{"name": "file_content_type", "description": "Determines the content type of a file from a given URL source using the Pragmavant API.", "parameters": {"source": {"description": "The URL of the file for which the content type needs to be determined.", "type": "str", "default": "http://google.com"}, "cache_key": {"description": "A cache key to use for caching the request. Defaults to 'c7b920f57e553df2bb68272f61570210'.", "type": "str, optional", "default": "c7b920f57e553df2bb68272f61570210"}}}
{"name": "search_agent", "description": "Search for an agent's information using the Zillow API.", "parameters": {"page": {"description": "The page number of the search results to retrieve. Defaults to None.", "type": "str, optional", "default": ""}, "locationtext": {"description": "The location to search for agents, which can be a city name (e.g., 'Newport Beach') or a zip code (e.g., '90278'). Defaults to 'Newport Beach'.", "type": "str", "default": "Newport Beach"}, "name": {"description": "The name of the agent to search for. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "getcodecontent", "description": "Fetches the content of a contract using the provided contract address and name from the given API.", "parameters": {"contract_address": {"description": "The address of the contract to fetch.", "type": "str", "default": "0x011b6f1425389550"}, "contract_name": {"description": "The name of the contract to fetch.", "type": "str", "default": "NWayUtilityCoin "}}}
{"name": "v1_facts", "description": "Fetches random facts from the API Ninjas Facts API.", "parameters": {"limit": {"description": "The number of facts to return, between 1 and 30. Default is 1.", "type": "int, optional", "default": ""}}}
{"name": "products_v2_list", "description": "Fetches a list of products from the ASOS store with various filtering and sorting options.", "parameters": {"store": {"description": "The store identifier obtained from the countries/list API.", "type": "str", "default": "US"}, "offset": {"description": "The offset to skip already viewed products.", "type": "int", "default": "0"}, "categoryid": {"description": "The category identifier from the categories/list API.", "type": "int", "default": "4209"}, "limit": {"description": "The number of items per page.", "type": "int", "default": "48"}, "attribute_1046": {"description": "Filter by style, multiple values separated by comma.", "type": "str, optional", "default": ""}, "pricemin": {"description": "Minimum price filter.", "type": "int, optional", "default": ""}, "country": {"description": "Country code; default is 'US'.", "type": "str, optional", "default": "US"}, "attribute_10147": {"description": "Filter by leather/non-leather, multiple values separated by comma.", "type": "str, optional", "default": ""}, "sort": {"description": "Sorting option, one of 'pricedesc', 'priceasc', or 'freshness'; default is 'freshness'.", "type": "str, optional", "default": "freshness"}, "q": {"description": "Search query for products by name (do not use with categoryId).", "type": "str, optional", "default": ""}, "base_colour": {"description": "Filter by color, multiple values separated by comma.", "type": "str, optional", "default": ""}, "range": {"description": "Filter by sale/new season, multiple values separated by comma.", "type": "str, optional", "default": ""}, "attribute_1047": {"description": "Filter by product type, multiple values separated by comma.", "type": "str, optional", "default": ""}, "currency": {"description": "Currency code obtained from countries/list API; default is 'USD'.", "type": "str, optional", "default": "USD"}, "attribute_10155": {"description": "Filter by range, multiple values separated by comma.", "type": "str, optional", "default": ""}, "pricemax": {"description": "Maximum price filter.", "type": "int, optional", "default": ""}, "sizeschema": {"description": "Size schema identifier obtained from countries/list API; default is 'US'.", "type": "str, optional", "default": "US"}, "brand": {"description": "Filter by brand, multiple values separated by comma.", "type": "str, optional", "default": ""}, "size": {"description": "Filter by size, multiple values separated by comma.", "type": "str, optional", "default": ""}, "lang": {"description": "Language code; default is 'en-US'.", "type": "str, optional", "default": "en-US"}}}
{"name": "cities_in_a_state", "description": "Fetches the list of cities in a given state.", "parameters": {"statecode": {"description": "The code of the state for which the cities are to be fetched.", "type": "str", "default": "CA"}, "countrycode": {"description": "The code of the country where the state is located.", "type": "str", "default": "US"}}}
{"name": "ecoweather", "description": "Retrieve historical weather data for a specified location within a given date range.", "parameters": {"lon": {"description": "Longitude of the geo-location in degrees.", "type": "int", "default": "8.80282"}, "lat": {"description": "Latitude of the geo-location in degrees.", "type": "int", "default": "49.3427818"}, "is_from": {"description": "Start date in YYYY-MM-DD format.", "type": "str", "default": "2021-12-31"}, "to": {"description": "End date in YYYY-MM-DD format. Defaults to '2022-09-31'.", "type": "str, optional", "default": "2022-09-31"}}}
{"name": "get_generations_by_model_id", "description": "Returns a list of generations for a given car model specified by its model ID.", "parameters": {"modelid": {"description": "The ID of the car model for which generations are to be retrieved.", "type": "int", "default": ""}}}
{"name": "get_lexical_field", "description": "Retrieves the lexical field for a given word using the Dicolink API.", "parameters": {"mot": {"description": "The word for which the lexical field is to be retrieved.", "type": "str", "default": "cheval"}, "limite": {"description": "The limit on the number of results to be retrieved (default is '20').", "type": "str, optional", "default": "20"}}}
{"name": "singapore_songs", "description": "Fetches the Singapore Songs chart information from the Billboard API.", "parameters": {"range": {"description": "The range of chart information to fetch.", "type": "str", "default": "1-10"}, "date": {"description": "The date of the chart in YYYY-MM-DD format.", "type": "str", "default": "2022-05-07"}}}
{"name": "interests", "description": "Fetches interests from the specified API using the given parameters.", "parameters": {"lang": {"description": "The language code for the response (default is 'ta').", "type": "str", "default": "ta"}}}
{"name": "get_all_motivational_pictures", "description": "Fetch all motivational pictures, with optional pagination support.", "parameters": {"limit": {"description": "The maximum number of pictures to retrieve. Defaults to None.", "type": "int, optional", "default": ""}, "skip": {"description": "The number of pictures to skip before starting to retrieve. Defaults to None.", "type": "int, optional", "default": ""}}}
{"name": "air_quality_measurements", "description": "Fetches current air quality measurements per hour for a given city using the Toolbench RapidAPI.", "parameters": {"country": {"description": "The country in which the city is located.", "type": "str", "default": "netherlands"}, "city": {"description": "The city for which the air quality measurements are to be fetched.", "type": "str", "default": "amsterdam"}, "lon": {"description": "The longitude coordinate of the city. Defaults to '4.897070'.", "type": "str, optional", "default": "4.897070"}, "lat": {"description": "The latitude coordinate of the city. Defaults to '52.377956'.", "type": "str, optional", "default": "52.377956"}}}
{"name": "response_by_quizid", "description": "Fetch all responses for a given quiz ID from the MoodRing API.", "parameters": {"quizid": {"description": "The unique identifier for the quiz.", "type": "str", "default": "1"}}}
{"name": "find_food_by_id", "description": "Retrieves a single food item by its FDC ID using the provided RapidAPI key.", "parameters": {"fooid": {"description": "The FDC ID of the food item.", "type": "int", "default": "1497465"}}}
{"name": "custom_captcha", "description": "Creates a custom captcha code using the RapidAPI service.", "parameters": {"string": {"description": "The captcha code consisting of numbers or characters, with a maximum length of 8. Defaults to 'smileme'.", "type": "str, optional", "default": "smileme"}}}
{"name": "responses_from_a_question", "description": "Fetch all responses for a given question using the Moodring API.", "parameters": {"questionid": {"description": "The ID of the question to retrieve responses for.", "type": "str", "default": "1"}}}
{"name": "consulta_dados_societ_rios", "description": "Fetches the data of a partner (socio) associated with the given socioeconomic ID (id_socio).", "parameters": {"id_socio": {"description": "The socioeconomic ID of the partner to be queried.", "type": "str", "default": "CONTATOS_ID_SOCIO"}}}
{"name": "biggest_cities", "description": "Fetches the biggest cities' data from the specified API using the provided ID and API key.", "parameters": {"is_id": {"description": "The ID representing a specific query for biggest cities.", "type": "int", "default": "1"}}}
{"name": "titles_id_crew", "description": "Fetches the crew details of a movie or a TV show from the Movies Database API using the provided IMDb ID.", "parameters": {"is_id": {"description": "IMDb ID of the title (e.g., 'tt0000002').", "type": "str", "default": ""}}}
{"name": "send_a_word_to_check", "description": "Sends a word to an API to check if it is vulgar and returns information about the word.", "parameters": {"content_type": {"description": "The type of content to be specified in the query.", "type": "str", "default": "application/json"}, "word": {"description": "The word to be checked for vulgarity.", "type": "str", "default": "chimpo"}}}
{"name": "match_summary", "description": "Fetches and returns the summary information for a given soccer match.", "parameters": {"matchid": {"description": "The ID of the match to fetch the summary for.", "type": "int", "default": "1456548"}}}
{"name": "search_zip_codes", "description": "Searches for valid Mexican zip codes that start with the given digits using the Toolbench RapidAPI.", "parameters": {"codigo_postal": {"description": "Starting digits of the postal code to search for.", "type": "str", "default": "646"}}}
{"name": "jsr_characters", "description": "Fetches a list of characters from the Jet Set Radio API with optional filtering, sorting, and ordering parameters.", "parameters": {"limit": {"description": "Specifies the maximum number of items to be returned. Default is '5'.", "type": "str", "default": "5"}, "sortby": {"description": "The field by which to sort the characters. Default is 'name'. Possible values include any field on the document, such as 'name' or 'stats'.", "type": "str", "default": "name"}, "orderby": {"description": "The order in which to sort the characters. Default is 'asc'. Possible values are 'asc' for ascending and 'desc' for descending. Must be used in conjunction with 'sortby'.", "type": "str", "default": "asc"}}}
{"name": "query_races", "description": "Queries horse races based on various filter criteria.", "parameters": {"order_by_date": {"description": "Results ordered by date of the race, either \"asc\" for ascending or \"desc\" for descending.", "type": "str, optional", "default": ""}, "date_to": {"description": "Upper bound date for the races to be queried.", "type": "str, optional", "default": ""}, "class_to": {"description": "Maximum race class.", "type": "int, optional", "default": ""}, "distance_to": {"description": "Upper bound distance for the races to be queried.", "type": "str, optional", "default": ""}, "distance_from": {"description": "Lower bound distance for the races to be queried.", "type": "str, optional", "default": ""}, "id_horse": {"description": "Horse ID. If provided, the query searches for races where this horse has run.", "type": "int, optional", "default": ""}, "course": {"description": "Racecourse name (e.g., Cheltenham, Ascot, Newmarket).", "type": "str, optional", "default": ""}, "class_from": {"description": "Minimum race class.", "type": "int, optional", "default": ""}, "page": {"description": "Page number for pagination.", "type": "int, optional", "default": ""}, "date_from": {"description": "Lower bound date for the races to be queried.", "type": "str, optional", "default": ""}, "name": {"description": "Minimum race class.", "type": "str, optional", "default": ""}}}
{"name": "heroes_data", "description": "Fetches detailed data on Dota 2 heroes, including names, images, videos, roles, abilities, and talents, in the specified language.", "parameters": {"language": {"description": "The language code in which to retrieve hero data (supports up to 20 languages).", "type": "str", "default": ""}, "is_id": {"description": "The unique identifier for the specific hero.", "type": "str", "default": "37"}}}
{"name": "get_user_tagged_media_by_user_id", "description": "Fetches the media in which an Instagram user is tagged by user ID.", "parameters": {"is_id": {"description": "The Instagram user ID whose tagged media is to be fetched.", "type": "int", "default": "18527"}, "count": {"description": "The number of media items to fetch.", "type": "int", "default": "12"}, "end_cursor": {"description": "The cursor for pagination to fetch the next set of results. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "bet365_result", "description": "Fetches the result of a bet365 event using the RapidAPI service.", "parameters": {"event_id": {"description": "The unique identifier for the bet365 event.", "type": "int", "default": ""}}}
{"name": "streams_symbol", "description": "Fetches the most recent messages for a specified stock symbol from the StockTwits API.", "parameters": {"is_id": {"description": "Ticker symbol, Stock ID, or RIC code of the symbol.", "type": "str", "default": "AAPL"}, "since": {"description": "Returns results with an ID greater than (more recent than) the specified ID.", "type": "int, optional", "default": ""}, "max": {"description": "Returns results with an ID less than (older than) or equal to the specified ID.", "type": "int, optional", "default": ""}, "limit": {"description": "The number of messages to retrieve, with a default of 20. The maximum allowed value is 30.", "type": "int, optional", "default": "20"}, "callback": {"description": "Custom callback function name for the request.", "type": "str, optional", "default": ""}, "filter": {"description": "Filter messages by links, charts, videos, or top.", "type": "str, optional", "default": ""}}}
{"name": "get_the_yield", "description": "Fetches the yield information for a given stock ticker using the SundayFinance API.", "parameters": {"ticker": {"description": "The stock ticker symbol for which to retrieve the yield information.", "type": "str", "default": "agnc"}}}
{"name": "mic_lookup", "description": "Performs a lookup of a Manufacturer Identification Code (MIC) to retrieve information about a boat manufacturing company using the Hull ID Boat HIN Decoder API.", "parameters": {"mic": {"description": "The Manufacturer Identification Code (MIC) of the boat manufacturing company.", "type": "str", "default": "YAM"}}}
{"name": "get_an_answer", "description": "Fetches an answer based on the given query parameters from a specific API endpoint.", "parameters": {"page": {"description": "The page number to fetch. Default is '1'.", "type": "str, optional", "default": "1"}, "limit": {"description": "The number of items per page. Default is '10'.", "type": "str, optional", "default": "10"}, "status": {"description": "The status of the dialogue (e.g., 'approved' or 'analyzing'). Default is 'approved'.", "type": "str, optional", "default": "approved"}, "answer": {"description": "The pre-defined response for the initial speech of the dialogue. Default is 'Hi, how are you?'.", "type": "str, optional", "default": "Hi, how are you?"}, "is_id": {"description": "The unique identifier of the dialogue. Default is '5ec47b3d8958430d6a6d5898'.", "type": "str, optional", "default": "5ec47b3d8958430d6a6d5898"}, "speech": {"description": "The initial speech input for which an answer is sought. Default is 'Hi'.", "type": "str, optional", "default": "Hi"}, "user": {"description": "The unique identifier of the user who created the dialogue. Default is '5ec479048958430d6a6d5895'.", "type": "str, optional", "default": "5ec479048958430d6a6d5895"}}}
{"name": "top_music", "description": "Fetch the top music tracks from the API.", "parameters": {"kapi_proxy": {"description": "Proxy to be used for the API call. Defaults to None.", "type": "str, optional", "default": ""}, "count": {"description": "Number of tracks to fetch. Defaults to '20'.", "type": "str, optional", "default": "20"}, "pcursor": {"description": "Pagination cursor if paginated results are required. Defaults to None.", "type": "str, optional", "default": ""}, "language": {"description": "Language code for the results. Defaults to 'en'.", "type": "str, optional", "default": "en"}, "country": {"description": "Country code for the results. Defaults to 'ma'.", "type": "str, optional", "default": "ma"}}}
{"name": "hosts_txt", "description": "Fetches the hosts file for a specific game using the StopModReposts Blocklist API.", "parameters": {"game": {"description": "The name of the game for which to fetch the hosts file. Defaults to 'minecraft'.", "type": "str, optional", "default": "minecraft"}}}
{"name": "api_assetinfo", "description": "Fetches information about a single asset using the given symbol.", "parameters": {"symbol": {"description": "The symbol representing the asset to fetch information for.", "type": "str", "default": "eur"}}}
{"name": "get_videos_by_channel", "description": "Fetches the last 30 videos from a specified YouTube channel using the Toolbench RapidAPI.", "parameters": {"cid": {"description": "The channel ID of the YouTube channel.", "type": "str", "default": ""}}}
{"name": "reversegeocoding", "description": "Perform reverse geocoding to find an address or place by latitude and longitude.", "parameters": {"lon": {"description": "Longitude of the location.", "type": "int", "default": "-87.6244212"}, "lat": {"description": "Latitude of the location.", "type": "int", "default": "41.8755616"}, "json_callback": {"description": "JSON callback function name for cross-domain requests.", "type": "str, optional", "default": ""}, "polygon_geojson": {"description": "Include a GeoJSON polygon for the results.", "type": "str, optional", "default": ""}, "limit": {"description": "Limit the number of returned results.", "type": "str, optional", "default": ""}, "accept_language": {"description": "Response language in two-letter codes (e.g., 'en', 'es'). Default is 'en'.", "type": "str, optional", "default": "en"}, "polygon_kml": {"description": "Include KML polygon in the results.", "type": "str, optional", "default": ""}, "zoom": {"description": "Level of detail required for the address details.", "type": "str, optional", "default": ""}, "polygon_svg": {"description": "Include SVG polygon in the results.", "type": "str, optional", "default": ""}, "addressdetails": {"description": "Include full address breakdown in the results.", "type": "str, optional", "default": ""}, "namedetails": {"description": "Include a list of alternative names in the results.", "type": "str, optional", "default": ""}, "polygon_threshold": {"description": "Simplify the returned polygons to a threshold level.", "type": "int, optional", "default": "0.0"}, "format": {"description": "Format of the response (e.g., 'json', 'xml').", "type": "str, optional", "default": ""}, "polygon_text": {"description": "Include a WKT polygon in the results.", "type": "str, optional", "default": ""}}}
{"name": "find_zip_codes_by_city_and_street", "description": "Fetch zip codes for a given city and street using the Polish Zip Codes API.", "parameters": {"accept": {"description": "Requested content type.", "type": "str", "default": "application/json"}, "city": {"description": "Name of the city to search for zip codes.", "type": "str", "default": "Wrocław"}, "street": {"description": "Name of the street to search for zip codes.", "type": "str", "default": "Komuny paryskiej"}, "x_traceid": {"description": "A traceId that is copied to the API response header. Default is 'optional_abc123'.", "type": "str, optional", "default": "optional_abc123"}}}
{"name": "balance", "description": "Retrieves the balance sheet statements of a specified stock company.", "parameters": {"symbol": {"description": "The stock symbol of the company (e.g., 'AAPL' for Apple Inc.).", "type": "str", "default": "MSFT"}, "period": {"description": "The reporting period for the balance sheet, which can be 'annual' or 'quarterly'.", "type": "str", "default": "quarter"}}}
{"name": "drakelikehate", "description": "Generate a \"Drake Likes and Hates\" meme by sending specified texts to the Memeados RapidAPI and receiving the generated meme data.", "parameters": {"text2": {"description": "The text to be displayed in the \"hate\" section of the meme.", "type": "str", "default": "This text is liked."}, "text1": {"description": "The text to be displayed in the \"like\" section of the meme.", "type": "str", "default": "This text is hated"}}}
{"name": "jsrf_character_by_id", "description": "Fetch a single character by ID from the Jet Set Radio API.", "parameters": {"characterid": {"description": "The unique identifier of the character.", "type": "str", "default": "643c71888cabe0dcede868a3"}, "limit": {"description": "The maximum number of items to return. Defaults to '5'.", "type": "str, optional", "default": "5"}, "orderby": {"description": "The order in which to return results. Possible values are 'asc' (ascending, default) and 'desc' (descending).", "type": "str, optional", "default": "asc"}, "sortby": {"description": "The field by which to sort the results, such as 'name' or 'stats'. Defaults to 'name'.", "type": "str, optional", "default": "name"}}}
{"name": "get_product_reviews_all_countries", "description": "Fetches product reviews for a specific product from different countries using the ASIN code.", "parameters": {"asin": {"description": "The Amazon Standard Identification Number (ASIN) of the product.", "type": "str", "default": "B091J3NYVF"}, "languagecode": {"description": "The language code for the reviews. Defaults to 'EN'.", "type": "str, optional", "default": "EN"}, "countrycode": {"description": "The country code for the reviews. Defaults to 'US'.", "type": "str, optional", "default": "US"}}}
{"name": "cars_get_images", "description": "Fetches images of a car model for a specified model year.", "parameters": {"modelyearid": {"description": "The ID of the car model year for which images are to be fetched.", "type": "int", "default": "7328"}}}
{"name": "domainsearch", "description": "Searches for email addresses associated with a given domain, optionally filtered by department and paginated by page number.", "parameters": {"domain": {"description": "Domain name from which you want to find the email addresses. For example, 'stripe.com'.", "type": "str", "default": "stripe.com"}, "department": {"description": "Get only email addresses for people working in the selected department. Default is 'pr'.", "type": "str, optional", "default": "pr"}, "page": {"description": "Specifies the number of email addresses to skip by page number. Default is 1.", "type": "int, optional", "default": "1"}}}
{"name": "totd_tracks_by_date", "description": "Retrieves the Track of the Day (TOTD) tracks for a given month and year from the Trackmania API.", "parameters": {"month": {"description": "The month for which to retrieve TOTD tracks.", "type": "int", "default": "6"}, "year": {"description": "The year for which to retrieve TOTD tracks.", "type": "int", "default": "2022"}}}
{"name": "institutional_holders", "description": "Fetches the percentage of a company's stock owned by institutional holders such as pension funds, insurance companies, and investment firms.", "parameters": {"symbol": {"description": "The stock symbol of the company.", "type": "str", "default": "AAPL"}, "country": {"description": "The country in which the company is located. Defaults to None.", "type": "str, optional", "default": ""}, "exchange": {"description": "The stock exchange where the company's shares are traded. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "busca_por_simbolo", "description": "Fetches data for a given stock symbol using the Alpha Vantage API.", "parameters": {"function": {"description": "The type of function to be called in the API (e.g., 'TIME_SERIES_DAILY').", "type": "str", "default": "TIME_SERIES_DAILY"}, "apikey": {"description": "The API key for accessing Alpha Vantage API.", "type": "str", "default": "NMITMJSJJ77WJPCF"}, "outputsize": {"description": "The size of the data output (e.g., 'compact' or 'full').", "type": "str", "default": "compact"}, "symbol": {"description": "The stock symbol for which data is to be fetched.", "type": "str", "default": "VINO11.SA"}}}
{"name": "nearest_stations", "description": "Return the nearest alternative fuel stations within a specified location or coordinates.", "parameters": {"format": {"description": "The response format (json, xml, etc.).", "type": "str", "default": "json"}, "location": {"description": "A free-form input describing the address of the location. Default is '433 Bryant St., San Francisco'.", "type": "str, optional", "default": "433 Bryant St., San Francisco"}, "latitude": {"description": "The latitude of the desired location.", "type": "str, optional", "default": ""}, "longitude": {"description": "The longitude of the desired location.", "type": "str, optional", "default": ""}, "radius": {"description": "The radius (in miles) around the search location to search for stations within.", "type": "str, optional", "default": ""}, "status": {"description": "Return stations that match the given status. Options are 'all', 'E', 'P'.", "type": "str, optional", "default": ""}, "access": {"description": "The accessibility type of the stations. Options are 'all', 'public', 'private'.", "type": "str, optional", "default": ""}, "fuel_type": {"description": "The type of fuel provided by the stations. Options are 'all', 'BD', 'CNG', 'E85', 'ELEC', 'HY', 'LNG', 'LPG'. Default is 'ELEC'.", "type": "str, optional", "default": "ELEC"}, "cards_accepted": {"description": "Payment methods accepted by the stations.", "type": "str, optional", "default": ""}, "owner_type": {"description": "Type of ownership of the stations. Options include 'all', 'FG', 'LG', 'P', 'SG', 'T'.", "type": "str, optional", "default": ""}, "federal_agency_id": {"description": "Filter stations by the federal agency owner IDs.", "type": "str, optional", "default": ""}, "ev_network": {"description": "Electric charging stations belonging to specified networks.", "type": "str, optional", "default": ""}, "ev_charging_level": {"description": "Levels of electric vehicle supply equipment. Options include 'all', '1', '2', 'dc_fast'.", "type": "str, optional", "default": ""}, "state": {"description": "Return only stations within the given state. Must be provided as a two-character state code.", "type": "str, optional", "default": ""}, "zip": {"description": "Return only stations within the given ZIP code.", "type": "str, optional", "default": ""}, "limit": {"description": "The maximum number of results to return. Default is '1'.", "type": "str, optional", "default": "1"}, "offset": {"description": "Offset the results found to paginate the results.", "type": "str, optional", "default": ""}}}
{"name": "us_ia", "description": "Retrieves current or historical gas price data for Iowa.", "parameters": {"date": {"description": "Specific date for querying historical data starting from 2023-06-01. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "transaction_id", "description": "Retrieve the information of a transaction using its ID from the Uniswap V2 API.", "parameters": {"is_id": {"description": "The ID of the transaction to retrieve information for.", "type": "str", "default": "0xd259f882f051c3ef49a6f79e0a634be47ff643513c418ca753c93dcca8d4d675"}}}
{"name": "driver_standings", "description": "Fetches and returns the driver standings for a given Formula 1 season.", "parameters": {"season_id": {"description": "The ID of the F1 season for which to retrieve driver standings.", "type": "int", "default": "2020"}}}
{"name": "getfunctions_topic", "description": "Fetches Power BI DAX functions based on a specified topic and page number using the toolbench RapidAPI.", "parameters": {"topic": {"description": "The topic for which the DAX functions are to be retrieved.", "type": "str", "default": "dax"}, "page": {"description": "The page number of the results to retrieve.", "type": "int", "default": "1"}}}
{"name": "get_deals", "description": "Fetch Amazon deals with optional filters for country, language, and category.", "parameters": {"countrycode": {"description": "The country code to filter deals by. Defaults to 'US'.", "type": "str", "default": "US"}, "languagecode": {"description": "The language code to filter deals by. Defaults to 'EN'.", "type": "str", "default": "EN"}, "categoryid": {"description": "The category ID to filter deals by. If not provided, deals from all categories are returned.", "type": "str, optional", "default": ""}}}
{"name": "list_all_pokemons", "description": "Retrieve a list of Pokemon from the Pokemon Unite API with pagination options.", "parameters": {"pagesize": {"description": "The number of Pokemons to retrieve per page. Defaults to '10'.", "type": "str, optional", "default": "10"}, "page": {"description": "The page number to retrieve. Defaults to '1'.", "type": "str, optional", "default": "1"}}}
{"name": "v1", "description": "Retrieves filtered observations from the Version 1 endpoint based on specified time and filters.", "parameters": {"time": {"description": "Select one of the following timeframes:", "type": "str", "default": "today"}, "filter1": {"description": "Can be a specific user, type, or tag (e.g., url, domain, ip, sha256, md5 for type, and phishing, ransomware, CobaltStrike for tag). Default is 'phishing'.", "type": "str, optional", "default": "phishing"}, "filter2": {"description": "Can be a specific user, type, or tag (e.g., url, domain, ip, sha256, md5 for type, and phishing, ransomware, CobaltStrike for tag). Default is 'url'.", "type": "str, optional", "default": "url"}}}
{"name": "get_scan_id", "description": "Initiates a scan against a target URL and retrieves a scan ID.", "parameters": {"target": {"description": "The URL of the target to be scanned.", "type": "str", "default": "tesla.com"}, "callback_url": {"description": "The URL to receive the scan results automatically via a POST request upon scan completion. Defaults to 'https://my-callback-url.com'.", "type": "str, optional", "default": "https://my-callback-url.com"}}}
{"name": "get_device_asset_by_identifier_copy", "description": "Fetches device asset information by identifier using the provided RapidAPI key.", "parameters": {"identifier": {"description": "The unique identifier for the device asset.", "type": "str", "default": "71491234-A"}}}
{"name": "get_stats", "description": "Fetches the World of Tanks player stats including WN8, WN7, battles, victories, defeats, kills, draws, average tier, tanks spotted, and battles survived.", "parameters": {"name": {"description": "The name of the World of Tanks player for whom the stats are being requested.", "type": "str", "default": "PasiHD"}}}
{"name": "music_videos", "description": "Fetches videos associated with a specific music ID from the TikTok Scraper API.", "parameters": {"music_id": {"description": "The unique identifier of the music for which to fetch videos.", "type": "str", "default": "6862966224016377857"}, "cursor": {"description": "The pagination cursor for fetching the next set of results. Default is '0'.", "type": "str, optional", "default": "0"}}}
{"name": "image_anime_diffusion", "description": "Generates anime-style images based on the given parameters using the Toolbench RapidAPI.", "parameters": {"steps": {"description": "The number of diffusion steps, with a maximum of 50.", "type": "int", "default": "25"}, "image_num": {"description": "The number of images to generate, with a maximum of 4.", "type": "int", "default": "1"}, "width": {"description": "The width of the generated image(s), with a maximum of 1024 pixels.", "type": "int", "default": "512"}, "cfg": {"description": "The configuration scale for image generation, with a maximum of 20.", "type": "int", "default": "7.5"}, "height": {"description": "The height of the generated image(s), with a maximum of 1024 pixels.", "type": "int", "default": "512"}, "prompt": {"description": "A textual description of the desired image content.", "type": "str", "default": "1girl"}, "negative_prompt": {"description": "A textual description of elements to avoid in the image. This parameter is not required in version 2.", "type": "str, optional", "default": ""}}}
{"name": "retrieve_the_hardiness_zone", "description": "Fetch the USDA Plant Hardiness Zone for the given ZIP code using the Toolbench API.", "parameters": {"zipcode": {"description": "The ZIP code for which to retrieve the hardiness zone.", "type": "str", "default": "90210"}}}
{"name": "getfutureeventsbytopic", "description": "Retrieve future Azure events related to a specified topic, paginated by the given page number.", "parameters": {"topic": {"description": "The topic for which to retrieve future Azure events.", "type": "str", "default": "compute"}, "page": {"description": "The page number for the paginated list of events.", "type": "int", "default": "1"}}}
{"name": "rgb_to_cmyk", "description": "Converts an RGB color code to a CMYK color code using an external API.", "parameters": {"r": {"description": "The red component of the RGB color code (0-255).", "type": "int", "default": "127"}, "g": {"description": "The green component of the RGB color code (0-255).", "type": "int", "default": "255"}, "b": {"description": "The blue component of the RGB color code (0-255).", "type": "int", "default": "212"}}}
{"name": "playlist_info", "description": "Fetches information about a SoundCloud playlist using the RapidAPI service.", "parameters": {"playlist_url": {"description": "The URL of the SoundCloud playlist to fetch information for.", "type": "str", "default": "https://soundcloud.com/vghc3eihbsdq/sets/almost-lover"}}}
{"name": "get_all_models_by_brand_and_family", "description": "Fetches all watch models by given brand and family from the Watch Database API.", "parameters": {"family": {"description": "The family name of the watch models to retrieve.", "type": "str", "default": "Aqua Terra"}, "brandname": {"description": "The brand name of the watch models to retrieve.", "type": "str", "default": "Omega"}}}
{"name": "get_sample_businessprofile", "description": "Fetches fake-generated Business Profile sample data using a specified API.", "parameters": {"locale": {"description": "The locale to set language and regional details of the generated profiles. Defaults to 'en'.", "type": "str", "default": "en"}, "count": {"description": "The number of profiles to generate. The maximum count is 1000. Defaults to 1.", "type": "int", "default": "1"}}}
{"name": "imperial_pounds", "description": "Calculates the Body Mass Index (BMI) of an individual using the imperial measurement system through an API.", "parameters": {"weight": {"description": "The weight of the individual in pounds (lbs).", "type": "int", "default": "150"}, "height": {"description": "The height of the individual in inches (in).", "type": "int", "default": "68"}}}
{"name": "get_verses", "description": "Fetches a specific verse or a range of verses from the Bible in one of 8 text formats based on the given parameters.", "parameters": {"text_mode": {"description": "The text format to return the verse in.", "type": "str", "default": "half"}, "book_name": {"description": "The name of the book of the Bible.", "type": "str", "default": "John"}, "uppercase_mode": {"description": "Whether to return the verse in uppercase. Defaults to None.", "type": "bool, optional", "default": "false"}, "verse_num2": {"description": "The ending verse number. Defaults to 5.", "type": "int, optional", "default": "5"}, "verse_num1": {"description": "The starting verse number. Defaults to 1.", "type": "int, optional", "default": "1"}, "chapter": {"description": "The chapter number of the book. Defaults to 1.", "type": "int, optional", "default": "1"}}}
{"name": "type_portfolio_get_credit_quality", "description": "Retrieves the credit quality for a given security as displayed in the Portfolio tab using the Morningstar API.", "parameters": {"type": {"description": "The type of the security. Acceptable values are 'etf' or 'fund'.", "type": "str", "default": "etf"}, "securityid": {"description": "The security ID field value returned from the API endpoint .../market/v2/get-returns.", "type": "str", "default": "F00000O2CG"}}}
{"name": "account_balance", "description": "Fetch the Binance Coin (BNB) balance for a given address on the Binance Smart Chain.", "parameters": {"address": {"description": "The address for which you want to fetch the BNB balance.", "type": "str", "default": "0x0000000000000000000000000000000000000123"}, "network": {"description": "The network to use, either 'mainnet' or 'testnet'. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "coins_get_news", "description": "Fetches news related to a specific cryptocurrency pair.", "parameters": {"pair_id": {"description": "The ID of the cryptocurrency pair.", "type": "int", "default": "1057391"}, "lang_id": {"description": "The language ID for the news articles. Defaults to 1.", "type": "int, optional", "default": "1"}, "page": {"description": "The page number for paginated results. Defaults to 1.", "type": "int, optional", "default": "1"}, "time_utc_offset": {"description": "The UTC offset in seconds. Example: UTC+8 would be 28800 seconds. Defaults to 28800.", "type": "int, optional", "default": "28800"}}}
{"name": "get_all_teams", "description": "Retrieves all NBA teams for the current season from the free-nba API, with optional pagination.", "parameters": {"page": {"description": "The page number for pagination. Defaults to '0'.", "type": "str", "default": "0"}}}
{"name": "head_to_head", "description": "Fetches and returns head-to-head statistics and previous encounters for the home and away team of an upcoming match.", "parameters": {"is_id": {"description": "The ID of the match to get statistics for.", "type": "int", "default": "81930"}, "limit": {"description": "Limits the search to only X previous encounters. The default is 10, with a maximum of 10.", "type": "int, optional", "default": "10"}}}
{"name": "offerinfo", "description": "Fetches job offer data from the Google Jobs API using the provided job URL.", "parameters": {"joburl": {"description": "The URL of the job offer to retrieve information for.", "type": "str", "default": "https://www.google.com/search?ibp=htl%3Bjobs&q=developer+newyork&hl=en-US&kgs=e473f607e23ae72f&shndl=-1&source=sh%2Fx%2Fim%2Ftextlists%2Fdetail%2F1&entrypoint=sh%2Fx%2Fim%2Ftextlists%2Fdetail&mysharpfpstate=tldetail&htivrt=jobs&htiq=developer+newyork&htidocid=6ak4txGw4C4AAAAAAAAAAA%3D%3D"}}}
{"name": "series_get_stats", "description": "Fetches statistical data for a given cricket series from the Cricbuzz API.", "parameters": {"seriesid": {"description": "The ID of the series for which statistics are to be retrieved. This ID is typically obtained from the series list or series list-archives endpoints.", "type": "int", "default": "3718"}, "statstype": {"description": "The type of statistics to retrieve. This value is obtained from the series/get-stats-filter endpoint.", "type": "str", "default": "mostRuns"}}}
{"name": "getfunctionsbytopic", "description": "Fetch Power BI DAX functions by topic for a specific page using the provided API key.", "parameters": {"page": {"description": "The page number of the results to retrieve.", "type": "int", "default": "1"}, "topic": {"description": "The topic for which to retrieve DAX functions.", "type": "str", "default": "dax"}}}
{"name": "get_channel_links", "description": "Fetches the links associated with a specified channel from the Kick API using the provided RapidAPI key.", "parameters": {"channel_name": {"description": "The name of the channel to retrieve links for. Defaults to 'gmhikaru'.", "type": "str", "default": "gmhikaru"}}}
{"name": "top_grossing_mac_apps", "description": "Fetches a list of the top-grossing Mac apps from the App Store.", "parameters": {"category": {"description": "The category ID for the apps to be fetched. Defaults to '6016' (general category).", "type": "str", "default": "6016"}, "country": {"description": "The country code for the App Store. Defaults to 'us'.", "type": "str", "default": "us"}, "lang": {"description": "The language code for the results. Defaults to 'en'.", "type": "str", "default": "en"}, "num": {"description": "The number of results to return. Defaults to 100. Maximum allowed value is 200.", "type": "int", "default": "100"}}}
{"name": "revenue_estimate", "description": "Fetches the revenue estimate for a given stock ticker using the Toolbench RapidAPI.", "parameters": {"ticker": {"description": "The stock ticker symbol for which to fetch the revenue estimate.", "type": "str", "default": "AAPL"}}}
{"name": "artists_get_details", "description": "Retrieve detailed information about an artist using the Shazam API.", "parameters": {"is_id": {"description": "The unique identifier of the artist. This value can be obtained from various Shazam API endpoints, such as 'artist->adamid' from /search, /songs/v2/detect, or /songs/get-details, or 'artists->id' from /shazam-songs/get-details, /albums/get-details, or /albums/get-related-artist.", "type": "str", "default": "567072"}, "l": {"description": "The language code for the response. Defaults to 'en-US'.", "type": "str, optional", "default": "en-US"}}}
{"name": "user_details", "description": "Fetches the details of a specified Spotify user using the RapidAPI service.", "parameters": {"user_id": {"description": "The ID of the Spotify user whose details are to be fetched.", "type": "str", "default": "cruilla"}}}
{"name": "match_play_by_play", "description": "Retrieves live match events and scores for a given basketball match ID within a -+7 days period.", "parameters": {"matchid": {"description": "The ID of the basketball match.", "type": "int", "default": "350275"}}}
{"name": "game_details", "description": "Fetches detailed information about a game using the provided parameters.", "parameters": {"timezone": {"description": "The name of the timezone for the game.", "type": "str", "default": "America/Chicago"}, "gameid": {"description": "The unique identifier for the game.", "type": "int", "default": 3627363}, "langid": {"description": "The language identifier.", "type": "int", "default": 1}, "lastupdateid": {"description": "The identifier for the last update. Provides updated data if specified.", "type": "int, optional", "default": ""}, "matchupid": {"description": "The identifier for the matchup.", "type": "int, optional", "default": ""}}}
{"name": "v1_search_enterprise", "description": "Perform a highly customizable search through the enterprise database with various filters and sorting options.", "parameters": {"q": {"description": "The search query string. Should be URL-encoded.", "type": "str", "default": "Elon Musk"}, "link_begins_with": {"description": "Filter to include articles whose URLs start with this prefix.", "type": "str, optional", "default": ""}, "sort_by": {"description": "Sort the results by relevancy, date, or rank. Defaults to 'relevancy'.", "type": "str, optional", "default": "relevancy"}, "topic": {"description": "The topic to narrow down the articles. Accepts values like 'news', 'sport', 'tech', etc.", "type": "str, optional", "default": ""}, "to": {"description": "Upper boundary for the time range to search within.", "type": "str, optional", "default": ""}, "to_rank": {"description": "Upper boundary of the rank for news websites.", "type": "int, optional", "default": ""}, "from_rank": {"description": "Lower boundary of the rank for news websites.", "type": "int, optional", "default": ""}, "lang": {"description": "Language of the search results. Defaults to 'en'.", "type": "str, optional", "default": "en"}, "page_size": {"description": "Number of articles per page. Default is 50; maximum is 100.", "type": "int, optional", "default": ""}, "ranked_only": {"description": "Limit search to top 1 million ranked sites. Defaults to 'True'.", "type": "str, optional", "default": ""}, "sources": {"description": "Comma-separated list of news sources to include.", "type": "str, optional", "default": ""}, "search_in": {"description": "Limit search to either 'title' or 'summary' of articles.", "type": "str, optional", "default": ""}, "media": {"description": "Include media information in the output. Defaults to 'True'.", "type": "str, optional", "default": "True"}, "is_from": {"description": "Lower boundary for the time range to search within.", "type": "str, optional", "default": ""}, "country": {"description": "ISO 3166-1 alpha-2 country code to narrow the search.", "type": "str, optional", "default": ""}, "not_sources": {"description": "Comma-separated list of news sources to exclude.", "type": "str, optional", "default": ""}, "page": {"description": "Page number for pagination. Defaults to 1.", "type": "int, optional", "default": "1"}}}
{"name": "list_video_comments", "description": "Retrieves comments from a specified YouTube video, with optional pagination and sorting.", "parameters": {"videoid": {"description": "The YouTube video ID. Default is 'dQw4w9WgXcQ'.", "type": "str", "default": "dQw4w9WgXcQ"}, "lang": {"description": "Language code (ISO-639) for localized results. Defaults to `en-US`. Unsupported codes will fall back to `en-US`.", "type": "str, optional", "default": ""}, "nexttoken": {"description": "Token for fetching the next page of data. If provided, `videoid` and `sortby` will be ignored.", "type": "str, optional", "default": ""}, "sortby": {"description": "Parameter to sort the comments. Default is `top`.", "type": "str, optional", "default": ""}}}
{"name": "get_word_by_length", "description": "Fetches a random word of the specified length using the Random Word API.", "parameters": {"length": {"description": "The desired length of the random word.", "type": "int", "default": "7"}}}
{"name": "tweets_by_userid", "description": "Fetches the most recent tweets of a specified user, with optional pagination and count control.", "parameters": {"userid": {"description": "The userId of the user whose tweets are to be fetched.", "type": "str", "default": "44196397"}, "cursor": {"description": "Cursor for pagination. Use to navigate to the next page of tweets. Default is None.", "type": "str, optional", "default": ""}, "count": {"description": "Number of tweets to fetch. Default is '20'.", "type": "str, optional", "default": "20"}}}
{"name": "mensajes_1", "description": "Fetches messages for student 1 from the Colegio Santa Ana API using the provided authorization token and API key.", "parameters": {"authorization": {"description": "The authorization token to access the API.", "type": "str", "default": "1234567890"}}}
{"name": "earnings_estimate", "description": "Fetches the earnings estimate for a given stock ticker using the specified RapidAPI key.", "parameters": {"ticker": {"description": "The stock ticker symbol for which the earnings estimate is to be fetched.", "type": "str", "default": "AAPL"}}}
{"name": "youtube_keyword_search", "description": "Performs a YouTube keyword search using the provided search query and optional parameters such as country code and language code. It sends a GET request to the YouTube keyword search API and returns the response in JSON format if possible, otherwise returns the raw response text.", "parameters": {"q": {"description": "The search query.", "type": "str", "default": "foot"}, "gl": {"description": "The country code in Alpha-2 format. Default is 'us'.", "type": "str, optional", "default": "us"}, "hl": {"description": "The search language code in ISO 639-1 format. Default is 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "us_ak", "description": "Fetches current or historical gas price data for Alaska.", "parameters": {"date": {"description": "A string representing a date in 'YYYY-MM-DD' format to query historical gas price data. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "words", "description": "Generates and returns random words based on specified criteria using the Jibber-Jabber API.", "parameters": {"minimumwordlength": {"description": "Minimum length of the words to generate. Defaults to None.", "type": "int, optional", "default": ""}, "maximumwordlength": {"description": "Maximum length of the words to generate. Defaults to None.", "type": "int, optional", "default": ""}, "numberofwords": {"description": "Number of words to generate. Defaults to None.", "type": "int, optional", "default": ""}, "wordlength": {"description": "Minimum length of the words to generate. Defaults to None.", "type": "int, optional", "default": ""}}}
{"name": "sentences", "description": "Fetches random sentences based on the specified constraints using the Jibber-Jabber API.", "parameters": {"maximumnumberofsentences": {"description": "The maximum number of sentences to retrieve. Defaults to None.", "type": "int, optional", "default": ""}, "minimumwordlength": {"description": "The minimum length of words in the sentences. Defaults to None.", "type": "int, optional", "default": ""}, "minimumnumberofsentences": {"description": "The minimum number of sentences to retrieve. Defaults to None.", "type": "int, optional", "default": ""}, "numberofsentences": {"description": "The maximum number of sentences to retrieve. Defaults to None.", "type": "int, optional", "default": ""}, "maximumnumberofwords": {"description": "The maximum number of words per sentence. Defaults to None.", "type": "int, optional", "default": ""}, "minimumnumberofwords": {"description": "The minimum number of words per sentence. Defaults to None.", "type": "int, optional", "default": ""}, "numberofwords": {"description": "The maximum number of words per sentence. Defaults to None.", "type": "int, optional", "default": ""}, "wordlength": {"description": "The minimum length of words in the sentences. Defaults to None.", "type": "int, optional", "default": ""}, "maximumwordlength": {"description": "The maximum length of words in the sentences. Defaults to None.", "type": "int, optional", "default": ""}}}
{"name": "get_random_fact", "description": "Fetches a random fact based on the specified type and optional parameters.", "parameters": {"type": {"description": "The category of the fact. Must be one of \"trivia\", \"math\", \"date\", or \"year\".", "type": "str", "default": "trivia"}, "min": {"description": "The minimum number, inclusive. Defaults to '10'.", "type": "str, optional", "default": "10"}, "max": {"description": "The maximum number, inclusive. Defaults to '20'.", "type": "str, optional", "default": "20"}, "fragment": {"description": "Whether to return the fact as a sentence fragment. Defaults to 'True'.", "type": "str, optional", "default": true}, "json": {"description": "Specify 'True' to return the result as JSON instead of plaintext. Defaults to 'True'.", "type": "str, optional", "default": true}}}
{"name": "getrandomquote", "description": "Fetches a random quote from the specified category using the provided API key.", "parameters": {"category": {"description": "The category of the quote to fetch. Defaults to 'life'.", "type": "str, optional", "default": "life"}, "count": {"description": "The number of quotes to fetch. Defaults to 1.", "type": "int, optional", "default": "1"}}}
{"name": "search_quotes", "description": "Search for quotes based on a query string, with options for filtering by tags and quote length.", "parameters": {"q": {"description": "The search term for querying quotes.", "type": "str", "default": "Don't give up."}, "tags": {"description": "Comma-separated tags for filtering the quotes (e.g., 'faith', 'inspirational', 'humor'). Defaults to 'inspirational,motivational'.", "type": "str, optional", "default": "inspirational,motivational"}, "max_length": {"description": "Maximum length of the quotes to return. Defaults to 4000.", "type": "int, optional", "default": 4000}, "limit": {"description": "The number of quote results to return. Defaults to 3.", "type": "int, optional", "default": 3}, "min_length": {"description": "Minimum length of the quotes to return. Defaults to 0.", "type": "int, optional", "default": "0"}}}
{"name": "hex_to_cmyk", "description": "Converts a hex color code to a CMYK color code using an API call to the Convexity service.", "parameters": {"hex": {"description": "The hex color code to convert (e.g., \"#FFFFFF\").", "type": "str", "default": "ffffff"}}}
{"name": "convert_from_one_unit_to_another", "description": "Converts a given quantity from one unit to another using the RapidAPI measurement unit converter.", "parameters": {"to": {"description": "The target unit for conversion. Can be specified in abbreviation, singular, or plural forms (e.g., 'km', 'kilometer', 'kilometers').", "type": "str", "default": "km"}, "is_from": {"description": "The source unit for conversion. Can be specified in abbreviation, singular, or plural forms (e.g., 'm', 'meter', 'meters').", "type": "str", "default": "m"}, "value": {"description": "The numeric value to be converted.", "type": "int", "default": "1200"}, "measure": {"description": "The type of measurement (e.g., 'length', 'mass').", "type": "str", "default": "length"}}}
{"name": "kanji_stroke_number", "description": "Fetches Kanji characters using an advanced search based on stroke number.", "parameters": {"ks": {"description": "Number of strokes for the Kanji character. Must be a positive integer.", "type": "int", "default": "16"}}}
{"name": "calc", "description": "Calculates the distance between two geographical coordinates using the RapidAPI distance calculator.", "parameters": {"startlongitude": {"description": "Longitude of the starting point.", "type": "int", "default": "-48.880964"}, "startlatitude": {"description": "Latitude of the starting point.", "type": "int", "default": "-26.311960"}, "endlongitude": {"description": "Longitude of the endpoint.", "type": "int", "default": "-48.881103"}, "endlatitude": {"description": "Latitude of the endpoint.", "type": "int", "default": "-26.313662"}}}
{"name": "restaurants_v2_list", "description": "Lists restaurants based on various query parameters and filters.", "parameters": {"queryplacevaluecityid": {"description": "The ID of the city to search for restaurants.", "type": "int", "default": "348156"}, "filterpricestart": {"description": "Minimum price of the meal.", "type": "str, optional", "default": ""}, "queryplacevaluecoordinateslatitude": {"description": "Latitude of the geographic location to search around.", "type": "int, optional", "default": ""}, "sort": {"description": "Sorting criteria, allowed values are 'quality', 'promotion', 'price', 'popularity', 'avg_rate', 'new_restaurant'.", "type": "str, optional", "default": ""}, "querypromotiononly": {"description": "Filter to include only promotions (True or False).", "type": "bool, optional", "default": ""}, "filterrestauranttagidlist": {"description": "Filter by restaurant tags, separated by commas. Example: '387,513'.", "type": "str, optional", "default": ""}, "filtersaletypetagidlist": {"description": "Filter by sale type tags, separated by commas. Example: '1,3'.", "type": "str, optional", "default": ""}, "filterratestart": {"description": "Minimum rating of the restaurants.", "type": "int, optional", "default": ""}, "filtergroupedpromotion": {"description": "Filter by grouped promotions, allowed values are '20', '25', '30', '40', '50', separated by commas.", "type": "str, optional", "default": ""}, "pagenumber": {"description": "Page number for pagination (default is 1).", "type": "int, optional", "default": "1"}, "queryplacevaluecoordinateslongitude": {"description": "Longitude of the geographic location to search around.", "type": "int, optional", "default": ""}, "pagesize": {"description": "Number of results per page (default is 10).", "type": "int, optional", "default": "10"}, "filterpriceend": {"description": "Maximum price of the meal.", "type": "int, optional", "default": ""}}}
{"name": "sort_live_giveaways", "description": "Fetches and sorts live giveaways from the GamerPower API based on a given criterion.", "parameters": {"sort_by": {"description": "The criterion by which to sort the giveaways. Options might include 'date', 'value', or 'popularity'. Default is 'value'.", "type": "str", "default": "value"}}}
{"name": "teams_get_transfers", "description": "Fetches the transfer details for a specific team using the provided team ID.", "parameters": {"teamid": {"description": "The ID of the team for which transfer details are to be fetched.", "type": "int", "default": "38"}}}
{"name": "get_countries_by_sport", "description": "Fetches and returns a list of countries that support the specified sport.", "parameters": {"sport": {"description": "The name or ID of the sport for which to retrieve supporting countries.", "type": "str", "default": "ice-hockey"}}}
{"name": "v1_latest_headlines", "description": "Fetches the latest 100 headlines based on specified language, topic, and/or country, and optionally includes media information.", "parameters": {"lang": {"description": "Specifies the language of the search. Allowed values include 'af', 'ar', 'bg', 'bn', 'ca', 'cn', 'cs', 'cy', 'da', 'de', 'el', 'en', 'es', 'et', 'fa', 'fi', 'fr', 'gu', 'he', 'hi', 'hr', 'hu', 'id', 'it', 'ja', 'kn', 'ko', 'lt', 'lv', 'mk', 'ml', 'mr', 'ne', 'nl', 'no', 'pa', 'pl', 'pt', 'ro', 'ru', 'sk', 'sl', 'so', 'sq', 'sv', 'sw', 'ta', 'te', 'th', 'tl', 'tr', 'tw', 'uk', 'ur', 'vi'. Defaults to 'en'.", "type": "str", "default": "en"}, "topic": {"description": "The topic to which you want to restrict the articles. Accepted values are 'news', 'sport', 'tech', 'world', 'finance', 'politics', 'business', 'economics', 'entertainment', 'beauty', 'travel', 'music', 'food', 'science'. This parameter is experimental and not all articles may have a topic assigned.", "type": "str", "default": ""}, "country": {"description": "The country to which you want to narrow your search, specified using ISO 3166-1 alpha-2 codes. This parameter is experimental and is best used in conjunction with the 'lang' parameter.", "type": "str", "default": ""}, "media": {"description": "If set to 'True', adds additional media information to the output, including the main image and a comma-separated string of all images used in an article. Defaults to 'True'.", "type": "str", "default": "True"}}}
{"name": "weight_category", "description": "Retrieve the weight category of an individual based on their BMI.", "parameters": {"bmi": {"description": "Body Mass Index value for which to determine the weight category.", "type": "int", "default": "19.2"}}}
{"name": "random_joke", "description": "Fetches a random joke from the Humor API based on specified criteria.", "parameters": {"keywords": {"description": "A comma-separated list of keywords to filter the jokes (default is 'rocket').", "type": "str", "default": "rocket"}, "include_tags": {"description": "A comma-separated list of tags that the joke must have (default is 'one_liner').", "type": "str", "default": "one_liner"}, "min_rating": {"description": "The minimum rating of the joke between 0 and 10 (default is 7).", "type": "int", "default": 7}, "max_length": {"description": "The maximum length of the joke in characters (default is 200).", "type": "int", "default": 200}, "exclude_tags": {"description": "A comma-separated list of tags that the joke must not have (default is 'nsfw').", "type": "str", "default": "nsfw"}}}
{"name": "song_by_id", "description": "Fetches a song's details by its unique identifier from the Halsey Lyrics Snippets API.", "parameters": {"is_id": {"description": "The unique identifier of the song to be retrieved.", "type": "str", "default": "63b7b10efac0fba0d5e1d187"}}}
{"name": "get_records", "description": "Fetch Guinness World Records for a given search term using the RapidAPI service.", "parameters": {"term": {"description": "The search term to find Guinness World Records.", "type": "str", "default": "push ups"}, "pagenum": {"description": "Page number of the results to fetch. Defaults to 1.", "type": "int, optional", "default": "1"}, "maxresults": {"description": "Maximum number of results to return. Defaults to 20.", "type": "int, optional", "default": "20"}}}
{"name": "insult", "description": "Generate an insult for a person based on a given reason using the Humor API.", "parameters": {"reason": {"description": "The reason for the insult.", "type": "str", "default": "you did it again"}, "name": {"description": "The name of the person to insult.", "type": "str", "default": "Alex"}}}
{"name": "makes", "description": "Fetches car makes from the RapidAPI service filtered by various query parameters such as limit, direction, sort, page, make, and year.", "parameters": {"limit": {"description": "The maximum number of results to return. Defaults to None.", "type": "int, optional", "default": ""}, "direction": {"description": "The order direction of results, either 'asc' for ascending or 'desc' for descending. Defaults to 'asc'.", "type": "str, optional", "default": "asc"}, "sort": {"description": "The attribute by which to sort the results, such as 'id'. Defaults to 'id'.", "type": "str, optional", "default": "id"}, "page": {"description": "The page number for paginated results. Defaults to None.", "type": "int, optional", "default": ""}, "make": {"description": "The name of the car make to filter results. Defaults to None.", "type": "str, optional", "default": ""}, "year": {"description": "The year of the car make to filter results. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "getgamesbytopic", "description": "Fetches game information by topic and page from the Diablo 4 Smartable API.", "parameters": {"topic": {"description": "The topic to search for within the Diablo 4 games.", "type": "str", "default": "druid"}, "page": {"description": "The page number of the results to retrieve.", "type": "int", "default": "1"}}}
{"name": "rentalizer", "description": "Fetches rental property data for a given address from the AirDNA Rentalizer API.", "parameters": {"address": {"description": "The address of the property for which rental data is required.", "type": "str", "default": "458 19th St, Santa Monica, CA 90402"}, "bathrooms": {"description": "The number of bathrooms in the property. Defaults to 2.", "type": "int, optional", "default": "2"}, "accommodates": {"description": "The number of people the property can accommodate. Defaults to '2'.", "type": "str, optional", "default": "2"}, "bedrooms": {"description": "The number of bedrooms in the property. Defaults to 2.", "type": "int, optional", "default": "2"}, "currency": {"description": "The preferred currency for financial data.", "type": "str, optional", "default": ""}}}
{"name": "list_specific_qr_code", "description": "Fetches information about a specific registered QR code using the provided reference and RapidAPI key.", "parameters": {"ref": {"description": "The reference identifier for the specific QR code.", "type": "str", "default": ""}}}
{"name": "fetch_restaurant_information", "description": "Fetches menu, location, and ratings data for a specific restaurant using the FoodieFetch API.", "parameters": {"query": {"description": "The name of the restaurant, preferably including the full name and city.", "type": "str", "default": "grandamas cafe pune"}}}
{"name": "app_news", "description": "Fetch the latest news for a specific app from the Steam API.", "parameters": {"limit": {"description": "The number of news articles to retrieve.", "type": "int", "default": "10"}, "appid": {"description": "The Steam app ID for which to fetch the news.", "type": "int", "default": "730"}, "contentlength": {"description": "The maximum length of the news content. Defaults to 300.", "type": "int, optional", "default": "300"}}}
{"name": "companies_profile", "description": "Fetch the profile of a company from the Financial Modeling Prep API.", "parameters": {"symbol": {"description": "The stock symbol of the company.", "type": "str", "default": "AAPL"}, "apikey": {"description": "API key for the Financial Modeling Prep API.", "type": "str", "default": "rapid_api"}}}
{"name": "get_geolocation_data", "description": "Fetches geolocation data for a given IP address using the SHW Geolocation API.", "parameters": {"ip": {"description": "The IP address to fetch geolocation data for.", "type": "str", "default": "8.8.8.8"}}}
{"name": "getprofile", "description": "Retrieve the profile information of a specified Snapchat user using the RapidAPI.", "parameters": {"username": {"description": "The Snapchat username of the profile to retrieve.", "type": "str", "default": "brentrivera"}}}
{"name": "peer_metrics_average", "description": "Fetches the average of company peer metrics for trailing twelve months (TTM) data via RapidAPI.", "parameters": {"symbol": {"description": "The stock symbol of the company for which to retrieve peer metrics.", "type": "str", "default": "AAPL"}}}
{"name": "get_user_by_gender", "description": "Fetches user data based on the specified gender from the fake-users6 API.", "parameters": {"gender": {"description": "The gender of the users to be retrieved.", "type": "str", "default": "male"}}}
{"name": "get_watches_from_reference_number", "description": "Retrieve watch details based on a reference number using the Watchsignals API.", "parameters": {"ref_number": {"description": "The reference number of the watch to retrieve details for.", "type": "str", "default": "11088"}}}
{"name": "messages_from_telegram_channel", "description": "Fetches the last 10 messages or a specific message from a given public Telegram channel.", "parameters": {"channel": {"description": "The @username of the public Telegram channel.", "type": "str", "default": "telegram"}, "idmessage": {"description": "The ID of a specific message to retrieve. If not provided, the function will return the last 10 messages.", "type": "str, optional", "default": ""}}}
{"name": "getbystock", "description": "Fetches earnings data for a given stock symbol using the RapidAPI service.", "parameters": {"symbol": {"description": "The stock symbol for which earnings data is to be retrieved.", "type": "str", "default": "AAPL"}}}
{"name": "get_coin_metrics_by_ticker", "description": "Retrieve real-time social media metrics for a cryptocurrency by its ticker symbol.", "parameters": {"securityticker": {"description": "The ticker symbol of the cryptocurrency for which you want to retrieve metrics.", "type": "str", "default": "eth"}}}
{"name": "get_district_capital_by_id", "description": "Gets the capital of a district in Ghana by district ID.", "parameters": {"is_id": {"description": "The ID of the district.", "type": "int", "default": "2"}}}
{"name": "kda_calculator", "description": "Calculates the Kill/Death/Assist (KDA) ratio for a player by making a request to an external API.", "parameters": {"deaths": {"description": "The number of deaths.", "type": "int", "default": "1"}, "assists": {"description": "The number of assists.", "type": "int", "default": ""}, "kills": {"description": "The number of kills.", "type": "int", "default": "1"}}}
{"name": "list_of_memes", "description": "Fetches a list of memes based on the specified genre and type from the RapidAPI service.", "parameters": {"genre": {"description": "The genre of memes to retrieve. Default is 'memes'. Available genres include:", "type": "str, optional", "default": "memes"}, "type": {"description": "The type of memes to retrieve. Default is 'top'. Available types include:", "type": "str, optional", "default": "top"}}}
{"name": "v1_feed_recommended", "description": "Fetches the recommended feed from the RapidAPI Tokapi mobile version.", "parameters": {"pull_type": {"description": "The type of loading feed. Use 0 for initial loading, 2 to load more, and 8 to reload. Defaults to 0.", "type": "int, optional", "default": 0}, "region": {"description": "The region code to fetch the feed for. Defaults to 'US'.", "type": "str, optional", "default": "US"}}}
{"name": "crimes_at_location", "description": "Retrieves the crimes that occurred at the specified location on a given date.", "parameters": {"date": {"description": "The date for which to retrieve crime data in 'YYYY-MM-DD' format.", "type": "str", "default": "2012-02"}, "lat": {"description": "The latitude of the location.", "type": "str", "default": "52.629729"}, "lng": {"description": "The longitude of the location.", "type": "str", "default": "-1.131592"}}}
{"name": "check_user_exists", "description": "Checks if a user exists on the Waifu service by user ID using the Toolbench RapidAPI key.", "parameters": {"user_id": {"description": "The unique identifier of the user to check.", "type": "str", "default": "sample_user_id"}}}
{"name": "get_5_history", "description": "Fetches historical stock data including open, high, low, close prices, and trading volume.", "parameters": {"startdate": {"description": "The start date for fetching historical data in 'YYYY-MM-DD' format. Default is '2023-02-01'.", "type": "str", "default": "2023-02-01"}, "keyword": {"description": "The stock symbol for which to fetch historical data. Default is 'GOOG'.", "type": "str", "default": "GOOG"}}}
{"name": "fast_language_detection", "description": "Detects the language of a given text using the RapidAPI Translate API.", "parameters": {"text": {"description": "The text for which to detect the language.", "type": "str", "default": "this is accurate and it can improve if it's longer"}}}
{"name": "v2_user_affiliates", "description": "Fetches the user affiliates data from the Twitter API v2 endpoint using given parameters.", "parameters": {"is_id": {"description": "User ID for which to fetch affiliates data.", "type": "int", "default": "34743251"}, "count": {"description": "Number of results to return. Default is 20.", "type": "int, optional", "default": "20"}, "cursor": {"description": "Cursor for pagination of results. Default is None.", "type": "str, optional", "default": ""}}}
{"name": "jsrf_characters", "description": "Fetches a list of JSRF (Jet Set Radio Future) characters based on given parameters.", "parameters": {"limit": {"description": "The maximum number of items to return in the response. Default is '5'.", "type": "str, optional", "default": "5"}, "orderby": {"description": "The order in which to sort items. Possible values are 'asc' (ascending) and 'desc' (descending). Default is 'asc'. This parameter has an effect only if `sortby` is also provided.", "type": "str, optional", "default": "asc"}, "sortby": {"description": "The field by which to sort the items. Possible values include any field on the document such as 'name' or 'stats'. Default is 'name'.", "type": "str, optional", "default": "name"}}}
{"name": "mfs_family_list", "description": "Fetch a list of mutual fund families from the Twelve Data API, optionally filtering by country and fund family.", "parameters": {"country": {"description": "Filter results by country name or alpha code. Defaults to None.", "type": "str, optional", "default": ""}, "fund_family": {"description": "Filter results by the investment company that manages the fund. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "stock_v2_key_stats_get_overview", "description": "Fetch key statistics overview for a given stock performance ID.", "parameters": {"performanceid": {"description": "The performance ID of the stock, which can be obtained from the /auto-complete, /get-summary, or /get-movers endpoints.", "type": "str", "default": "0P0000OQN8"}}}
{"name": "get_individual_news_source_news", "description": "Fetches news articles related to climate change from a specific newspaper using the provided newspaper ID and RapidAPI key.", "parameters": {"newspaperid": {"description": "The unique identifier of the newspaper from which to retrieve news articles.", "type": "str", "default": "thetimes"}}}
{"name": "getstatsbymonth", "description": "Fetch Trinidad & Tobago Covid-19 statistics by month using the provided API.", "parameters": {"yearid": {"description": "The year for which the statistics are needed, formatted as a four-digit string (e.g., \"2022\").", "type": "str", "default": "2022"}, "monthid": {"description": "The month for which the statistics are needed, formatted as a two-digit string (e.g., \"01\" for January).", "type": "str", "default": "01"}}}
{"name": "md5_text_hash", "description": "Generate an MD5 hash for the provided text using a specified RapidAPI key.", "parameters": {"datastring": {"description": "The text string to be hashed using the MD5 algorithm.", "type": "str", "default": "enter-your-string-here"}}}
{"name": "search_location_by_name_or_zip_code", "description": "Search for a location by city name or zip code and retrieve forecast key information in the specified language.", "parameters": {"city": {"description": "Name of the city to search for. Defaults to 'New York'.", "type": "str, optional", "default": "New York"}, "lang": {"description": "Language for the response. Supported values are ['en', 'fr', 'nl', 'es', 'pt', 'it', 'tr', 'gr', 'cz', 'pl', 'ru', 'cn']. Defaults to 'en'.", "type": "str, optional", "default": "en"}, "zipcode": {"description": "Zip code of the city to search for. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "get_the_continents", "description": "Fetches a list of continents from the specified API endpoint.", "parameters": {"name": {"description": "Optional continent name to filter the results.", "type": "str, optional", "default": ""}, "page": {"description": "Optional page number for pagination. Defaults to '1'.", "type": "str, optional", "default": "1"}}}
{"name": "highway_type", "description": "Determines the type of road nearest to a given geographic coordinate (latitude and longitude).", "parameters": {"lat": {"description": "The latitude of the geographic coordinate.", "type": "int", "default": "40.409246"}, "lon": {"description": "The longitude of the geographic coordinate.", "type": "int", "default": "-3.677144"}, "apikey": {"description": "The API key for accessing the service.", "type": "str", "default": "YOUR_API_KEY"}}}
{"name": "aliexpress_store_item_search", "description": "Searches for items in an AliExpress store.", "parameters": {"sellerid": {"description": "The seller's ID on AliExpress.", "type": "str", "default": "231651707"}, "storeid": {"description": "The store's ID on AliExpress.", "type": "str", "default": "1102051418"}, "sort": {"description": "The sorting order of the items. Default is None.", "type": "str, optional", "default": ""}, "page": {"description": "The page number for pagination. Default is None.", "type": "int, optional", "default": ""}, "pagesize": {"description": "The number of items to display per page. Default is None.", "type": "int, optional", "default": ""}, "region": {"description": "The region to accurately get shipping costs and other deals. Default is None.", "type": "str, optional", "default": ""}, "locale": {"description": "The locale to display the titles and content in the selected language. Default is None.", "type": "str, optional", "default": ""}, "currency": {"description": "The currency to display the product price in. Default is None.", "type": "str, optional", "default": ""}}}
{"name": "get_offers_by_watch_id", "description": "Retrieves offers for a specific watch identified by `watch_id` from the Watch Signals API.", "parameters": {"watch_id": {"description": "The ID of the watch for which to retrieve offers.", "type": "str", "default": "5"}}}
{"name": "username_to_uuid", "description": "Converts a Minecraft username to a UUID by making an API request.", "parameters": {"username": {"description": "The Minecraft username to convert to a UUID.", "type": "str", "default": ""}}}
{"name": "get_from_eztv", "description": "Fetches torrent search results from EZTV using the provided search topic.", "parameters": {"searchtopic": {"description": "The topic to search for on EZTV.", "type": "str", "default": "cars"}}}
{"name": "query_for_ldu_boundary", "description": "Query the boundaries for a given LDU (Local Delivery Unit) postal code in Canada using the VanitySoft Canada Postal Boundaries API.", "parameters": {"postal_ldu": {"description": "The LDU postal code to query.", "type": "str", "default": "L0R 1B7"}, "resolution": {"description": "The resolution of the boundary data. Defaults to 10.", "type": "int, optional", "default": "10"}}}
{"name": "get_all_app_keys", "description": "Fetch all keys for a specified application using the RapidAPI service.", "parameters": {"appid": {"description": "The unique identifier for the specific application. Obtainable through the \"Get All Apps\" endpoint.", "type": "str", "default": ""}}}
{"name": "get_6_month_historical_daily_prices", "description": "Retrieves 6 months of historical daily stock prices for the given ticker, including adjusted Open, High, Low, and Close prices, as well as Daily Volume, Dividend, and Split information.", "parameters": {"ticker": {"description": "The stock ticker symbol for which to retrieve the historical prices.", "type": "str", "default": "AAPL"}}}
{"name": "staffs_list_by_competition", "description": "Retrieves a list of staff members associated with a specific competition or league.", "parameters": {"is_id": {"description": "The ID value of the competition or league to retrieve staff members for.", "type": "str", "default": "GB1"}, "domain": {"description": "The domain for the region, one of the following: com, de, be, es, it, nl, pl, pt, com.tr, or world. Defaults to 'de'.", "type": "str, optional", "default": "de"}}}
{"name": "lunch_ingredient", "description": "Retrieve a random lunch recipe that contains a specific ingredient using the Recipe Finder API.", "parameters": {"ingredient": {"description": "The name of the ingredient to include in the lunch recipe.", "type": "str", "default": "pork"}}}
{"name": "get_a_random_quote_from_a_specific_book", "description": "Fetches a random quote from a specific self-help book using its book ID.", "parameters": {"book_id": {"description": "The identifier for the specific book from which to fetch a random quote.", "type": "str", "default": "quiet"}}}
{"name": "youtube_video_details", "description": "Fetches detailed information about a YouTube video using the provided video ID or URL.", "parameters": {"is_id": {"description": "The video ID or video URL for a YouTube video. Examples include:", "type": "str", "default": "SmM0653YvXU"}}}
{"name": "artists_get_latest_release", "description": "Gets the latest release of an artist using the Shazam API.", "parameters": {"is_id": {"description": "The ID of the artist. This is the value of the 'artist->adamid' field returned by various endpoints such as .../search, .../songs/v2/detect, or .../songs/get-details.", "type": "str", "default": "567072"}, "l": {"description": "The language code. Defaults to 'en-US'.", "type": "str, optional", "default": "en-US"}}}
{"name": "mouldinformation", "description": "Retrieves mould information for a given tenant ID using the specified RapidAPI key.", "parameters": {"tenantid": {"description": "The ID of the tenant for which mould information is to be retrieved.", "type": "str", "default": "TNTgielleplast"}}}
{"name": "shorten", "description": "Shortens a given long URL using the Bitly API and returns the shortened URL or an error message.", "parameters": {"longurl": {"description": "The long URL to be shortened.", "type": "str", "default": "http://www.mashape.com"}}}
{"name": "letters", "description": "Finds possible words from the given Boggle board letters using the RapidAPI Codebox Boggle endpoint.", "parameters": {"letters": {"description": "A string representing the letters on the Boggle board.", "type": "str", "default": ""}}}
{"name": "get_laws_for_one_state", "description": "Retrieves gun law documentation links for a specific U.S. state using the provided RapidAPI key.", "parameters": {"statename": {"description": "The name of the state for which to retrieve gun law documentation.", "type": "str", "default": "north carolina"}}}
{"name": "annotation_versions", "description": "Gets the versions of an annotation from the Genius Song Lyrics API.", "parameters": {"is_id": {"description": "The ID of the annotation.", "type": "str", "default": "9234498"}, "text_format": {"description": "Format for text bodies related to the annotation. Options include `dom`, `plain`, `markdown`, and `html`. Defaults to `html`.", "type": "str, optional", "default": ""}}}
{"name": "leagueseasons", "description": "Fetches the seasons of a specific E-Sports league for a given tournament ID using the RapidAPI service.", "parameters": {"tournamentid": {"description": "The unique ID of the tournament for which the league's seasons are to be retrieved.", "type": "int", "default": 16151}}}
{"name": "aliexpress_item_search", "description": "Searches for items on AliExpress based on various filters and criteria.", "parameters": {"brandid": {"description": "The brand ID to filter items by. Defaults to None.", "type": "str, optional", "default": ""}, "catid": {"description": "The category ID to filter items by. Defaults to None.", "type": "str, optional", "default": ""}, "q": {"description": "The search query. Defaults to 'iphone'.", "type": "str, optional", "default": "iphone"}, "page": {"description": "The page number of the search results. Defaults to 1.", "type": "int, optional", "default": "1"}, "loc": {"description": "The location to filter items by. Defaults to None.", "type": "str, optional", "default": ""}, "locale": {"description": "The locale to display titles and content in the selected language. Defaults to None.", "type": "str, optional", "default": ""}, "endprice": {"description": "The upper price limit to filter items by. Defaults to None.", "type": "int, optional", "default": ""}, "sort": {"description": "The sort order of the search results. Defaults to None.", "type": "str, optional", "default": ""}, "attr": {"description": "The attributes to filter items by, separated by semicolons. Defaults to None.", "type": "str, optional", "default": ""}, "startprice": {"description": "The lower price limit to filter items by. Defaults to None.", "type": "int, optional", "default": ""}, "region": {"description": "The region to get accurate shipping costs and promotions. Defaults to None.", "type": "str, optional", "default": ""}, "currency": {"description": "The currency to display the product prices in. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "get_word_by_length_start_and_contain", "description": "Fetches a random word from an API that matches specific criteria: a given length, starting substring, and containing another substring.", "parameters": {"start": {"description": "The starting substring of the word.", "type": "str", "default": "fru"}, "length": {"description": "The length of the word.", "type": "int", "default": "7"}, "substring": {"description": "The substring that the word must contain.", "type": "str", "default": "le"}}}
{"name": "mrna2dna", "description": "Transforms an mRNA sequence to its DNA sequence equivalent using the Toolbench RapidAPI service.", "parameters": {"mrna": {"description": "The mRNA sequence to be transformed.", "type": "str", "default": "UACGUACG"}}}
{"name": "agent_s_active_listings", "description": "Fetches the active listings for a given agent from Zillow's API.", "parameters": {"zuid": {"description": "The Zillow unique identifier for the agent.", "type": "str", "default": "X1-ZU10c5uqeoxak21_5upaj"}, "page": {"description": "The page number of the results to retrieve. Defaults to None.", "type": "int, optional", "default": ""}}}
{"name": "job_details", "description": "Fetch detailed information about a specific job using its Job Id. Optionally, include additional publisher details such as the website URL and favicon.", "parameters": {"job_id": {"description": "The Job Id for which to fetch details. Multiple Job Ids can be provided separated by commas.", "type": "str", "default": "fFunVwyb9l4AAAAAAAAAAA=="}, "extended_publisher_details": {"description": "If set to True, includes additional publisher details such as the website URL and favicon. Defaults to None.", "type": "bool, optional", "default": "false"}}}
{"name": "get_all_verse_of_chapter_by_chapter_id", "description": "Fetches all verses from a specific chapter in the Bhagavad Gita by chapter ID.", "parameters": {"chapterid": {"description": "The ID of the chapter whose verses are to be fetched.", "type": "str", "default": ""}}}
{"name": "get_novel_by_id", "description": "Fetches a novel's details from the Anime, Manga, and Novels API using a given novel ID.", "parameters": {"is_id": {"description": "The ID of the novel to fetch.", "type": "str", "default": "3"}}}
{"name": "search_airport", "description": "Searches for an airport based on the provided query using the TripAdvisor API.", "parameters": {"query": {"description": "Name of the location where the airport is situated.", "type": "str", "default": "london"}}}
{"name": "get_general_game_information", "description": "Retrieves the most general information for a specified NBA game, including away team, home team, game date, and game start time. All times are in Eastern (ET) time zone.", "parameters": {"gameid": {"description": "The unique identifier for the NBA game. This can be retrieved from calls like `getNBAGamesForDate` or `getNBATeamSchedule`.", "type": "str", "default": "20221202_CHI@GS"}}}
{"name": "featuredtournamentsevents", "description": "Fetches featured events for a given unique tournament from the Sportify API.", "parameters": {"uniquetournamentid": {"description": "The unique identifier for the tournament whose featured events are to be fetched.", "type": "int", "default": "23"}}}
{"name": "searchstation", "description": "Search for radio stations based on a provided keyword.", "parameters": {"keyword": {"description": "The search keyword which could be a radio station name or a country name.", "type": "str", "default": "hello"}, "order": {"description": "The order in which to display the results. Use 'ASC' for ascending or 'DESC' for descending. Default is 'ASC'.", "type": "str, optional", "default": "ASC"}, "page": {"description": "The page number of the results to display. Default is 1.", "type": "int, optional", "default": "1"}, "limit": {"description": "The limit of items to display per page. Default is 10.", "type": "int, optional", "default": "10"}}}
{"name": "getmindfulnessquote", "description": "Fetches a random mindfulness quote, optionally filtered by author or category.", "parameters": {"author": {"description": "The author of the quote. Defaults to None.", "type": "str, optional", "default": ""}, "category": {"description": "The category of the quote. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "get_campaign_from_url", "description": "Fetches campaign data from the Fomo API based on a specified campaign ID and optional URL.", "parameters": {"is_id": {"description": "The unique identifier of the campaign.", "type": "str", "default": "Lead"}, "url": {"description": "The URL to be included in the query. Defaults to 'gogofodo.com'.", "type": "str, optional", "default": "gogofodo.com"}}}
{"name": "locations_search", "description": "Searches for locations based on a given term or phrase using the SeLoger API.", "parameters": {"searchterm": {"description": "The term or phrase to search for locations.", "type": "str", "default": "paris"}}}
{"name": "getlearningresources_topic", "description": "Fetch Power BI learning resources based on a specific topic and page number.", "parameters": {"topic": {"description": "The topic for which to fetch learning resources.", "type": "str", "default": "dax"}, "page": {"description": "The page number of the results to retrieve.", "type": "int", "default": "1"}}}
{"name": "cars_detail", "description": "Fetches detailed information about a car model for a given year using the Consumer Reports API.", "parameters": {"modelyearid": {"description": "The identifier for the car model year.", "type": "int", "default": "7328"}}}
{"name": "object_detection", "description": "Detects various objects in an image through the Google Lens API, providing bounding boxes, labels/types, and confidence scores.", "parameters": {"url": {"description": "The URL of the image to perform object detection on.", "type": "str", "default": "https://thumbs.dreamstime.com/b/giraffe-zebra-1533191.jpg"}}}
{"name": "get_contacts", "description": "Retrieves all contacts using the provided API key and returns the response in either JSON or CSV format.", "parameters": {"p": {"description": "API Key from Sms77.io.", "type": "str", "default": ""}, "json": {"description": "Specifies whether to return the response in JSON format. If not provided, the response will be in CSV format.", "type": "str, optional", "default": ""}}}
{"name": "swift_code", "description": "Fetches and returns the details of a specified SWIFT code using the Toolbench RapidAPI service.", "parameters": {"swift_code": {"description": "The SWIFT code for which the details are to be retrieved.", "type": "str", "default": "NATAAU33033"}}}
{"name": "all", "description": "Returns the complete history of a package from dispatch to the latest status.", "parameters": {"colisid": {"description": "The ID of the package to be tracked.", "type": "str", "default": "CA107308006SI"}}}
{"name": "retorna_dados_do_endere_o_atrav_s_do_cep", "description": "Retrieves address information based on a given Brazilian postal code (CEP) using the specified RapidAPI key.", "parameters": {"cepnumber": {"description": "The Brazilian postal code (CEP) for which to retrieve address information.", "type": "str", "default": "75094080"}}}
{"name": "getmaptilewithenglishlabels", "description": "Retrieves a raster map tile with English labels from the MapTiles API.", "parameters": {"x": {"description": "X-coordinate of the tile.", "type": "int", "default": "6"}, "z": {"description": "Zoom level (ranging from 0 to 19).", "type": "int", "default": "3"}, "y": {"description": "Y-coordinate of the tile.", "type": "int", "default": "3"}}}
{"name": "get_search_suggestions", "description": "Fetches search suggestions for cryptocurrencies, exchanges, and markets based on a query.", "parameters": {"query": {"description": "The search term to look for. Can be a currency name, symbol, exchange, or market.", "type": "str, optional", "default": ""}, "referencecurrencyuuid": {"description": "UUID of the reference currency for price calculations. Defaults to 'yhjMzLPhuIDl' (US Dollar).", "type": "str, optional", "default": "yhjMzLPhuIDl"}}}
{"name": "get_religions", "description": "Retrieves a list of religions using the specified method through the Matrimony Profiles API.", "parameters": {"method": {"description": "The method parameter to be used in the API request.", "type": "str", "default": "get_all_religions"}}}
{"name": "qr_code_gen", "description": "Generates a QR code for the given URL using the Simple Cheap QR Code Generator API.", "parameters": {"url": {"description": "The URL for which to generate the QR code.", "type": "str", "default": "www.google.com"}}}
{"name": "get_wagons_mrt_train_no_wagons_get", "description": "Fetches the number of wagons for a given MRT train using the RapidAPI service.", "parameters": {"train_no": {"description": "The unique identifier for the MRT train.", "type": "str", "default": ""}}}
{"name": "get_app_reviews", "description": "Fetches app reviews from the iOS store for a given app.", "parameters": {"sort": {"description": "Controls sorting options in the iOS store. Valid values are 'helpful' or 'recent'.", "type": "str", "default": "helpful"}, "country": {"description": "The country code for the iOS store to fetch reviews from.", "type": "str", "default": "us"}, "page": {"description": "The page number of the reviews to fetch.", "type": "str", "default": "1"}, "appid": {"description": "The ID of the app for which to fetch reviews.", "type": "str", "default": "com.rovio.baba"}}}
{"name": "etablissements_d_une_entreprise", "description": "Fetch the establishments of a company in New Caledonia using the RID provided.", "parameters": {"rid": {"description": "The unique identifier (RID) of the company.", "type": "str", "default": "0132720"}}}
{"name": "search_nearby", "description": "Search for businesses near specific geographic coordinates using various query parameters.", "parameters": {"query": {"description": "The search query or keyword (e.g., 'Bars and pubs', 'Plumbers').", "type": "str", "default": "plumbers"}, "lng": {"description": "Longitude of the geographic coordinates to search nearby.", "type": "int", "default": "-121.925337"}, "lat": {"description": "Latitude of the geographic coordinates to search nearby.", "type": "int", "default": "37.359428"}, "x_user_agent": {"description": "Device type for the search. Default is 'desktop'.", "type": "str, optional", "default": ""}, "language": {"description": "Language of the results. Default is 'en'. For a list of supported language codes, see https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes.", "type": "str, optional", "default": "en"}, "subtypes": {"description": "Specific subtypes of businesses to search for, specified as a comma-separated list (e.g., 'Plumber,Carpenter,Electrician').", "type": "str, optional", "default": ""}, "fields": {"description": "A comma-separated list of business fields to include in the response. By default, all fields are returned (e.g., 'business_id,type,phone_number,full_address').", "type": "str, optional", "default": ""}, "limit": {"description": "Maximum number of businesses to return (1-500). Default is '20'.", "type": "str, optional", "default": "20"}, "region": {"description": "Region or country code to query Google Maps from. Default is 'us'. For a list of supported region/country codes, see https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes.", "type": "str, optional", "default": "us"}}}
{"name": "get_answer_to_question", "description": "Fetches the answer to a given question from the Question Answered API using the provided RapidAPI key.", "parameters": {"questionasked": {"description": "The question to be answered.", "type": "str", "default": "how far away is the sun from earth?"}}}
{"name": "products_types_typeid_locations", "description": "Fetches a list of locations that have issued products for a given product type.", "parameters": {"typeid": {"description": "The ID of a valid product type.", "type": "str", "default": ""}}}
{"name": "domain_information", "description": "Fetches domain information such as IP address, expiration date, and more using the WHOIS lookup API.", "parameters": {"search": {"description": "The domain to search (e.g., \"google.com\"). Note that \"http://\" or \"https://\" should not be included.", "type": "str", "default": "google.com"}}}
{"name": "specific_publication_articles", "description": "Fetches news articles from a specific publication using the provided newspaper ID.", "parameters": {"newspaperid": {"description": "The ID of the newspaper to fetch articles from.", "type": "str", "default": "guardian"}}}
{"name": "records", "description": "Fetches records data from the Goverlytics API based on various optional filtering criteria.", "parameters": {"limit": {"description": "The maximum number of records to return. Defaults to None.", "type": "int, optional", "default": ""}, "offset": {"description": "The starting point in the list of records to return. Defaults to None.", "type": "int, optional", "default": ""}, "substring": {"description": "A substring to search for within the records. Defaults to None.", "type": "str, optional", "default": ""}, "speaker_id": {"description": "An ID representing a specific speaker. Defaults to None.", "type": "str, optional", "default": ""}, "topic": {"description": "The topic to filter records by. Defaults to None.", "type": "str, optional", "default": ""}, "speaker_party": {"description": "The party affiliation of the speaker to filter by. Defaults to None.", "type": "str, optional", "default": ""}, "level_of_government": {"description": "The level of government to filter records by. Defaults to None.", "type": "str, optional", "default": ""}, "region": {"description": "The region to filter records by. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "adosc", "description": "Fetches the Chaikin A/D Oscillator (ADOSC) indicator data for a given financial instrument.", "parameters": {"interval": {"description": "Interval between two consecutive points in the time series. Supports `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`.", "type": "str", "default": "1min"}, "symbol": {"description": "Instrument symbol, which can be any equity, index, ETF, forex, or cryptocurrency (e.g., `AAPL`, `EUR/USD`, `ETH/BTC`).", "type": "str", "default": "AAPL"}, "slow_period": {"description": "Length of the slow EMA period. Defaults to 26.", "type": "int, optional", "default": 26}, "fast_period": {"description": "Length of the fast EMA period. Defaults to 12.", "type": "int, optional", "default": 12}, "format": {"description": "Output format, can be either `CSV` or `JSON`. Defaults to `json`.", "type": "str, optional", "default": "json"}, "outputsize": {"description": "Number of data points to return. Defaults to 30.", "type": "int, optional", "default": 30}}}
{"name": "teams_get_squad", "description": "Retrieves the squad information for a specific team based on the given team ID.", "parameters": {"teamid": {"description": "The ID of the team. This value is typically obtained from the 'id' field returned in various API endpoints such as /teams/search, /matches/detail, /tournaments/get-featured-events, /tournaments/get-scheduled-events, or /tournaments/get-top-teams.", "type": "int", "default": "38"}}}
{"name": "stock_v2_get_valuation", "description": "Fetches the valuation data for a given stock using its performance ID.", "parameters": {"performanceid": {"description": "The value of the performanceId field from endpoints like /auto-complete, /get-summary, or /get-movers. It specifies the stock for which to fetch the valuation data.", "type": "str", "default": "0P0000OQN8"}}}
{"name": "get_token_price_history_between_dates", "description": "Retrieves the price history of a token between two specified dates in USD.", "parameters": {"startdate": {"description": "The starting unix timestamp (in seconds) for the price history.", "type": "int", "default": ""}, "chainid": {"description": "The specific network the desired token resides on.", "type": "int", "default": "1"}, "address": {"description": "The address of the desired token.", "type": "str", "default": ""}, "enddate": {"description": "The ending unix timestamp (in seconds) for the price history.", "type": "int", "default": ""}}}
{"name": "shorts_sound_attribution", "description": "Fetches the Shorts original sound attribution listing from the YouTube API.", "parameters": {"x_cachebypass": {"description": "Cache bypass value, must be set to '1' if used.", "type": "str, optional", "default": ""}, "lang": {"description": "Language code for localized results, such as 'en', 'gb', 'hi', etc.", "type": "str, optional", "default": ""}, "geo": {"description": "ISO 3166-2 country code of the region, such as 'US' (default), 'UK', 'CA', 'IN', etc.", "type": "str, optional", "default": ""}, "params": {"description": "Attribution parameter available in the Shorts info endpoint; defaults to a specific encoded string.", "type": "str, optional", "default": "8gU1CjMSMQoLMzFaR01oWjFlejgSCzMxWkdNaFoxZXo4GgtTQWoxZktNZVMyOCIICLiCBxICCCI%3D"}, "token": {"description": "Pagination token for retrieving additional results.", "type": "str, optional", "default": ""}, "is_id": {"description": "Shorts video ID to be provided if the params value is not available.", "type": "str, optional", "default": ""}}}
{"name": "snap_to_road", "description": "Snaps a given geographical coordinate to the nearest road.", "parameters": {"lat": {"description": "Latitude of the geographical coordinate.", "type": "int", "default": "40.409246"}, "lon": {"description": "Longitude of the geographical coordinate.", "type": "int", "default": "-3.677144"}, "apikey": {"description": "API key for authenticating with the MyMappi service.", "type": "str", "default": "YOUR_API_KEY"}}}
{"name": "getzip", "description": "Fetch town information based on a provided ZIP code (Postleitzahl) using the RapidAPI.", "parameters": {"zip": {"description": "The ZIP code for which to fetch town information.", "type": "int", "default": "3052"}}}
{"name": "validate_phonenumber", "description": "Validates a phone number using the WhatsApp Checker Pro API.", "parameters": {"phone": {"description": "The phone number to be validated.", "type": "str", "default": "PhoneNumber"}}}
{"name": "real_time_hashtag_search", "description": "Searches for live hashtags on social media based on a given keyword.", "parameters": {"keyword": {"description": "The keyword to search for related hashtags.", "type": "str", "default": "blah"}}}
{"name": "alerts_and_jams", "description": "Fetch real-time alerts and traffic jams from Waze in a specified geographic rectangular area.", "parameters": {"top_right": {"description": "Latitude, longitude pair defining the top-right corner of the geographic area.", "type": "str", "default": "40.772787404902594,-73.76818084716798"}, "bottom_left": {"description": "Latitude, longitude pair defining the bottom-left corner of the geographic area.", "type": "str", "default": "40.66615391742187,-74.13732147216798"}, "max_alerts": {"description": "Maximum number of alerts to fetch. Defaults to 20. Set to 0 to avoid fetching alerts.", "type": "int, optional", "default": "20"}, "max_jams": {"description": "Maximum number of traffic jams to fetch. Defaults to 20. Set to 0 to avoid fetching traffic jams.", "type": "int, optional", "default": "20"}}}
{"name": "between_checker", "description": "Checks if a given date is between two specified dates using the DateClock API.", "parameters": {"to": {"description": "The end date in the format 'YYYY-MM-DD'.", "type": "str", "default": "1 week ago"}, "date": {"description": "The date to check in the format 'YYYY-MM-DD'.", "type": "str", "default": "Yesterday"}, "is_from": {"description": "The start date in the format 'YYYY-MM-DD'.", "type": "str", "default": "1980-06-06 00:00:00"}}}
{"name": "price_forecasts", "description": "Fetches an AI-generated price forecast for a given stock symbol over the next 3 months using the Toolbench RapidAPI.", "parameters": {"symbol": {"description": "The stock symbol for which the price forecast is to be generated.", "type": "str", "default": "AAPL"}}}
{"name": "distance", "description": "Calculates the geodesic and great circle distances between two geographic points specified by their latitude and longitude coordinates.", "parameters": {"start_longitude": {"description": "Longitude of the starting point.", "type": "int", "default": "12.482778"}, "start_latitude": {"description": "Latitude of the starting point.", "type": "int", "default": "41.893333"}, "end_latitude": {"description": "Latitude of the ending point.", "type": "int", "default": "40.416944"}, "end_longitude": {"description": "Longitude of the ending point.", "type": "int", "default": "-3.703333"}}}
{"name": "get_quotes_by_anime_title", "description": "Fetches quotes from a specified anime title using the Anime Quotes API.", "parameters": {"title": {"description": "The title of the anime for which to fetch quotes. Defaults to 'Fairy Tail'.", "type": "str", "default": "Fairy Tail"}, "page": {"description": "The page number for pagination. Defaults to '1'.", "type": "str", "default": "1"}}}
{"name": "get_annonce", "description": "Fetches advertisement details from the FluxImmo API based on a unique identifier.", "parameters": {"unique_id": {"description": "The unique identifier of the advertisement to fetch.", "type": "int", "default": ""}}}
{"name": "evaluate", "description": "Evaluates a mathematical expression using the given variables and their values through the RapidAPI service.", "parameters": {"variables": {"description": "A comma-separated string listing the variables used in the expression.", "type": "str", "default": ""}, "values": {"description": "A comma-separated string listing the values corresponding to the variables.", "type": "str", "default": ""}, "expression": {"description": "The mathematical expression to be evaluated.", "type": "str", "default": ""}}}
{"name": "check_text", "description": "Submits text for analysis to determine if it was generated by a machine or a human using the AI Detection API.", "parameters": {"term": {"description": "The text to be analyzed. Do not include any special characters.", "type": "str", "default": "Text you think is generated by AI"}}}
{"name": "organic_results", "description": "Fetches JSON data of organic search results from Google using the RapidAPI service.", "parameters": {"query": {"description": "Search query string.", "type": "str", "default": "Football"}, "device": {"description": "Device type for the search results, e.g. 'desktop', 'mobile'. Defaults to 'desktop'.", "type": "str, optional", "default": "desktop"}, "hl": {"description": "Language for the search results. Defaults to 'en'.", "type": "str, optional", "default": "en"}, "html": {"description": "HTML content toggle. Defaults to None.", "type": "str, optional", "default": ""}, "duration": {"description": "Duration filter, e.g. 'd', 'w', 'm', 'y'. Defaults to None.", "type": "str, optional", "default": ""}, "lr": {"description": "Language restrict parameter. Defaults to None.", "type": "str, optional", "default": ""}, "safe": {"description": "Safe search filter. Defaults to None.", "type": "str, optional", "default": ""}, "uule": {"description": "Encoded location parameter. Defaults to None.", "type": "str, optional", "default": ""}, "nfpr": {"description": "No forced personalized results toggle. Defaults to '0'.", "type": "str, optional", "default": "0"}, "num": {"description": "Number of search results to return. Defaults to '10'.", "type": "str, optional", "default": "10"}, "tbs": {"description": "Search filter tools, e.g. 'qdr:h', 'li:1'. Defaults to None.", "type": "str, optional", "default": ""}, "gl": {"description": "Geolocation for the search results. Defaults to 'us'.", "type": "str, optional", "default": "us"}, "page": {"description": "Page number of the search results. Defaults to '0'.", "type": "str, optional", "default": "0"}}}
{"name": "coins_get_historical_data", "description": "Fetch historical data for a specific cryptocurrency pair from a given date range.", "parameters": {"date_from": {"description": "Start date in ddmmyyyy format.", "type": "str", "default": "20012020"}, "date_to": {"description": "End date in ddmmyyyy format.", "type": "str", "default": "19022020"}, "pair_id": {"description": "ID of the cryptocurrency pair.", "type": "int", "default": "33"}, "lang_id": {"description": "Language ID as returned by the get-meta-data endpoint. Default is 1.", "type": "int, optional", "default": "1"}, "time_utc_offset": {"description": "Time offset from UTC in seconds. Default is 28800 (UTC+8).", "type": "int, optional", "default": "28800"}, "interval": {"description": "Interval of the data points. Allowed values are 'day', 'week', or 'month'. Default is 'day'.", "type": "str, optional", "default": "day"}}}
{"name": "aliexpress_item_detail_3", "description": "Fetch detailed information about a specific AliExpress item.", "parameters": {"itemid": {"description": "Aliexpress product ID.", "type": "int", "default": "3256804591426248"}, "currency": {"description": "Currency for displaying the product price. Only supported currencies are accepted.", "type": "str, optional", "default": ""}, "region": {"description": "Region for accurate shipping costs and promotions. Only supported regions are accepted.", "type": "str, optional", "default": ""}, "locale": {"description": "Locale for displaying titles and content in the desired language. Only supported locales are accepted.", "type": "str, optional", "default": ""}}}
{"name": "series_get_points_table", "description": "Fetch the points table for a given series using the Cricbuzz API.", "parameters": {"seriesid": {"description": "The unique identifier of the cricket series for which the points table is to be fetched.", "type": "int", "default": "3718"}}}
{"name": "tangga_lagu", "description": "Fetches the top tracks from the specified music chart.", "parameters": {"index": {"description": "The starting index of the track list.", "type": "int", "default": "0"}, "num": {"description": "The number of tracks to retrieve.", "type": "int", "default": "50"}, "lang": {"description": "The language of the tracks.", "type": "str", "default": "id"}, "country": {"description": "The country of the music chart.", "type": "str", "default": "id"}, "is_id": {"description": "The unique identifier for the specific music chart.", "type": "int", "default": "33"}}}
{"name": "get_product_details_all_countries", "description": "Fetches the details of a specific product from Amazon using its ASIN code, for a given language and country code.", "parameters": {"asin": {"description": "The Amazon Standard Identification Number (ASIN) of the product.", "type": "str", "default": "B091J3NYVF"}, "languagecode": {"description": "The language code for the product details. Defaults to 'EN'.", "type": "str, optional", "default": "EN"}, "countrycode": {"description": "The country code for the Amazon site to query. Defaults to 'US'.", "type": "str, optional", "default": "US"}}}
{"name": "game_predictions", "description": "Fetch game predictions using specified parameters.", "parameters": {"timezone": {"description": "The timezone name.", "type": "str", "default": "America/Chicago"}, "langid": {"description": "The language ID.", "type": "int", "default": 1}, "sport": {"description": "The sport ID.", "type": "int", "default": 1}, "competitors": {"description": "The competitor ID, if applicable. Defaults to None.", "type": "int, optional", "default": ""}}}
{"name": "trending_charts", "description": "Fetches the trending videos chart for a specified region on YouTube.", "parameters": {"part": {"description": "The part parameter specifies a comma-separated list of one or more video resource properties that the API response will include.", "type": "str", "default": "id,snippet"}, "regioncode": {"description": "ISO 3166-2 country code of the region (e.g., 'US' for United States, 'UK' for United Kingdom, 'CA' for Canada, 'IN' for India).", "type": "str", "default": "US"}, "chart": {"description": "The chart parameter specifies the chart to retrieve (e.g., 'mostPopular').", "type": "str", "default": "mostPopular"}, "x_cachebypass": {"description": "The cache bypass value; must be '1' to bypass cache. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "eomonth", "description": "Computes and returns the date of the last day of a given month based on a specified start date and the number of months to adjust.", "parameters": {"months": {"description": "The number of months before or after the start date. A positive value results in a future date, while a negative value results in a past date.", "type": "int", "default": 1}, "start_date": {"description": "The start date in ISO 8601 format (YYYY-MM-DD), with or without time information.", "type": "str", "default": "2021-09-21"}}}
{"name": "address_postal_code", "description": "Fetch address information based on the given postal code and additional parameters.", "parameters": {"postal_code": {"description": "Postal code string (minimum: 3 digits, maximum: 7 digits).", "type": "str", "default": "1510053"}, "datum": {"description": "Geodetic system of latitude and longitude (default: 'wgs84'). Possible values are 'wgs84' for World Geodetic System and 'tokyo' for Old Japan Geodetic System.", "type": "str, optional", "default": "wgs84"}, "offset": {"description": "Skips a given number of first data (minimum value: 0, maximum value: 2000, default: 0).", "type": "int, optional", "default": "0"}, "coord_unit": {"description": "The unit of latitude and longitude in the output data. Possible values are 'degree' for decimal system of degrees (default) and 'millisec' for milliseconds.", "type": "str, optional", "default": "degree"}, "limit": {"description": "Limits the number of response data (minimum value: 1, maximum value: 100, default: 10).", "type": "int, optional", "default": "10"}}}
{"name": "macronutrient_distribution", "description": "Calculates the optimal distribution of macronutrients (carbohydrates, proteins, and fats) based on dietary preferences, body composition goals, and activity level.", "parameters": {"dietary_preferences": {"description": "Represents the individual's dietary choices or restrictions, such as 'vegetarian', 'vegan', 'pescatarian', or 'gluten-free'.", "type": "str", "default": "vegan"}, "body_composition_goal": {"description": "The body composition goal, which can be 'weight_loss', 'maintenance', or 'muscle_gain'.", "type": "str", "default": "maintenance"}, "activity_level": {"description": "The activity level of the individual, which can be 'sedentary', 'moderately_active', or 'very_active'.", "type": "str", "default": "sedentary"}}}
{"name": "bsa", "description": "Calculates the Body Surface Area (BSA) based on weight and height using an external API.", "parameters": {"weightinkilograms": {"description": "The weight of the individual in kilograms.", "type": "int", "default": ""}, "heightincentrimetres": {"description": "The height of the individual in centimeters.", "type": "int", "default": ""}}}
{"name": "team_schedule", "description": "Fetches the schedule of fixtures for a given soccer team across all tournaments it participates in.", "parameters": {"teamid": {"description": "The unique identifier of the soccer team.", "type": "int", "default": "803"}}}
{"name": "athlete_trophy_stats", "description": "Retrieve the trophy statistics for a specified athlete in a specified competition.", "parameters": {"athleteid": {"description": "The unique identifier of the athlete.", "type": "int", "default": 1911}, "competitionid": {"description": "The unique identifier of the competition.", "type": "int", "default": 5930}, "timezone": {"description": "The timezone to be used for displaying results.", "type": "str", "default": "America/Chicago"}, "langid": {"description": "The language id for the output.", "type": "int", "default": 1}}}
{"name": "mrna2aminoacid", "description": "Transforms an mRNA sequence into a sequence of Amino Acids using the RapidAPI service.", "parameters": {"mrna": {"description": "The mRNA sequence to be converted to an Amino Acid sequence.", "type": "str", "default": "AUGUUUCCGAUUGCAGGAUCUCGAUAA"}}}
{"name": "top_paid_mac_apps", "description": "Retrieves a list of the top paid Mac apps from the App Store.", "parameters": {"category": {"description": "Category of the apps to retrieve. Default is '6016'.", "type": "str", "default": "6016"}, "country": {"description": "Country code to filter the app results. Default is 'us'.", "type": "str", "default": "us"}, "lang": {"description": "Language code for the results. Default is 'en'.", "type": "str", "default": "en"}, "num": {"description": "Number of results to return. Default is 100. Maximum is 200.", "type": "int", "default": "100"}}}
{"name": "youtube_emb_link", "description": "Fetches YouTube embed link information using the given URL and RapidAPI key.", "parameters": {"url": {"description": "The URL of the YouTube video to fetch information for. Defaults to 'https://www.youtube.com/embed/OA9zy0BLm9g'.", "type": "str", "default": "https://www.youtube.com/embed/OA9zy0BLm9g"}}}
{"name": "retrieving_events", "description": "Retrieve a list of events for assets tracked by OpenSea using the OpenSea Data Query API.", "parameters": {"collection_slug": {"description": "The slug of the collection to filter events by.", "type": "str, optional", "default": ""}, "auction_type": {"description": "The type of auction to filter events by.", "type": "str, optional", "default": ""}, "asset_contract_address": {"description": "The contract address of the asset. Defaults to '0x4372f4d950d30c6f12c7228ade77d6cc019404c9'.", "type": "str, optional", "default": "0x4372f4d950d30c6f12c7228ade77d6cc019404c9"}, "token_id": {"description": "The token ID of the asset. Defaults to 309.", "type": "int, optional", "default": "309"}, "collection_editor": {"description": "The editor of the collection.", "type": "str, optional", "default": ""}, "occurred_after": {"description": "Unix timestamp to filter events that occurred after this time.", "type": "int, optional", "default": ""}, "cursor": {"description": "Cursor for pagination.", "type": "str, optional", "default": ""}, "account_address": {"description": "The account address to filter events by.", "type": "str, optional", "default": ""}, "occurred_before": {"description": "Unix timestamp to filter events that occurred before this time. Defaults to 1644800000.", "type": "int, optional", "default": "1644800000"}, "only_opensea": {"description": "Whether to restrict results to OpenSea only events.", "type": "bool, optional", "default": "false"}, "event_type": {"description": "The type of event to filter by (e.g., 'transfer', 'successful').", "type": "str, optional", "default": ""}}}
{"name": "feed_hot", "description": "Fetches hot feed data from the specified API.", "parameters": {"kapi_proxy": {"description": "Proxy for the kapi endpoint. Default is None.", "type": "str, optional", "default": ""}, "country": {"description": "Country code for the feed. Default is 'ma'.", "type": "str, optional", "default": "ma"}, "count": {"description": "Number of items to fetch. Default is '30'.", "type": "str, optional", "default": "30"}, "language": {"description": "Language code for the feed. Default is 'en'.", "type": "str, optional", "default": "en"}, "pcursor": {"description": "Cursor for pagination. Default is None.", "type": "str, optional", "default": ""}}}
{"name": "athlete_large_image", "description": "Fetches the large image for a specific athlete in the PNG format.", "parameters": {"athleteid": {"description": "The ID of the athlete whose large image is to be fetched.", "type": "int", "default": 64139}, "imageversion": {"description": "The version of the image to be fetched.", "type": "int", "default": 12}}}
{"name": "gera_comprovante_rfb", "description": "Generates a certificate from Receita Federal in PDF format.", "parameters": {"taxid": {"description": "The tax identification number to be used for generating the certificate.", "type": "str", "default": "37335118000180"}, "pages": {"description": "A comma-separated string specifying which pages to include in the certificate. Default is 'REGISTRATION,MEMBERS'.", "type": "str, optional", "default": "REGISTRATION,MEMBERS"}}}
{"name": "get_exchange_rate", "description": "Fetches the exchange rate between two currency codes using the RapidAPI service.", "parameters": {"to": {"description": "The target currency code for which you want to get the exchange rate.", "type": "str", "default": ""}, "is_from": {"description": "The base currency code from which you are converting.", "type": "str", "default": ""}}}
{"name": "website_url_qr_code", "description": "Generates a static QR code (standard or custom-designed) encoded with the specified URL and customization options using the Scanova QR Code API.", "parameters": {"error_correction": {"description": "Specifies error correction level. Default is 'H'.", "type": "str", "default": "H"}, "eye_pattern": {"description": "Specifies the eye pattern of the QR code. Default is 'RECT_RECT'.", "type": "str", "default": "RECT_RECT"}, "data_gradient_style": {"description": "Specifies the gradient style for the data modules. Default is 'None'.", "type": "str", "default": "None"}, "format": {"description": "Specifies the format of the QR code image. Default is 'png'.", "type": "str", "default": "png"}, "size": {"description": "Specifies the size of the QR code image. Default is 'm'.", "type": "str", "default": "m"}, "eye_color_outer": {"description": "Specifies the outer color of the eye modules. Default is '#000000'.", "type": "str", "default": "#000000"}, "data_gradient_end_color": {"description": "Specifies the end color of the gradient for data modules. Default is '#000000'.", "type": "str", "default": "#000000"}, "data_gradient_start_color": {"description": "Specifies the start color of the gradient for data modules. Default is '#000000'.", "type": "str", "default": "#000000"}, "eye_color_inner": {"description": "Specifies the inner color of the eye modules. Default is '#000000'.", "type": "str", "default": "#000000"}, "url": {"description": "The URL to be encoded in the QR code. Default is 'https://scanova.io'.", "type": "str", "default": "https://scanova.io"}, "data_pattern": {"description": "Specifies the data pattern of the QR code. Default is 'RECT'.", "type": "str", "default": "RECT"}, "background_color": {"description": "Specifies the background color of the QR code. Default is '#FFFFFF'.", "type": "str", "default": "#FFFFFF"}}}
{"name": "v1_aggregation", "description": "Aggregates news article counts based on specified search criteria and time intervals.", "parameters": {"q": {"description": "The search query string, which must be URL-encoded.", "type": "str", "default": "Apple"}, "country": {"description": "The country to narrow the search to, specified using ISO 3166-1 alpha-2 codes. This parameter is experimental and recommended to be used with the `lang` parameter.", "type": "str, optional", "default": ""}, "topic": {"description": "The topic to filter articles by. Accepted values include `news`, `sport`, `tech`, `world`, `finance`, `politics`, `business`, `economics`, `entertainment`, `beauty`, `travel`, `music`, `food`, `science`. This parameter is experimental.", "type": "str, optional", "default": ""}, "sources": {"description": "Comma-separated string of news sources to filter the search. Example: `nytimes.com,cnn.com`.", "type": "str, optional", "default": ""}, "agg_by": {"description": "Aggregation interval for the results. Accepts `day` (default) or `hour`.", "type": "str, optional", "default": "day"}, "to_rank": {"description": "Upper boundary of the rank of news websites to filter the search.", "type": "int, optional", "default": ""}, "media": {"description": "When set to `True`, includes `media` and `media_content` fields in the output which provide information about images associated with the articles.", "type": "str, optional", "default": "True"}, "lang": {"description": "The language to filter the search. Acceptable values include language codes like `en` for English, `es` for Spanish, etc.", "type": "str, optional", "default": ""}, "not_sources": {"description": "Comma-separated string of sources to exclude from the search. Example: `nytimes.com,cnn.com`.", "type": "str, optional", "default": ""}, "to": {"description": "The end date and time to search until, in UTC. Various date formats are accepted.", "type": "str, optional", "default": ""}, "ranked_only": {"description": "Limit the search to sources that are in the top 1 million online websites. Default is `True`.", "type": "str, optional", "default": ""}, "is_from": {"description": "The start date and time to search from, in UTC. Various date formats are accepted. The default is set to one week ago at midnight UTC.", "type": "str, optional", "default": ""}, "search_in": {"description": "Defines where to search the provided query (in `title`, `summary`, or both). Default is both.", "type": "str, optional", "default": ""}, "from_rank": {"description": "Lower boundary of the rank of news websites to filter the search. Lower rank indicates higher popularity.", "type": "int, optional", "default": ""}}}
{"name": "locationsuggestions_v2", "description": "Fetches location suggestions from the Zillow API based on the given location query.", "parameters": {"location": {"description": "The location query which can be a state, county, neighborhood, city, street name, or zip code.", "type": "str", "default": "Brownsville, TX"}}}
{"name": "get_block_hash_v2", "description": "Gets the block hash by its height for a given blockchain using the Toolbench API.", "parameters": {"blockheight": {"description": "The height or index of the block for which the hash is to be retrieved.", "type": "int", "default": 15}, "blockchain": {"description": "The name of the blockchain from which to retrieve the block hash.", "type": "str", "default": "bitcoin"}}}
{"name": "gender_from_name", "description": "Infers the gender of a person given their name using the RapidAPI service.", "parameters": {"name": {"description": "The name of the person whose gender is to be inferred.", "type": "str", "default": "Kate"}}}
{"name": "get_response", "description": "Generates an automatic custom response based on the type and brand of a business and a given review.", "parameters": {"business_type": {"description": "The type of the business (e.g., \"Restaurant\").", "type": "str", "default": "Restaurant"}, "business_brand": {"description": "The brand of the business (e.g., \"Fuzi\").", "type": "str", "default": "Fuzi"}, "avis": {"description": "The review text (e.g., \"Merci pour votre accueil, c'était parfait\").", "type": "str", "default": "C'était excellent"}}}
{"name": "cashflow", "description": "Fetches either annual or quarterly cash flow statements for a given stock symbol.", "parameters": {"symbol": {"description": "The stock symbol of the company (e.g., 'AAPL' for Apple Inc.).", "type": "str", "default": "TSLA"}, "period": {"description": "The reporting period for the cash flow statement. Typically 'annual' or 'quarterly'.", "type": "str", "default": "quarter"}}}
{"name": "cities_v2_get_information", "description": "Fetches information about a specific city using its identifier.", "parameters": {"is_id": {"description": "The ID of the city as returned by the `/v2/auto-complete` endpoint.", "type": "str", "default": "hW7vArorRd8cT9h6v"}, "x_units_temperature": {"description": "Unit for temperature. One of 'fahrenheit' or 'celsius'. Defaults to 'celsius'.", "type": "str, optional", "default": "celsius"}, "x_aqi_index": {"description": "AQI (Air Quality Index) standard. One of 'us' or 'cn'. Defaults to 'us'.", "type": "str, optional", "default": "us"}, "x_user_timezone": {"description": "User's timezone. Defaults to 'Asia/Singapore'.", "type": "str, optional", "default": "Asia/Singapore"}, "x_user_lang": {"description": "User's language. Defaults to 'en-US'.", "type": "str, optional", "default": "en-US"}, "x_units_pressure": {"description": "Unit for pressure. One of 'hg' or 'mbar'. Defaults to 'mbar'.", "type": "str, optional", "default": "mbar"}, "x_units_distance": {"description": "Unit for distance. One of 'miles' or 'kilometer'. Defaults to 'kilometer'.", "type": "str, optional", "default": "kilometer"}}}
{"name": "list_of_available_currencies", "description": "Retrieve the list of available currencies from the API, with optional filters for fixed-rate and active currencies.", "parameters": {"fixedrate": {"description": "Set to 'true' to return only currencies available on a fixed-rate flow. Defaults to 'true'.", "type": "str, optional", "default": "true"}, "active": {"description": "Set to 'true' to return only active currencies. Defaults to 'true'.", "type": "str, optional", "default": "true"}}}
{"name": "get_event_logs_filtered_by_topic", "description": "Fetch event logs filtered by topics for a given blockchain network and address.", "parameters": {"chainid": {"description": "The ID of the blockchain network from which to fetch logs.", "type": "int", "default": "1"}, "address": {"description": "The address to fetch logs from.", "type": "str", "default": ""}, "topics": {"description": "The topics to filter the logs by.", "type": "str", "default": ""}, "endblock": {"description": "The block number to stop fetching logs. Defaults to None.", "type": "int, optional", "default": ""}, "startblock": {"description": "The block number to start fetching logs. Defaults to None.", "type": "int, optional", "default": ""}}}
{"name": "equity_intraday", "description": "Retrieve intraday time series data (Date, Open, High, Low, Close, Volume) for a specific symbol based on given parameters.", "parameters": {"interval": {"description": "The time interval in minutes for the data points, such as `1` (1 min) or `5` (5 min).", "type": "int", "default": "1"}, "to": {"description": "The end date and time of the query in formats like **YYYY-mm-dd HH:MM** or **YYYY-mm-dd**.", "type": "str", "default": "2020-04-21 10:30"}, "is_from": {"description": "The start date and time of the query in formats like **YYYY-mm-dd HH:MM** or **YYYY-mm-dd**.", "type": "str", "default": "2020-04-21 10:00"}, "symbol": {"description": "The stock symbol for the queried asset, e.g., `AAPL` for Apple Inc or `MSFT` for Microsoft.", "type": "str", "default": "AAPL"}, "adjust": {"description": "Indicates if the price data should be adjusted. Defaults to None.", "type": "bool, optional", "default": "false"}}}
{"name": "search_in_area", "description": "Search for businesses in a specified geographic area defined by a central coordinate point and zoom level.", "parameters": {"lat": {"description": "Latitude of the center coordinate point of the search area.", "type": "str", "default": "37.359428"}, "zoom": {"description": "Zoom level on which to conduct the search.", "type": "str", "default": "13"}, "query": {"description": "Search query or keyword (e.g., 'Bars and pubs', 'Plumbers').", "type": "str", "default": "pizza"}, "lng": {"description": "Longitude of the center coordinate point of the search area.", "type": "str", "default": "-121.925337"}, "x_user_agent": {"description": "Device type for the search. Defaults to 'desktop'.", "type": "str, optional", "default": ""}, "region": {"description": "Query region code. Defaults to 'us'.", "type": "str, optional", "default": "us"}, "language": {"description": "Language code for the results. Defaults to 'en'.", "type": "str, optional", "default": "en"}, "subtypes": {"description": "Comma-separated list of specific business subtypes (e.g., 'Plumber,Carpenter,Electrician').", "type": "str, optional", "default": ""}, "fields": {"description": "Comma-separated list of business fields to include in the response.", "type": "str, optional", "default": ""}, "limit": {"description": "Maximum number of businesses to return (1-500). Defaults to '20'.", "type": "str, optional", "default": "20"}}}
{"name": "getstatsbyday", "description": "Fetches Trinidad & Tobago COVID-19 statistics for a specific day using the given year, month, and day identifiers.", "parameters": {"yearid": {"description": "The year identifier in \"YYYY\" format.", "type": "str", "default": "2022"}, "monthid": {"description": "The month identifier in \"MM\" format (e.g., \"01\" for January).", "type": "str", "default": "01"}, "dayid": {"description": "The day identifier in \"DD\" format (e.g., \"01\" for the 1st day of the month).", "type": "str", "default": "15"}}}
{"name": "get_1_3_list_non_working_days", "description": "Fetch the non-working days (weekend days, public holidays, and custom dates) between two specified dates for a given country.", "parameters": {"start_date": {"description": "The start date in the format 'YYYY-MM-DD'.", "type": "str", "default": "2013-01-01"}, "end_date": {"description": "The end date in the format 'YYYY-MM-DD'.", "type": "str", "default": "2013-12-31"}, "country_code": {"description": "The ISO country code (2 letters). See available countries & configurations.", "type": "str", "default": "US"}, "configuration": {"description": "The name of the preset configuration to be used. Defaults to 'Federal holidays'.", "type": "str, optional", "default": "Federal holidays"}, "profile_id": {"description": "Custom profile ID for the request. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "get_all_motivational_quotes", "description": "Fetch all motivational quotes with optional pagination support.", "parameters": {"skip": {"description": "The number of items to skip before starting to collect the result set.", "type": "int, optional", "default": ""}, "limit": {"description": "The number of quotes to return.", "type": "int, optional", "default": ""}}}
{"name": "get_user_id", "description": "Fetches the user ID for a given Twitch channel using the Twitch API.", "parameters": {"channel": {"description": "The Twitch channel name for which to fetch the user ID.", "type": "str", "default": "xqc"}}}
{"name": "estimate_ownership_cost", "description": "Estimates the ownership cost for a vehicle over the next 5 years based on the vehicle's VIN, annual mileage, and starting mileage.", "parameters": {"vin": {"description": "The Vehicle Identification Number of the car to estimate ownership cost for.", "type": "str", "default": "5N3AA08D68N901917"}, "mileage_year": {"description": "The estimated number of miles driven per year for the next 5 years. Defaults to 15,000.", "type": "int, optional", "default": "15000"}, "mileage_start": {"description": "The starting mileage of the car. Defaults to 50,000 if unspecified.", "type": "int, optional", "default": "50000"}}}
{"name": "verse_range_api", "description": "Fetches a specific passage range from the Bible in a given translation using the RapidAPI.", "parameters": {"translation": {"description": "The translation/version of the Bible (e.g., 'NIV', 'KJV').", "type": "str", "default": "KJV"}, "verse_end": {"description": "The ending verse number of the passage.", "type": "str", "default": "3"}, "chapter": {"description": "The chapter number of the passage.", "type": "str", "default": "1"}, "verse_start": {"description": "The starting verse number of the passage.", "type": "str", "default": "1"}, "book": {"description": "The book of the Bible from which the passage is fetched (e.g., 'Genesis', 'John').", "type": "str", "default": "Joh"}}}
{"name": "check_usernames_on_all_platforms", "description": "Checks if the given username is available on various platforms using the Toolbench RapidAPI.", "parameters": {"username": {"description": "The username to be checked for availability.", "type": "str", "default": "username"}}}
{"name": "detik_search", "description": "Search for news articles on detik.com using specified parameters.", "parameters": {"page": {"description": "The page number of the results to retrieve.", "type": "int", "default": "1"}, "limit": {"description": "The number of results to return per page.", "type": "int", "default": "10"}, "keyword": {"description": "The keyword to search for in news articles.", "type": "str", "default": "detik"}}}
{"name": "person", "description": "Retrieve details about a specific person (e.g., actor, director) using their unique ID.", "parameters": {"is_id": {"description": "The unique identifier for the person whose details are being fetched.", "type": "int", "default": "7110004"}}}
{"name": "estimate", "description": "Estimates the video view performance of a YouTube channel using the given channel type and channel name.", "parameters": {"channeltype": {"description": "The type of the channel (e.g., 'youtube').", "type": "str", "default": "youtube"}, "channelname": {"description": "The username of the channel to look up for the performance estimation.", "type": "str", "default": "@chrispirillo"}}}
{"name": "get_all", "description": "Retrieves a list of anime based on the specified search, sort, type, and genre criteria from the given API.", "parameters": {"page": {"description": "The page number to retrieve.", "type": "str", "default": "1"}, "size": {"description": "The number of items per page.", "type": "str", "default": "10"}, "types": {"description": "Comma-separated list of anime types.", "type": "str, optional", "default": ""}, "genres": {"description": "Comma-separated list of genres. Defaults to 'Fantasy,Drama'.", "type": "str, optional", "default": "Fantasy,Drama"}, "sortby": {"description": "The parameter to sort by, either 'ranking' or 'title'. Defaults to 'ranking'.", "type": "str, optional", "default": "ranking"}, "sortorder": {"description": "The sort order, either 'asc' or 'desc'. Defaults to 'asc'.", "type": "str, optional", "default": "asc"}, "search": {"description": "The title or alternate title to search for. Search will ignore sorting. Defaults to 'Fullmetal'.", "type": "str, optional", "default": "Fullmetal"}}}
{"name": "web_page_lookup", "description": "Fetches metadata about a web page, including Genius's ID for the page, which can be used to look up associated referents.", "parameters": {"raw_annotatable_url": {"description": "The full URL of the web page (including protocol).", "type": "str", "default": "https://www.youtube.com/"}, "og_url": {"description": "The URL specified by an og:url <meta> tag in the page's <head>.", "type": "str, optional", "default": ""}, "canonical_url": {"description": "The URL specified by a canonical <link> tag in the page's <head>.", "type": "str, optional", "default": ""}, "text_format": {"description": "Format for text bodies related to the document. One or more of `dom`, `plain`, `markdown`, and `html`, separated by commas (defaults to html).", "type": "str, optional", "default": ""}}}
{"name": "getmanufacturervalues", "description": "Returns a set of all manufacturer names filtered by the specified query parameters.", "parameters": {"format": {"description": "Specifies the output type. Allowed values are 'CSV', 'HTML', 'XML', 'JSON'.", "type": "str, optional", "default": ""}, "collection": {"description": "A label used to name a set of images collected for a specific trial or other reason. Assigned during the data curation process.", "type": "str, optional", "default": ""}, "bodypartexamined": {"description": "Standard DICOM definition (0018x0015) specifying the body part that was examined.", "type": "str, optional", "default": ""}, "modality": {"description": "Standard DICOM definition (0008x0060) specifying the imaging modality.", "type": "str, optional", "default": ""}}}
{"name": "v1_sources", "description": "Fetches a list of supported news websites based on specified language, topic, and country.", "parameters": {"lang": {"description": "Specifies the language of the search. Supported values are:", "type": "str, optional", "default": "en"}, "topic": {"description": "Specifies the topic to filter the articles. Supported values are:", "type": "str, optional", "default": ""}, "country": {"description": "Specifies the country to filter the articles. Accepts ISO 3166-1 alpha-2 country codes.", "type": "str, optional", "default": ""}}}
{"name": "get_distance_in_km", "description": "Calculates the great-circle distance between two geographic coordinates in kilometers.", "parameters": {"latb": {"description": "Latitude of the first coordinate.", "type": "int", "default": "34.0522"}, "longb": {"description": "Longitude of the first coordinate.", "type": "int", "default": "118.2437"}, "longa": {"description": "Longitude of the second coordinate.", "type": "int", "default": "86.8104"}, "lata": {"description": "Latitude of the second coordinate.", "type": "int", "default": "33.5186"}}}
{"name": "latest_price", "description": "Fetches the latest price for the given item ID and timestep from the OSRS Live Prices API.", "parameters": {"timestep": {"description": "The timestep for which to retrieve the latest price.", "type": "str", "default": "5m"}, "itemid": {"description": "The ID of the item for which to fetch the latest price.", "type": "int", "default": "314"}}}
{"name": "south_africa_songs", "description": "Fetch the South Africa Songs chart information for a specific date range.", "parameters": {"date": {"description": "The date in the format 'YYYY-MM-DD' for which to retrieve the chart information.", "type": "str", "default": "2022-05-07"}, "range": {"description": "The range of the chart positions to be retrieved.", "type": "str", "default": "1-10"}}}
{"name": "download_airports", "description": "Downloads a list of airports with IATA codes for flight search from the Priceline API.", "parameters": {"resume_key": {"description": "An optional key to resume results from a given ID. Defaults to None.", "type": "str, optional", "default": ""}, "limit": {"description": "Limits the number of results from the response. Defaults to 500.", "type": "int, optional", "default": 500}}}
{"name": "get_zip_info", "description": "Retrieve information about a given ZIP code using the Toolbench API.", "parameters": {"zipcode": {"description": "The ZIP code for which the information is to be retrieved.", "type": "str", "default": "30043"}}}
{"name": "get_addresses_by_postcode", "description": "Fetch a list of addresses or streets by specifying the postcodes.", "parameters": {"cp4": {"description": "The first part of the postcode.", "type": "str", "default": "3750"}, "cp3": {"description": "The second part of the postcode.", "type": "str", "default": "016"}}}
{"name": "rent_zestimate_and_comparable_properties", "description": "Returns a property's rent zestimate and its comparable properties in the same area.", "parameters": {"address": {"description": "The address of the property for which the rent zestimate is being requested.", "type": "str", "default": "1545 Yale St, Santa Monica, CA 90404"}, "bedrooms": {"description": "Filter for number of bedrooms. Multiple values can be separated by commas (e.g., '0,1,2,3,4plus').", "type": "str, optional", "default": ""}, "pets": {"description": "Filter for pets. Possible values are 'any', 'dogs', 'cats'. Multiple values can be separated by commas.", "type": "str, optional", "default": ""}, "amenities": {"description": "Filter for amenities such as 'cooling', 'heating', 'parking'. Multiple values can be separated by commas.", "type": "str, optional", "default": ""}, "laundry": {"description": "Filter for laundry type. Possible values are 'any', 'inUnit', 'shared'. Multiple values can be separated by commas.", "type": "str, optional", "default": ""}, "propertytypes": {"description": "Filter for property types such as 'apartment', 'house', 'townhouse', 'condo'. Multiple values can be separated by commas.", "type": "str, optional", "default": ""}, "activetypes": {"description": "Filter for active rental types. Possible values are 'any', 'active', 'inactive'.", "type": "str, optional", "default": ""}, "deactivateddays": {"description": "Filter for inactive rentals within a specific number of days such as '30', '15', '7'.", "type": "str, optional", "default": ""}, "activateddays": {"description": "Filter for inactive rentals within a specific number of days such as '30', '15', '7'.", "type": "str, optional", "default": ""}, "distanceinmiles": {"description": "Filter for distance in miles. Possible values are 'any', '1', '2', '3', '4', '5'.", "type": "str, optional", "default": ""}}}
{"name": "equity_daily", "description": "Fetch end-of-day (daily) time series data for a specified asset within a given date range.", "parameters": {"is_from": {"description": "The query start date in the format 'YYYY-mm-dd', e.g. '2018-04-01'.", "type": "str", "default": "2018-04-01"}, "to": {"description": "The query end date in the format 'YYYY-mm-dd', e.g. '2020-04-21'.", "type": "str", "default": "2020-04-21"}, "symbol": {"description": "The symbol of the asset to look for, e.g. 'AAPL' for Apple Inc, 'MSFT' for Microsoft.", "type": "str", "default": "AAPL"}, "adjust": {"description": "Indicates whether prices should be adjusted. Defaults to None.", "type": "bool, optional", "default": "false"}}}
{"name": "getaccount", "description": "Retrieves a list of accounts from the specified projects using the provided API key.", "parameters": {"keyapi": {"description": "The API key required for authorization to access the list of accounts.", "type": "str", "default": "KJaASDASD"}}}
{"name": "success_quote", "description": "Fetches a success quote from the RapidAPI Olato Quotes service.", "parameters": {"quotes": {"description": "A specific quote to search for. Defaults to 'random quotes'.", "type": "str", "default": "random quotes"}}}
{"name": "dna2aminoacid", "description": "Transforms a DNA sequence into a sequence of Amino Acids using the RapidAPI dna2protein service.", "parameters": {"dna": {"description": "The DNA sequence to be transformed into Amino Acids.", "type": "str", "default": "TACAAAGGCTAACGTCCTAGAGCTATT"}}}
{"name": "getmaptilewithfrenchlabels", "description": "Fetches a raster map tile with French labels from the RapidAPI Map Tiles service.", "parameters": {"x": {"description": "The x-coordinate of the map tile.", "type": "int", "default": "8"}, "y": {"description": "The y-coordinate of the map tile.", "type": "int", "default": "5"}, "z": {"description": "The zoom level of the map tile, ranging from 0 to 19.", "type": "int", "default": "4"}}}
{"name": "current_snow_conditions", "description": "Fetches the current snow conditions for a specified ski resort.", "parameters": {"resort": {"description": "The name of the ski resort to retrieve snow conditions for.", "type": "str", "default": "Jackson Hole"}, "units": {"description": "The unit system to use for the conditions. Accepted values are 'i' (imperial) and 'm' (metric). Defaults to 'i'.", "type": "str, optional", "default": "i"}}}
{"name": "stock_v2_key_stats_get_operating_efficiency", "description": "Fetch operating efficiency key stats from the provided performance ID using the Morningstar API.", "parameters": {"performanceid": {"description": "The value of the performanceId field obtained from the /auto-complete, /get-summary, or /get-movers endpoints.", "type": "str", "default": "0P0000OQN8"}}}
{"name": "hungary_songs", "description": "Fetches the Hungary Songs chart information from the Billboard API for the specified date and range.", "parameters": {"range": {"description": "The range of the songs chart to fetch.", "type": "str", "default": "1-10"}, "date": {"description": "The date for which to retrieve the songs chart, in the format YYYY-MM-DD.", "type": "str", "default": "2022-05-07"}}}
{"name": "minecraft", "description": "Check if a given Minecraft username is available using the Toolbench RapidAPI service.", "parameters": {"username": {"description": "The Minecraft username to be checked for availability.", "type": "str", "default": "username"}}}
{"name": "get_last_5_economic_calendar_news", "description": "Fetches the last 5 economic calendar news items, both actual and processed information.", "parameters": {"content_type": {"description": "Type of content to be specified in the request header.", "type": "str", "default": "application/json"}}}
{"name": "titles_id_aka", "description": "Fetches alternative titles for an IMDb title using its ID.", "parameters": {"is_id": {"description": "IMDb ID of the title (e.g., 'tt0000002').", "type": "str", "default": ""}}}
{"name": "get_favorite_video_by_id", "description": "Retrieve favorite videos by mix ID from the TikTok API.", "parameters": {"mixid": {"description": "The ID of the mix for which to retrieve favorite videos.", "type": "int", "default": "7200829644763941674"}, "cursor": {"description": "The cursor for pagination to get the next page of results. Defaults to 0.", "type": "int, optional", "default": "0"}, "count": {"description": "The number of videos to retrieve, with a maximum of 30. Defaults to 30.", "type": "int, optional", "default": "30"}}}
{"name": "comunicado_2", "description": "Fetches the second communication for a student from the colegio Santa Ana using RapidAPI.", "parameters": {"authorization": {"description": "The authorization token required to access the API.", "type": "str", "default": "1234567890"}}}
{"name": "hot_products", "description": "Fetch hot products from AliExpress based on a search term and optional maximum price.", "parameters": {"search_value": {"description": "The search term used to find hot products on AliExpress.", "type": "str", "default": "xiaomi"}, "max_price": {"description": "The maximum price for the product searches. Defaults to 10000.", "type": "int, optional", "default": 10000}}}
{"name": "rate_word", "description": "Rates the funniness of a given word using the HumorAPI.", "parameters": {"word": {"description": "The word to be rated.", "type": "str", "default": "cookie"}}}
{"name": "classification", "description": "Gets the Köppen climate classification code for the given longitude and latitude coordinates.", "parameters": {"lon": {"description": "The longitude coordinate.", "type": "str", "default": "-60.069"}, "lat": {"description": "The latitude coordinate.", "type": "str", "default": "-3.198"}}}
{"name": "country_region_details", "description": "Retrieve the details of a specific country region, including the number of cities.", "parameters": {"regioncode": {"description": "An ISO-3166 or FIPS region code identifying the region.", "type": "str", "default": "CA"}, "countryid": {"description": "An ISO-3166 country code or WikiData ID identifying the country.", "type": "str", "default": "US"}, "asciimode": {"description": "If set to True, display results using ASCII characters. Defaults to None.", "type": "bool, optional", "default": ""}, "languagecode": {"description": "The code of the language in which to display results. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "zones_type_zoneid", "description": "Fetches metadata for a specific zone using the National Weather Service API.", "parameters": {"type": {"description": "A valid zone type (e.g., forecast zone).", "type": "str", "default": ""}, "zoneid": {"description": "The ID of the specific zone.", "type": "str", "default": ""}}}
{"name": "echo_get", "description": "Make a HTTP GET request to the echo API with specified content type and code.", "parameters": {"content_type": {"description": "The content type to include in the request.", "type": "str", "default": "application/json"}, "code": {"description": "The response code you would like to get in the response. Defaults to '201'.", "type": "str, optional", "default": "201"}}}
{"name": "get_user_followings", "description": "Fetches the followings of a user from the Twitter API.", "parameters": {"count": {"description": "The number of followings to fetch.", "type": "str", "default": "20"}, "user": {"description": "The Twitter user identifier.", "type": "str", "default": "2455740283"}, "cursor": {"description": "The pagination cursor for fetching more data. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "gettraining", "description": "Fetches the training status based on the given training UUID and API keys.", "parameters": {"x_api_key": {"description": "API key for the Dream Diffusion service.", "type": "str", "default": "3f9a50f3-db4c-4b52-9b15-709fcaddb6a7"}, "training_uuid": {"description": "Unique identifier of the training whose status is being queried.", "type": "str", "default": "95a0cdaa-0b16-45f7-9da6-ce4f43835d0d"}}}
{"name": "get_cast_by_id", "description": "Retrieves the full cast list for a given movie, including images and roles, using the Cinema API.", "parameters": {"is_id": {"description": "The movie ID for which to retrieve the cast information.", "type": "str", "default": "tt0120338"}}}
{"name": "post_comments", "description": "Retrieves comments of a specified Instagram post using the given media ID.", "parameters": {"mediaid": {"description": "The ID of the Instagram media for which to retrieve comments.", "type": "int", "default": "2872132510161250751"}, "min_id": {"description": "The minimum ID of comments to retrieve, useful for pagination. Defaults to '{}'.", "type": "str, optional", "default": "{}"}, "max_id": {"description": "The maximum ID of comments to retrieve, useful for pagination. Defaults to '{}'.", "type": "str, optional", "default": "{}"}}}
{"name": "ip_to_location", "description": "Retrieves location details based on the provided IP address using the RapidAPI service.", "parameters": {"ip": {"description": "The IP address for which to get location details. Defaults to '179.27.93.248'.", "type": "str, optional", "default": "179.27.93.248"}}}
{"name": "custom", "description": "Fetches custom data from the seeding-data API based on provided parameters.", "parameters": {"vatid": {"description": "The VAT ID to include in the query.", "type": "str", "default": "vat"}, "quantity": {"description": "The number of rows to fetch.", "type": "int", "default": 100}, "birthday": {"description": "The birthday to include in the query.", "type": "str", "default": "date"}, "is_from": {"description": "The country of origin.", "type": "str", "default": "country"}, "name": {"description": "The first name to include in the query.", "type": "str", "default": "firstName"}, "surname": {"description": "The last name to include in the query.", "type": "str", "default": "lastName"}}}
{"name": "find_by_udprn", "description": "Fetches the address information for a given UDPRN (Unique Delivery Point Reference Number) using the 'Find By UDPRN' API.", "parameters": {"udprn": {"description": "The Unique Delivery Point Reference Number for which the address information is to be fetched.", "type": "str", "default": "18911184"}}}
{"name": "get_weather", "description": "Fetch weather information including current, hourly, and daily data for a specific location.", "parameters": {"version": {"description": "The version of the API to be used.", "type": "str", "default": "v1"}, "lng": {"description": "Geographical coordinate of the location (longitude).", "type": "int", "default": "-73.999257"}, "lat": {"description": "Geographical coordinate of the location (latitude).", "type": "int", "default": "40.723558"}, "unit": {"description": "Unit of temperature ('F' for Fahrenheit, 'C' for Celsius, or default 'K' for Kelvin). Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "stock_get_financial_data", "description": "Fetches financial data for a given stock symbol from the Yahoo Finance API.", "parameters": {"symbol": {"description": "Ticker symbol for the stock (e.g., \"AAPL\" for Apple Inc.).", "type": "str", "default": "AAPL"}, "region": {"description": "Region code where the stock is listed. Defaults to 'US'. Allowed values are 'US', 'BR', 'AU', 'CA', 'FR', 'DE', 'HK', 'IN', 'IT', 'ES', 'GB', 'S'.", "type": "str, optional", "default": "US"}}}
{"name": "mass_from_to_number", "description": "Converts a mass value from one unit to another using the RapidAPI unit conversion service.", "parameters": {"number": {"description": "The numerical value of the mass to be converted.", "type": "int", "default": "100"}, "is_from": {"description": "The unit of mass to convert from (e.g., 'kg', 'lb').", "type": "str", "default": "gram"}, "to": {"description": "The unit of mass to convert to (e.g., 'kg', 'lb').", "type": "str", "default": "pound"}}}
{"name": "financial_cash_statement", "description": "Fetches financial cash statement data for the given ticker symbol over the past 10 years.", "parameters": {"symbol": {"description": "The ticker symbol to retrieve financial statements for.", "type": "str", "default": "AMZN"}, "formstyle": {"description": "The format in which to return the data. Default is 'dataframe'.", "type": "str, optional", "default": "dataframe"}, "freq": {"description": "The frequency of the data. Use 'A' for annual or 'Q' for quarterly. Default is 'Q'.", "type": "str, optional", "default": "Q"}}}
{"name": "currency_exchange_rate", "description": "Fetches exchange rates between two currencies or cryptocurrencies.", "parameters": {"from_symbol": {"description": "A 3-letter currency code (ISO 4217) representing the currency to convert from (e.g., 'USD').", "type": "str", "default": "USD"}, "to_symbol": {"description": "A 3-letter currency code (ISO 4217) representing the currency to convert to (e.g., 'EUR').", "type": "str", "default": "EUR"}, "language": {"description": "A 2-letter code (ISO 639-1) representing the language for the results. Default is 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "keyword_search", "description": "Retrieves search results for a given keyword from the Otto e-commerce site using the RapidAPI Axesso service.", "parameters": {"page": {"description": "The page number of the search results to retrieve.", "type": "int", "default": "1"}, "keyword": {"description": "The search term to look for in the Otto database.", "type": "str", "default": "Laptop"}, "sortby": {"description": "The sorting criteria for the search results (default is 'topseller').", "type": "str, optional", "default": "topseller"}}}
{"name": "web_search_api", "description": "Performs a web search using the Bing search engine API, and returns the search data and suggested keywords.", "parameters": {"size": {"description": "The number of search results to return. Defaults to '30'.", "type": "str, optional", "default": "30"}, "keyword": {"description": "The search query keyword. Defaults to 'how-to-use-excel-for-free'.", "type": "str, optional", "default": "how-to-use-excel-for-free"}, "page": {"description": "The page number of the search results to retrieve. Defaults to '0'.", "type": "str, optional", "default": "0"}}}
{"name": "texts", "description": "Fetches a specified quantity of texts from the API with given locale and character length.", "parameters": {"quantity": {"description": "The number of text entries to retrieve.", "type": "int", "default": 100}, "locale": {"description": "The locale code for the desired language of the texts.", "type": "str", "default": "it_IT"}, "characters": {"description": "The length of each text entry in characters.", "type": "int", "default": 250}}}
{"name": "suggested_videos", "description": "Fetches suggested videos related to a specified video from the YouTube API.", "parameters": {"type": {"description": "The type of the resource being searched for.", "type": "str", "default": "video"}, "part": {"description": "The part parameter specifies a comma-separated list of one or more search resource properties that the API response will include.", "type": "str", "default": "id,snippet"}, "relatedtovideoid": {"description": "The ID of the video for which the related videos are being fetched.", "type": "str", "default": "7ghhRHRP6t4"}, "maxresults": {"description": "The maximum number of results to retrieve. Defaults to 50.", "type": "int, optional", "default": "50"}}}
{"name": "one_call_api", "description": "Fetch weather data from the One Call API for given geographical coordinates.", "parameters": {"lon": {"description": "Longitude of the location.", "type": "int", "default": "94.04"}, "lat": {"description": "Latitude of the location.", "type": "int", "default": "33.44"}, "lang": {"description": "Language for the weather data. Default is None.", "type": "str, optional", "default": ""}, "units": {"description": "Units of measurement ('standard', 'metric', 'imperial'). Default is None; 'standard' units will be applied by default.", "type": "str, optional", "default": ""}, "exclude": {"description": "Parts of the weather data to exclude from the API response, specified as a comma-delimited list. Possible values include 'current', 'minutely', 'hourly', 'daily', 'alerts'. Default is None.", "type": "str, optional", "default": ""}}}
{"name": "places_near_place", "description": "Retrieve places near a specified place, with optional filtering criteria.", "parameters": {"placeid": {"description": "The ID of the place from which to find nearby places.", "type": "str", "default": ""}, "radius": {"description": "The radius within which to search for places.", "type": "int", "default": ""}, "asciimode": {"description": "Whether to display results using ASCII characters.", "type": "bool, optional", "default": ""}, "languagecode": {"description": "The language in which to display results.", "type": "str, optional", "default": ""}, "includedeleted": {"description": "Whether to include places marked as deleted. Options: 'ALL', 'SINCE_YESTERDAY', 'SINCE_LAST_WEEK', 'NONE'.", "type": "str, optional", "default": ""}, "minpopulation": {"description": "Minimum population of the places to be included in the results.", "type": "int, optional", "default": ""}, "distanceunit": {"description": "The unit of distance to use ('MI' for miles, 'KM' for kilometers).", "type": "str, optional", "default": ""}, "sort": {"description": "The sorting criteria for results. Format: ±SORT_FIELD, where SORT_FIELD could be 'countryCode', 'elevation', 'name', 'population'.", "type": "str, optional", "default": ""}, "hateoasmode": {"description": "Whether to include HATEOAS-style links in the results.", "type": "bool, optional", "default": ""}, "nameprefixdefaultlangresults": {"description": "When name-prefix matching, whether to match names in the default language if a non-default language is requested.", "type": "bool, optional", "default": ""}, "nameprefix": {"description": "Only include places whose names start with this prefix.", "type": "str, optional", "default": ""}, "types": {"description": "Filter places by these types (comma-separated values such as 'ADM2', 'CITY', 'ISLAND').", "type": "str, optional", "default": ""}, "countryids": {"description": "Only include places in these countries (comma-separated country codes or WikiData IDs).", "type": "str, optional", "default": ""}, "timezoneids": {"description": "Only include places in these time zones.", "type": "str, optional", "default": ""}, "excludedcountryids": {"description": "Exclude places in these countries (comma-separated country codes or WikiData IDs).", "type": "str, optional", "default": ""}, "offset": {"description": "The offset into the results set for pagination.", "type": "int, optional", "default": ""}, "maxpopulation": {"description": "Maximum population of the places to be included in the results.", "type": "int, optional", "default": ""}}}
{"name": "minutely", "description": "Fetches minute-by-minute precipitation forecast for the next 60 minutes, updated in real-time using AI nowcasting models.", "parameters": {"place_id": {"description": "Identifier of a place. Used to specify the location. If not provided, use `lat` and `lon`. Defaults to None.", "type": "str, optional", "default": ""}, "timezone": {"description": "Timezone for the date fields. If not specified, local timezone of the forecast location will be used. Formats like 'Europe/Prague' or 'UTC' can be used, or 'auto' to use local timezone. Defaults to 'auto'.", "type": "str, optional", "default": "auto"}, "lat": {"description": "Latitude of the location. Specify in formats like '12N', '12.3N', '12.3', or '-13.4'. Defaults to '37.81021'.", "type": "str, optional", "default": "37.81021"}, "language": {"description": "Language for text summaries. Available languages are 'en' (default), 'es', 'fr', 'de', 'pl', 'cs'. Defaults to 'en'.", "type": "str, optional", "default": "en"}, "units": {"description": "Unit system to be used. Values can be 'auto' (default), 'metric', 'us', 'uk', 'ca'. Defaults to 'auto'.", "type": "str, optional", "default": "auto"}, "lon": {"description": "Longitude of the location. Specify in formats like '12E', '12.3E', '12.3', or '-13.4'. Defaults to '-122.42282'.", "type": "str, optional", "default": "-122.42282"}}}
{"name": "get_stored_word_from_any_category", "description": "Retrieve a random phrase and associated taboo words from stored categories, optionally limiting the number of taboo words.", "parameters": {"forbiddenwordlimit": {"description": "The maximum number of taboo words to be returned. Defaults to 6, with a maximum of 10.", "type": "int, optional", "default": "6"}}}
{"name": "password_generation", "description": "Generates a set of 10 random passwords with the specified length using the Toolbench RapidAPI service.", "parameters": {"length": {"description": "The desired length of the passwords. Defaults to 10.", "type": "int, optional", "default": "10"}}}
{"name": "get_ohlc_history", "description": "Fetches the OHLC (Open, High, Low, Close) history data for a specified currency pair.", "parameters": {"symbol": {"description": "The currency pair symbol for which to retrieve OHLC history.", "type": "str", "default": "eur-usd"}}}
{"name": "is_sabbath_day", "description": "Determines if the given date string or today's date is a Sabbath day using the Enoch Calendar API.", "parameters": {"datestring": {"description": "The date string to check in the format 'YYYY-MM-DD'.", "type": "str", "default": "2021-03-23"}}}
{"name": "telegram_group_info", "description": "Retrieves real-time information about a public Telegram group such as title, photo, description, members, and online members.", "parameters": {"group": {"description": "The @username of the Telegram group for which information is being requested.", "type": "str", "default": ""}}}
{"name": "get_exercise_by_id", "description": "Fetches an exercise from the MuscleWiki API using the provided exercise ID.", "parameters": {"is_id": {"description": "The ID of the exercise to fetch.", "type": "str", "default": "20"}}}
{"name": "verify_pan_card", "description": "Verifies the details of a PAN Card using a government database through an API.", "parameters": {"x_rapid_api": {"description": "The X-RapidAPI host value required for the API query.", "type": "str", "default": "rapid-api-database"}, "pannumber": {"description": "The PAN Card number to be verified.", "type": "str", "default": "FNLPM8635N"}}}
{"name": "veiculo_tipo_id_marca_id_modelo_id_modelo_ano", "description": "Fetches vehicle information based on the provided type, brand, model, and year using the RapidAPI service.", "parameters": {"id_modelo_ano": {"description": "The year of the vehicle model.", "type": "str", "default": "1995-1"}, "veiculo_tipo": {"description": "The type of the vehicle (e.g., car, motorcycle, etc.).", "type": "str", "default": "carros"}, "id_marca": {"description": "The brand ID of the vehicle.", "type": "str", "default": "6"}, "id_modelo": {"description": "The model ID of the vehicle.", "type": "str", "default": "43"}}}
{"name": "api_exist", "description": "Checks if a TikTok user exists given a username.", "parameters": {"username": {"description": "The TikTok username to check for existence.", "type": "str", "default": "charlidamelio"}}}
{"name": "stock_v2_get_analysis_data", "description": "Fetch analysis data for a specific stock using Morningstar API.", "parameters": {"performanceid": {"description": "The performance ID of the stock, obtained from endpoints such as auto-complete, get-summary, or get-movers.", "type": "str", "default": "0P0000OQN8"}}}
{"name": "news", "description": "Fetch the latest and breaking news based on various optional filters such as language, country, category, and more.", "parameters": {"language": {"description": "A comma-separated string of languages (maximum 5) to restrict the search to. Possible options include 'en', 'ar', 'jp', 'in', 'es', 'fr'.", "type": "str, optional", "default": ""}, "country": {"description": "A comma-separated string of 2-letter ISO 3166-1 countries (maximum 5) to restrict the search to. Possible options include 'us', 'gb', 'in', 'jp', 'ae', 'sa', 'au', 'ca'.", "type": "str, optional", "default": ""}, "page": {"description": "Page number to page through results if total results are greater than the page size.", "type": "int, optional", "default": ""}, "category": {"description": "A comma-separated string of categories (maximum 5) to restrict the search to. Possible options include 'top', 'business', 'science', 'technology', 'sports', 'health', 'entertainment'.", "type": "str, optional", "default": ""}, "qintitle": {"description": "Keywords or phrases to search for specifically in the news title.", "type": "str, optional", "default": ""}, "q": {"description": "Keywords or phrases to search for in both the news title and content. Note that the 'qintitle' and 'q' parameters cannot be used together in the same query.", "type": "str, optional", "default": ""}, "domain": {"description": "A comma-separated string of domains (maximum 5) to restrict the search to. Use the /domains endpoint to find top source IDs.", "type": "str, optional", "default": ""}}}
{"name": "get_items_by_query", "description": "Fetch RPG item details based on provided query parameters such as rank, slot, rarity, name, and type from the RPG Items API.", "parameters": {"rank": {"description": "The rank of the item (default is '1').", "type": "str", "default": "1"}, "slot": {"description": "The inventory slot type of the item (default is 'chest').", "type": "str", "default": "chest"}, "rarity": {"description": "The rarity of the item (default is 'common').", "type": "str", "default": "common"}, "name": {"description": "The name of the item (default is 'Linen Cloth Robe').", "type": "str", "default": "Linen Cloth Robe"}, "type": {"description": "The type of the item (default is 'armor').", "type": "str", "default": "armor"}}}
{"name": "matches_v2_list_by_league", "description": "Fetches and returns a list of matches for a specific league and category from the LiveScore API.", "parameters": {"category": {"description": "The category of the sport. One of the following: 'soccer', 'cricket', 'basketball', 'tennis', 'hockey'.", "type": "str", "default": "soccer"}, "ccd": {"description": "The CCD value that is responded in .../leagues/v2/list or .../matches/v2/list-by-date endpoints.", "type": "str", "default": "champions-league"}, "scd": {"description": "The SCD value that is responded in .../leagues/v2/list or .../matches/v2/list-by-date endpoints. Default is 'group-b'.", "type": "str, optional", "default": "group-b"}, "timezone": {"description": "The timezone offset. One of the following: -11, -10, -9.5, -9, -8.5, -8, -7, -6, -5, -4.5, -4, -3.5, -3, -2.5, -2, -1, 0, 1, 2, 3, 3.5, 4, 4.5, 5, 5.5, 5.75, 6, 6.5, 6.75, 7, 7.5, 8, 8.5, 8.75, 9, 9.5, 9.75, 10, 10.5, 11, 11.5, 12, 12.5, 12.75, 13, 13.75, 14. Default is -7.", "type": "int, optional", "default": "-7"}}}
{"name": "v1_music_posts_music_id", "description": "Fetches posts associated with a specific music ID from the Tokapi API.", "parameters": {"music_id": {"description": "Unique identifier for the music whose posts are to be fetched.", "type": "str", "default": "6928004115846924290"}, "offset": {"description": "The starting point for the set of results to be fetched. Used for paginated responses. Defaults to 0.", "type": "int, optional", "default": 0}, "count": {"description": "The number of results to return in the response. Defaults to 20.", "type": "int, optional", "default": 20}}}
{"name": "listings_by_lat_lng", "description": "Retrieve Airbnb listings based on geographical coordinates, filtered by specified criteria.", "parameters": {"lat": {"description": "Latitude of the point from which to search for listings.", "type": "int", "default": "28.0852473"}, "lng": {"description": "Longitude of the point from which to search for listings.", "type": "int", "default": "-16.7349705"}, "offset": {"description": "The index to start the search from.", "type": "int", "default": "0"}, "range": {"description": "The range in meters from the latitude and longitude point to search within.", "type": "int", "default": "500"}, "bedrooms": {"description": "The number of bedrooms required in the listings. Defaults to 1.", "type": "int, optional", "default": "1"}, "maxguestcapacity": {"description": "The maximum guest capacity required in the listings. Defaults to 2.", "type": "int, optional", "default": "2"}}}
{"name": "search_result", "description": "Fetches location search results based on a search query and optional latitude and longitude parameters.", "parameters": {"q": {"description": "The search query string.", "type": "str", "default": "pizza"}, "latitude": {"description": "Latitude to refine the search query. Defaults to '24.562394'.", "type": "str, optional", "default": "24.562394"}, "longitude": {"description": "Longitude to refine the search query. Defaults to '73.7124675'.", "type": "str, optional", "default": "73.7124675"}}}
{"name": "alerts_active_area_area", "description": "Retrieves a list of active weather alerts for a specified area using the National Weather Service API. The data is returned in CAP-ATOM format.", "parameters": {"area": {"description": "A valid area for which to retrieve active alerts. Refer to the counts endpoint for a list of valid areas.", "type": "str", "default": ""}}}
{"name": "titles_series_seriesid", "description": "Fetches information about a TV series using its IMDb ID from the Movies Database API.", "parameters": {"seriesid": {"description": "The IMDb ID of the TV series.", "type": "str", "default": ""}}}
{"name": "getmodalityvalues", "description": "Fetches modality values from the TCIA API based on the specified parameters.", "parameters": {"collection": {"description": "A label used to name a set of images collected for a specific trial or other reason. Assigned during the process of curating the data.", "type": "str, optional", "default": ""}, "bodypartexamined": {"description": "Entered on a per collection basis using relevant SNOMED terms.", "type": "str, optional", "default": ""}, "modality": {"description": "DICOM definition for the imaging modality.", "type": "str, optional", "default": ""}, "format": {"description": "Specifies the output type. Allowed values are CSV, HTML, XML, JSON.", "type": "str, optional", "default": ""}}}
{"name": "getlivemenustreaming", "description": "Fetches live menu streaming data from the specified API.", "parameters": {"skinname": {"description": "The name of the skin to use for the request. Defaults to 'betbiga'.", "type": "str, optional", "default": "betbiga"}}}
{"name": "child_comments", "description": "python", "parameters": {"commentid": {"description": "The ID of the parent comment.", "type": "int", "default": "17927163800262715"}, "mediaid": {"description": "The ID of the media the comment belongs to.", "type": "int", "default": "2872132510161250751"}, "max_id": {"description": "The max_id parameter for pagination in the API request. Default is None.", "type": "str, optional", "default": ""}, "min_id": {"description": "The min_id parameter for pagination in the API request. Default is '{}'.", "type": "str, optional", "default": "{}"}}}
{"name": "recent_match_list", "description": "Fetches the list of the last 20 matches between two teams for a given match ID.", "parameters": {"matchid": {"description": "The unique identifier for the match.", "type": "int", "default": "1452254"}}}
{"name": "get_imbuements_for_precision_distance_skillboost", "description": "Fetches imbuement items for the Precision Distance Skillboost from the specified world in the Tibia game using a given RapidAPI key.", "parameters": {"world": {"description": "The name of the game world to query for imbuements.", "type": "str", "default": "Adra"}}}
{"name": "text_qr_code", "description": "Generates a static QR code with specified text and custom design options, returning the generated QR code data.", "parameters": {"data": {"description": "The text to be encoded in the QR code.", "type": "str", "default": "Word"}, "size": {"description": "The size of the QR code.", "type": "str", "default": "m"}, "data_gradient_end_color": {"description": "The end color for the data gradient. Defaults to '#000000'.", "type": "str, optional", "default": "#000000"}, "eye_pattern": {"description": "The pattern of the eye modules of the QR code. Defaults to 'RECT_RECT'.", "type": "str, optional", "default": "RECT_RECT"}, "data_pattern": {"description": "The pattern of the data modules of the QR code. Defaults to 'RECT'.", "type": "str, optional", "default": "RECT"}, "data_gradient_start_color": {"description": "The start color for the data gradient. Defaults to '#000000'.", "type": "str, optional", "default": "#000000"}, "error_correction": {"description": "The error correction level. Defaults to 'M'.", "type": "str, optional", "default": "M"}, "data_gradient_style": {"description": "The style of the data gradient. Defaults to 'None'.", "type": "str, optional", "default": "None"}, "eye_color_inner": {"description": "The inner color of the eye modules. Defaults to '#000000'.", "type": "str, optional", "default": "#000000"}, "eye_color_outer": {"description": "The outer color of the eye modules. Defaults to '#000000'.", "type": "str, optional", "default": "#000000"}, "background_color": {"description": "The background color of the QR code. Defaults to '#FFFFFF'.", "type": "str, optional", "default": "#FFFFFF"}}}
{"name": "angle_from_to_number", "description": "Converts an angle measurement from one unit to another using the Toolbench RapidAPI.", "parameters": {"number": {"description": "The angle measurement value to be converted.", "type": "int", "default": "10"}, "is_from": {"description": "The unit of the input angle measurement (e.g., 'degrees').", "type": "str", "default": "radian"}, "to": {"description": "The unit to convert the angle measurement to (e.g., 'radians').", "type": "str", "default": "turn"}}}
{"name": "get_detect", "description": "Detects and prevents XSS (Cross-Site Scripting) attacks in the input data by querying an external API.", "parameters": {"data": {"description": "The input data to be checked for XSS.", "type": "str", "default": "John Doe"}}}
{"name": "v1_verify", "description": "Validates an email address using the QuickEmailVerification API.", "parameters": {"email": {"description": "The email address to validate.", "type": "str", "default": "youremail@domain.com"}}}
{"name": "net_worth_history_sparklines", "description": "Fetch the net worth history sparklines for a given cryptocurrency address.", "parameters": {"address": {"description": "The cryptocurrency address for which the net worth history is to be fetched.", "type": "str", "default": "0x60618d7f1966310d90177640880edaed41e15f2d"}}}
{"name": "blake2b_text_hash_with_key", "description": "Hashes the given text using the BLAKE2b algorithm with a provided key via the Toolbench RapidAPI service.", "parameters": {"datastring": {"description": "The text to be hashed.", "type": "str", "default": "enter-your-string-here"}, "keystring": {"description": "The key to be used for hashing the text.", "type": "str", "default": "enter-your-key-here"}}}
{"name": "streams_user", "description": "Fetches and returns the most recent messages for a specified user from the StockTwits API.", "parameters": {"is_id": {"description": "User ID or username of the stream's user you want to show.", "type": "str", "default": "zerobeta"}, "since": {"description": "Returns results with an ID greater than (more recent than) the specified ID.", "type": "int, optional", "default": ""}, "max": {"description": "Returns results with an ID less than (older than) or equal to the specified ID.", "type": "int, optional", "default": ""}, "limit": {"description": "The number of messages to return. This limit must be a number under 30. Default and max limit is 30.", "type": "int, optional", "default": ""}, "callback": {"description": "Define your own callback function name, add this parameter as the value.", "type": "str, optional", "default": ""}, "filter": {"description": "Filter messages by links, charts, or videos.", "type": "str, optional", "default": ""}}}
{"name": "get_all_characters", "description": "Fetches and returns a list of characters from the Riordanverse API with optional query parameters for limiting the results, skipping a number of characters, or searching for characters containing a specific substring.", "parameters": {"limit": {"description": "The maximum number of characters to return. Defaults to None.", "type": "int, optional", "default": ""}, "search": {"description": "A substring to search within character names. Defaults to None.", "type": "str, optional", "default": ""}, "skip": {"description": "The number of characters to skip from the start. Defaults to None.", "type": "int, optional", "default": ""}}}
{"name": "get_team_receiving_data", "description": "Fetches receiving data for NFL teams for a given side (offense or defense) and year.", "parameters": {"side": {"description": "Specifies whether to fetch data for offensive or defensive teams. Must be either \"offense\" or \"defense\".", "type": "str", "default": "offense"}, "year": {"description": "The year for which to fetch the data. Must be between 1920 and the current year.", "type": "int", "default": "2019"}}}
{"name": "retrieve_asset", "description": "Retrieve information about a specific NFT from the Blur API.", "parameters": {"contractaddress": {"description": "The contract address of the NFT.", "type": "str", "default": "0x60e4d786628fea6478f785a6d7e704777c86a7c6"}, "tokenid": {"description": "The token ID of the NFT.", "type": "str", "default": "541"}}}
{"name": "list_podcast_episodes", "description": "Gets a list of episodes for a given podcast show from the Spotify Scraper API.", "parameters": {"showid": {"description": "The unique identifier of the podcast show.", "type": "str", "default": "4oTBzqC3DHbaKNFq2YXpQw"}, "limit": {"description": "The maximum number of items returned per request. Defaults to `100`.", "type": "int, optional", "default": ""}, "offset": {"description": "The number of items to skip before starting to collect the result set. Defaults to `0`.", "type": "int, optional", "default": ""}}}
{"name": "user_contributions_transcriptions", "description": "Fetches user transcription contributions from the Genius Song Lyrics API.", "parameters": {"is_id": {"description": "The user ID whose contributions are to be fetched.", "type": "str", "default": "1"}, "next_cursor": {"description": "The pagination cursor for fetching the next set of results. Defaults to None.", "type": "str, optional", "default": ""}, "text_format": {"description": "The format for text bodies related to the document, can be one or more of `dom`, `plain`, `markdown`, and `html`, separated by commas. Defaults to 'html'.", "type": "str, optional", "default": ""}, "per_page": {"description": "The number of results to return per request. Defaults to 10.", "type": "int, optional", "default": "10"}, "sort": {"description": "The sorting method for the results, can be 'popularity' or 'chronologically'. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "format", "description": "Retrieve and return data in the specified format from the IP Geo Location and IP Reputation API.", "parameters": {"format": {"description": "The format to display data. Can be either \"json\" or \"xml\". Defaults to \"json\".", "type": "str", "default": "json"}}}
{"name": "inasistencias_1", "description": "Retrieves the attendance records for a specific student (ID: 1) from the Colegio Santa Ana API.", "parameters": {"authorization": {"description": "The authorization token required for accessing the API.", "type": "str", "default": "1234567890"}}}
{"name": "stock_v2_get_financials", "description": "Fetches financial data for a given stock based on performance ID, report type, and interval.", "parameters": {"performanceid": {"description": "Value of the performanceId field obtained from endpoints like /auto-complete, /get-summary, or /get-movers.", "type": "str", "default": "0P0000OQN8"}, "reporttype": {"description": "Type of report to retrieve. 'R' for Restated, 'A' for As originally reported. Defaults to 'A'.", "type": "str, optional", "default": "A"}, "interval": {"description": "Interval for the financial data. Choices are 'quarterly' or 'annual'. Defaults to 'annual'.", "type": "str, optional", "default": "annual"}}}
{"name": "transfers_list_records", "description": "Fetches transfer records and player information for a given competition, position group, or club.", "parameters": {"competitionid": {"description": "The ID of the competition. Should not be used together with `clubid`.", "type": "str", "default": "IT1"}, "positiongroup": {"description": "Filter for position group such as 'Abwehr', 'Mittelfeld', or 'Sturm'. Defaults to None.", "type": "str, optional", "default": ""}, "clubid": {"description": "The ID of the club. Should not be used together with `competitionid`. Defaults to None.", "type": "int, optional", "default": ""}, "offset": {"description": "The number of records to skip for pagination. Defaults to 0.", "type": "int, optional", "default": "0"}, "limit": {"description": "The maximum number of records to return per response. Defaults to 30.", "type": "int, optional", "default": "30"}, "positionid": {"description": "Filter for specific positions such as 1 for Goalkeeper, 2 for Sweeper, etc. Defaults to None.", "type": "int, optional", "default": ""}, "domain": {"description": "The domain of the API, such as 'com', 'de', 'be', 'es', 'it', 'nl', 'pl', 'pt', 'com.tr', or 'world'. Defaults to 'de'.", "type": "str, optional", "default": "de"}}}
{"name": "property_listings", "description": "Retrieve rental property listings from Airbnb and Vrbo based on various filter criteria.", "parameters": {"location": {"description": "The location for which to retrieve rental property listings.", "type": "str", "default": "santa monica"}, "room_types": {"description": "Comma-separated list of room types. Possible values are 'entire_home', 'private_room', and 'shared_room'. Defaults to None.", "type": "str, optional", "default": ""}, "number_of_months": {"description": "The number of months for the rental period. Defaults to None.", "type": "int, optional", "default": ""}, "bedrooms_max": {"description": "The maximum number of bedrooms in the rental properties. Defaults to None.", "type": "int, optional", "default": ""}, "accommodates_max": {"description": "The maximum number of people the property can accommodate. Defaults to None.", "type": "int, optional", "default": ""}, "start_month": {"description": "The starting month for the rental period. Defaults to None.", "type": "int, optional", "default": ""}, "bedrooms_min": {"description": "The minimum number of bedrooms in the rental properties. Defaults to None.", "type": "int, optional", "default": ""}, "show_regions": {"description": "Whether to show regions in the query results. Defaults to None.", "type": "bool, optional", "default": ""}, "accommodates_min": {"description": "The minimum number of people the property can accommodate. Defaults to None.", "type": "int, optional", "default": ""}, "currency": {"description": "The currency in which the prices should be displayed. Defaults to 'native'.", "type": "str, optional", "default": "native"}, "start_year": {"description": "The starting year for the rental period. Defaults to None.", "type": "int, optional", "default": ""}}}
{"name": "fetchaverification", "description": "Fetch a verification status for a specific customer from the ClearDil API.", "parameters": {"authorization": {"description": "Authorization token for API access.", "type": "str", "default": "Bearer {{accessTokenUser}}"}, "content_type": {"description": "The content type for the request header.", "type": "str", "default": "application/json"}, "verification_a_id": {"description": "The ID of the verification to be fetched.", "type": "str", "default": "verification_a_id"}, "customer_a_id": {"description": "The ID of the customer for whom the verification is being fetched.", "type": "str", "default": "customer_a_id"}}}
{"name": "get_zipcode_by_city", "description": "Retrieve the ZIP code for a given city using the Redfin Base API.", "parameters": {"city": {"description": "The name of the city for which to retrieve the ZIP code.", "type": "str", "default": "Holtsville"}}}
{"name": "get_chapter_details_by_id", "description": "Fetch details of a Bhagavad Gita chapter by its ID using the provided RapidAPI key.", "parameters": {"chapterid": {"description": "The ID of the Bhagavad Gita chapter to fetch details for.", "type": "str", "default": ""}}}
{"name": "pl_car_averages", "description": "Fetches and returns Polish car averages for a given vehicle's year, make, and model.", "parameters": {"year": {"description": "The year of the car.", "type": "str", "default": "2012"}, "make": {"description": "The make of the car.", "type": "str", "default": "bmw"}, "model": {"description": "The model of the car.", "type": "str", "default": "5 series"}}}
{"name": "search_devices", "description": "Searches for devices using the given query string on the RapidAPI's mobile phones database and returns the results.", "parameters": {"query": {"description": "The search query string to find matching devices.", "type": "str", "default": "iphone 14"}}}
{"name": "search_company_by_email", "description": "Searches for companies associated with a given email using the B2B Hint RapidAPI service.", "parameters": {"email": {"description": "The email address to search for associated companies.", "type": "str", "default": "rsing@tesla.com"}}}
{"name": "gettoken", "description": "Generates and retrieves a token for the given user ID using the specified RapidAPI key.", "parameters": {"userid": {"description": "The user ID for which the token is to be generated.", "type": "int", "default": ""}}}
{"name": "matches_v2_get_statistics", "description": "Fetches the statistics for a match based on the provided category and event ID (eid). ", "parameters": {"category": {"description": "The sport category of the match. Accepted values are 'soccer', 'cricket', 'basketball', 'tennis', or 'hockey'.", "type": "str", "default": "soccer"}, "eid": {"description": "The event ID of the match. This is typically obtained from match listing or competition detail endpoints.", "type": "int", "default": "702093"}}}
{"name": "navigations_get_root", "description": "Fetches the root categories related to a specified tab from the navigations endpoint.", "parameters": {"channeltype": {"description": "The value of the 'id' field returned in the /navigations/get-tabs endpoint.", "type": "int", "default": "2"}, "currency": {"description": "The 3-letter currency code. Defaults to 'USD'.", "type": "str, optional", "default": "USD"}, "country": {"description": "The 2-letter country code. Defaults to 'US'.", "type": "str, optional", "default": "US"}, "language": {"description": "The 2-letter language code. Defaults to 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "placebynameandstate", "description": "Retrieves the geographical boundaries of a place by its name and state in GeoJSON format.", "parameters": {"name": {"description": "The full name of the place. Example: \"Madison\".", "type": "str", "default": "Madison"}, "state": {"description": "The state abbreviation where the place is located. Example: \"AL\".", "type": "str", "default": "AL"}}}
{"name": "leaguerounds", "description": "Fetches the rounds for a specified handball tournament season using the Handball API.", "parameters": {"tournamentid": {"description": "The unique ID of the tournament for which the rounds are to be retrieved.", "type": "int", "default": 30}, "seasonid": {"description": "The season ID for which the rounds are to be retrieved.", "type": "int", "default": 42851}}}
{"name": "leaguetopplayersregularseason", "description": "Retrieves the top players for a specific league's regular season during a given season.", "parameters": {"tournamentid": {"description": "The ID of the tournament for which the top players in the regular season are to be retrieved.", "type": "int", "default": 9464}, "seasonid": {"description": "The ID of the season for which the top players in the regular season are to be retrieved.", "type": "int", "default": 36422}}}
{"name": "get_reference_numbers_of_a_specific_brand", "description": "Fetches the reference numbers for a specified brand using the WatchSignals API.", "parameters": {"is_id": {"description": "The identifier for the specific brand.", "type": "str", "default": "382"}}}
{"name": "filter_china_news_by_newspaper_company", "description": "Fetches news articles from a specified Chinese newspaper company using the RapidAPI service.", "parameters": {"newspaperid": {"description": "The ID of the newspaper company from which to fetch news articles.", "type": "str", "default": ""}}}
{"name": "leagueeventsbyroundandslug", "description": "Fetches match details for a specified round and slug in a handball unique tournament season.", "parameters": {"slug": {"description": "The round slug.", "type": "str", "default": "quarterfinal"}, "tournamentid": {"description": "The unique tournament ID for which to retrieve the league's events.", "type": "int", "default": 30}, "round": {"description": "The round number.", "type": "int", "default": 27}, "seasonid": {"description": "The season ID for which to retrieve the league's events.", "type": "int", "default": 42851}}}
{"name": "tournamentmetadata", "description": "Fetches metadata for a specific tournament using the provided unique tournament ID.", "parameters": {"uniquetournamentid": {"description": "The unique identifier for the tournament.", "type": "int", "default": "23"}}}
{"name": "au_decode", "description": "Decodes an Australian VIN (Vehicle Identification Number) using the RapidAPI VIN Decoder service.", "parameters": {"vin": {"description": "The Vehicle Identification Number to decode.", "type": "str", "default": "WVWZZZAUZGW001953"}}}
{"name": "generate_signature", "description": "Generates a signature for a given TikTok API URL using the specified RapidAPI key.", "parameters": {"url": {"description": "The TikTok API URL for which to generate the signature.", "type": "str", "default": "https://www.tiktok.com/node/share/user/@therock"}}}
{"name": "download_property_types", "description": "Downloads a list of property types from the Priceline API.", "parameters": {"limit": {"description": "Limits the number of results from the response. Defaults to 100.", "type": "int, optional", "default": 100}, "resume_key": {"description": "Resume results from the given ID. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "get_stream_mature_content_status", "description": "Fetches the mature content status of a Twitch stream for a given user.", "parameters": {"userid": {"description": "The Twitch username or ID of the user whose stream status is to be checked.", "type": "str", "default": "julie"}}}
{"name": "get_user_followers", "description": "Fetches the followers of a specified Twitter user using the RapidAPI Twitter API.", "parameters": {"user": {"description": "The ID of the Twitter user whose followers are to be fetched.", "type": "str", "default": "2455740283"}, "count": {"description": "The number of followers to retrieve.", "type": "str", "default": "20"}, "cursor": {"description": "The cursor for pagination. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "search_jobs", "description": "Search for remote jobs using various filters such as salary, company, job title, and location.", "parameters": {"salarymin": {"description": "Minimum salary to filter jobs by. Defaults to '100'.", "type": "str", "default": "100"}, "company": {"description": "Company name to filter jobs by. Defaults to 'SpaceX'.", "type": "str", "default": "SpaceX"}, "title": {"description": "Job title or role to filter jobs by. Defaults to 'PHP'.", "type": "str", "default": "PHP"}, "location": {"description": "Location to filter jobs by. Defaults to 'remote'.", "type": "str", "default": "remote"}, "page": {"description": "Page number for paginated results. Defaults to '1'.", "type": "str", "default": "1"}, "perpage": {"description": "Number of jobs to show per page. Defaults to '5'.", "type": "str", "default": "5"}}}
{"name": "stock_get_press_releases", "description": "Retrieves press releases for a given stock ticker.", "parameters": {"tickerid": {"description": "The value of the tickerId field returned by other endpoints, such as .../stock/search or .../market/get-common-ranking.", "type": "int", "default": "913256135"}, "lastannouncementid": {"description": "For paging purposes, the last announcement ID returned by this endpoint. Leave empty for the first query.", "type": "int, optional", "default": ""}, "limit": {"description": "The number of items per response. Default is 20.", "type": "int, optional", "default": "20"}}}
{"name": "stories_detail", "description": "Fetches full story information based on the given internal ID.", "parameters": {"internalid": {"description": "The internal ID of the story. This can be obtained from the /stories/list or /news/list or /news/list-by-region endpoints.", "type": "str", "default": "QFY0Y6T0AFB501"}}}
{"name": "get_top_tier_stays_filter", "description": "Gets top-tier stays filter from the Airbnb RapidAPI.", "parameters": {"languageid": {"description": "Language identifier to get the response in the requested language. If not provided, defaults to None. To get a valid LanguageId, call the `getLanguages` API.", "type": "str, optional", "default": ""}}}
{"name": "title_streaming_sources", "description": "Fetches the streaming sources for a given title and provides direct links to watch the title on different platforms. Streaming sources are limited to the USA for free plans.", "parameters": {"is_id": {"description": "The ID of the title. This can be a Watchmode ID, an IMDB ID, or a TMDB type and ID combination.", "type": "str", "default": "3173903"}, "regions": {"description": "A comma-separated list of 2-character country codes to filter the streaming source results. Defaults to 'US'.", "type": "str, optional", "default": "US"}}}
{"name": "get_username_valorant", "description": "Retrieves the Valorant username details using the provided Riot ID and Tag by querying the Toolbench RapidAPI service.", "parameters": {"tag": {"description": "The tag associated with the Valorant username.", "type": "str", "default": "123"}, "riot_id": {"description": "The Riot ID of the Valorant username.", "type": "str", "default": "ucup"}}}
{"name": "get_one_set_by_id", "description": "Returns information about a single Pokémon TCG set by retrieving data using the set ID.", "parameters": {"setid": {"description": "The ID of the Pokémon TCG set for which information is to be retrieved.", "type": "str", "default": "33ee55f4-30d0-4900-850f-36a351fb9719"}}}
{"name": "agencies_list", "description": "Fetches a list of agencies or searches for agencies by name using the specified parameters.", "parameters": {"page": {"description": "The page number for paging purposes. Defaults to 0.", "type": "int, optional", "default": "0"}, "lang": {"description": "Language for the response, either 'en' for English or 'ar' for Arabic. Defaults to 'en'.", "type": "str, optional", "default": "en"}, "hitsperpage": {"description": "Number of hits per page for paging purposes. Defaults to 25.", "type": "int, optional", "default": "25"}, "query": {"description": "Search term or phrase for filtering the agencies by name. Defaults to 'patriot'.", "type": "str, optional", "default": "patriot"}}}
{"name": "getcountrybyip", "description": "Retrieves the country information for a given IP address using the Country by IP API. Both IPv4 and IPv6 are supported.", "parameters": {"ip": {"description": "The IP address for which to retrieve the country information.", "type": "str", "default": "4.98.25.25"}}}
{"name": "get_timetable", "description": "Fetches the timetable for a given FlixBus station and date using the Toolbench RapidAPI service.", "parameters": {"station_id": {"description": "ID of the FlixBus station.", "type": "str", "default": "dcbd21fc-9603-11e6-9066-549f350fcb0c"}, "date": {"description": "Date for which to fetch the timetable, in the format DD.MM.YYYY.", "type": "str", "default": "15.05.2022"}}}
{"name": "get_playlist_album_metadata", "description": "Fetches full metadata of a playlist or album from SoundCloud.", "parameters": {"playlist": {"description": "The URL or ID of the playlist or album to fetch metadata for.", "type": "str", "default": "https://soundcloud.com/edsheeran/sets/tour-edition-1"}}}
{"name": "get_podcast_episodes", "description": "Fetch podcast episodes including audio, image, and description using the username of the podcast.", "parameters": {"username": {"description": "The username of the anchor podcast user. For example, for the URL https://anchor.fm/financialfreedomtribe, the username is \"financialfreedomtribe\".", "type": "str", "default": "financialfreedomtribe"}}}
{"name": "market_statistics_goals", "description": "Fetches market goal statistics for a given soccer match, including data on \"Both Teams to Score\", \"Under/Over\", and \"Total Goals\" for both teams involved.", "parameters": {"matchid": {"description": "The ID of the match for which to retrieve goal statistics.", "type": "int", "default": "1452254"}}}
{"name": "get_place_by_geoname_id", "description": "Fetches details about a place using its Geoname ID.", "parameters": {"geonameid": {"description": "Unique identifier given by Geonames for the place.", "type": "int", "default": "5391959"}, "language": {"description": "Specifies a language (ISO 639-1) to get the localized name of the place. Default is None. If translation is not available, \"localizedName\" property will be null.", "type": "str, optional", "default": ""}}}
{"name": "get_san_francisco_chronicle_news", "description": "Fetches news from the San Francisco Chronicle using the given keyword.", "parameters": {"sfchronicle": {"description": "A keyword to filter news articles. If provided, only articles containing this keyword will be fetched. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "novels", "description": "Fetches information about novels from the RapidAPI service.", "parameters": {"pagesize": {"description": "The number of items to return per page. Defaults to '2'.", "type": "str, optional", "default": "2"}, "page": {"description": "The page number to retrieve. Defaults to '1'.", "type": "str, optional", "default": "1"}}}
{"name": "hashtags", "description": "Generates hashtags from a given text using the specified content type and optional RapidAPI key.", "parameters": {"content_type": {"description": "The type of content for which hashtags are to be generated.", "type": "str", "default": "application/json"}, "text": {"description": "The text from which hashtags will be extracted.", "type": "str", "default": "My holidays in Summer"}}}
{"name": "list_all_countries", "description": "Fetches information about a country using its ISO 3166-1 alpha-2 code from the World Bank API via RapidAPI.", "parameters": {"iso2code": {"description": "ISO 3166-1 alpha-2 code of the country for which information is to be fetched.", "type": "str", "default": "br"}}}
{"name": "v1_search_free", "description": "Search articles using the Newscatcher API.", "parameters": {"q": {"description": "String to search for. Has to be URL-encoded.", "type": "str", "default": "Elon Musk"}, "media": {"description": "If set to 'True', adds two more variables to the output: `media` and `media_content`. `media` contains the main image published with the article, and `media_content` is a comma-separated string of all images used in the article.", "type": "str, optional", "default": "True"}, "page": {"description": "The number of the page to scroll through the results. Defaults to 1.", "type": "str, optional", "default": ""}, "ranked_only": {"description": "Limits the search to sources within the top 1 million online websites. Defaults to 'True'. Set to 'False' to include unranked sources.", "type": "str, optional", "default": ""}, "page_size": {"description": "Specifies the number of articles to return per page. Defaults to 50, with a maximum of 100.", "type": "str, optional", "default": ""}, "lang": {"description": "Specifies the language of the search. Defaults to 'en'. Allowed values include 'af', 'ar', 'bg', 'bn', 'ca', 'cn', 'cs', 'cy', 'da', 'de', 'el', 'en', 'es', 'et', 'fa', 'fi', 'fr', 'gu', 'he', 'hi', 'hr', 'hu', 'id', 'it', 'ja', 'kn', 'ko', 'lt', 'lv', 'mk', 'ml', 'mr', 'ne', 'nl', 'no', 'pa', 'pl', 'pt', 'ro', 'ru', 'sk', 'sl', 'so', 'sq', 'sv', 'sw', 'ta', 'te', 'th', 'tl', 'tr', 'tw', 'uk', 'ur', 'vi'.", "type": "str, optional", "default": "en"}}}
{"name": "get_history", "description": "Retrieves paginated history data from a web image storage service.", "parameters": {"pagesize": {"description": "The number of items per page.", "type": "int", "default": "20"}, "page": {"description": "The page number to retrieve, starting from 0.", "type": "int", "default": "0"}}}
{"name": "show_history", "description": "Shows all images you have uploaded in a pageable list.", "parameters": {"pagesize": {"description": "The number of images to display per page, with a maximum of 100.", "type": "int", "default": "100"}, "page": {"description": "The page number to return, starting at 0.", "type": "int", "default": "0"}}}
{"name": "transform_your_images", "description": "Apply various transformations to images using the Toolbench RapidAPI.", "parameters": {"grayscale": {"description": "If True, convert the image to grayscale. Defaults to None.", "type": "bool, optional", "default": "true"}, "rotate": {"description": "Degrees to rotate the image. Defaults to 90.", "type": "int, optional", "default": "90"}, "blur": {"description": "Level of blurriness to apply to the image. Defaults to 4.", "type": "int, optional", "default": "4"}, "resize": {"description": "New dimensions for resizing the image in the format 'width,height'. Defaults to '100,100'.", "type": "str, optional", "default": "100,100"}}}
{"name": "feeds_search", "description": "Search for recipes by name and optional filters.", "parameters": {"start": {"description": "The offset of items to be ignored in the response for paging.", "type": "int", "default": "0"}, "maxresult": {"description": "The number of items returned per response.", "type": "int", "default": "18"}, "fibtgmax": {"description": "Maximum amount of fiber (in grams).", "type": "int, optional", "default": ""}, "camax": {"description": "Maximum amount of calcium (in milligrams).", "type": "int, optional", "default": ""}, "cholemax": {"description": "Maximum amount of cholesterol (in milligrams).", "type": "int, optional", "default": ""}, "allowedattribute": {"description": "A comma-separated list of allowed attributes (typically dietary restrictions).", "type": "str, optional", "default": "diet-lacto-vegetarian,diet-low-fodmap"}, "sweetmax": {"description": "Maximum sweetness level (e.g., 0 to 1).", "type": "int, optional", "default": ""}, "kmax": {"description": "Maximum amount of potassium (in milligrams).", "type": "int, optional", "default": ""}, "namax": {"description": "Maximum amount of sodium (in milligrams).", "type": "str, optional", "default": ""}, "q": {"description": "Query string to search for specific food or ingredient.", "type": "str, optional", "default": "chicken soup"}, "enerc_kcalmax": {"description": "Maximum amount of calories (in kcal).", "type": "int, optional", "default": ""}, "femax": {"description": "Maximum amount of iron (in milligrams).", "type": "int, optional", "default": ""}, "fat_kcalmax": {"description": "Maximum amount of calories from fat (in kcal).", "type": "int, optional", "default": "1000"}, "maxtotaltimeinseconds": {"description": "Maximum total time to prepare the dish (in seconds).", "type": "int, optional", "default": "7200"}, "piquantmax": {"description": "Maximum piquant (spiciness) level (e.g., 0 to 1).", "type": "int, optional", "default": ""}, "vita_iumax": {"description": "Maximum amount of vitamin A (in IU).", "type": "int, optional", "default": ""}, "vitcmax": {"description": "Maximum amount of vitamin C (in milligrams).", "type": "int, optional", "default": ""}, "meatymax": {"description": "Maximum meatiness level (e.g., 0 to 1).", "type": "int, optional", "default": ""}, "fasatmax": {"description": "Maximum amount of saturated fat (in grams).", "type": "int, optional", "default": ""}, "sweetmin": {"description": "Minimum sweetness level (e.g., 0 to 1).", "type": "int, optional", "default": ""}, "piquantmin": {"description": "Minimum piquant (spiciness) level (e.g., 0 to 1).", "type": "int, optional", "default": ""}, "fatmax": {"description": "Maximum amount of total fat (in grams).", "type": "int, optional", "default": ""}, "sourmin": {"description": "Minimum sourness level (e.g., 0 to 1).", "type": "int, optional", "default": ""}, "meatymin": {"description": "Minimum meatiness level (e.g., 0 to 1).", "type": "int, optional", "default": ""}, "sourmax": {"description": "Maximum sourness level (e.g., 0 to 1).", "type": "int, optional", "default": ""}, "chocdfmax": {"description": "Maximum amount of carbohydrates (in grams).", "type": "int, optional", "default": ""}, "saltymin": {"description": "Minimum saltiness level (e.g., 0 to 1).", "type": "int, optional", "default": ""}, "sugarmax": {"description": "Maximum amount of sugar (in grams).", "type": "int, optional", "default": ""}, "procntmax": {"description": "Maximum amount of protein (in grams).", "type": "int, optional", "default": ""}, "saltymax": {"description": "Maximum saltiness level (e.g., 0 to 1).", "type": "int, optional", "default": ""}}}
{"name": "get_current_time_within_a_timezone", "description": "Fetch the current time within a specified timezone using the RapidAPI World Clock API.", "parameters": {"time_zone": {"description": "The timezone identifier for which to fetch the current time (see: https://www.timeanddate.com/time/zones/).", "type": "str", "default": "est"}}}
{"name": "asia", "description": "Fetches a list of Asian cities sorted by a specified criterion with pagination support.", "parameters": {"sort": {"description": "The order of sorting. Can be 'asc' for ascending or 'desc' for descending. Default is 'desc'.", "type": "str", "default": "desc"}, "sort_by": {"description": "The criterion to sort the cities by. Examples include 'overall_score', 'internet_speed', 'temperatureC', 'cost_for_family_in_usd', etc. Default is 'overall_score'.", "type": "str", "default": "overall_score"}, "size": {"description": "The number of cities to include per page. Default is '20'.", "type": "str", "default": "20"}, "page": {"description": "The page number to retrieve. Default is '1'.", "type": "str", "default": "1"}}}
{"name": "tournamentrnkingsummary", "description": "Fetches the ranking summary for a specified tournament from the MMA API.", "parameters": {"tournamentid": {"description": "The unique identifier for the tournament whose ranking summary is to be retrieved.", "type": "int", "default": 19906}}}
{"name": "properties_count", "description": "Count the total number of properties available based on the given search parameters and filters.", "parameters": {"zipcodes": {"description": "Postal codes, separated by commas for multiple values (e.g., '75,13'). Either `zipcodes` or `districtids` is required.", "type": "str", "default": "75"}, "bedrooms": {"description": "Filter by number of bedrooms (1-5), separated by commas for multiple values (e.g., '2,3').", "type": "str, optional", "default": ""}, "maximumlivingarea": {"description": "Filter by maximum living area.", "type": "int, optional", "default": ""}, "rooms": {"description": "Filter by number of bedrooms (1-5), separated by commas for multiple values (e.g., '2,3').", "type": "str, optional", "default": ""}, "maximumgroundarea": {"description": "Filter by maximum ground area.", "type": "int, optional", "default": ""}, "sortby": {"description": "Sort by criterion. One of the following:", "type": "int, optional", "default": "0"}, "includenewconstructions": {"description": "Whether to include new constructions in the listing.", "type": "bool, optional", "default": "true"}, "maximumprice": {"description": "Filter by maximum price.", "type": "int, optional", "default": ""}, "transactiontype": {"description": "Type of transaction. One of the following:", "type": "int, optional", "default": "1"}, "minimumgroundarea": {"description": "Filter by minimum ground area.", "type": "int, optional", "default": ""}, "minimumfloor": {"description": "Filter by minimum number of floors.", "type": "int, optional", "default": ""}, "districtids": {"description": "District IDs, separated by commas for multiple values (e.g., '133051,133137'). Either `districtids` or `zipcodes` is required.", "type": "str, optional", "default": ""}, "minimumlivingarea": {"description": "Filter by minimum living area.", "type": "int, optional", "default": ""}, "maximumfloor": {"description": "Filter by maximum number of floors.", "type": "int, optional", "default": ""}, "realtytypes": {"description": "Type of realty. One of the following:", "type": "int, optional", "default": "1"}}}
{"name": "getgeneration", "description": "Fetches the generation status and generated images from the Dream Diffusion API.", "parameters": {"x_api_key": {"description": "The API key required for authorization to access the generation data.", "type": "str", "default": "3f9a50f3-db4c-4b52-9b15-709fcaddb6a7"}, "generation_uuid": {"description": "The unique identifier for the generation process.", "type": "str", "default": "c2d620eb-8d1a-4bda-b609-d2000858f22f"}}}
{"name": "manga", "description": "Fetches manga information from a specified API using pagination and a provided API key.", "parameters": {"page": {"description": "The page number to retrieve. Defaults to 1.", "type": "int, optional", "default": "1"}, "pagesize": {"description": "The number of items per page. Defaults to 2.", "type": "int, optional", "default": "2"}}}
{"name": "get_game_details", "description": "Fetches the basic information about a game using the provided game ID and RapidAPI key.", "parameters": {"gameid": {"description": "The unique identifier of the game you want to get details for.", "type": "str", "default": "9726635"}}}
{"name": "body_mass_index", "description": "Calculates the Body Mass Index (BMI) based on the provided weight, height, and units.", "parameters": {"weight": {"description": "The weight of the individual.", "type": "int", "default": "80"}, "height": {"description": "The height of the individual.", "type": "int", "default": "170"}, "units": {"description": "The units of measurement to be used. Possible values are 'metric' (default) or 'imperial'.", "type": "str, optional", "default": "metric"}}}
{"name": "get_many_sets", "description": "Fetches multiple sets of Pokémon TCG cards based on provided query parameters.", "parameters": {"series": {"description": "The series to which the sets belong (default is 'sword-and-shield').", "type": "str, optional", "default": "sword-and-shield"}, "limit": {"description": "The maximum number of sets to return (default is 20).", "type": "int, optional", "default": "20"}, "fromid": {"description": "The starting ID from which to return sets (default is None).", "type": "str, optional", "default": ""}, "set": {"description": "The specific set to return (default is 'vivid-voltage').", "type": "str, optional", "default": "vivid-voltage"}}}
{"name": "playercount_185_225_233_110_30015", "description": "Gets the player count from a server given its IP and port using the V Rising Server Query API.", "parameters": {"port": {"description": "The port number of the server.", "type": "str", "default": "30015"}, "ip": {"description": "The IP address of the server.", "type": "str", "default": "185.225.233.110"}}}
{"name": "market_get_chart", "description": "Fetches chart data from the specified market endpoint using given parameters.", "parameters": {"interval": {"description": "One of the following intervals for the chart data: 'd1', 'd3', 'ytd', 'm1', 'm3', 'm6', 'y1', 'y5'.", "type": "str", "default": "y1"}, "is_id": {"description": "The id of the market instrument, typically obtained from the market auto-complete endpoint.", "type": "str", "default": "inmex:ind"}}}
{"name": "products_types_typeid", "description": "Returns a list of products for a given product type ID by making a request to the National Weather Service API.", "parameters": {"typeid": {"description": "An ID representing a valid product type.", "type": "str", "default": ""}}}
{"name": "top_free_ios_apps", "description": "Retrieves a list of the top free iOS apps from the App Store using the RapidAPI service.", "parameters": {"lang": {"description": "The language code for the results (default is 'en').", "type": "str", "default": "en"}, "country": {"description": "The country code for the results (default is 'us').", "type": "str", "default": "us"}, "num": {"description": "The number of application results to return (default is 100, with a max of 200).", "type": "int", "default": "100"}, "category": {"description": "The category ID to filter the applications (default is '6016').", "type": "str", "default": "6016"}}}
{"name": "search_foods_using_keywords", "description": "Search for foods using the given keywords and optional filters such as brand owner, page size, and page number.", "parameters": {"query": {"description": "The search term to query for foods.", "type": "str", "default": "cheese"}, "brandowner": {"description": "The brand owner of the foods. Default is 'Kar Nut Products Company'.", "type": "str, optional", "default": "Kar Nut Products Company"}, "pagesize": {"description": "The number of results per page. Default is '1'.", "type": "str, optional", "default": "1"}, "pagenumber": {"description": "The page number to retrieve. Default is '1'.", "type": "str, optional", "default": "1"}}}
{"name": "upgrade_downgrade_history", "description": "Fetches the upgrade and downgrade history for a given stock symbol from the Yahoo Finance Complete API.", "parameters": {"symbol": {"description": "The stock symbol for which the upgrade and downgrade history is to be fetched.", "type": "str", "default": ""}, "is_from": {"description": "The starting date for the history in the format 'YYYY-MM-DD'.", "type": "str", "default": ""}}}
{"name": "get_trims_by_generation_id", "description": "Returns a list of all trims (engine types) available for a given generation of a car model.", "parameters": {"generationid": {"description": "The ID of the generation for which to retrieve trims.", "type": "int", "default": ""}}}
{"name": "latest_tweets", "description": "Fetch the latest crypto news tweets, including sentiment analysis and keyword extraction.", "parameters": {"top_n_keywords": {"description": "The number of keywords to extract from each tweet. Default is 10.", "type": "int, optional", "default": "10"}, "max_tweets": {"description": "The maximum number of tweets to retrieve. Default is 10.", "type": "int, optional", "default": "10"}, "last_n_hours": {"description": "The time range in hours to look back for tweets. Default is 4.", "type": "int, optional", "default": "4"}}}
{"name": "get_playlist_metadata", "description": "Fetches full details of a Spotify playlist using RapidAPI.", "parameters": {"playlistid": {"description": "The ID of the Spotify playlist.", "type": "str", "default": "5782GLkrpvN8zbJQRjMaSW"}, "limit": {"description": "The maximum number of items to return. Defaults to None.", "type": "int, optional", "default": ""}, "offset": {"description": "The number of items to skip before starting to return results. Defaults to None.", "type": "int, optional", "default": ""}}}
{"name": "get_address_transactions", "description": "Fetches transactions for a given address from the specified network.", "parameters": {"network": {"description": "The blockchain network to query (default is 'BSC_TESTNET').", "type": "str, optional", "default": "BSC_TESTNET"}, "limit": {"description": "The maximum number of transactions to return (default is '10').", "type": "str, optional", "default": "10"}, "offset": {"description": "The number of transactions to skip before starting to return results (default is '0').", "type": "str, optional", "default": "0"}, "monitoraddressid": {"description": "The ID of the address to monitor (default is '8485d9c3-7f52-4ba7-8ec2-41543effa6ae').", "type": "str, optional", "default": "8485d9c3-7f52-4ba7-8ec2-41543effa6ae"}}}
{"name": "post_search", "description": "Searches Reddit posts using given search query parameters via the Toolbench RapidAPI.", "parameters": {"query": {"description": "The search query string. Supports the following term types:", "type": "str", "default": "/r/funny,cat"}, "after": {"description": "The previous result's sort key value for pagination.", "type": "int, optional", "default": ""}}}
{"name": "videos", "description": "Retrieves YouTube video details based on the provided parameters.", "parameters": {"part": {"description": "The part parameter specifies a comma-separated list of one or more video resource properties that the API response will include.", "type": "str", "default": "snippet,contentDetails,statistics"}, "is_id": {"description": "The ID of the YouTube video for which details are to be fetched.", "type": "str", "default": "arj7oStGLkU"}, "x_cachebypass": {"description": "Set this parameter to '1' to bypass the cache. Default is None.", "type": "str, optional", "default": ""}}}
{"name": "getverseofachapter", "description": "Fetches a specific verse from a chapter in a given book of the Bible.", "parameters": {"book": {"description": "The name of the book in the Bible.", "type": "str", "default": "Luke"}, "chapter": {"description": "The chapter number in the book.", "type": "int", "default": "1"}, "verse": {"description": "The verse number in the chapter.", "type": "int", "default": "1"}}}
{"name": "org", "description": "Check if a .org domain with the given name is registered using the Toolbench RapidAPI service.", "parameters": {"name": {"description": "The name of the domain to check.", "type": "str", "default": "testdomain"}}}
{"name": "teamlastmatches", "description": "Fetch the last matches for a specified cricket team using the RapidAPI cricket API.", "parameters": {"page": {"description": "The page number (starting from 0) of the last matches you want to retrieve.", "type": "int", "default": ""}, "is_id": {"description": "The ID of the cricket team for which you want to retrieve the last matches.", "type": "int", "default": 187760}}}
{"name": "data_from_to_number", "description": "Performs a data unit conversion from one unit to another using the RapidAPI service.", "parameters": {"number": {"description": "The numerical value to be converted.", "type": "int", "default": "1024"}, "to": {"description": "The unit to convert the number to.", "type": "str", "default": "byte"}, "is_from": {"description": "The unit of the numerical value being converted from.", "type": "str", "default": "bit"}}}
{"name": "fetchamatch", "description": "Fetches match details from the specified screening and customer IDs using the provided API credentials.", "parameters": {"authorization": {"description": "Authorization token for the API.", "type": "str", "default": "Bearer {{accessTokenUser}}"}, "content_type": {"description": "The content type for the request.", "type": "str", "default": "application/json"}, "customer_a_id": {"description": "The customer ID for whom the match is being fetched.", "type": "str", "default": "customer_a_id"}, "match_1_id": {"description": "The ID of the match to fetch details for.", "type": "str", "default": "match_1_id"}, "screening_a_id": {"description": "The ID of the screening in which the match was found.", "type": "str", "default": "screening_a_id"}}}
{"name": "competitions_details", "description": "Fetches the details of a competition based on the given competition ID.", "parameters": {"timezone": {"description": "Offset from UTC indicating the timezone.", "type": "int", "default": "0"}, "competition_id": {"description": "Unique identifier for the competition.", "type": "int", "default": "65"}, "locale": {"description": "Locale to use for the competition details.", "type": "str", "default": "EN"}}}
{"name": "issuspicious", "description": "Fetches a history of changes in suspicious or stolen NFTs.", "parameters": {"contractaddress": {"description": "The contract address of the NFTs to filter the results. Default is None.", "type": "str, optional", "default": ""}, "afterid": {"description": "An ID to filter results that come after this specific ID. Default is None.", "type": "int, optional", "default": ""}, "pagesize": {"description": "The number of records to fetch per page. Default is 50.", "type": "int, optional", "default": "50"}, "beforeid": {"description": "An ID to filter results that come before this specific ID. Default is None.", "type": "int, optional", "default": ""}}}
{"name": "seasonal_advanced_team_statistics", "description": "Retrieves season-wide advanced team statistics for a basketball match, including home and away team filters.", "parameters": {"matchid": {"description": "The ID of the basketball match for which to retrieve the statistics.", "type": "int", "default": "335024"}}}
{"name": "match_margins", "description": "Fetches the average match margin statistics for a given team using the provided RapidAPI key.", "parameters": {"teamid": {"description": "The ID of the team for which to fetch the match margin statistics.", "type": "int", "default": "1442"}}}
{"name": "get_qr_code", "description": "Generates a QR code using the given URL through the RapidAPI service.", "parameters": {"url": {"description": "The URL to be encoded in the QR code. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "get_coin_ohlc_data", "description": "Fetches OHLC (Open, High, Low, Close) data for a specified coin over a given time interval.", "parameters": {"uuid": {"description": "UUID of the cryptocurrency for which to fetch the OHLC data.", "type": "str", "default": "Qwsogvtv82FCd"}, "referencecurrencyuuid": {"description": "UUID of the reference currency in which prices are calculated. Defaults to 'yhjMzLPhuIDl' (US Dollar).", "type": "str, optional", "default": "yhjMzLPhuIDl"}, "limit": {"description": "Number of time periods for which the OHLC data is retrieved. When `interval` is 'hour' and `limit` is 10, data will be returned for the last 10 hours. Defaults to None.", "type": "int, optional", "default": ""}, "interval": {"description": "Time period over which each OHLC item is determined. Allowed values are 'minute', '5minutes', 'hour', '8hours', 'day', 'week', 'month'. Defaults to 'day'.", "type": "str, optional", "default": "day"}}}
{"name": "type_get_strategy", "description": "Fetches the strategy for a given security ID and type from the Morningstar API.", "parameters": {"securityid": {"description": "The security ID used to query the API.", "type": "str", "default": "F00000O2CG"}, "type": {"description": "The type of investment, one of the following values: etf or fund.", "type": "str", "default": "etf"}}}
{"name": "estimate_transaction_fee_v2", "description": "Estimate the transaction fee for a given confirmation target on a specified blockchain.", "parameters": {"confirmationtarget": {"description": "Number of blocks within which the transaction should be confirmed.", "type": "int", "default": 1}, "blockchain": {"description": "Name of the blockchain for which the transaction fee is being estimated.", "type": "str", "default": "bitcoin"}, "conservative": {"description": "If set to True, enables conservative fee estimation mode for Bitcoin-like blockchains. If False, enables economical mode. This parameter has no effect on Ethereum-like blockchains. Default is None.", "type": "bool, optional", "default": true}}}
{"name": "consulta_simples_nacional", "description": "Queries the Simples Nacional system for information related to a given tax ID.", "parameters": {"taxid": {"description": "The tax ID (CNPJ) to be queried.", "type": "str", "default": "37335118000180"}, "maxage": {"description": "The maximum age of the data (in days) to be retrieved. Defaults to 30.", "type": "int, optional", "default": "30"}, "history": {"description": "Whether to include historical data in the query. Defaults to None.", "type": "bool, optional", "default": "false"}}}
{"name": "search_manga", "description": "Search for manga using the Mangaverse API based on a given text.", "parameters": {"text": {"description": "The text to search for in manga titles and subtitles. Defaults to 'isekai'.", "type": "str", "default": "isekai"}}}
{"name": "show", "description": "Fetch the details of an embed record using its unique slug.", "parameters": {"x_rapidapi_key": {"description": "The RapidAPI key provided for API requests.", "type": "str", "default": "9846b8bf51mshf1d65a505b76988p188f2ajsn7136afeaa49f"}, "x_rapidapi_host": {"description": "The RapidAPI host to be used for the request.", "type": "str", "default": "vizor-ads.p.rapidapi.com"}, "slug": {"description": "The unique identifier for the embed record.", "type": "str", "default": "7dW8zGbP"}}}
{"name": "search_all_cars", "description": "Fetches a list of vehicles from an API based on the provided vehicle type.", "parameters": {"vehicle_type": {"description": "Type of vehicle to fetch details for (e.g., 'car' or 'bike').", "type": "str", "default": "car"}}}
{"name": "get_nft_owner", "description": "Fetches the owner of a specific ERC-721 NFT using the provided chain ID, NFT contract address, and NFT ID.", "parameters": {"chainid": {"description": "The chain ID of the blockchain network on which the NFT resides.", "type": "int", "default": "1"}, "nftaddress": {"description": "The address of the NFT contract.", "type": "str", "default": ""}, "nftid": {"description": "The unique identifier of the specific NFT.", "type": "str", "default": ""}}}
{"name": "fetchallassociationsbelongingtoamatch", "description": "Fetch all associations belonging to a specific match for a given customer and screening ID.", "parameters": {"authorization": {"description": "The authorization token for accessing the API.", "type": "str", "default": "Bearer {{accessTokenUser}}"}, "content_type": {"description": "The MIME type of the request.", "type": "str", "default": "application/json"}, "customer_a_id": {"description": "The ID of the customer.", "type": "str", "default": "customer_a_id"}, "screening_a_id": {"description": "The ID of the screening.", "type": "str", "default": "screening_a_id"}, "match_id": {"description": "The ID of the match.", "type": "str", "default": "match_id"}}}
{"name": "competition_details", "description": "Retrieve detailed information about a specific competition.", "parameters": {"competition": {"description": "The ID of the competition.", "type": "int", "default": 103}, "langid": {"description": "The language ID for the response.", "type": "int", "default": 1}, "timezone": {"description": "The timezone for the response.", "type": "str", "default": "America/Chicago"}, "withseasons": {"description": "Whether to include season information. Defaults to None.", "type": "bool, optional", "default": true}}}
{"name": "scorecards", "description": "Fetches a scorecard for a given tournament, year, player, and optionally a round, providing shot-by-shot granularity.", "parameters": {"orgid": {"description": "Identifier for the organization (1 for PGA Tour, 2 for LIV Tour).", "type": "str", "default": ""}, "year": {"description": "Year of the tournament.", "type": "str", "default": "2022"}, "playerid": {"description": "Identifier for the player.", "type": "str", "default": "47504"}, "tournid": {"description": "Identifier for the tournament.", "type": "str", "default": "475"}, "roundid": {"description": "Identifier for the round. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "properties_get_description", "description": "Retrieve the description of a property based on its ID from the properties API.", "parameters": {"hotel_ids": {"description": "The value of the hotel ID from the properties/list API.", "type": "int", "default": "1528418"}, "check_out": {"description": "The check-out date in 'YYYY-MM-DD' format. Default is '2019-03-15'.", "type": "str, optional", "default": "2019-03-15"}, "languagecode": {"description": "Language code for the description. Default is 'en-us'. Options include 'en', 'en-us', 'ar', 'bg', 'ca', 'cs', 'da', 'de', 'el', 'es', 'es-ar', 'et', 'fi', 'fr', 'he', 'hr', 'hu', 'id', 'is', 'it', 'ja', 'ko', 'lt', 'lv', 'ms', 'nl', 'no', 'pl', 'pt', 'pt-br', 'ro', 'ru', 'sk', 'sl', 'sr', 'sv', 'th', 'tl', 'tr', 'uk', 'vi', 'zh', 'zh-tw'.", "type": "str, optional", "default": "en-us"}, "check_in": {"description": "The check-in date in 'YYYY-MM-DD' format. Default is '2019-03-13'.", "type": "str, optional", "default": "2019-03-13"}}}
{"name": "listallairports", "description": "Fetches a list of airports from the World Airports Directory API using the provided parameters.", "parameters": {"limit": {"description": "The maximum number of airports to return.", "type": "int", "default": 20}, "page": {"description": "The page number to retrieve.", "type": "int", "default": 1}, "sortby": {"description": "The field and order to sort the results by in the format `field:order` (e.g., `name:asc`, `name:desc`).", "type": "str", "default": "name:asc"}}}
{"name": "geteventtypes", "description": "Fetches event types data from the specified API using the provided skin name and RapidAPI key.", "parameters": {"skinname": {"description": "The name of the skin to include in the query string. Defaults to 'betbiga'.", "type": "str", "default": "betbiga"}}}
{"name": "leaguehomestandings", "description": "Retrieves home standings for a specified handball tournament and season.", "parameters": {"tournamentid": {"description": "The unique ID of the handball tournament.", "type": "int", "default": 149}, "seasonid": {"description": "The ID of the season.", "type": "int", "default": 42967}}}
{"name": "profile_highlights", "description": "Fetches the Instagram profile highlights for a given username using the specified RapidAPI key.", "parameters": {"username": {"description": "The Instagram username whose profile highlights are to be fetched. Defaults to 'kimkardashian'.", "type": "str", "default": "kimkardashian"}}}
{"name": "get_word_by_start", "description": "Fetches a random word that begins with the specified starting string from the Random Word API.", "parameters": {"start": {"description": "The starting string to filter the words.", "type": "str", "default": "fru"}}}
{"name": "user_info_by_username", "description": "Retrieve all information of an Instagram account by username.", "parameters": {"username": {"description": "The Instagram username for which to retrieve information.", "type": "str", "default": "kimkardashian"}}}
{"name": "license_plate_to_vin", "description": "Converts a vehicle's license plate number to its corresponding VIN (Vehicle Identification Number).", "parameters": {"state_code": {"description": "The state code where the license plate is registered (e.g., 'CA' for California).", "type": "str", "default": "AL"}, "license_plate": {"description": "The license plate number of the vehicle.", "type": "str", "default": "S8TAN"}}}
{"name": "tournament_standings", "description": "Fetches and returns the team rankings for a specified tournament.", "parameters": {"tournamentid": {"description": "The ID of the tournament for which to retrieve standings.", "type": "int", "default": "9"}}}
{"name": "type_performance_get_trailing_returns", "description": "Fetches the trailing returns in the Performance tab for a specified ETF or FUND.", "parameters": {"type": {"description": "The type of security. Must be one of 'etf' or 'fund'.", "type": "str", "default": "etf"}, "securityid": {"description": "The security ID obtained from the .../market/v2/get-returns endpoint.", "type": "str", "default": "F00000O2CG"}, "duration": {"description": "The time duration for the returns. Must be one of 'daily', 'monthly', or 'quarterly'. Defaults to 'daily'.", "type": "str, optional", "default": "daily"}}}
{"name": "email_validation", "description": "Validates whether a given email domain is disposable using the RapidAPI service.", "parameters": {"domain": {"description": "The email domain to be validated.", "type": "str", "default": "gmail.com"}}}
{"name": "videogames_news_search", "description": "Searches for current and historical news related to video games from top sources based on the given query and optional filters.", "parameters": {"query": {"description": "The query text to search for in the news articles.", "type": "str", "default": "GTA"}, "page": {"description": "The page number to retrieve, for paginating through results.", "type": "int, optional", "default": ""}, "to_date": {"description": "The latest date for articles in ISO 8601 format (e.g., \"2022-03-15\").", "type": "str, optional", "default": ""}, "sort_by": {"description": "The field by which to sort the results.", "type": "str, optional", "default": ""}, "from_date": {"description": "The earliest date for articles in ISO 8601 format (e.g., \"2022-03-15\").", "type": "str, optional", "default": ""}, "per_page": {"description": "The number of results to return per page.", "type": "int, optional", "default": ""}}}
{"name": "gettraderpositions", "description": "Gets the trader positions for a given portfolio ID using the Trader Wagon API.", "parameters": {"portfolioid": {"description": "The portfolio ID of the trader.", "type": "int", "default": ""}}}
{"name": "get_book_information_by_book_id", "description": "Fetches detailed information about a book from an external API using the book's ID.", "parameters": {"book_id": {"description": "The unique identifier for the book to retrieve information about.", "type": "str", "default": "56597885"}}}
{"name": "post_likes", "description": "Gets the list of users who liked a specific Instagram post.", "parameters": {"mediaid": {"description": "The unique identifier of the Instagram media (post) to retrieve likers for.", "type": "int", "default": 2869228867263131000}}}
{"name": "equity_splits", "description": "Fetches the splits history data for a given security from the Quotient API.", "parameters": {"symbol": {"description": "The symbol of the asset to look for, e.g., `AAPL` (Apple Inc), `MSFT` (Microsoft Corporation).", "type": "str", "default": "MSFT"}, "is_from": {"description": "The query start date (supported format is **YYYY-mm-dd**), e.g., `2019-01-01`.", "type": "str", "default": "1991-01-01"}, "to": {"description": "The query end date (supported format is **YYYY-mm-dd**), e.g., `2020-04-17`.", "type": "str", "default": "2020-04-17"}}}
{"name": "publications", "description": "Fetches the publications for the specified Instagram user using the RapidAPI service.", "parameters": {"nextmaxid": {"description": "The maximum ID for the next page of results. Defaults to None.", "type": "str, optional", "default": ""}, "username": {"description": "The Instagram username to fetch publications for. Defaults to 'kimkardashian'.", "type": "str, optional", "default": "kimkardashian"}}}
{"name": "countries_allcontries", "description": "Fetches information about a specific country in Africa from an API.", "parameters": {"country_name": {"description": "The name of the country for which to fetch details.", "type": "str", "default": "all"}}}
{"name": "get_alerts", "description": "Retrieves alert data from the SEPTA API using specified parameters.", "parameters": {"req1": {"description": "A string representing the request parameter, defaults to 'all'.", "type": "str", "default": "all"}}}
{"name": "api_v2_minimal_exchange_amount", "description": "Fetch the minimal payment amount required to perform a cryptocurrency exchange using the ChangeNow API v2.", "parameters": {"flow": {"description": "Type of exchange flow. Options are 'standard' or 'fixed-rate'. Default is 'standard'.", "type": "str", "default": "standard"}, "tocurrency": {"description": "Ticker of the currency to receive.", "type": "str", "default": "usdt"}, "fromcurrency": {"description": "Ticker of the currency to exchange.", "type": "str", "default": "btc"}, "fromnetwork": {"description": "Network of the currency to exchange.", "type": "str", "default": "btc"}, "tonetwork": {"description": "Network of the currency to receive.", "type": "str", "default": "eth"}}}
{"name": "proxy_get", "description": "Fetches a list of proxies based on specified parameters.", "parameters": {"type": {"description": "The type of proxy to retrieve. Possible values are 'http', 'https', 'socks4', 'socks5'. Default is 'http'.", "type": "str", "default": "http"}, "country": {"description": "A two-letter country code to filter proxies by country. For more information about country codes, refer to https://www.nationsonline.org/oneworld/country_code_list.htm. Default is 'US'.", "type": "str", "default": "US"}, "anonymity": {"description": "The level of anonymity required. Possible values are 'high', 'anonymous', 'transparent'. Default is 'high'.", "type": "str", "default": "high"}}}
{"name": "get_sun_rise_and_sun_set_time", "description": "Fetches the sunrise and sunset times for a given date and location, optionally considering a specific timezone.", "parameters": {"date": {"description": "The date for which to find sunrise and sunset times in 'YYYY-MM-DD' format.", "type": "str", "default": "2023-04-14"}, "latitude": {"description": "The latitude of the location.", "type": "int", "default": "12.9716"}, "longitude": {"description": "The longitude of the location.", "type": "int", "default": "77.5946"}, "timezone": {"description": "The timezone to consider for the sunrise and sunset times. Default is 'Asia/Calcutta'.", "type": "str, optional", "default": "Asia/Calcutta"}}}
{"name": "artists", "description": "Returns a list of music artists who contributed to JSR/JSRF.", "parameters": {"limit": {"description": "The maximum number of items to return. Default is '5'.", "type": "str, optional", "default": "5"}, "sortby": {"description": "The field to sort the items by. Possible values include any field on the document (e.g., 'name', 'stats'). Default is 'name'.", "type": "str, optional", "default": "name"}, "orderby": {"description": "The order to sort the items in. Possible values are 'asc' (ascending) and 'desc' (descending). Default is 'asc'.", "type": "str, optional", "default": "asc"}}}
{"name": "bridges", "description": "Fetch data about cross-chain bridges using the Bridges API from DeFi Watch.", "parameters": {"take": {"description": "The number of bridges to retrieve.", "type": "int, optional", "default": ""}, "skip": {"description": "The number of bridges to skip from the start.", "type": "int, optional", "default": ""}, "is_from": {"description": "The name of the blockchain from which you want to send.", "type": "str, optional", "default": ""}, "to": {"description": "The name of the blockchain to which you want to send.", "type": "str, optional", "default": ""}}}
{"name": "list_movies_json", "description": "Lists and searches through all available movies with various filters and sorting options. The function can return results with Rotten Tomatoes ratings and allows filtering by multiple criteria such as IMDb rating, genre, and quality, among others.", "parameters": {"with_rt_ratings": {"description": "If True, includes Rotten Tomatoes ratings in the results.", "type": "bool, optional", "default": ""}, "minimum_rating": {"description": "An integer between 0 and 9 (inclusive) to filter movies by a given minimum IMDb rating.", "type": "int, optional", "default": ""}, "limit": {"description": "An integer between 1 and 50 (inclusive) to limit the number of results per page.", "type": "int, optional", "default": ""}, "page": {"description": "An unsigned integer to see the next page of movies. For example, limit=15 and page=2 will show movies 15-30.", "type": "int, optional", "default": ""}, "query_term": {"description": "A string used for movie search that matches on movie title, IMDb code, actor name, or director name.", "type": "str, optional", "default": ""}, "order_by": {"description": "A string ('desc' or 'asc') to order the results by either descending or ascending order.", "type": "str, optional", "default": ""}, "genre": {"description": "A string to filter movies by a given genre (see http://www.imdb.com/genre/ for the full list).", "type": "str, optional", "default": ""}, "quality": {"description": "A string ('720p', '1080p', '3D') to filter movies by a given quality.", "type": "str, optional", "default": ""}, "sort_by": {"description": "A string ('title', 'year', 'rating', 'peers', 'seeds', 'download_count', 'like_count', 'date_added') to sort the results by the chosen value.", "type": "str, optional", "default": ""}}}
{"name": "localized_routes", "description": "Fetches localized routing data from the Betsport API.", "parameters": {"referer": {"description": "The referer URL to be included in the API request headers. Default is 'https://www.mozzartbet.com.co/es'.", "type": "str", "default": "https://www.mozzartbet.com.co/es"}, "host": {"description": "The host to be included in the API request headers. Default is 'www.mozzartbet.com.co'.", "type": "str", "default": "www.mozzartbet.com.co"}}}
{"name": "get_music", "description": "Fetches music data from the TikTok API using the given music ID.", "parameters": {"music_id": {"description": "The identifier for the music track to fetch from TikTok.", "type": "str", "default": ""}}}
{"name": "getclimatescorebygps", "description": "Fetches the climate score for a given GPS position based on specific disaster and activity types.", "parameters": {"latitude": {"description": "The latitude coordinate of the location.", "type": "int", "default": "48.856613"}, "longitude": {"description": "The longitude coordinate of the location.", "type": "int", "default": "2.352222"}, "disaster_type_number": {"description": "The disaster type identifier.", "type": "int", "default": ""}, "activity_type_number": {"description": "The activity type identifier.", "type": "int", "default": ""}}}
{"name": "gst", "description": "Verifies a GST (Goods and Services Tax) number using the GST Advance API.", "parameters": {"gst": {"description": "The GST number to be verified.", "type": "str", "default": "24AEAPS9376R2ZI"}}}
{"name": "user_followings", "description": "Fetches the list of followings for a given TikTok user.", "parameters": {"user_id": {"description": "The unique ID of the TikTok user whose followings are to be fetched.", "type": "str", "default": "107955"}, "count": {"description": "The number of followings to retrieve. Defaults to None.", "type": "str, optional", "default": ""}, "cursor": {"description": "The cursor for pagination. Use this to fetch the next set of followings. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "get_company_quote_price_data", "description": "Retrieve updated quote and pricing data for a specified company.", "parameters": {"ticker": {"description": "The ticker symbol of the company to retrieve data for.", "type": "str", "default": "amzn"}}}
{"name": "get_appointments", "description": "Retrieves all appointments for a given date and clinic name from the API.", "parameters": {"date": {"description": "The date for which the appointments are requested in the format 'YYYY-MM-DD'.", "type": "str", "default": "2022.09.09"}, "clinicname": {"description": "The name of the clinic for which the appointments are requested.", "type": "str", "default": "DemoUser"}}}
{"name": "basal_metabolic_rate_bmr", "description": "Calculates the Basal Metabolic Rate (BMR) based on gender, age, height, weight, and optionally the equation for the calculation.", "parameters": {"gender": {"description": "The gender, either 'male' or 'female'.", "type": "str", "default": "male"}, "age": {"description": "The age in years.", "type": "int", "default": "30"}, "height": {"description": "The height in centimeters.", "type": "int", "default": "175"}, "weight": {"description": "The weight in kilograms.", "type": "int", "default": "60"}, "equation": {"description": "The equation to use for the calculation. Valid options are 'mifflin' (default) and 'harris'.", "type": "str, optional", "default": "mifflin"}}}
{"name": "get_all_games", "description": "Retrieves a list of basketball games based on the given filters using the free-nba API.", "parameters": {"page": {"description": "The page number for pagination. Defaults to '0'.", "type": "str", "default": "0"}, "per_page": {"description": "The number of results returned per call for pagination. Defaults to '25'.", "type": "str", "default": "25"}, "team_ids": {"description": "A comma-separated string of team IDs to filter the games.", "type": "str, optional", "default": ""}, "date": {"description": "A specific date to filter games, formatted as 'YYYY-MM-DD'.", "type": "str, optional", "default": ""}, "seasons": {"description": "A comma-separated string of seasons represented by the starting year (e.g., '2018' for the 2018-2019 season).", "type": "str, optional", "default": ""}}}
{"name": "get_supported_file_type", "description": "Retrieves the supported file types for a given input file type using the All-In-One File Converter API.", "parameters": {"input": {"description": "The input file type for which to retrieve the supported file types.", "type": "str", "default": "jpg"}}}
{"name": "volume_weighted_average_price_vwap", "description": "Returns the Volume Weighted Average Price (VWAP) indicator for a given financial instrument.", "parameters": {"exchange": {"description": "The exchange on which the symbol is traded.", "type": "str", "default": "binance"}, "symbol": {"description": "The symbol for which the VWAP is to be calculated.", "type": "str", "default": "btcusdt"}, "interval": {"description": "The interval for the VWAP calculation (e.g., \"1m\", \"5m\", \"1h\").", "type": "str", "default": "1m"}, "market": {"description": "The type of market. Available options are 'spot', 'usdt-perpetual', 'inverse-perpetual'.", "type": "str", "default": "spot"}, "backtracks": {"description": "The number of periods to include in the calculation for historical data. Defaults to 1.", "type": "int, optional", "default": "1"}, "is_from": {"description": "The starting timestamp for the data retrieval. Defaults to '1683895800'.", "type": "str, optional", "default": "1683895800"}}}
{"name": "games", "description": "Returns a list of games from the Jet Set Radio API with optional parameters for limiting and sorting the results.", "parameters": {"limit": {"description": "Limit the number of items returned in the response. Defaults to '5'.", "type": "str, optional", "default": "5"}, "orderby": {"description": "Order in which to sort the results. Possible values are 'asc' or 'desc'. The default value is 'asc'.", "type": "str, optional", "default": "asc"}, "sortby": {"description": "Field by which to sort the results. Possible values are any field on the document, such as 'name' or 'stats'. Defaults to 'name'.", "type": "str, optional", "default": "name"}}}
{"name": "coins_list", "description": "Fetches a list of available cryptocurrencies based on provided filters and sorting options.", "parameters": {"edition_currency_id": {"description": "The unique identifier for the edition currency, returned in the `/get-meta-data` endpoint.", "type": "int", "default": "12"}, "total_volume_min": {"description": "Minimum total volume for the cryptocurrency. Refer to `rangeFilters/total_volume/steps` for available values.", "type": "int, optional", "default": ""}, "chg_24h_min": {"description": "Minimum 24-hour change value for the cryptocurrency. Refer to `rangeFilters/chg_24h/steps` for available values.", "type": "int, optional", "default": ""}, "lang_id": {"description": "Language ID, with 1 being the default. Refer to `all_langs/lang_ID` in the `/get-meta-data` endpoint.", "type": "int, optional", "default": "1"}, "total_volume_max": {"description": "Maximum total volume for the cryptocurrency. Refer to `rangeFilters/total_volume/steps` for available values.", "type": "int, optional", "default": ""}, "chg_7d_max": {"description": "Maximum 7-day change value for the cryptocurrency. Refer to `rangeFilters/chg_7d/steps` for available values.", "type": "int, optional", "default": ""}, "time_utc_offset": {"description": "Time offset in seconds from UTC. Default is 28800 (UTC+8).", "type": "int, optional", "default": "28800"}, "chg_7d_min": {"description": "Minimum 7-day change value for the cryptocurrency. Refer to `rangeFilters/chg_7d/steps` for available values.", "type": "int, optional", "default": ""}, "market_cap_max": {"description": "Maximum market capitalization for the cryptocurrency. Refer to `rangeFilters/market_cap/steps` for available values.", "type": "int, optional", "default": ""}, "market_cap_min": {"description": "Minimum market capitalization for the cryptocurrency. Refer to `rangeFilters/market_cap/steps` for available values.", "type": "int, optional", "default": ""}, "chg_24h_max": {"description": "Maximum 24-hour change value for the cryptocurrency. Refer to `rangeFilters/chg_24h/steps` for available values.", "type": "int, optional", "default": ""}, "volume_24h_max": {"description": "Maximum 24-hour trading volume for the cryptocurrency. Refer to `rangeFilters/volume_24h/steps` for available values.", "type": "int, optional", "default": ""}, "volume_24h_min": {"description": "Minimum 24-hour trading volume for the cryptocurrency. Refer to `rangeFilters/volume_24h/steps` for available values.", "type": "int, optional", "default": ""}, "sort": {"description": "Sorting criteria. Allowed values are `NAME_UP` (Name), `PERC1D_DN` (Chg 24h), `PERC7D_DN` (Chg 7D), `MARKETCAP_DN` (Market Cap), `VOLUME24_DN` (Vol 24h), `TOTAL_VOLUME_DN` (Total vol). Default is `PERC1D_DN`.", "type": "str, optional", "default": "PERC1D_DN"}, "page": {"description": "Page number for pagination. Default is 1.", "type": "int, optional", "default": "1"}}}
{"name": "get_vods", "description": "Fetches the VODs (Video on Demand) for a specific tournament from the League of Legends Esports API.", "parameters": {"tournamentid": {"description": "The ID of the tournament for which to fetch VODs. Defaults to '107458367237283414'.", "type": "str, optional", "default": "107458367237283414"}}}
{"name": "getcodestructure", "description": "Fetch the code structure of a smart contract given its name and address using the Toolbench RapidAPI.", "parameters": {"contract_name": {"description": "The name of the smart contract.", "type": "str", "default": "NWayUtilityCoin"}, "contract_address": {"description": "The address of the smart contract.", "type": "str", "default": "0x011b6f1425389550"}}}
{"name": "bet365_prematch_odds", "description": "Fetches prematch odds from the Bet365 API using the provided fixture ID.", "parameters": {"fi": {"description": "Fixture ID for which to fetch the prematch odds.", "type": "int", "default": ""}}}
{"name": "nearby", "description": "Retrieve nearby places sorted by distance from the given origin coordinates in ascending order.", "parameters": {"lon": {"description": "Longitude of the origin point.", "type": "int", "default": "-73.987719"}, "lat": {"description": "Latitude of the origin point.", "type": "int", "default": "40.749779"}, "categories": {"description": "Categories of places to search for. Default is 'catering.cafe'.", "type": "str", "default": "catering.cafe"}, "radius": {"description": "Search radius in meters. Default is 500, maximum is 50000.", "type": "int", "default": "500"}}}
{"name": "get_history_of_item", "description": "Retrieves the history of a specified item from the Tibia Items API for a given date.", "parameters": {"date": {"description": "The date for which to retrieve the item history. Expected formats: 'yyyy-MM-dd' or 'yyyy-MM'.", "type": "str", "default": "2022-01"}, "key": {"description": "The unique identifier for the item, formatted as 'NameItem::World::TypeItem'.", "type": "str", "default": "Gold Token::Wizera::Valuable"}}}
{"name": "leagues_v2_list", "description": "Fetches and returns a list of leagues by category from the LiveScore API.", "parameters": {"category": {"description": "Category of the sport. One of the following: soccer, cricket, basketball, tennis, hockey.", "type": "str", "default": "soccer"}}}
{"name": "getrecentanimes", "description": "Fetches the recent animes from the GoGoAnime API for a given page number.", "parameters": {"pagenumber": {"description": "The page number to fetch recent animes from.", "type": "int", "default": "1"}}}
{"name": "get_horoscope_english_only", "description": "Fetches horoscope information in English based on the provided astrological sign, period, and type.", "parameters": {"sign": {"description": "The astrological sign for which to fetch the horoscope (e.g., 'aries', 'taurus').", "type": "str", "default": ""}, "period": {"description": "The period for the horoscope (e.g., 'daily', 'weekly', 'monthly').", "type": "str", "default": ""}, "type": {"description": "The type of horoscope, which depends on the selected period. Use the appropriate method to get available types for the selected period.", "type": "str", "default": "general"}}}
{"name": "top_competitions", "description": "Fetches the top competitions from the AllScores API based on the specified parameters.", "parameters": {"timezone": {"description": "The name of the timezone to use for the request.", "type": "str", "default": "America/Chicago"}, "langid": {"description": "The language ID for the response data.", "type": "int", "default": 1}, "sport": {"description": "The identifier for the sport category.", "type": "int", "default": 1}, "limit": {"description": "The maximum number of top competitions to return.", "type": "int", "default": 5}}}
{"name": "news_sentiment_data", "description": "Fetches news articles and their sentiment scores for a given stock ticker using the RapidAPI Stock Sentiment API.", "parameters": {"ticker": {"description": "The stock ticker symbol for which news articles and sentiment scores are to be retrieved.", "type": "str", "default": "TSLA"}}}
{"name": "morning_star", "description": "Fetches stocks that have the Morning Star signal from the RapidAPI service.", "parameters": {"page": {"description": "The page number of results to retrieve. Defaults to 1.", "type": "int, optional", "default": "1"}}}
{"name": "points_point_forecast_hourly", "description": "Fetches hourly weather forecast data for a given geographical point using the RapidAPI service.", "parameters": {"point": {"description": "A string specifying the geographical point in the format \"latitude,longitude\".", "type": "str", "default": ""}}}
{"name": "coins_get_brief_chart", "description": "Fetches and returns a brief information chart for a specific cryptocurrency pair.", "parameters": {"pair_id": {"description": "The ID of the cryptocurrency pair, typically obtained from endpoints like coins/list, coins/search, or coins/list-pairs.", "type": "int", "default": "33"}, "lang_id": {"description": "The language ID for the response, usually obtained from the get-meta-data endpoint. Default is 1.", "type": "int, optional", "default": "1"}, "range": {"description": "The time range for the chart. Allowed values are 'd' for day, 'w' for week, '1m' for one month, '1y' for one year, '5y' for five years, and 'max' for the maximum available range. Default is 'p'.", "type": "str, optional", "default": "p"}, "time_utc_offset": {"description": "The UTC offset in seconds. For example, utc+8 translates to 8 * 60 * 60 = 28800 seconds. Default is 28800.", "type": "int, optional", "default": "28800"}}}
{"name": "reviews", "description": "Fetches product reviews from the Otto data service using the provided parameters.", "parameters": {"page": {"description": "The page number to retrieve.", "type": "str", "default": "1"}, "productid": {"description": "The ID of the product to look up reviews for.", "type": "str", "default": "417479273"}, "sortby": {"description": "The criteria to sort the reviews by. Defaults to 'newest'.", "type": "str, optional", "default": "newest"}}}
{"name": "retrieve_listings", "description": "Fetches a list of listings from the Blur API based on provided parameters.", "parameters": {"pagesize": {"description": "Number of listings to retrieve per page.", "type": "int", "default": "20"}, "pagenumber": {"description": "Page number to retrieve. Defaults to 1.", "type": "int, optional", "default": "1"}, "orderby": {"description": "Order by which the listings should be sorted, either 'ASC' for ascending or 'DESC' for descending. Defaults to 'ASC'.", "type": "str, optional", "default": "ASC"}, "contractaddress": {"description": "Specific contract address to filter listings by. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "teams_coaches_teamids", "description": "Query baseball team coaches by team IDs using the RapidAPI baseball API.", "parameters": {"teamids": {"description": "A string representing one or more team IDs, separated by commas. Defaults to '145'.", "type": "str", "default": "145"}}}
{"name": "list_of_special_markets", "description": "Fetches a list of special markets for a given sport. This involves making an initial snapshot call followed by delta calls based on changes since a specified 'since' parameter. It can filter by whether odds are available, specific leagues, event types, and event IDs.", "parameters": {"sport_id": {"description": "The ID of the sport for which to retrieve special markets.", "type": "int", "default": 1}, "is_have_odds": {"description": "If specified, filters results to only include matches with available odds (True) or matches that will get odds in the future (False).", "type": "bool, optional", "default": true}, "league_ids": {"description": "The ID of the league to filter results.", "type": "int, optional", "default": ""}, "event_type": {"description": "The type of event to filter results, either 'prematch' or 'live'.", "type": "str, optional", "default": ""}, "since": {"description": "The UTC timestamp from which to return changed data.", "type": "int, optional", "default": ""}, "event_ids": {"description": "The ID of the event(s) to filter results.", "type": "int, optional", "default": ""}}}
{"name": "autocomplete_addresses", "description": "Fetches autocompleted addresses from the USA using the RapidAPI service.", "parameters": {"address": {"description": "The partial address input to autocomplete.", "type": "str", "default": "48 sunrise dr"}}}
{"name": "equity_related_indices", "description": "Fetches and returns equity-related indices for a given stock slug.", "parameters": {"slug": {"description": "The stock identifier used to fetch related indices.", "type": "str", "default": "saudi-aramco"}, "lang": {"description": "The language code for the response. Defaults to 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "originals_episodes_list", "description": "Fetches a list of episodes for a specified comic title from the Webtoon Originals API.", "parameters": {"titleno": {"description": "The title number of the comic, obtained from endpoints like .../originals/titles/list or .../originals/titles/list-by-rank.", "type": "int", "default": "2113"}, "language": {"description": "The language code for the episodes. One of the following: 'en', 'zh-hant', 'de', 'fr', 'es', 'th', 'id'. Defaults to 'en'.", "type": "str, optional", "default": "en"}, "pagesize": {"description": "The number of episodes to fetch per page. Maximum is 20. Defaults to 20.", "type": "int, optional", "default": "20"}, "startindex": {"description": "The starting index for paging. Defaults to 0.", "type": "int, optional", "default": "0"}}}
{"name": "titles_x_titles_by_ids", "description": "Fetch movie or series titles by their IMDB IDs.", "parameters": {"idslist": {"description": "Comma-separated list of IMDB IDs (e.g., 'tt0001702,tt0001856,tt0001856').", "type": "str", "default": ""}, "list": {"description": "Comma-separated list of IMDB IDs (e.g., 'tt0001702,tt0001856,tt0001856').", "type": "str", "default": ""}, "info": {"description": "Structure of the information to be retrieved (e.g., 'base_info', 'mini_info', 'image'). Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "get_a_specific_game", "description": "Retrieves information for a specific game using the Free NBA API.", "parameters": {"is_id": {"description": "The ID of the game to retrieve.", "type": "str", "default": ""}}}
{"name": "stock_v2_get_analysis_report", "description": "Fetches detailed information about a stock based on the provided performance ID.", "parameters": {"performanceid": {"description": "Value of the performance ID field, typically obtained from endpoints such as /auto-complete, /get-summary, or /get-movers.", "type": "str", "default": "0P0000OQN8"}}}
{"name": "retrieve_drill_details", "description": "Retrieves details of a drill or course using the provided drill ID and RapidAPI key.", "parameters": {"drill_id": {"description": "The ID of the drill or course to retrieve details for.", "type": "str", "default": "aD1yumG1SUyhyr3_SspN8w"}}}
{"name": "download_youtube_video", "description": "Downloads a YouTube video given its URL using the Toolbench RapidAPI service.", "parameters": {"url": {"description": "The URL of the YouTube video to be downloaded.", "type": "str", "default": "https://youtube.com/shorts/8E5Pxn5AVGE?feature=share"}}}
{"name": "leaguedetails", "description": "Retrieve the details of a specific Ice Hockey league using the provided tournament ID.", "parameters": {"tournamentid": {"description": "The unique identifier for the tournament whose details are to be retrieved.", "type": "int", "default": 234}}}
{"name": "historical_weather_record", "description": "Fetches historical weather records for a specified location within a given time range.", "parameters": {"location": {"description": "The address or latitude, longitude of the location. Addresses can be full or partial (city, state, zip code). If using coordinates, the format should be latitude,longitude (decimal degrees).", "type": "str", "default": "Washington,DC,USA"}, "enddatetime": {"description": "The end date and time for the data request in ISO format (yyyy-MM-ddTHH:mm:ss) using the location's time zone.", "type": "str", "default": "2019-01-03T00:00:00"}, "startdatetime": {"description": "The start date and time for the data request in ISO format (yyyy-MM-ddTHH:mm:ss) using the location's time zone.", "type": "str", "default": "2019-01-01T00:00:00"}, "aggregatehours": {"description": "The interval between weather history data points in the output. Supported values are 1 (hourly) or 24 (daily).", "type": "int", "default": "24"}, "unitgroup": {"description": "The unit system for the output data. Supported values are 'us', 'uk', or 'metric'.", "type": "str", "default": "us"}, "contenttype": {"description": "The format of the output data. Supported values are 'json' or 'csv'. Default is 'csv'.", "type": "str, optional", "default": "csv"}, "dayendtime": {"description": "Filters the output to records within the specified end time of the day (format: HH:mm:ss). Default is '17:00:00'.", "type": "str, optional", "default": "17:00:00"}, "daystarttime": {"description": "Filters the output to records within the specified start time of the day (format: HH:mm:ss). Default is '08:00:00'.", "type": "str, optional", "default": "8:00:00"}, "shortcolumnnames": {"description": "If True, returns shorter, abbreviated column names. If False, returns descriptive column names. Useful for programmatic use.", "type": "bool, optional", "default": "0"}}}
{"name": "team_squad", "description": "Fetch the list of players in a specified basketball team. Optionally, provide a tournament ID for national teams.", "parameters": {"teamid": {"description": "The ID of the basketball team.", "type": "int", "default": "1442"}, "tournamentid": {"description": "The ID of the tournament. Required for national teams but optional for club teams.", "type": "int, optional", "default": ""}}}
{"name": "search_a_grocery", "description": "Searches for grocery products based on a search query using RapidAPI.", "parameters": {"searchquery": {"description": "The search term used to find grocery products.", "type": "str", "default": "apple"}}}
{"name": "get_username_higgs_domino", "description": "Fetches the username for a given Higgs Domino ID using the RapidAPI service.", "parameters": {"is_id": {"description": "The Higgs Domino ID for which the username is requested.", "type": "int", "default": "55666"}}}
{"name": "episode", "description": "Fetches data for a single episode from the VOD app API using the provided episode house number and API key.", "parameters": {"episodehousenumber": {"description": "The unique identifier for the specific episode to be fetched.", "type": "str", "default": ""}}}
{"name": "fur_color", "description": "Fetches a list of all dogs that have the specified fur color using the DogBreedDB API.", "parameters": {"furcolor_icontains": {"description": "The fur color to search for in the dog breed database.", "type": "str", "default": "white"}}}
{"name": "get_number_by_country_id", "description": "Fetches the list of currently available numbers for a given country ID.", "parameters": {"countryid": {"description": "The ID of the country for which to fetch the available numbers.", "type": "str", "default": "7"}}}
{"name": "get_a_daily_horoscope", "description": "Fetches the daily horoscope for a given horoscope sign using the specified language and RapidAPI key.", "parameters": {"signid": {"description": "The identifier for the horoscope sign.", "type": "str", "default": "aquario"}, "langid": {"description": "The language identifier for the horoscope.", "type": "str", "default": "pt"}}}
{"name": "lookup", "description": "Lookup people by name and optional US state using the RapidAPI service.", "parameters": {"name": {"description": "The name of the person to lookup.", "type": "str", "default": "Warren Buffett"}, "state": {"description": "The US state to narrow down the search. Defaults to 'NE'.", "type": "str, optional", "default": "NE"}}}
{"name": "global_achievement_percentages_for_app", "description": "Retrieve the global achievement percentages for a specific Steam app.", "parameters": {"appid": {"description": "The Steam application ID for which to retrieve achievement percentages.", "type": "int", "default": "730"}}}
{"name": "get_tournaments_for_league", "description": "Fetches all tournaments associated with a specified League of Legends league ID using the RapidAPI service.", "parameters": {"leagueid": {"description": "The ID of the league for which to retrieve tournaments. Defaults to '101097443346691685'.", "type": "str, optional", "default": "101097443346691685"}}}
{"name": "get_imbuements_for_vampirism_life_steal", "description": "Fetches all imbuements for the Vampirism (Life steal) type in the specified world.", "parameters": {"world": {"description": "The name of the world for which to retrieve imbuement information.", "type": "str", "default": "Adra"}}}
{"name": "v1_search", "description": "Performs a customizable search through a news database with various filtering and sorting options.", "parameters": {"q": {"description": "The search query string. This must be URL-encoded.", "type": "str", "default": "Elon Musk"}, "not_sources": {"description": "Comma-separated list of sources to exclude from the search results.", "type": "str, optional", "default": ""}, "lang": {"description": "Language of the articles. Supported values include various language codes such as 'en', 'es', 'fr', etc. Defaults to 'en'.", "type": "str, optional", "default": "en"}, "search_in": {"description": "Scope of the search within articles. Options are 'title', 'summary', or both.", "type": "str, optional", "default": ""}, "sort_by": {"description": "Criteria for sorting the search results. Options include 'relevancy', 'date', and 'rank'. Defaults to 'relevancy'.", "type": "str, optional", "default": "relevancy"}, "sources": {"description": "Comma-separated list of sources to exclude from the search results.", "type": "str, optional", "default": ""}, "to": {"description": "Date until which to search for articles.", "type": "str, optional", "default": ""}, "country": {"description": "Country to narrow the search. Supports ISO 3166-1 alpha-2 codes.", "type": "str, optional", "default": ""}, "media": {"description": "Whether to include media information in the results. Defaults to 'True'.", "type": "str, optional", "default": "True"}, "topic": {"description": "Topic to restrict the search. Options include 'news', 'sport', 'tech', etc.", "type": "str, optional", "default": ""}, "from_rank": {"description": "Lower boundary of the source rank.", "type": "int, optional", "default": ""}, "to_rank": {"description": "Upper boundary of the source rank.", "type": "int, optional", "default": ""}, "page_size": {"description": "Number of articles to return per page. Maximum is 100.", "type": "int, optional", "default": ""}, "page": {"description": "Page number for paginated results. Defaults to 1.", "type": "int, optional", "default": "1"}, "ranked_only": {"description": "Limit to top-ranked sources only. Defaults to 'True'.", "type": "str, optional", "default": ""}, "is_from": {"description": "Date from which to start the search.", "type": "str, optional", "default": ""}}}
{"name": "get_individual_source_news", "description": "Fetches news articles related to police, crime, and accidents from a specified German newspaper.", "parameters": {"newspaperid": {"description": "The identifier of the newspaper from which to fetch news articles.", "type": "str", "default": "tag24"}}}
{"name": "viewrecords", "description": "Fetch records from a specified Zoho Creator view or report using the Zoho Creator API.", "parameters": {"scope": {"description": "The scope of the request, indicating what data the request is allowed to access.", "type": "str", "default": "creatorapi"}, "authtoken": {"description": "Authentication token for accessing the Zoho Creator API.", "type": "str", "default": "longTextStringFromAccounts"}, "applinkname": {"description": "The unique link name of the Zoho Creator application.", "type": "str", "default": "mrp"}, "zc_ownername": {"description": "The owner name of the Zoho Creator account.", "type": "str", "default": "ownerName"}, "viewlinkname": {"description": "The specific view or report from which to fetch records.", "type": "str", "default": "Contact_Details"}, "raw": {"description": "Whether to fetch raw data. Defaults to 'True'.", "type": "str, optional", "default": true}, "criteria": {"description": "Criteria to filter the records. Defaults to '(Country == \"US\")'.", "type": "str, optional", "default": "(Country == \"US\")"}, "startindex": {"description": "The starting index for fetching records. Defaults to '0'.", "type": "str, optional", "default": "0"}, "limit": {"description": "The maximum number of records to fetch. Defaults to '100'.", "type": "str, optional", "default": "100"}}}
{"name": "time_zone", "description": "Fetch the current time for a specified time zone in ISO-6801 format (HHmmss.SSSZ).", "parameters": {"zoneid": {"description": "The ID of the time zone for which the current time is to be fetched.", "type": "str", "default": "America__Los_Angeles"}}}
{"name": "get_all_stats", "description": "Retrieves all basketball statistics based on the given query parameters.", "parameters": {"seasons": {"description": "A comma-separated string of seasons.", "type": "str, optional", "default": ""}, "page": {"description": "The page number for pagination.", "type": "str, optional, default='0'", "default": "0"}, "per_page": {"description": "The number of results per page for pagination.", "type": "str, optional, default='25'", "default": "25"}, "player_ids": {"description": "A comma-separated string of player IDs.", "type": "str, optional", "default": ""}, "dates": {"description": "A comma-separated string of dates formatted as 'YYYY-MM-DD'.", "type": "str, optional", "default": ""}, "game_ids": {"description": "A comma-separated string of game IDs.", "type": "str, optional", "default": ""}}}
{"name": "getcode_relatedcontracts", "description": "Fetches related contract information from the RapidAPI service.", "parameters": {"contract_address": {"description": "The address of the contract.", "type": "str", "default": "0x097bafa4e0b48eef"}, "contract_name": {"description": "The name of the contract.", "type": "str", "default": "CharityNFT"}}}
{"name": "getrandomwords", "description": "Fetch random Ukrainian words based on specified criteria from an API.", "parameters": {"length": {"description": "Exact length of the word. Defaults to None.", "type": "int, optional", "default": ""}, "maxlength": {"description": "Maximum length of the word. Defaults to 6.", "type": "int, optional", "default": "6"}, "excludes": {"description": "Letters that the word should not include. Defaults to 'кли'.", "type": "str, optional", "default": "кли"}, "minlength": {"description": "Minimum length of the word. Defaults to 2.", "type": "int, optional", "default": "2"}, "startswith": {"description": "Letters that the word should start with. Defaults to 'во'.", "type": "str, optional", "default": "во"}, "endswith": {"description": "Letters that the word should end with. Defaults to 'я'.", "type": "str, optional", "default": "я"}, "amount": {"description": "Number of requested words. Defaults to 1.", "type": "int, optional", "default": "1"}, "includes": {"description": "Letters that the word should include. Defaults to 'ол'.", "type": "str, optional", "default": "ол"}}}
{"name": "getnfts_metadata", "description": "Fetches the metadata, attributes, and enclosed media of a specific NFT.", "parameters": {"contractaddress": {"description": "Address of the NFT contract (e.g., \"0xb47e3cd837ddf8e4c57f05d70ab865de6e193bbb\" for Bored Apes).", "type": "str", "default": "0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D"}, "tokenid": {"description": "The ID of the NFT token.", "type": "int", "default": "4671"}}}
{"name": "explore_competitions", "description": "Fetches a list of soccer competitions for a given area.", "parameters": {"area_id": {"description": "The ID of the area to retrieve competitions for.", "type": "int", "default": "68"}}}
{"name": "best_players", "description": "Fetches the best players for a given event using the provided event ID.", "parameters": {"event_id": {"description": "The ID of the event for which the best players are needed.", "type": "int", "default": "10253769"}}}
{"name": "coins_get_markets", "description": "Fetches market information for a specific cryptocurrency pair in a specified currency.", "parameters": {"cur2": {"description": "The ID of the currency to get market information for. This value is returned from the /get-meta-data endpoint.", "type": "int", "default": "12"}, "pair_id": {"description": "The ID of the cryptocurrency pair. This value is obtained from endpoints like coins/list, coins/search, or coins/list-pairs.", "type": "int", "default": "1057391"}, "time_utc_offset": {"description": "The UTC offset in seconds. For example, UTC+8 corresponds to 28800 seconds. Defaults to 28800.", "type": "int, optional", "default": "28800"}, "lang_id": {"description": "The ID of the language. This value is returned from the /get-meta-data endpoint. Defaults to 1.", "type": "int, optional", "default": "1"}}}
{"name": "check_endpoint", "description": "Checks the abuse status and other details of the given IP address using the AbuseIPDB API.", "parameters": {"ipaddress": {"description": "The IP address to be checked.", "type": "str", "default": "118.25.6.39"}, "maxageindays": {"description": "The maximum age of the reports in days (default is None). If not specified, reports up to 30 days old are returned. Must be between 1 and 365 if provided.", "type": "str, optional", "default": ""}}}
{"name": "retrieving_assets", "description": "Retrieve a list of assets from the OpenSea API with various filter parameters.", "parameters": {"owner": {"description": "The wallet address of the owner of the assets. Default is None.", "type": "str, optional", "default": ""}, "order_direction": {"description": "The order of the results. Can be 'asc' or 'desc'. Default is 'desc'.", "type": "str, optional", "default": "desc"}, "asset_contract_address": {"description": "The contract address for the assets. Default is None.", "type": "str, optional", "default": ""}, "limit": {"description": "The number of assets to return. Default is 20.", "type": "int, optional", "default": "20"}, "collection_slug": {"description": "The collection slug to filter assets. Default is None.", "type": "str, optional", "default": ""}, "cursor": {"description": "A cursor to paginate results. Default is None.", "type": "str, optional", "default": ""}, "token_ids": {"description": "Specific token IDs to filter assets. Default is None.", "type": "int, optional", "default": ""}, "asset_contract_addresses": {"description": "Specific contract addresses to filter assets. Default is None.", "type": "str, optional", "default": ""}, "collection": {"description": "The collection name to filter assets. Default is 'ongakucraft'.", "type": "str, optional", "default": "ongakucraft"}, "include_orders": {"description": "Whether to include order information for the assets. Default is None.", "type": "bool, optional", "default": ""}, "collection_editor": {"description": "The editor of the collection to filter assets. Default is None.", "type": "str, optional", "default": ""}}}
{"name": "filter_cook_time_in_minutes", "description": "Fetches keto recipes within a specified range of cooking times using the provided API key.", "parameters": {"cook_time_in_minutes_tg": {"description": "Minimum cooking time in minutes (greater than or equal to this value).", "type": "int", "default": "10"}, "cook_time_in_minutes_lt": {"description": "Maximum cooking time in minutes (less than this value).", "type": "int", "default": "50"}}}
{"name": "addnumbers", "description": "Adds two integers using an external API.", "parameters": {"vala": {"description": "The first integer to be added.", "type": "int", "default": "10"}, "valb": {"description": "The second integer to be added.", "type": "int", "default": "5"}}}
{"name": "billboard_u_s_afrobeats_songs", "description": "Fetch the BILLBOARD U.S. AFROBEATS SONGS chart information for a given date and range.", "parameters": {"date": {"description": "The date in the format 'YYYY-MM-DD' for which the chart information is to be fetched.", "type": "str", "default": "2022-04-16"}, "range": {"description": "The range of songs to be included in the chart, with a maximum range of 1-50.", "type": "str", "default": "1-10"}}}
{"name": "stations_v2_get_measurements", "description": "Retrieve measurements from a specific station by its ID.", "parameters": {"is_id": {"description": "The station ID retrieved from the /v2/auto-complete endpoint.", "type": "str", "default": "Jmy9oL75KSZnsqi6L"}, "x_user_timezone": {"description": "The user's timezone. Default is 'Asia/Singapore'.", "type": "str, optional", "default": "Asia/Singapore"}, "x_units_temperature": {"description": "The unit for temperature, either 'fahrenheit' or 'celsius'. Default is 'celsius'.", "type": "str, optional", "default": "celsius"}, "x_user_lang": {"description": "The user's language. Default is 'en-US'.", "type": "str, optional", "default": "en-US"}, "x_units_pressure": {"description": "The unit for pressure, either 'hg' or 'mbar'. Default is 'mbar'.", "type": "str, optional", "default": "mbar"}, "x_units_distance": {"description": "The unit for distance, either 'miles' or 'kilometer'. Default is 'kilometer'.", "type": "str, optional", "default": "kilometer"}, "x_aqi_index": {"description": "The AQI index standard, either 'us' or 'cn'. Default is 'us'.", "type": "str, optional", "default": "us"}}}
{"name": "bcaa", "description": "Fetches Branched-Chain Amino Acids (BCAA) product details from Amazon API.", "parameters": {"product_name_brand": {"description": "Name or brand of the BCAA product to look up. Default is None.", "type": "str, optional", "default": ""}}}
{"name": "get_imbuements_for_strike_critical_damage", "description": "Fetches all imbuement details for \"Strike\" (Critical Damage) from the specified world using the Tibia Items API.", "parameters": {"world": {"description": "The game world for which to fetch imbuement details.", "type": "str", "default": "Libertabra"}}}
{"name": "disciplina_2", "description": "Retrieves disciplinary information for a specific student using the given authorization token.", "parameters": {"authorization": {"description": "The authorization token required to access the API.", "type": "str", "default": "1234567890"}}}
{"name": "stock_v2_get_competitors", "description": "Fetches the competitors of a stock based on its performance ID.", "parameters": {"performanceid": {"description": "The performance ID of the stock, typically retrieved from /auto-complete, /get-summary, or /get-movers endpoints.", "type": "str", "default": "0P0000OQN8"}}}
{"name": "number_captcha", "description": "Creates a numeric CAPTCHA code using the specified length and RapidAPI key.", "parameters": {"length": {"description": "Length of the numeric CAPTCHA, ranging from 1 to 8. Default is 4.", "type": "int, optional", "default": "4"}}}
{"name": "get_climate_data_by_lat_lon_or_key", "description": "Fetch climate data for a specific location by latitude and longitude or by city key.", "parameters": {"lat": {"description": "Latitude of the location. Defaults to 45.", "type": "int, optional", "default": "45"}, "lon": {"description": "Longitude of the location. Defaults to -70.", "type": "int, optional", "default": "-70"}, "key": {"description": "City key from a list of cities. Defaults to None.", "type": "str, optional", "default": ""}, "lang": {"description": "Language of the response. Can be one of ['en', 'de', 'nl', 'fr', 'pl', 'gr', 'it', 'cn', 'ru', 'cz', 'pt', 'es']. Defaults to 'en'.", "type": "str, optional", "default": "en"}}}
{"name": "addresses_addressid", "description": "Fetch detailed information about a specific address using the given address ID.", "parameters": {"addressid": {"description": "The ID of the address to fetch details for.", "type": "str", "default": ""}}}
{"name": "gettopsportmenu", "description": "Fetches the top sport menu from the specified sportsbook API using provided skin name and RapidAPI key.", "parameters": {"skinname": {"description": "The skin name for the sportsbook. Defaults to 'betbiga'.", "type": "str", "default": "betbiga"}}}
{"name": "disciplina_1", "description": "Retrieves discipline information for a student with ID 1 from the Colegio Santa Ana API.", "parameters": {"authorization": {"description": "Authorization token required to access the API.", "type": "str", "default": ""}}}
{"name": "kitten", "description": "Fetches a kitten image of specified width and height using the Placekitten API.", "parameters": {"width": {"description": "The width of the kitten image.", "type": "str", "default": "200"}, "height": {"description": "The height of the kitten image.", "type": "str", "default": "300"}}}
{"name": "teams", "description": "Fetches a list of teams that match the given parameters from the API.", "parameters": {"estimatebill": {"description": "Flag indicating whether to return a cost estimate based on the provided parameters. Defaults to None.", "type": "bool, optional", "default": ""}, "competitionstageid": {"description": "The identifier of the competition stage in which teams compete. Use the 'Get Competitions' operation to find valid identifiers. Defaults to None.", "type": "str, optional", "default": ""}, "countryid": {"description": "The identifier of the country from which the teams originate. Use the 'Get Countries' operation to find valid identifiers. Defaults to None.", "type": "str, optional", "default": ""}, "namelike": {"description": "A full or partial name of a team (case-insensitive). Minimum length is 4 characters. Defaults to 'liverp'.", "type": "str, optional", "default": "liverp"}}}
{"name": "getbodypartvalues", "description": "Gets a set of all body part names filtered by optional query parameters.", "parameters": {"format": {"description": "Specifies the output type. Allowed values are CSV, HTML, XML, or JSON. Default is None.", "type": "str, optional", "default": ""}, "collection": {"description": "A label used to name a set of images collected for a specific trial or other reason. Assigned during the process of curating the data. Default is None.", "type": "str, optional", "default": ""}, "bodypartexamined": {"description": "A standard DICOM definition for the body part examined (0018x0015). Default is None.", "type": "str, optional", "default": ""}, "modality": {"description": "A standard DICOM definition for the imaging modality used (0008x0060). Default is None.", "type": "str, optional", "default": ""}}}
{"name": "getcollectionvalues", "description": "Fetches all TCIA collection names, optionally specifying the output format.", "parameters": {"format": {"description": "The desired output format, which can be one of 'CSV', 'HTML', 'XML', or 'JSON'. Defaults to None.", "type": "str, optional", "default": ""}}}
{"name": "get_coin_historical_metrics_by_ticker", "description": "Retrieve historical social media metrics for a cryptocurrency by its ticker.", "parameters": {"securityticker": {"description": "Ticker symbol of the cryptocurrency.", "type": "str", "default": "btc"}, "date": {"description": "Date and time in the format 'MM/DD/YYYY HH:MM AM/PM' for which to retrieve the metrics.", "type": "str", "default": "04/26/2022 06:00 PM"}, "timeframe": {"description": "Timeframe for the metrics. Default is '1D'. Other options include '1h' and '8h'.", "type": "str, optional", "default": "1D"}}}
{"name": "get_all_iata_airport_codes", "description": "Retrieves IATA airport codes from the RapidAPI service.", "parameters": {"code": {"description": "An optional code to filter the airport codes. Defaults to 1.", "type": "int, optional", "default": "1"}}}
{"name": "historical_prices", "description": "Fetches a list of the high and low prices for the specified item at the given time interval.", "parameters": {"timestep": {"description": "The interval at which to fetch price data (e.g., 'daily', 'hourly').", "type": "str", "default": "5m"}, "itemid": {"description": "The unique identifier for the item.", "type": "int", "default": "565"}}}
{"name": "aliexpress_item_search_2", "description": "Searches for items on AliExpress with various filtering options and returns the results.", "parameters": {"endprice": {"description": "Maximum price of the items to be searched.", "type": "int, optional", "default": ""}, "sort": {"description": "Sorting option for the search results.", "type": "str, optional", "default": ""}, "brandid": {"description": "Brand ID(s). Multiple IDs can be separated with a comma.", "type": "str, optional", "default": ""}, "page": {"description": "Page number for pagination. Defaults to 1.", "type": "int, optional", "default": "1"}, "attr": {"description": "Attribute(s) for filtering results. Multiple values are separated with semicolons.", "type": "str, optional", "default": ""}, "startprice": {"description": "Minimum price of the items to be searched.", "type": "int, optional", "default": ""}, "locale": {"description": "Locale for displaying titles and other content in the selected language.", "type": "str, optional", "default": ""}, "switches": {"description": "Additional filter switches. Multiple values can be separated with a comma.", "type": "str, optional", "default": ""}, "catid": {"description": "Category ID(s). Multiple IDs can be separated with a comma.", "type": "str, optional", "default": ""}, "q": {"description": "Search query. Defaults to 'iphone'.", "type": "str, optional", "default": "iphone"}, "loc": {"description": "Location for filtering the search results.", "type": "str, optional", "default": ""}, "currency": {"description": "Currency for displaying the product prices.", "type": "str, optional", "default": ""}, "region": {"description": "Region for getting accurate shipping costs and promotions.", "type": "str, optional", "default": ""}}}
{"name": "distance_between_airports", "description": "Calculates the distance between two airports given their IATA codes using the Toolbench API.", "parameters": {"iata_airport_to": {"description": "The IATA code of the destination airport.", "type": "str", "default": ""}, "iata_airport_from": {"description": "The IATA code of the departure airport.", "type": "str", "default": ""}}}
{"name": "points", "description": "Fetches official FedExCup points earned per player for a given tournament ID and year.", "parameters": {"tournid": {"description": "The tournament ID for which to fetch the points.", "type": "str", "default": "475"}, "year": {"description": "The year for which to fetch the points.", "type": "str", "default": "2022"}}}
{"name": "rapidapigetforecastsummarybylocationname", "description": "Fetches the weather forecast summary for a given location name using the RapidAPI Forecast service.", "parameters": {"locationname": {"description": "The name of the location for which to retrieve the forecast summary.", "type": "str", "default": "Berlin"}}}
{"name": "get_leaderboard_rank", "description": "Retrieves the leaderboard rank from the Binance Futures Leaderboard API.", "parameters": {"statisticstype": {"description": "The type of statistics to search for.", "type": "str, optional", "default": ""}, "isshared": {"description": "Whether to include shared positions.", "type": "bool, optional", "default": "true"}, "tradetype": {"description": "The trade type to search for. \"PERPETUAL\" for USDⓈ-M and \"DELIVERY\" for COIN-M.", "type": "str, optional", "default": ""}, "periodtype": {"description": "The period type to search for.", "type": "str, optional", "default": ""}}}
