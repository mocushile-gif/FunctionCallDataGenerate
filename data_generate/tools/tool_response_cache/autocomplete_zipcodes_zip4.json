{
    "{\n  \"zipcode\": \"95814\"\n}": {
        "error": "",
        "response": "{\"Id\":\"5605f0fd-21ef-4f7d-bfc9-d8488f3acb4c\",\"RequestId\":null,\"ClientSessionId\":null,\"StatusCode\":200,\"Result\":[],\"MaxAllowedUsage\":null,\"UsageStatistics\":null,\"IsError\":false,\"Errors\":[]}"
    },
    "{\n  \"zipcode\": \"95816\"\n}": {
        "error": "",
        "response": "{\"Id\":\"5c82bc76-ac8c-45c0-9844-acfb911258a5\",\"RequestId\":null,\"ClientSessionId\":null,\"StatusCode\":200,\"Result\":[],\"MaxAllowedUsage\":null,\"UsageStatistics\":null,\"IsError\":false,\"Errors\":[]}"
    },
    "{\n  \"zipcode\": \"95818\"\n}": {
        "error": "",
        "response": "{\"Id\":\"2bcf25c2-4979-44a7-bb12-6eba2add165a\",\"RequestId\":null,\"ClientSessionId\":null,\"StatusCode\":200,\"Result\":[],\"MaxAllowedUsage\":null,\"UsageStatistics\":null,\"IsError\":false,\"Errors\":[]}"
    },
    "{\n  \"zipcode\": \"95822\"\n}": {
        "error": "",
        "response": "{\"Id\":\"8b34dfe7-b467-4673-b85a-d18e5c31c578\",\"RequestId\":null,\"ClientSessionId\":null,\"StatusCode\":200,\"Result\":[],\"MaxAllowedUsage\":null,\"UsageStatistics\":null,\"IsError\":false,\"Errors\":[]}"
    },
    "{'zipcode': 'Sacramento, California'}": {
        "error": "",
        "response": {
            "Id": "6ced3e8e-f2fc-4812-9744-d9f4eeba03e7",
            "RequestId": null,
            "ClientSessionId": null,
            "StatusCode": 200,
            "Result": [],
            "MaxAllowedUsage": null,
            "UsageStatistics": null,
            "IsError": false,
            "Errors": []
        }
    },
    "{'zipcode': 'CA'}": {
        "error": "",
        "response": {
            "Id": "f27da447-188e-4748-ba28-ba1990894945",
            "RequestId": null,
            "ClientSessionId": null,
            "StatusCode": 200,
            "Result": [],
            "MaxAllowedUsage": null,
            "UsageStatistics": null,
            "IsError": false,
            "Errors": []
        }
    },
    "{'zipcode': 'Sacramento, CA'}": {
        "error": "",
        "response": {
            "Id": "ec879eaa-e588-4ae9-8e69-d560318f78dd",
            "RequestId": null,
            "ClientSessionId": null,
            "StatusCode": 200,
            "Result": [],
            "MaxAllowedUsage": null,
            "UsageStatistics": null,
            "IsError": false,
            "Errors": []
        }
    },
    "{'zipcode': '110'}": {
        "error": "",
        "response": {
            "Id": "5b6f8ba4-1bb6-45ee-b889-d666450db5ee",
            "RequestId": null,
            "ClientSessionId": null,
            "StatusCode": 200,
            "Result": [
                "11001, Floral Park, New York",
                "11001-3248, Floral Park, New York",
                "11001-3239, Floral Park, New York",
                "11001-3216, Floral Park, New York",
                "11001-3247, Floral Park, New York",
                "11001-3255, Floral Park, New York",
                "11001-3417, Floral Park, New York",
                "11001-3756, Floral Park, New York",
                "11001-3436, Floral Park, New York",
                "11001-3437, Floral Park, New York"
            ],
            "MaxAllowedUsage": null,
            "UsageStatistics": null,
            "IsError": false,
            "Errors": []
        }
    },
    "{'zipcode': '220'}": {
        "error": "",
        "response": {
            "Id": "75873daa-8727-4f91-8bdf-2a16971893ff",
            "RequestId": null,
            "ClientSessionId": null,
            "StatusCode": 200,
            "Result": [
                "22003-5165, Annandale, Virginia",
                "22003-5163, Annandale, Virginia",
                "22003-5162, Annandale, Virginia",
                "22003-5160, Annandale, Virginia",
                "22003-5157, Annandale, Virginia",
                "22003-5152, Annandale, Virginia",
                "22003-5167, Annandale, Virginia",
                "22003-5168, Annandale, Virginia",
                "22003-5183, Annandale, Virginia",
                "22003-5182, Annandale, Virginia"
            ],
            "MaxAllowedUsage": null,
            "UsageStatistics": null,
            "IsError": false,
            "Errors": []
        }
    },
    "{'zipcode': '10001'}": {
        "error": "",
        "response": {
            "Id": "63c76589-63c6-4b77-873d-2a334e2c9467",
            "RequestId": null,
            "ClientSessionId": null,
            "StatusCode": 200,
            "Result": [
                "10001, New York, New York",
                "10001-1407, New York, New York",
                "10001-1420, New York, New York",
                "10001-1408, New York, New York",
                "10001-1405, New York, New York",
                "10001-3010, New York, New York",
                "10001-2320, New York, New York",
                "10001-6148, New York, New York",
                "10001-6134, New York, New York",
                "10001-6113, New York, New York"
            ],
            "MaxAllowedUsage": null,
            "UsageStatistics": null,
            "IsError": false,
            "Errors": []
        }
    },
    "{'zipcode': '6185 Gar'}": {
        "error": "",
        "response": {
            "Id": "ae73f049-3830-4448-8f78-02f2fd0946c5",
            "RequestId": null,
            "ClientSessionId": null,
            "StatusCode": 200,
            "Result": [],
            "MaxAllowedUsage": null,
            "UsageStatistics": null,
            "IsError": false,
            "Errors": []
        }
    },
    "{'zipcode': '6185'}": {
        "error": "",
        "response": {
            "Id": "1a1a2629-14c8-4ca8-8d6b-19347ce51bad",
            "RequestId": null,
            "ClientSessionId": null,
            "StatusCode": 200,
            "Result": [],
            "MaxAllowedUsage": null,
            "UsageStatistics": null,
            "IsError": false,
            "Errors": []
        }
    },
    "{'zipcode': '111'}": {
        "error": "",
        "response": {
            "Id": "1d4fd1b2-ffe8-4dfd-ae4b-a6a16389024d",
            "RequestId": null,
            "ClientSessionId": null,
            "StatusCode": 200,
            "Result": [
                "11101-1166, Astoria, New York",
                "11101-4707, Astoria, New York",
                "11101-4866, Astoria, New York",
                "11101-4868, Astoria, New York",
                "11101-4870, Astoria, New York",
                "11101-4872, Astoria, New York",
                "11101-4874, Astoria, New York",
                "11101-4799, Astoria, New York",
                "11101-4708, Astoria, New York",
                "11101-1055, Astoria, New York"
            ],
            "MaxAllowedUsage": null,
            "UsageStatistics": null,
            "IsError": false,
            "Errors": []
        }
    }
}